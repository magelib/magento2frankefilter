require.config({"config": {
        "jsbuild":{"Ess_M2ePro/js/Amazon/Template/Description/Category/Specific/Grid/RowRenderer.js":"define([\n    'M2ePro/Amazon/Template/Description/Category/Specific/Renderer'\n], function () {\n\n    window.AmazonTemplateDescriptionCategorySpecificGridRowRenderer = Class.create(AmazonTemplateDescriptionCategorySpecificRenderer, {\n\n        // ---------------------------------------\n\n        attributeHandler: null,\n\n        // ---------------------------------------\n\n        process: function()\n        {\n            if (this.specificHandler.isSpecificRendered(this.indexedXPath) && !this.isValueForceSet()) {\n                return '';\n            }\n\n            if (!this.load()) {\n                return '';\n            }\n\n            this.renderParentSpecific();\n\n            if (this.specificHandler.isSpecificRendered(this.indexedXPath) && !this.isValueForceSet()) {\n                return '';\n            }\n\n            if (this.specificHandler.isSpecificRendered(this.indexedXPath)) {\n\n                this.forceSelectAndDisable(this.getForceSetValue());\n\n                this.hideButton($(this.indexedXPath + '_remove_button'));\n\n                var myEvent = new CustomEvent('undeleteble-specific-appear');\n                $(this.getParentIndexedXpath()).dispatchEvent(myEvent);\n\n                return '';\n            }\n\n            this.renderSelf();\n\n            if (this.isValueForceSet()) {\n                this.forceSelectAndDisable(this.getForceSetValue());\n            }\n\n            this.observeToolTips(this.indexedXPath);\n\n            this.checkSelection();\n            this.renderSpecificAttributes();\n        },\n\n        // ---------------------------------------\n\n        load: function($super)\n        {\n            this.attributeHandler = AttributeObj;\n            return $super();\n        },\n\n        //########################################\n\n        renderParentSpecific: function()\n        {\n            if (this.specific.parent_specific_id == null) {\n                return '';\n            }\n\n            if (!this.dictionaryHelper.isSpecificTypeContainer(this.parentSpecific)) {\n                return '';\n            }\n\n            var parentBlockRenderer = new AmazonTemplateDescriptionCategorySpecificBlockRenderer();\n            parentBlockRenderer.setSpecificsHandler(this.specificHandler);\n            parentBlockRenderer.setIndexedXpath(this.getParentIndexedXpath());\n\n            parentBlockRenderer.process();\n        },\n\n        renderSelf: function()\n        {\n            this.renderLabel();\n            this.renderChooseMode();\n            this.renderValueInputs();\n\n            // affects the appearance of the actions buttons\n            this.specificHandler.markSpecificAsRendered(this.indexedXPath);\n\n            this.renderButtons();\n\n            // ---------------------------------------\n            $(this.indexedXPath).observe('my-duplicate-is-rendered', this.onMyDuplicateRendered.bind(this));\n            // ---------------------------------------\n\n            // like grid visibility or view of 'Add Specific' container\n            this.throwEventsToParents();\n        },\n\n        renderSpecificAttributes: function()\n        {\n            var self = this;\n\n            if (!this.specific.params.hasOwnProperty('attributes')) {\n                return '';\n            }\n\n            this.specific.params.attributes.each(function(attribute, index) {\n\n                var renderer = new AmazonTemplateDescriptionCategorySpecificGridRowAttributeRenderer();\n                renderer.setSpecificsHandler(self.specificHandler);\n                renderer.setIndexedXpath(self.indexedXPath);\n\n                renderer.attribute      = attribute;\n                renderer.attributeIndex = index;\n\n                renderer.process();\n            });\n        },\n\n        //########################################\n\n        renderLabel: function()\n        {\n            var td = new Element('td');\n            var title = this.specific.title;\n\n            if (this.dictionaryHelper.isSpecificRequired(this.specific) || this.isValueForceSet()) {\n                title += ' <span class=\"required\">*</span>';\n            } else if (this.dictionaryHelper.isSpecificDesired(this.specific)) {\n                title += ' <span style=\"color: grey; font-style: italic;\">(' + M2ePro.translator.translate('Desired') + ')</span>';\n            }\n\n            td.appendChild((new Element('span').insert(title)));\n\n            var note = this.getDefinitionNote(this.specific.data_definition);\n            if (note) {\n                var toolTip = this.getToolTipBlock(this.indexedXPath + '_definition_note', note);\n                toolTip.show();\n                td.appendChild(toolTip);\n            }\n\n            var notice = this.getSpecificOverriddenNotice();\n            if (notice) td.appendChild(notice);\n\n            notice = this.getSpecificParentageNotice();\n            if (notice) td.appendChild(notice);\n\n            this.getRowContainer().appendChild(td);\n        },\n\n        // ---------------------------------------\n\n        renderChooseMode: function()\n        {\n            var select = new Element('select', {\n                'id'          : this.indexedXPath +'_mode',\n                'name'        : this.indexedXPath +'_mode',\n                'indexedxpath': this.indexedXPath,\n                'class'       : 'M2ePro-required-when-visible select admin__control-select',\n                'style'       : 'width: 85%;'\n            });\n\n            select.appendChild(new Element('option', {'style': 'display: none'}));\n\n            if (this.specific.recommended_values.length > 0) {\n                select.appendChild(new Element('option', {'value': this.MODE_RECOMMENDED_VALUE}))\n                    .insert(M2ePro.translator.translate('Recommended Values'));\n            }\n\n            select.appendChild(new Element('option', {'value': this.MODE_CUSTOM_VALUE}))\n                .insert(M2ePro.translator.translate('Custom Value'));\n\n            select.appendChild(new Element('option', {'value': this.MODE_CUSTOM_ATTRIBUTE}))\n                .insert(M2ePro.translator.translate('Custom Attribute'));\n\n            select.observe('change', this.onChangeChooseMode.bind(this));\n            this.getRowContainer().appendChild(new Element('td')).appendChild(select);\n        },\n\n        onChangeChooseMode: function(event)\n        {\n            var customAttribute     = $(this.indexedXPath + '_' + this.MODE_CUSTOM_ATTRIBUTE),\n                customAttributeNote = $(this.indexedXPath + '_custom_attribute_note');\n\n            var customValue     = $(this.indexedXPath + '_' + this.MODE_CUSTOM_VALUE),\n                customValueNote = $(this.indexedXPath + '_custom_value_note');\n\n            var recommendedValue = $(this.indexedXPath + '_' + this.MODE_RECOMMENDED_VALUE);\n\n            customAttribute     && customAttribute.hide();\n            customAttributeNote && customAttributeNote.hide();\n\n            customValue     && customValue.hide();\n            customValueNote && customValueNote.hide();\n\n            recommendedValue && recommendedValue.hide();\n\n            if (event.target.value == this.MODE_CUSTOM_VALUE) {\n                customValue     && customValue.show();\n                customValueNote && customValueNote.show();\n            }\n            if (event.target.value == this.MODE_CUSTOM_ATTRIBUTE) {\n                customAttribute     && customAttribute.show();\n                customAttributeNote && customAttributeNote.show();\n            }\n            if (event.target.value == this.MODE_RECOMMENDED_VALUE) {\n                recommendedValue && recommendedValue.show();\n            }\n        },\n\n        // ---------------------------------------\n\n        renderValueInputs: function()\n        {\n            var td = this.getRowContainer().appendChild(new Element('td'));\n\n            // ---------------------------------------\n            if (this.dictionaryHelper.isSpecificTypeText(this.specific)) {\n\n                var note = this.getCustomValueTypeNote();\n                if (note) td.appendChild(this.getToolTipBlock(this.indexedXPath + '_custom_value_note', note));\n\n                td.appendChild(this.getTextTypeInput());\n            }\n\n            if (this.dictionaryHelper.isSpecificTypeSelect(this.specific)) {\n                td.appendChild(this.getSelectTypeInput());\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            note = this.getCustomAttributeTypeNote();\n            if (note) {\n                var tooltip = td.appendChild(this.getToolTipBlock(this.indexedXPath + '_custom_attribute_note', note));\n                tooltip.hide();\n            }\n\n            td.appendChild(this.getCustomAttributeSelect());\n            // ---------------------------------------\n\n            td.appendChild(this.getRecommendedValuesSelect());\n        },\n\n        // ---------------------------------------\n\n        getTextTypeInput: function()\n        {\n            if (this.dictionaryHelper.isSpecificTypeTextArea(this.specific)) {\n\n                var input = new Element('textarea', {\n                    'id'            : this.indexedXPath +'_'+ this.MODE_CUSTOM_VALUE,\n                    'name'          : this.indexedXPath +'_'+ this.MODE_CUSTOM_VALUE,\n                    'indexedxpath'  : this.indexedXPath,\n                    'specific_id'   : this.specific.specific_id,\n                    'specific_type' : this.specific.params.type,\n                    'mode'          : this.MODE_CUSTOM_VALUE,\n                    'class'         : 'textarea admin__control-textarea M2ePro-required-when-visible M2ePro-specifics-validation',\n                    'style'         : 'width: 85%; display: none;'\n                });\n\n            } else {\n\n                var input = new Element('input', {\n                    'id'            : this.indexedXPath +'_'+ this.MODE_CUSTOM_VALUE,\n                    'name'          : this.indexedXPath +'_'+ this.MODE_CUSTOM_VALUE,\n                    'indexedxpath'  : this.indexedXPath,\n                    'specific_id'   : this.specific.specific_id,\n                    'mode'          : this.MODE_CUSTOM_VALUE,\n                    'specific_type' : this.specific.params.type,\n                    'type'          : 'text',\n                    'class'         : 'input-text admin__control-text M2ePro-required-when-visible M2ePro-specifics-validation',\n                    'style'         : 'display: none; width: 85%;'\n                });\n\n                this.specific.params.type == 'date_time' && Calendar.setup({\n                    'inputField': input,\n                    'ifFormat': \"%Y-%m-%d %H:%M:%S\",\n                    'showsTime': true,\n                    'button': input,\n                    'align': 'Bl',\n                    'singleClick': true\n                });\n\n                this.specific.params.type == 'date' && Calendar.setup({\n                    'inputField': input,\n                    'ifFormat': \"%Y-%m-%d\",\n                    'showsTime': true,\n                    'button': input,\n                    'align': 'Bl',\n                    'singleClick': true\n                });\n            }\n\n            input.observe('change', this.onChangeValue.bind(this));\n            return input;\n        },\n\n        getSelectTypeInput: function()\n        {\n            var self = this;\n\n            var select = new Element('select', {\n                'id'          : this.indexedXPath +'_'+ this.MODE_CUSTOM_VALUE,\n                'name'        : this.indexedXPath +'_'+ this.MODE_CUSTOM_VALUE,\n                'indexedxpath': this.indexedXPath,\n                'specific_id' : this.specific.specific_id,\n                'mode'        : this.MODE_CUSTOM_VALUE,\n                'class'       : 'M2ePro-required-when-visible select admin__control-select',\n                'style'       : 'display: none; width: 85%;'\n            });\n\n            select.appendChild(new Element('option', {'style': 'display: none;'}));\n\n            var specificOptions = this.specific.values;\n            specificOptions.each(function(option) {\n\n                var label = option == 'true' ? 'Yes' : (option == 'false' ? 'No' : option),\n                    tempOption = new Element('option', {'value': option});\n\n                select.appendChild(tempOption).insert(label);\n            });\n\n            select.observe('change', this.onChangeValue.bind(this));\n            return select;\n        },\n\n        getCustomAttributeSelect: function()\n        {\n            var select = new Element('select', {\n                'id'          : this.indexedXPath +'_'+ this.MODE_CUSTOM_ATTRIBUTE,\n                'name'        : this.indexedXPath +'_'+ this.MODE_CUSTOM_ATTRIBUTE,\n                'indexedxpath': this.indexedXPath,\n                'specific_id' : this.specific.specific_id,\n                'mode'        : this.MODE_CUSTOM_ATTRIBUTE,\n                'class'       : 'attributes M2ePro-required-when-visible select admin__control-select',\n                'style'       : 'display: none; width: 85%;',\n                'apply_to_all_attribute_sets' : '0'\n            });\n\n            select.appendChild(new Element('option', {'style': 'display: none', 'value': ''}));\n            this.attributeHandler.availableAttributes.each(function(el) {\n                select.appendChild(new Element('option', {'value': el.code})).insert(el.label);\n            });\n            select.value = '';\n\n            select.observe('change', this.onChangeValue.bind(this));\n\n            var handlerObj = new AttributeCreator(select.id);\n            handlerObj.setSelectObj(select);\n            handlerObj.injectAddOption();\n\n            return select;\n        },\n\n        getRecommendedValuesSelect: function()\n        {\n            var select = new Element('select', {\n                'id'          : this.indexedXPath +'_'+ this.MODE_RECOMMENDED_VALUE,\n                'name'        : this.indexedXPath +'_'+ this.MODE_RECOMMENDED_VALUE,\n                'indexedxpath': this.indexedXPath,\n                'specific_id' : this.specific.specific_id,\n                'mode'        : this.MODE_RECOMMENDED_VALUE,\n                'class'       : 'M2ePro-required-when-visible select admin__control-select',\n                'style'       : 'display: none; width: 85%;'\n            });\n\n            select.appendChild(new Element('option', {'style': 'display: none', 'value': ''}));\n            this.specific.recommended_values.each(function(value) {\n                select.appendChild(new Element('option', {'value': value})).insert(value);\n            });\n            select.value = '';\n\n            select.observe('change', this.onChangeValue.bind(this));\n            return select;\n        },\n\n        onChangeValue: function(event)\n        {\n            var selectedObj = {};\n\n            selectedObj['mode'] = event.target.getAttribute('mode');\n            selectedObj['type'] = event.target.getAttribute('specific_type');\n            selectedObj['is_required'] = (this.dictionaryHelper.isSpecificRequired(this.specific) || this.isValueForceSet()) ? 1 : 0;\n            selectedObj[selectedObj.mode] = event.target.value;\n\n            this.specificHandler.markSpecificAsSelected(this.indexedXPath, selectedObj);\n        },\n\n        // ---------------------------------------\n\n        renderButtons: function()\n        {\n            var td = this.getRowContainer().appendChild(new Element('td'));\n\n            var cloneButton = this.getCloneButton();\n            if(cloneButton !== null) td.appendChild(cloneButton);\n\n            var removeButton = this.getRemoveButton();\n            if(removeButton !== null) td.appendChild(removeButton);\n        },\n\n        // ---------------------------------------\n\n        throwEventsToParents: function()\n        {\n            var myEvent,\n                parentXpath;\n\n            // ---------------------------------------\n            myEvent = new CustomEvent('child-specific-rendered');\n            parentXpath = this.getParentIndexedXpath();\n\n            $(parentXpath + '_grid').dispatchEvent(myEvent);\n            $(parentXpath + '_add_row').dispatchEvent(myEvent);\n            // ---------------------------------------\n\n            // my duplicate is already rendered\n            this.touchMyNeighbors();\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (this.isValueForceSet()) {\n\n                this.hideButton($(this.indexedXPath + '_remove_button'));\n\n                myEvent = new CustomEvent('undeleteble-specific-appear');\n                $(this.getParentIndexedXpath()).dispatchEvent(myEvent);\n            }\n            // ---------------------------------------\n        },\n\n        //########################################\n\n        checkSelection: function()\n        {\n            if (this.specific.values.length == 1) {\n                this.forceSelectAndDisable(this.specific.values[0]);\n                return '';\n            }\n\n            if (!this.specificHandler.isMarkedAsSelected(this.indexedXPath) &&\n                !this.specificHandler.isInFormData(this.indexedXPath)) {\n                return '';\n            }\n\n            var selectionInfo = this.specificHandler.getSelectionInfo(this.indexedXPath);\n\n            var id = this.indexedXPath + '_mode';\n            $(id).value = selectionInfo.mode;\n            this.simulateAction($(id), 'change');\n\n            if (selectionInfo.mode == this.MODE_CUSTOM_VALUE) {\n                id = this.indexedXPath +'_'+ this.MODE_CUSTOM_VALUE;\n                $(id).value = selectionInfo['custom_value'];\n                this.simulateAction($(id), 'change');\n            }\n\n            if (selectionInfo.mode == this.MODE_CUSTOM_ATTRIBUTE) {\n                id = this.indexedXPath +'_'+ this.MODE_CUSTOM_ATTRIBUTE;\n                $(id).value = selectionInfo['custom_attribute'];\n                this.simulateAction($(id), 'change');\n            }\n\n            if (selectionInfo.mode == this.MODE_RECOMMENDED_VALUE) {\n                id = this.indexedXPath +'_'+ this.MODE_RECOMMENDED_VALUE;\n                $(id).value = selectionInfo['recommended_value'];\n                this.simulateAction($(id), 'change');\n            }\n        },\n\n        forceSelectAndDisable: function(value)\n        {\n            if (!value) {\n                return;\n            }\n\n            var modeSelect = $(this.indexedXPath + '_mode');\n            modeSelect.value = this.MODE_CUSTOM_VALUE;\n            this.simulateAction(modeSelect, 'change');\n            modeSelect.setAttribute('disabled','disabled');\n\n            var valueObj = $(this.indexedXPath +'_'+ this.MODE_CUSTOM_VALUE);\n            valueObj.value = value;\n            this.simulateAction(valueObj, 'change');\n            valueObj.setAttribute('disabled', 'disabled');\n        },\n\n        //########################################\n\n        getToolTipBlock: function(id, messageHtml)\n        {\n            var container = new Element('div', {\n                'id'   : id,\n                'class': 'm2epro-field-tooltip admin__field-tooltip',\n            });\n\n            container.appendChild(new Element('a', {\n                'class' : 'admin__field-tooltip-action',\n                'style': 'margin-left: 0;'\n            }));\n\n            var htmlCont = container.appendChild(new Element('div', {\n                'class' : 'admin__field-tooltip-content',\n                'style' : 'max-width: 500px;'\n            }));\n\n            htmlCont.insert(messageHtml);\n\n            return container;\n        },\n\n        // ---------------------------------------\n\n        getCustomValueTypeNote: function()\n        {\n            if (this.specific.data_definition.definition) {\n                return null;\n            }\n\n            if (this.specific.params.type == 'int') return this.getIntTypeNote(this.specific.params);\n            if (this.specific.params.type == 'float') return this.getFloatTypeNote(this.specific.params);\n            if (this.specific.params.type == 'string') return this.getStringTypeNote(this.specific.params);\n            if (this.specific.params.type == 'date_time') return this.getDatTimeTypeNote(this.specific.params);\n\n            return this.getAnyTypeNote(this.specific.params);\n        },\n\n        getIntTypeNote: function(params)\n        {\n            var notes = [];\n\n            var handler = {\n                'type': function() {\n                    notes[0] = M2ePro.translator.translate('Type: Numeric.') + ' ';\n                },\n                'min_value': function(restriction) {\n                    notes[1] = M2ePro.translator.translate('Min:') + ' ' + restriction + '. ';\n                },\n                'max_value': function(restriction) {\n                    notes[2] = M2ePro.translator.translate('Max:') + ' ' + restriction + '. ';\n                },\n                'total_digits': function(restriction) {\n                    notes[3] = M2ePro.translator.translate('Total digits (not more):') + ' ' + restriction + '. ';\n                }\n            };\n\n            for (var paramName in params) {\n                params.hasOwnProperty(paramName) && handler[paramName] && handler[paramName](params[paramName]);\n            }\n\n            return notes.join('');\n        },\n\n        getFloatTypeNote: function(params)\n        {\n            var notes = [];\n\n            var handler = {\n                'type': function() {\n                    notes[0] = M2ePro.translator.translate('Type: Numeric floating point.') + ' ';\n                },\n                'min_value': function(restriction) {\n                    notes[1] = M2ePro.translator.translate('Min:') + ' ' + restriction + '. ';\n                },\n                'max_value': function(restriction) {\n                    notes[2] = M2ePro.translator.translate('Max:') + ' ' + restriction + '. ';\n                },\n                'decimal_places': function(restriction) {\n                    notes[3] = M2ePro.translator.translate('Decimal places (not more):') + ' ' + restriction.value + '. ';\n                },\n                'total_digits': function(restriction) {\n                    notes[4] = M2ePro.translator.translate('Total digits (not more):') + ' ' + restriction + '. ';\n                }\n            };\n\n            for (var paramName in params) {\n                params.hasOwnProperty(paramName) && handler[paramName] && handler[paramName](params[paramName]);\n            }\n\n            return notes.join('');\n        },\n\n        getStringTypeNote: function(params)\n        {\n            var notes = [];\n\n            var handler = {\n                'type': function() {\n                    notes[0] = M2ePro.translator.translate('Type: String.') + ' ';\n                },\n                'min_length': function(restriction) {\n                    notes[1] = restriction != 1 ? M2ePro.translator.translate('Min length:') + ' ' + restriction : '';\n                },\n                'max_length': function(restriction) {\n                    notes[2] = M2ePro.translator.translate('Max length:') + ' ' + restriction;\n                },\n                'pattern': function(restriction) {\n                    if (restriction == '[a-zA-Z][a-zA-Z]|unknown') {\n                        notes[3] = M2ePro.translator.translate('Two uppercase letters or \"unknown\".');\n                    }\n                }\n            };\n\n            for (var paramName in params) {\n                params.hasOwnProperty(paramName) && handler[paramName] && handler[paramName](params[paramName]);\n            }\n\n            return notes.join('');\n        },\n\n        getDatTimeTypeNote: function(params)\n        {\n            var notes = [];\n\n            var handler = {\n                'type': function(restriction) {\n                    notes.push(M2ePro.translator.translate('Type: Date time. Format: YYYY-MM-DD hh:mm:ss'));\n                }\n            };\n\n            for (var paramName in params) {\n                params.hasOwnProperty(paramName) && handler[paramName] && handler[paramName](params[paramName]);\n            }\n\n            return notes.join('');\n        },\n\n        getAnyTypeNote: function(params)\n        {\n            return M2ePro.translator.translate('Can take any value.');\n        },\n\n        // ---------------------------------------\n\n        getCustomAttributeTypeNote: function()\n        {\n            if (this.specific.values.length <= 0 && this.specific.recommended_values.length <= 0) {\n                return null;\n            }\n\n            var span = new Element('span');\n            var title = this.specific.values.length > 0 ? M2ePro.translator.translate('Allowed Values') : M2ePro.translator.translate('Recommended Values');\n\n            span.appendChild(new Element('span')).insert('<b>' + title + ': </b>');\n\n            var ul = span.appendChild(new Element('ul'));\n            var noteValues = this.specific.values.length > 0 ? this.specific.values : this.specific.recommended_values;\n\n            noteValues.each(function(value) {\n                ul.appendChild(new Element('li')).insert(value);\n            });\n\n            return span.outerHTML;\n        },\n\n        // ---------------------------------------\n\n        getDefinitionNote: function(definitionPart)\n        {\n            if (!definitionPart.definition) {\n                return;\n            }\n\n            var div = new Element('div');\n\n            div.appendChild(new Element('div', {style: 'padding: 2px 0; margin-top: 5px;'}))\n                .insert('<b>' + M2ePro.translator.translate('Definition:') + '</b>');\n            div.appendChild(new Element('div'))\n                .insert(definitionPart.definition);\n\n            if (definitionPart.tips && definitionPart.tips.match(/[a-z0-9]/i)) {\n\n                div.appendChild(new Element('div', {style: 'padding: 2px 0; margin-top: 5px;'}))\n                    .insert('<b>' + M2ePro.translator.translate('Tips:') + '</b>');\n                div.appendChild(new Element('div'))\n                    .insert(definitionPart.tips);\n            }\n\n            if (definitionPart.example && definitionPart.example.match(/[a-z0-9]/i)) {\n\n                div.appendChild(new Element('div', {style: 'padding: 2px 0; margin-top: 5px;'}))\n                    .insert('<b>' + M2ePro.translator.translate('Examples:') + '</b>');\n                div.appendChild(new Element('div'))\n                    .insert(definitionPart.example);\n            }\n\n            return div.outerHTML;\n        },\n\n        // ---------------------------------------\n\n        getSpecificOverriddenNotice: function()\n        {\n            if (!this.specificHandler.canSpecificBeOverwrittenByVariationTheme(this.specific)) {\n                return null;\n            }\n\n            var variationThemesList = this.specificHandler.themeAttributes[this.specific.xml_tag];\n\n            var message = '<b>' + M2ePro.translator.translate('Value of this Specific can be automatically overwritten by M2E Pro.') + '</b>';\n            message += '<br/><br/>' + variationThemesList.join(', ');\n\n            return this.constructNotice(message);\n        },\n\n        getSpecificParentageNotice: function()\n        {\n            if (this.specific.xml_tag != 'Parentage') {\n                return null;\n            }\n\n            return this.constructNotice(M2ePro.translator.translate('Amazon Parentage Specific will be overridden notice.'));\n        },\n\n        constructNotice: function(message)\n        {\n            var container = new Element('div', {\n                'class': 'm2epro-field-tooltip admin__field-tooltip',\n            });\n\n            container.appendChild(new Element('a', {\n                'class' : 'admin__field-tooltip-action tool-tip-image-warning',\n                'style': 'margin-left: 0;'\n            }));\n\n            var htmlCont = container.appendChild(new Element('div', {\n                'class' : 'admin__field-tooltip-content',\n                'style' : 'max-width: 500px;'\n            }));\n\n            //...\n\n            htmlCont.insert(message);\n\n            return container;\n        },\n\n        //########################################\n\n        observeToolTips: function(indexedXpath)\n        {\n            //$$('tr[id=\"' + indexedXpath + '\"] .tool-tip-image').each(function(element) {\n            //    element.observe('mouseover', MagentoFieldTipObj.showToolTip);\n            //    element.observe('mouseout', MagentoFieldTipObj.onToolTipIconMouseLeave);\n            //});\n            //\n            //$$('tr[id=\"' + indexedXpath + '\"] .tool-tip-message').each(function(element) {\n            //    element.observe('mouseout', MagentoFieldTipObj.onToolTipMouseLeave);\n            //    element.observe('mouseover', MagentoFieldTipObj.onToolTipMouseEnter);\n            //});\n        },\n\n        //########################################\n\n        removeAction: function($super, event)\n        {\n            // for attributes removing\n            var myEvent = new CustomEvent('parent-specific-row-is-removed');\n            $(this.indexedXPath).dispatchEvent(myEvent);\n            // ---------------------------------------\n\n            var deleteResult = $super(event);\n            this.throwEventsToParents();\n\n            return deleteResult;\n        },\n\n        cloneAction: function($super, event)\n        {\n            var newIndexedXpath = $super(event);\n            this.observeToolTips(newIndexedXpath);\n\n            var myEvent = new CustomEvent('parent-specific-row-is-cloned', { 'new_indexed_xpath': newIndexedXpath });\n            $(this.indexedXPath).dispatchEvent(myEvent);\n\n            return newIndexedXpath;\n        },\n\n        // ---------------------------------------\n\n        getRowContainer: function()\n        {\n            if ($(this.indexedXPath)) {\n                return $(this.indexedXPath);\n            }\n\n            var grid = $$('table[id=\"'+ this.getParentIndexedXpath() +'_grid\"] table.border tbody').first();\n            return grid.appendChild(new Element('tr', {id: this.indexedXPath}));\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Listing/AfnQty.js":"define([\n    'Magento_Ui/js/modal/alert'\n], function (alert) {\n    window.AmazonListingAfnQty = Class.create();\n    AmazonListingAfnQty.prototype = {\n\n        // ---------------------------------------\n\n        initialize: function(containerId) {},\n\n        // ---------------------------------------\n\n        showAfnQty: function(el, selectedSku, selectedProductId, accountId) {\n\n            var self = this,\n                skus = [];\n\n            var i = 50,\n                hasSelected = false;\n            el.up('table').select('.m2ePro-online-sku-value').each(function (skuEl) {\n                if (i === 0) {\n                    throw $break;\n                }\n\n                if (skuEl.innerHTML == '') {\n                    return;\n                }\n\n                if (selectedSku == skuEl.innerHTML) {\n                    hasSelected = true;\n                }\n\n                skus.push({\n                    sku: skuEl.innerHTML,\n                    productId: skuEl.getAttribute('productId')\n                });\n                i--;\n            });\n\n            if (!hasSelected) {\n                skus.pop();\n                skus.push({\n                    sku: selectedSku,\n                    productId: selectedProductId\n                });\n            }\n\n            var skusStr = '';\n            skus.each(function(item) {\n                skusStr += item.sku + ','\n            });\n\n            skusStr = rtrim(skusStr, ',');\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing/getAFNQtyBySku'), {\n                method: 'post',\n                parameters: {\n                    skus: skusStr,\n                    account_id: accountId\n                },\n                onSuccess: function(transport) {\n                    if (!transport.responseText.isJSON()) {\n                        alert({\n                            content: transport.responseText\n                        });\n                        return;\n                    }\n\n                    var response = transport.responseText.evalJSON();\n\n                    var data = {};\n                    skus.each(function (item) {\n                        if (response.items[item.sku]) {\n                            data[item.productId] = response.items[item.sku].qty;\n                        } else {\n                            data[item.productId] = 'empty';\n                        }\n                    });\n\n                    self.renderAfnQty(data);\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        renderAfnQty: function(data)\n        {\n            var self = this;\n\n            $H(data).each(function(item) {\n                var container = $('m2ePro_afn_qty_value_' + item.key);\n\n                container.down('a').hide();\n                container.down('.m2ePro-online-sku-value').remove();\n\n                if (item.value != 'empty') {\n                    container.down('.m2epro-afn-qty-data').show();\n\n                    container.down('.total span').update(item.value.total);\n                    container.down('.in-stock span').update(item.value.in_stock);\n                } else {\n                    container.down('.m2epro-empty-afn-qty-data').show();\n                }\n            });\n        }\n\n    };\n});","Ess_M2ePro/js/Amazon/Listing/AutoAction.js":"define([\n    'jquery',\n    'M2ePro/Listing/AutoAction',\n    'prototype'\n], function (jQuery) {\n\n    window.AmazonListingAutoAction = Class.create(ListingAutoAction, {\n\n        // ---------------------------------------\n\n        controller: 'amazon_listing_autoAction',\n\n        // ---------------------------------------\n\n        addingModeChange: function(el)\n        {\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Listing::ADDING_MODE_ADD') &&\n                ListingAutoActionObj.showCreateNewAsin) {\n\n                $('auto_action_amazon_add_and_create_asin').show();\n            } else {\n                $('auto_action_amazon_add_and_create_asin').hide();\n                $('auto_action_amazon_add_and_assign_description_template').hide();\n                $('auto_action_create_asin').value = M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::ADDING_MODE_ADD_AND_CREATE_NEW_ASIN_NO');\n                $('adding_description_template_id').value = '';\n            }\n\n            if (el.target.value != M2ePro.php.constant('Ess_M2ePro_Model_Listing::ADDING_MODE_NONE')) {\n                $$('[id$=\"adding_add_not_visible_field\"]')[0].show();\n            } else {\n                $$('[id$=\"adding_add_not_visible\"]')[0].value = M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_ADDING_ADD_NOT_VISIBLE_YES');\n                $$('[id$=\"adding_add_not_visible_field\"]')[0].hide();\n            }\n        },\n\n        createAsinChange: function(el)\n        {\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::ADDING_MODE_ADD_AND_CREATE_NEW_ASIN_YES')) {\n                $('auto_action_amazon_add_and_assign_description_template').show();\n            } else {\n                $('auto_action_amazon_add_and_assign_description_template').hide();\n                $('adding_description_template_id').value = '';\n            }\n        },\n\n        categoryStepOne: function(groupId)\n        {\n            this.loadAutoCategoryForm(groupId, function() {\n                $('category_close_button').hide();\n            });\n        },\n\n        collectData: function()\n        {\n            if ($('auto_mode')) {\n                switch (parseInt($('auto_mode').value)) {\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_MODE_GLOBAL'):\n                        ListingAutoActionObj.internalData = {\n                            auto_mode: $('auto_mode').value,\n                            auto_global_adding_mode: $('auto_global_adding_mode').value,\n                            auto_global_adding_add_not_visible: $('auto_global_adding_add_not_visible').value,\n                            adding_description_template_id: $('adding_description_template_id').value\n                        };\n                        break;\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_MODE_WEBSITE'):\n                        ListingAutoActionObj.internalData = {\n                            auto_mode: $('auto_mode').value,\n                            auto_website_adding_mode: $('auto_website_adding_mode').value,\n                            auto_website_adding_add_not_visible: $('auto_website_adding_add_not_visible').value,\n                            auto_website_deleting_mode: $('auto_website_deleting_mode').value,\n                            adding_description_template_id: $('adding_description_template_id').value\n                        };\n                        break;\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_MODE_CATEGORY'):\n                        ListingAutoActionObj.internalData = {\n                            id: $('group_id').value,\n                            title: $('group_title').value,\n                            auto_mode: $('auto_mode').value,\n                            adding_mode: $('adding_mode').value,\n                            adding_add_not_visible: $('adding_add_not_visible').value,\n                            deleting_mode: $('deleting_mode').value,\n                            categories: categories_selected_items,\n                            adding_description_template_id: $('adding_description_template_id').value\n                        };\n                        break;\n                }\n            }\n        },\n\n        reloadDescriptionTemplates: function()\n        {\n            var select = $('adding_description_template_id');\n\n            new Ajax.Request(M2ePro.url.get(ListingAutoActionObj.controller + '/getDescriptionTemplatesList'), {\n                onSuccess: function(transport) {\n\n                    var data = transport.responseText.evalJSON(true);\n\n                    var options = '<option></option>';\n\n                    var firstItem = null;\n                    var currentValue = select.value;\n\n                    data.each(function(item) {\n                        var key = item.id;\n                        var val = item.title;\n                        var disabled = item.is_new_asin_accepted == 0 ? ' disabled=\"disabled\"' : '';\n\n                        options += '<option value=\"' + key + '\"' + disabled + '>' + val + '</option>\\n';\n\n                        if (!firstItem) {\n                            firstItem = item;\n                        }\n                    });\n\n                    select.update();\n                    select.insert(options);\n\n                    if (currentValue != '') {\n                        $('adding_description_template_id').value = currentValue;\n                    } else if (typeof id !== 'undefined' && M2ePro.formData[id] > 0) {\n                        select.value = M2ePro.formData[id];\n                    } else if (firstItem.is_new_asin_accepted != 0) {\n                        select.value = firstItem.id;\n                    }\n\n                    select.simulate('change');\n                }\n            });\n        },\n\n        addNewTemplate: function(url, callback)\n        {\n            var win = window.open(url);\n\n            var intervalId = setInterval(function() {\n\n                if (!win.closed) {\n                    return;\n                }\n\n                clearInterval(intervalId);\n\n                callback && callback();\n\n            }, 1000);\n        }\n    });\n\n    // ---------------------------------------\n});","Ess_M2ePro/js/Amazon/Listing/Settings.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    window.AmazonListingSettings = Class.create(Common, {\n\n        // ---------------------------------------\n\n        storeId: null,\n        marketplaceId: null,\n\n        // ---------------------------------------\n\n        initialize: function () {\n        },\n\n        // ---------------------------------------\n\n        saveClick: function (url, skipValidation) {\n\n            if (typeof skipValidation == 'undefined' && !this.isValidForm()) {\n                return;\n            }\n\n            if (typeof categories_selected_items != 'undefined') {\n                array_unique(categories_selected_items);\n\n                var selectedCategories = implode(',', categories_selected_items);\n\n                $('selected_categories').value = selectedCategories;\n            }\n\n            if (typeof url == 'undefined' || url == '') {\n                url = M2ePro.url.formSubmit + 'back/' + base64_encode('list') + '/';\n            }\n\n            Common.prototype.saveClick.call(this, url);\n        },\n\n        saveAndEditClick: function (url, lastActiveTab, skipValidation) {\n            if (typeof skipValidation == 'undefined' && !this.isValidForm()) {\n                return;\n            }\n\n            if (typeof categories_selected_items != 'undefined' && !this.isValidForm()) {\n                array_unique(categories_selected_items);\n\n                var selectedCategories = implode(',', categories_selected_items);\n\n                $('selected_categories').value = selectedCategories;\n            }\n\n            if (lastActiveTab && url) {\n                var tabsUrl = '|tab=' + jQuery('#amazonListingEditTabs').data().tabs.active.find('a')[0].id.split('_').pop();\n                url = url + 'back/' + base64_encode('edit' + tabsUrl) + '/';\n            }\n\n            this.submitForm(url);\n        },\n\n        reloadSellingFormatTemplates: function () {\n            AmazonListingSettingsObj.reload(M2ePro.url.get('getSellingFormatTemplates'), 'template_selling_format_id');\n        },\n\n        reloadSynchronizationTemplates: function () {\n            AmazonListingSettingsObj.reload(M2ePro.url.get('getSynchronizationTemplates'), 'template_synchronization_id');\n        },\n\n        // ---------------------------------------\n\n        selling_format_template_id_simulate_change: function () {\n            var intervalRestartLimit = 20;\n            var intervalRestartCount = 0;\n\n            var intervalId = setInterval(function simulateSellingFormatTemplateChange() {\n                intervalRestartCount++;\n\n                if (intervalRestartCount >= intervalRestartLimit || Ajax.activeRequestCount == 0) {\n                    $('template_selling_format_id').value && $('template_selling_format_id').simulate('change');\n\n                    clearInterval(intervalId);\n                }\n            }, 250);\n        },\n\n        selling_format_template_id_change: function () {\n            AmazonListingSettingsObj.checkMessages();\n            AmazonListingSettingsObj.hideEmptyOption(this);\n        },\n\n        // ---------------------------------------\n\n        checkMessages: function () {\n            if (AmazonListingSettingsObj.storeId === null || AmazonListingSettingsObj.marketplaceId === null) {\n                return;\n            }\n\n            var id = $('template_selling_format_id').value,\n                nick = 'selling_format',\n                storeId = AmazonListingSettingsObj.storeId,\n                marketplaceId = AmazonListingSettingsObj.marketplaceId,\n                checkAttributesAvailability = false,\n                container = 'template_selling_format_messages',\n                callback = function () {\n                    var refresh = $(container).down('a.refresh-messages');\n                    if (refresh) {\n                        refresh.observe('click', function () {\n                            this.checkMessages();\n                        }.bind(this))\n                    }\n                }.bind(this);\n\n            TemplateHandlerObj.checkMessages(\n                id,\n                nick,\n                '',\n                storeId,\n                marketplaceId,\n                checkAttributesAvailability,\n                container,\n                callback\n            );\n        },\n\n        // ---------------------------------------\n\n        synchronization_template_id_change: function () {\n            AmazonListingSettingsObj.hideEmptyOption(this);\n        },\n\n        // ---------------------------------------\n\n        reload: function (url, id) {\n            new Ajax.Request(url, {\n                asynchronous: false,\n                onSuccess: function (transport) {\n\n                    var data = transport.responseText.evalJSON(true);\n\n                    var options = '';\n\n                    var firstItemValue = '';\n                    var currentValue = $(id).value;\n\n                    data.each(function (paris) {\n                        var key = (typeof paris.key != 'undefined') ? paris.key : paris.id;\n                        var val = (typeof paris.value != 'undefined') ? paris.value : paris.title;\n                        options += '<option value=\"' + key + '\">' + val + '</option>\\n';\n\n                        if (firstItemValue == '') {\n                            firstItemValue = key;\n                        }\n                    });\n\n                    $(id).update();\n                    $(id).insert(options);\n\n                    if (currentValue != '') {\n                        $(id).value = currentValue;\n                    } else {\n                        if (M2ePro.formData[id] > 0) {\n                            $(id).value = M2ePro.formData[id];\n                        } else {\n                            $(id).value = firstItemValue;\n                        }\n                    }\n                    $(id).simulate('change');\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        addNewTemplate: function (url, callback) {\n            var win = window.open(url);\n\n            var intervalId = setInterval(function () {\n\n                if (!win.closed) {\n                    return;\n                }\n\n                clearInterval(intervalId);\n\n                callback && callback();\n\n            }, 1000);\n        },\n\n        // ---------------------------------------\n\n        newSellingFormatTemplateCallback: function () {\n            var noteEl = $('template_selling_format_note');\n\n            AmazonListingSettingsObj.reloadSellingFormatTemplates();\n            if ($('template_selling_format_id').children.length > 0) {\n                $('template_selling_format_id').show();\n                noteEl && $('template_selling_format_note').show();\n                $('template_selling_format_label').hide();\n            } else {\n                $('template_selling_format_id').hide();\n                noteEl && $('template_selling_format_note').hide();\n                $('template_selling_format_label').show();\n            }\n        },\n\n        // ---------------------------------------\n\n        newSynchronizationTemplateCallback: function () {\n            var noteEl = $('template_synchronization_note');\n\n            AmazonListingSettingsObj.reloadSynchronizationTemplates();\n            if ($('template_synchronization_id').children.length > 0) {\n                $('template_synchronization_id').show();\n                noteEl && $('template_synchronization_note').show();\n                $('template_synchronization_label').hide();\n            } else {\n                $('template_synchronization_id').hide();\n                noteEl && $('template_synchronization_note').hide();\n                $('template_synchronization_label').show();\n            }\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Listing/Other/Grid.js":"define([\n    'M2ePro/Listing/Other/Grid'\n], function () {\n    window.AmazonListingOtherGrid = Class.create(ListingOtherGrid, {\n\n        // ---------------------------------------\n\n        getLogViewUrl: function(rowId)\n        {\n            var idField = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Block\\\\Adminhtml\\\\Log\\\\Listing\\\\Other\\\\AbstractGrid::LISTING_ID_FIELD');\n\n            var params = {};\n            params[idField] = rowId;\n\n            return M2ePro.url.get('amazon_log_listing_other/index', params);\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Listing/View/Fulfillment.js":"define([\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Action'\n], function (MessageObj) {\n\n    window.AmazonListingViewFulfillment = Class.create(Action, {\n\n        // ---------------------------------------\n\n        initialize: function ($super, gridHandler) {\n            var self = this;\n\n            $super(gridHandler);\n\n        },\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function (options) {\n            this.options = Object.extend(this.options, options);\n            return this;\n        },\n\n        // ---------------------------------------\n\n        switchToAFN: function (productsIds) {\n            var self = this;\n            self.gridHandler.unselectAll();\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_fulfillment/switchToAFN'), {\n                method: 'post',\n                parameters: {\n                    products_ids: productsIds\n                },\n                onSuccess: function (transport) {\n\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return;\n                    }\n\n                    var response = transport.responseText.evalJSON();\n\n                    self.gridHandler.unselectAllAndReload();\n\n                    MessageObj.clear();\n                    response.messages.each(function (msg) {\n                        MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                    });\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        switchToMFN: function (productsIds) {\n            var self = this;\n            self.gridHandler.unselectAll();\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_fulfillment/switchToMFN'), {\n                method: 'post',\n                parameters: {\n                    products_ids: productsIds\n                },\n                onSuccess: function (transport) {\n                    if (!transport.responseText.isJSON()) {\n                        alert(transport.responseText);\n                        return;\n                    }\n\n                    var response = transport.responseText.evalJSON();\n\n                    self.gridHandler.unselectAllAndReload();\n\n                    MessageObj.clear();\n                    response.messages.each(function (msg) {\n                        MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                    });\n                }\n            });\n        }\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/View/Action.js":"define([\n    'M2ePro/Listing/View/Action'\n], function () {\n\n    window.AmazonListingViewAction = Class.create(ListingViewAction, {\n\n        // ---------------------------------------\n\n        deleteAndRemoveAction: function () {\n            var selectedProductsParts = this.gridHandler.getSelectedItemsParts();\n            if (selectedProductsParts.length == 0) {\n                return;\n            }\n\n            this.startActions(\n                M2ePro.translator.translate('deleting_and_removing_selected_items_message'),\n                M2ePro.url.get('runDeleteAndRemoveProducts'),\n                selectedProductsParts\n            );\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/View/Grid.js":"define([\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Listing/View/Grid',\n    'M2ePro/Listing/Moving',\n    'M2ePro/Amazon/Listing/View/Action',\n    'M2ePro/Amazon/Listing/View/Fulfillment',\n    'M2ePro/Amazon/Listing/Product/Repricing',\n    'M2ePro/Amazon/Listing/Product/Search',\n    'M2ePro/Amazon/Listing/Product/Template/Description',\n    'M2ePro/Amazon/Listing/Product/Template/Shipping',\n    'M2ePro/Amazon/Listing/Product/Template/ProductTaxCode',\n    'M2ePro/Amazon/Listing/Product/Variation/Manage'\n], function (MessageObj) {\n\n    window.AmazonListingViewGrid = Class.create(ListingViewGrid, {\n\n        // ---------------------------------------\n\n        getLogViewUrl: function (rowId) {\n            var idField = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Block\\\\Adminhtml\\\\Log\\\\Listing\\\\Product\\\\AbstractGrid::LISTING_PRODUCT_ID_FIELD');\n\n            var params = {};\n            params[idField] = rowId;\n\n            return M2ePro.url.get('amazon_log_listing_product/index', params);\n        },\n\n        // ---------------------------------------\n\n        getMaxProductsInPart: function()\n        {\n            return 10;\n        },\n\n        // ---------------------------------------\n\n        prepareActions: function($super)\n        {\n            this.actionHandler = new AmazonListingViewAction(this);\n\n            this.actions = {\n                listAction: this.actionHandler.listAction.bind(this.actionHandler),\n                relistAction: this.actionHandler.relistAction.bind(this.actionHandler),\n                reviseAction: this.actionHandler.reviseAction.bind(this.actionHandler),\n                stopAction: this.actionHandler.stopAction.bind(this.actionHandler),\n                stopAndRemoveAction: this.actionHandler.stopAndRemoveAction.bind(this.actionHandler),\n                previewItemsAction: this.actionHandler.previewItemsAction.bind(this.actionHandler),\n                startTranslateAction: this.actionHandler.startTranslateAction.bind(this.actionHandler),\n                stopTranslateAction: this.actionHandler.stopTranslateAction.bind(this.actionHandler)\n            };\n\n            this.movingHandler = new ListingMoving(this);\n            this.productSearchHandler = new AmazonListingProductSearch(this);\n\n            this.templateDescriptionHandler    = new AmazonListingProductTemplateDescription(this);\n            this.templateShippingHandler       = new AmazonListingProductTemplateShipping(this);\n            this.templateProductTaxCodeHandler = new AmazonListingProductTemplateProductTaxCode(this);\n\n            this.variationProductManageHandler = new AmazonListingProductVariationManage(this);\n            this.fulfillmentHandler = new AmazonListingViewFulfillment(this);\n            this.repricingHandler = new AmazonListingProductRepricing(this);\n\n            this.actions = Object.extend(this.actions, {\n                duplicateAction: this.duplicateProducts.bind(this),\n                movingAction: this.movingHandler.run.bind(this.movingHandler),\n                deleteAndRemoveAction: this.actionHandler.deleteAndRemoveAction.bind(this.actionHandler),\n\n                assignTemplateDescriptionIdAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.templateDescriptionHandler.validateProductsForTemplateDescriptionAssign(id)\n                }).bind(this),\n                unassignTemplateDescriptionIdAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.templateDescriptionHandler.unassignFromTemplateDescription(id)\n                }).bind(this),\n\n                assignTemplateShippingTemplateIdAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.templateShippingHandler.openPopUp(id, M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account::SHIPPING_MODE_TEMPLATE'))\n                }).bind(this),\n                unassignTemplateShippingTemplateIdAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.templateShippingHandler.unassign(id, M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account::SHIPPING_MODE_TEMPLATE'))\n                }).bind(this),\n\n                assignTemplateShippingOverrideIdAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.templateShippingHandler.openPopUp(id, M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account::SHIPPING_MODE_OVERRIDE'))\n                }).bind(this),\n                unassignTemplateShippingOverrideIdAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.templateShippingHandler.unassign(id, M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account::SHIPPING_MODE_OVERRIDE'))\n                }).bind(this),\n\n                assignTemplateProductTaxCodeIdAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.templateProductTaxCodeHandler.openPopUp(id)\n                }).bind(this),\n                unassignTemplateProductTaxCodeIdAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.templateProductTaxCodeHandler.unassign(id)\n                }).bind(this),\n\n                switchToAfnAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.fulfillmentHandler.switchToAFN(id);\n                }).bind(this),\n                switchToMfnAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.fulfillmentHandler.switchToMFN(id);\n                }).bind(this),\n\n                addToRepricingAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.repricingHandler.addToRepricing(id);\n                }).bind(this),\n                showDetailsAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.repricingHandler.showDetails(id);\n                }).bind(this),\n                editRepricingAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.repricingHandler.editRepricing(id);\n                }).bind(this),\n                removeFromRepricingAction: (function(id) {\n                    id = id || this.getSelectedProductsString();\n                    this.repricingHandler.removeFromRepricing(id);\n                }).bind(this),\n\n                assignGeneralIdAction: (function() { this.productSearchHandler.searchGeneralIdAuto(this.getSelectedProductsString())}).bind(this),\n                newGeneralIdAction: (function() { this.productSearchHandler.addNewGeneralId(this.getSelectedProductsString())}).bind(this),\n                unassignGeneralIdAction: (function() { this.productSearchHandler.unmapFromGeneralId(this.getSelectedProductsString())}).bind(this)\n\n            });\n        },\n\n        // ---------------------------------------\n\n        duplicateProducts: function () {\n            this.scrollPageToTop();\n            MessageObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing/duplicateProducts'), {\n                method: 'post',\n                parameters: {\n                    ids: this.getSelectedProductsString()\n                },\n                onSuccess: (function (transport) {\n\n                    try {\n                        var response = transport.responseText.evalJSON();\n\n                        MessageObj['add' + response.type[0].toUpperCase() + response.type.slice(1) + 'Message'](response.message);\n\n                        if (response.type != 'error') {\n                            this.unselectAllAndReload();\n                        }\n\n                    } catch (e) {\n                        MessageObj.addErrorMessage('Internal Error.');\n                    }\n                }).bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        unassignTemplateDescriptionIdActionConfrim: function (id)\n        {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        self.templateDescriptionHandler.unassignFromTemplateDescription(id);\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        unassignTemplateShippingTemplateIdActionConfrim: function (id)\n        {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        self.templateShippingHandler.unassign(id, M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account::SHIPPING_MODE_TEMPLATE'));\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        unassignTemplateShippingOverrideIdActionConfrim: function (id)\n        {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        self.templateShippingHandler.unassign(id, M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account::SHIPPING_MODE_OVERRIDE'));\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        unassignTemplateProductTaxCodeIdActionConfrim: function (id)\n        {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        self.templateProductTaxCodeHandler.unassign(id);\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/Product/Add.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    window.AmazonListingProductAdd = Class.create();\n    AmazonListingProductAdd.prototype = Object.extend(new Common(), {\n\n        // ---------------------------------------\n\n        initialize: function (ProgressBarObj, WrapperObj) {\n            this.categories = '';\n            this.products = '';\n            this.listing_id = null;\n            this.is_list = null;\n            this.back = '';\n            this.emptyListing = 0;\n\n            this.categoriesAddAction = null;\n            this.categoriesDeleteAction = null;\n\n            this.progressBarObj = ProgressBarObj;\n            this.wrapperObj = WrapperObj;\n        },\n\n        // ---------------------------------------\n\n        add: function (items, back, isList) {\n            var self = this;\n            self.is_list = isList;\n            self.back = back;\n\n            self.getListingId(items);\n\n            if (self.emptyListing == 1) {\n                return;\n            }\n\n            self.products = items;\n\n            var parts = self.makeProductsParts();\n\n            self.progressBarObj.reset();\n            self.progressBarObj.setTitle('Adding Products to Listing');\n            self.progressBarObj.setStatus('Adding in process. Please wait...');\n            self.progressBarObj.show();\n            self.scrollPageToTop();\n\n            self.wrapperObj.lock();\n\n            self.sendPartsProducts(parts, parts.length);\n        },\n\n        setCategoriesActions: function (addAction, deleteAction) {\n            this.categoriesAddAction = addAction;\n            this.categoriesDeleteAction = deleteAction;\n        },\n\n        getListingId: function (items) {\n            var self = this;\n\n            if (self.listing_id) {\n                return;\n            }\n\n            var hrefParts = explode('/', window.location.href);\n\n            for (var i = 0; i < hrefParts.length; i++) {\n                if (hrefParts[i] == 'id') {\n                    self.listing_id = hrefParts[i + 1];\n                    break;\n                }\n            }\n        },\n\n        makeProductsParts: function () {\n            var self = this;\n\n            var productsInPart = 50;\n            var productsArray = explode(',', self.products);\n            var parts = new Array();\n\n            if (productsArray.length < productsInPart) {\n                return parts[0] = productsArray;\n            }\n\n            var result = new Array();\n            for (var i = 0; i < productsArray.length; i++) {\n                if (result.length == 0 || result[result.length - 1].length == productsInPart) {\n                    result[result.length] = new Array();\n                }\n                result[result.length - 1][result[result.length - 1].length] = productsArray[i];\n            }\n\n            return result;\n        },\n\n        sendPartsProducts: function (parts, partsCount) {\n            var self = this;\n\n            if (parts.length == 0) {\n                return;\n            }\n\n            var part = parts.splice(0, 1);\n            part = part[0];\n            var partString = implode(',', part);\n\n            var isLastPart = '';\n            if (parts.length <= 0) {\n                isLastPart = 'yes';\n            }\n\n            new Ajax.Request(M2ePro.url.get('add_products'), {\n                method: 'post',\n                parameters: {\n                    listing_id: self.listing_id,\n                    is_last_part: isLastPart,\n                    do_list: self.is_list,\n                    back: self.back,\n                    products: partString\n                },\n                onSuccess: function (transport) {\n\n                    var percents = (100 / partsCount) * (partsCount - parts.length);\n\n                    if (percents <= 0) {\n                        self.progressBarObj.setPercents(0, 0);\n                    } else if (percents >= 100) {\n                        self.progressBarObj.setPercents(100, 0);\n                        self.progressBarObj.setStatus('Adding has been completed.');\n\n                        return setLocation(transport.responseText.evalJSON()['redirect']);\n                    } else {\n                        self.progressBarObj.setPercents(percents, 1);\n                    }\n\n                    setTimeout(function () {\n                        self.sendPartsProducts(parts, partsCount);\n                    }, 500);\n                }\n            });\n\n            $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n        },\n\n        // ---------------------------------------\n\n        setHideProductsPresentedInOtherListings: function (hideProductsOthersListings) {\n            this.hideProductsOthersListings = hideProductsOthersListings;\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Listing/Product/Search.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Action'\n], function (modal, MessageObj) {\n\n    window.AmazonListingProductSearch = Class.create(Action, {\n\n        MATCHING_TYPE_EQUAL: 1,\n        MATCHING_TYPE_VIRTUAL_AMAZON: 2,\n        MATCHING_TYPE_VIRTUAL_MAGENTO: 3,\n\n        searchData: {},\n\n        // ---------------------------------------\n\n        initialize: function ($super, gridHandler) {\n            var self = this;\n\n            $super(gridHandler);\n\n            self.searchBlock = $('productSearch_pop_up_content').outerHTML;\n            $('productSearch_pop_up_content').remove();\n        },\n\n        initSearchEvents: function () {\n            var self = this;\n\n            $('productSearch_submit_button').observe('click', function (event) {\n                self.searchGeneralIdManual(self.params.productId);\n            });\n\n            $('productSearch_reset_button').observe('click', function (event) {\n                $('query').value = '';\n                $('productSearch_grid').innerHTML = '';\n            });\n\n            $('query').observe('keypress', function (event) {\n                event.keyCode == Event.KEY_RETURN && self.searchGeneralIdManual(self.params.productId);\n            });\n        },\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function (options) {\n            this.options = Object.extend(this.options, options);\n            this.initValidators();\n            return this;\n        },\n\n        initValidators: function () {\n            var self = this;\n\n            jQuery.validator.addMethod('M2ePro-amazon-attribute-unique-value', function (value, el) {\n\n                var existedValues = [],\n                    isValid = true,\n                    form = el.parent('form');\n\n                form.select('select').each(function (index, el) {\n                    if (el.value != '') {\n                        if (existedValues.indexOf(el.value) === -1) {\n                            existedValues.push(el.value);\n                        } else {\n                            isValid = false;\n                        }\n                    }\n                });\n\n                return isValid;\n\n            }, M2ePro.translator.translate('variation_manage_matched_attributes_error_duplicate'));\n        },\n\n        // ---------------------------------------\n\n        params: {autoMapErrorFlag: false},\n\n        // ---------------------------------------\n\n        openPopUp: function (mode, title, productId) {\n            MessageObj.clear();\n\n            var self = this;\n\n            this.gridHandler.unselectAll();\n\n            this.params = {\n                mode: mode,\n                title: title,\n                productId: productId,\n                autoMapErrorFlag: false\n            };\n\n            if (mode == 0) {\n                new Ajax.Request(M2ePro.url.get('amazon_listing_product_search/getSearchAsinMenu'), {\n                    method: 'post',\n                    parameters: {\n                        product_id: productId\n                    },\n                    onSuccess: function (transport) {\n                        var containerEl = $('productSearchMenu_pop_up_content');\n\n                        if (containerEl) {\n                            containerEl.remove();\n                        }\n\n                        $('html-body').insert({bottom: transport.responseText});\n\n                        self.searchMenuPopup = jQuery('#productSearchMenu_pop_up_content');\n\n                        modal({\n                            title: title,\n                            modalClass: 'width-50',\n                            type: 'popup',\n                            buttons: [{\n                                text: M2ePro.translator.translate('Close'),\n                                class: 'action primary ',\n                                click: function () {\n                                    self.searchMenuPopup.modal('closeModal')\n                                }\n                            }]\n                        }, self.searchMenuPopup);\n\n                        self.searchMenuPopup.modal('openModal');\n                    }\n                });\n            } else {\n                if ($('productSearch_pop_up_content')) {\n                    $('productSearch_pop_up_content').remove();\n                }\n\n                $('html-body').insert({bottom: self.searchBlock});\n\n                self.popup = jQuery('#productSearch_pop_up_content');\n\n                modal({\n                    title: title,\n                    type: 'slide',\n                    buttons: [{\n                        text: M2ePro.translator.translate('Cancel'),\n                        class: 'action default',\n                        click: function () {\n                            self.popup.modal('closeModal');\n                        }\n                    }, {\n                        text: M2ePro.translator.translate('Clear Search Results'),\n                        class: 'action primary',\n                        click: function () {\n                            ListingGridHandlerObj.productSearchHandler.clearSearchResultsAndOpenSearchMenu();\n                        }\n                    }]\n                }, this.popup);\n\n                self.popup.modal('openModal');\n\n                $('productSearch_pop_up_content').show();\n                $('productSearch_form').hide();\n                $('suggested_asin_grid_help_block').show();\n\n                new Ajax.Request(M2ePro.url.get('amazon_listing_product_search/suggestedAsinGrid'), {\n                    method: 'post',\n                    parameters: {\n                        product_id: productId\n                    },\n                    onSuccess: function (transport) {\n                        $('productSearch_grid').update(transport.responseText);\n                    }\n                });\n            }\n\n        },\n\n        // ---------------------------------------\n\n        clearSearchResultsAndOpenSearchMenu: function () {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        self.popup.modal('closeModal');\n                        self.unmapFromGeneralId(self.params.productId, function () {\n                            self.openPopUp(0, self.params.title, self.params.productId);\n                        });\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        clearSearchResultsAndManualSearch: function () {\n            var self = this;\n\n            self.popup.modal('closeModal');\n            self.unmapFromGeneralId(self.params.productId, function () {\n                self.showSearchManualPrompt(self.params.title, self.params.productId);\n            });\n        },\n\n        // ---------------------------------------\n\n        showSearchManualPrompt: function (title, listingProductId) {\n            var self = this,\n                title = title || self.params.title;\n\n            if (self.searchMenuPopup) {\n                self.searchMenuPopup.modal('closeModal');\n            }\n\n            if ($('productSearch_pop_up_content')) {\n                $('productSearch_pop_up_content').remove();\n            }\n\n            $('html-body').insert({bottom: self.searchBlock});\n\n            self.popup = jQuery('#productSearch_pop_up_content');\n\n            var buttons = [];\n            if (!listingProductId) {\n                buttons.push({\n                    text: M2ePro.translator.translate('Back'),\n                    class: 'back',\n                    click: function() {\n                        self.popup.modal('closeModal');\n                        self.openPopUp(0, self.params.title, self.params.productId);\n                    }\n                });\n            }\n\n            modal({\n                title: title,\n                type: 'slide',\n                buttons: buttons\n            }, self.popup);\n\n            self.popup.modal('openModal');\n\n            if (listingProductId) {\n                self.params = {\n                    mode: 0,\n                    title: title,\n                    productId: listingProductId,\n                    autoMapErrorFlag: false\n                };\n            }\n\n            self.initSearchEvents();\n            // search manual\n            $('productSearch_form').show();\n            $('productSearch_error_block').hide();\n            $('suggested_asin_grid_help_block').hide();\n            $('query').value = '';\n\n            setTimeout(function () {\n                $('query').focus();\n            }, 500);\n        },\n\n        showSearchGeneralIdAutoPrompt: function () {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        if (self.searchMenuPopup) {\n                            self.searchMenuPopup.modal('closeModal');\n                        }\n                        self.searchGeneralIdAuto(self.params.productId);\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        showUnmapFromGeneralIdPrompt: function (productId) {\n            MessageObj.clear();\n\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        self.unmapFromGeneralId(productId);\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        addNewGeneralId: function (listingProductIds) {\n            var self = this;\n\n            if (!M2ePro.customData.isNewAsinAvailable) {\n                self.alert(M2ePro.translator.translate('new_asin_not_available').replace('%code%', M2ePro.customData.marketplace.code));\n                return;\n            }\n\n            listingProductIds = listingProductIds || self.params.productId;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product/mapToNewAsin'), {\n                method: 'post',\n                parameters: {\n                    products_ids: listingProductIds\n                },\n                onSuccess: function (transport) {\n\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return;\n                    }\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (typeof self.searchMenuPopup != 'undefined') {\n                        self.searchMenuPopup.modal('closeModal')\n                    }\n\n                    self.gridHandler.unselectAllAndReload();\n                    self.flagSuccess = true;\n\n                    if (response.products_ids.length > 0) {\n                        ListingGridHandlerObj.templateDescriptionHandler.openPopUp(\n                            0, M2ePro.translator.translate('templateDescriptionPopupTitle'),\n                            response.products_ids, response.html, 1);\n                    } else {\n                        if (response.messages.length > 0) {\n                            MessageObj.clear();\n                            response.messages.each(function (msg) {\n                                MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                            });\n                        }\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        searchGeneralIdManual: function (productId) {\n            var self = this;\n            var query = $('query').value;\n\n            MessageObj.clear();\n\n            if (query == '') {\n                $('query').focus();\n                self.alert(M2ePro.translator.translate('enter_productSearch_query'));\n                return;\n            }\n\n            $('productSearch_error_block').hide();\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_search/searchAsinManual'), {\n                method: 'post',\n                parameters: {\n                    query: query,\n                    product_id: productId\n                },\n                onSuccess: function (transport) {\n\n                    transport = transport.responseText.evalJSON();\n\n                    if (transport.result == 'success') {\n                        $('productSearch_grid').update(transport.html);\n                    } else {\n                        $('productSearch_error_message').update(transport.text);\n                        $('productSearch_error_block').show();\n                    }\n                }\n            });\n        },\n\n        searchGeneralIdAuto: function (productIds) {\n            MessageObj.clear();\n            var self = this;\n\n            var selectedProductsString = productIds.toString();\n            var selectedProductsArray = selectedProductsString.split(\",\");\n\n            if (selectedProductsString == '' || selectedProductsArray.length == 0) {\n                return;\n            }\n\n            var maxProductsInPart = 10;\n\n            var result = new Array();\n            for (var i = 0; i < selectedProductsArray.length; i++) {\n                if (result.length == 0 || result[result.length - 1].length == maxProductsInPart) {\n                    result[result.length] = new Array();\n                }\n                result[result.length - 1][result[result.length - 1].length] = selectedProductsArray[i];\n            }\n\n            var selectedProductsParts = result;\n\n            ListingGridHandlerObj.actionHandler.progressBarObj.reset();\n            ListingGridHandlerObj.actionHandler.progressBarObj.show(M2ePro.translator.translate('automap_asin_progress_title'));\n            ListingGridHandlerObj.actionHandler.gridWrapperObj.lock();\n            $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n\n            self.params.autoMapErrorFlag = false;\n\n            self.sendPartsOfProducts(selectedProductsParts, selectedProductsParts.length, selectedProductsString);\n        },\n\n        sendPartsOfProducts: function (parts, totalPartsCount, selectedProductsString) {\n            var self = this;\n\n            if (parts.length == 0) {\n\n                ListingGridHandlerObj.actionHandler.progressBarObj.setStatus(M2ePro.translator.translate('task_completed_message'));\n\n                ListingGridHandlerObj.actionHandler.gridWrapperObj.unlock();\n                $$('.loading-mask').invoke('setStyle', {visibility: 'visible'});\n\n                self.gridHandler.unselectAllAndReload();\n\n                if (self.params.autoMapErrorFlag == true) {\n                    MessageObj.addErrorMessage(M2ePro.translator.translate('automap_error_message'));\n                }\n\n                setTimeout(function () {\n                    ListingGridHandlerObj.actionHandler.progressBarObj.hide();\n                    ListingGridHandlerObj.actionHandler.progressBarObj.reset();\n                }, 2000);\n\n                new Ajax.Request(M2ePro.url.get('amazon_listing_product_search/getProductsSearchStatus'), {\n                    method: 'post',\n                    parameters: {\n                        products_ids: selectedProductsString\n                    },\n                    onSuccess: function (transport) {\n                        if (!transport.responseText.isJSON()) {\n                            self.alert(transport.responseText);\n                            return;\n                        }\n\n                        var response = transport.responseText.evalJSON();\n\n                        if (response.messages) {\n                            MessageObj.clear();\n                            response.messages.each(function (msg) {\n                                MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                            });\n                        }\n                    }\n                });\n\n                return;\n            }\n\n            var part = parts.splice(0, 1);\n            part = part[0];\n            var partString = implode(',', part);\n\n            var partExecuteString = part.length;\n            partExecuteString += '';\n\n            ListingGridHandlerObj.actionHandler.progressBarObj.setStatus(str_replace('%product_title%', partExecuteString, M2ePro.translator.translate('automap_asin_search_products')));\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_search/searchAsinAuto'), {\n                method: 'post',\n                parameters: {\n                    products_ids: partString\n                },\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == 1) {\n                        self.params.autoMapErrorFlag = true;\n                    }\n\n                    var percents = (100 / totalPartsCount) * (totalPartsCount - parts.length);\n\n                    if (percents <= 0) {\n                        ListingGridHandlerObj.actionHandler.progressBarObj.setPercents(0, 0);\n                    } else if (percents >= 100) {\n                        ListingGridHandlerObj.actionHandler.progressBarObj.setPercents(100, 0);\n                    } else {\n                        ListingGridHandlerObj.actionHandler.progressBarObj.setPercents(percents, 1);\n                    }\n\n                    setTimeout(function () {\n                        self.sendPartsOfProducts(parts, totalPartsCount, selectedProductsString);\n                    }, 500);\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        mapToGeneralId: function (productId, generalId, optionsData) {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        if (optionsData === undefined) {\n                            optionsData = '';\n                        }\n\n                        new Ajax.Request(M2ePro.url.get('amazon_listing/mapToAsin'), {\n                            method: 'post',\n                            parameters: {\n                                product_id: productId,\n                                general_id: generalId,\n                                options_data: decodeURIComponent(optionsData),\n                                search_type: $('amazon_asin_search_type').value,\n                                search_value: $('amazon_asin_search_value').value\n                            },\n                            onSuccess: function (transport) {\n                                if (transport.responseText.isJSON()) {\n                                    var response = transport.responseText.evalJSON();\n\n                                    if (response['vocabulary_attributes']) {\n                                        self.openVocabularyAttributesPopUp(response['vocabulary_attributes']);\n                                    }\n\n                                    if (response['vocabulary_attribute_options']) {\n                                        self.openVocabularyOptionsPopUp(response['vocabulary_attribute_options']);\n                                    }\n\n                                    self.gridHandler.unselectAllAndReload();\n                                    return;\n                                }\n\n                                if (transport.responseText == 0) {\n                                    self.gridHandler.unselectAllAndReload();\n                                } else {\n                                    self.alert(transport.responseText);\n                                }\n                            }\n                        });\n\n                        self.popup.modal('closeModal');\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        openVocabularyAttributesPopUp: function (attributes) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_vocabulary/getAttributesPopup'), {\n                onSuccess: function (transport) {\n\n                    var containerEl = $('vocabulary_attributes_pupup');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    self.vocabularyAttributesPupup = jQuery('#vocabulary_attributes_pupup');\n\n                    modal({\n                        title: 'Remember Attributes Accordance',\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('No'),\n                            class: 'action-secondary action-dismiss',\n                            click: function () {\n                                self.addAttributesToVocabulary(false);\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Yes'),\n                            class: 'action-primary action-accept',\n                            click: function () {\n                                self.addAttributesToVocabulary(true);\n                            }\n                        }]\n                    }, self.vocabularyAttributesPupup);\n\n                    self.vocabularyAttributesPupup.modal('openModal');\n\n                    $('vocabulary_attributes_data').value = Object.toJSON(attributes);\n\n                    var attributesHtml = '';\n                    $H(attributes).each(function (element) {\n                        attributesHtml += '<li>' + element.key + ' > ' + element.value + '</li>';\n                    });\n\n                    attributesHtml = '<ul style=\"list-style-position: inside;\">' + attributesHtml + '</ul>';\n\n                    var bodyHtml = str_replace('%attributes%', attributesHtml, $('vocabulary_attributes_pupup').innerHTML);\n\n                    $('vocabulary_attributes_pupup').update(bodyHtml);\n                }\n            });\n        },\n\n        addAttributesToVocabulary: function (needAdd) {\n            var self = this;\n\n            var isRemember = $('vocabulary_attributes_remember_checkbox').checked;\n\n            if (!needAdd && !isRemember) {\n                self.vocabularyAttributesPupup.modal('closeModal');\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_vocabulary/addAttributes'), {\n                method: 'post',\n                parameters: {\n                    attributes: $('vocabulary_attributes_data').value,\n                    need_add: needAdd ? 1 : 0,\n                    is_remember: isRemember ? 1 : 0\n                },\n                onSuccess: function (transport) {\n                    self.vocabularyAttributesPupup.modal('closeModal');\n                }\n            });\n        },\n\n        openVocabularyOptionsPopUp: function (options) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_vocabulary/getOptionsPopup'), {\n                onSuccess: function (transport) {\n\n                    var containerEl = $('vocabulary_options_pupup');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    self.vocabularyOptionsPopup = jQuery('#vocabulary_options_pupup');\n\n                    modal({\n                        title: 'Vocabulary',\n                        type: 'popup',\n                        closed: function() {\n                            self.reloadVariationsGrid();\n                        },\n                        buttons: [{\n                            text: M2ePro.translator.translate('No'),\n                            class: 'action-secondary action-dismiss',\n                            click: function () {\n                                self.addOptionsToVocabulary(false);\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Yes'),\n                            class: 'action-primary action-accept',\n                            click: function () {\n                                self.addOptionsToVocabulary(true);\n                            }\n                        }]\n                    }, self.vocabularyOptionsPopup);\n\n                    self.vocabularyOptionsPopup.modal('openModal');\n\n                    $('vocabulary_options_data').value = Object.toJSON(options);\n\n                    var optionsHtml = '';\n                    $H(options).each(function (element) {\n\n                        var valuesHtml = '';\n                        $H(element.value).each(function (value) {\n                            valuesHtml += value.key + ' > ' + value.value;\n                        });\n\n                        optionsHtml += '<li>' + element.key + ': ' + valuesHtml + '</li>';\n                    });\n\n                    optionsHtml = '<ul style=\"list-style-position: inside\">' + optionsHtml + '</ul>';\n\n                    var bodyHtml = str_replace('%options%', optionsHtml, $('vocabulary_options_pupup').innerHTML);\n\n                    $('vocabulary_options_pupup').update(bodyHtml);\n                }\n            });\n        },\n\n        addOptionsToVocabulary: function (needAdd) {\n            var self = this;\n\n            var isRemember = $('vocabulary_options_remember_checkbox').checked;\n\n            if (!needAdd && !isRemember) {\n                self.vocabularyOptionsPopup.modal('closeModal');\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_vocabulary/addOptions'), {\n                method: 'post',\n                parameters: {\n                    options_data: $('vocabulary_options_data').value,\n                    need_add: needAdd ? 1 : 0,\n                    is_remember: isRemember ? 1 : 0\n                },\n                onSuccess: function (transport) {\n                    self.vocabularyOptionsPopup.modal('closeModal');\n                }\n            });\n        },\n\n        unmapFromGeneralId: function (productIds, afterDoneFunction) {\n            var self = this;\n\n            this.gridHandler.unselectAll();\n\n            self.flagSuccess = false;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product/unmapFromAsin'), {\n                method: 'post',\n                parameters: {\n                    products_ids: productIds\n                },\n                onSuccess: function (transport) {\n\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return;\n                    }\n\n                    self.gridHandler.unselectAllAndReload();\n                    self.flagSuccess = true;\n\n                    var response = transport.responseText.evalJSON();\n\n                    MessageObj.clear();\n                    MessageObj['add' + response.type[0].toUpperCase() + response.type.slice(1) + 'Message'](response.message);\n                },\n                onComplete: function () {\n                    if (self.flagSuccess == true && afterDoneFunction != undefined) {\n                        afterDoneFunction();\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        specificsChange: function (select) {\n            var self = this;\n\n            var idParts = explode('_', select.id);\n            var id = idParts[2];\n            var specifics = [];\n            var selectedAsin = '';\n\n            $(select.id) && self.hideEmptyOption($(select.id));\n\n            self.validateSpecifics(id);\n\n            var asins = JSON.parse(decodeHtmlentities($('asins_' + id).innerHTML));\n\n            $('parent_asin_text_' + id).hide();\n            $('map_link_error_icon_' + id).hide();\n\n            $$('.specifics_' + id).each(function (el) {\n                var specificName = explode('_', el.id);\n                specificName = specificName[1];\n\n                specifics[specificName] = el.value;\n            });\n\n            for (var spec in asins) {\n                var productSpecifics = asins[spec].specifics;\n\n                var found = true;\n                for (var sName in productSpecifics) {\n\n                    if (productSpecifics[sName] != specifics[sName]) {\n                        found = false;\n                        break;\n                    }\n                }\n\n                if (found) {\n                    selectedAsin = spec;\n                    break;\n                }\n            }\n\n            var asinLink = $('asin_link_' + id);\n\n            if (selectedAsin === '') {\n                $('map_link_error_icon_' + id).show();\n                asinLink.innerHTML = $('parent_asin_' + id).innerHTML;\n                asinLink.href = asinLink.href.slice(0, asinLink.href.lastIndexOf(\"/\")) + '/' + $('parent_asin_' + id).innerHTML;\n                $('parent_asin_text_' + id).show();\n                return $('map_link_' + id).innerHTML = '<span style=\"color: #808080\">' + M2ePro.translator.translate('assign') + '</span>';\n            }\n\n            asinLink.innerHTML = selectedAsin;\n            asinLink.href = asinLink.href.slice(0, asinLink.href.lastIndexOf(\"/\")) + '/' + selectedAsin;\n\n            var mapLinkTemplate = $('template_map_link_' + id).innerHTML;\n            mapLinkTemplate = mapLinkTemplate.replace('%general_id%', selectedAsin);\n\n            asins = addslashes(encodeURIComponent(JSON.stringify(asins)));\n\n            mapLinkTemplate = mapLinkTemplate.replace('%options_data%', asins);\n            $('map_link_' + id).innerHTML = mapLinkTemplate;\n        },\n\n        validateSpecifics: function (id, variations, i) {\n            var variation = $H(variations || decodeHtmlentities($('channel_variations_tree_' + id).innerHTML).evalJSON()),\n                attributes = $$('.specifics_name_' + id),\n                options = $$('.specifics_' + id),\n                index = i || 0;\n\n            if (index === 0) {\n                options.each(function (el) {\n                    el.disable();\n                });\n            }\n\n            if (!attributes[index] || !options[index]) {\n                return;\n            }\n\n            var attr = variation.keys()[0];\n\n            var oldValue = decodeHtmlentities(options[index].value);\n            options[index].update();\n            options[index].enable();\n            options[index].appendChild(new Element('option', {style: 'display: none'}));\n\n            $H(variation.get(attr)).each(function (option) {\n                options[index].appendChild(new Element('option', {value: option[0]})).insert(option[0]);\n\n                if (option[0] == oldValue) {\n                    options[index].value = oldValue;\n                }\n            });\n\n            if (oldValue) {\n                index++;\n                this.validateSpecifics(id, variation.get(attr)[oldValue], index);\n            }\n        },\n\n        // ---------------------------------------\n\n        attributesChange: function (select) {\n            var self = this;\n\n            var idParts = explode('_', select.id);\n            var id = idParts[4];\n            var optionsData = {\n                matched_attributes: {},\n                variations: null\n            };\n\n            $(select.id) && self.hideEmptyOption($(select.id));\n\n            $('map_link_error_icon_' + id).hide();\n\n            var existedValues = [];\n            $$('.amazon_product_attribute_' + id).each(function (el) {\n                var attributeNumber = explode('_', el.id);\n                attributeNumber = attributeNumber[3];\n\n                if (el.value != '' && existedValues.indexOf(el.value) === -1) {\n                    var magentoAttribute = $('magento_product_attribute_' + attributeNumber + '_' + id);\n                    optionsData.matched_attributes[magentoAttribute.value] = el.value;\n                    existedValues.push(el.value);\n                } else {\n                    optionsData = '';\n                    throw $break;\n                }\n            });\n\n            if (optionsData === '') {\n                $('map_link_error_icon_' + id).show();\n                return $('map_link_' + id).innerHTML = '<span style=\"color: #808080\">' + M2ePro.translator.translate('assign') + '</span>';\n            }\n\n            optionsData.variations = JSON.parse(decodeHtmlentities($('variations_' + id).innerHTML));\n            optionsData = addslashes(encodeURIComponent(JSON.stringify(optionsData)));\n\n            var mapLinkTemplate = $('template_map_link_' + id).innerHTML;\n            mapLinkTemplate = mapLinkTemplate.replace('%options_data%', optionsData);\n            $('map_link_' + id).innerHTML = mapLinkTemplate;\n        },\n\n        // ---------------------------------------\n\n        showAsinCategories: function (link, rowId, asin, productId) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_search/getCategoriesByAsin'), {\n                method: 'post',\n                parameters: {\n                    asin: asin,\n                    product_id: productId\n                },\n                onSuccess: function (transport) {\n\n                    link.hide();\n\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return;\n                    }\n\n                    var response = transport.responseText.evalJSON();\n\n                    var categoriesRow = $('asin_categories_' + rowId);\n\n                    if (response.data == '') {\n                        $('asin_categories_not_found_' + rowId).show();\n                    } else {\n                        var i = 3;\n                        response.data.each(function (item) {\n                            var str = item.title;\n                            if (item.path) {\n                                str = item.path + ' > ' + str;\n                            }\n\n                            str = str + ' (' + item.id + ')';\n\n                            var row = new Element('p');\n                            row.setStyle({\n                                'color': 'grey'\n                            });\n\n                            categoriesRow.appendChild(row).insert(str);\n\n                            i--;\n                            if (i <= 0) {\n                                throw $break;\n                            }\n                        });\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        renderMatchedAttributesVirtualView: function (id) {\n            if (this.searchData[id].matchingType === this.MATCHING_TYPE_VIRTUAL_AMAZON) {\n                this.renderMatchedAttributesVirtualAmazonView(id);\n            }\n\n            if (this.searchData[id].matchingType === this.MATCHING_TYPE_VIRTUAL_MAGENTO) {\n                this.renderMatchedAttributesVirtualMagentoView(id);\n            }\n        },\n\n        // ---------------------------------------\n\n        renderMatchedAttributesVirtualAmazonView: function (id) {\n            var self = this,\n                form = $('matching_attributes_form_' + id),\n                tHeader = form.down('.matching-attributes-table-header'),\n                searchData = self.searchData[id];\n\n            form.select('.matching-attributes-table-attribute-row').each(function (el) {\n                el.remove();\n            });\n            searchData.selectedDestinationAttributes = [];\n\n            var prematchedAttributes = [];\n            var i = 0;\n            $H(searchData.matchedAttributes).each(function (attribute) {\n\n                var tr = new Element('div', {\n                        style: 'display: table-row',\n                        class: 'matching-attributes-table-attribute-row'\n                    }),\n                    tdLabel = new Element('div', {\n                        class: 'label',\n                        style: 'display: table-cell; padding-bottom: 5px;'\n                    }),\n                    spanMagentoAttr = new Element('span', {\n                        class: 'magento-attribute-name'\n                    }),\n                    inputVirtualAttribute = new Element('input', {\n                        style: 'display: none',\n                        value: attribute.key,\n                        type: 'hidden',\n                        disabled: 'disabled',\n                        class: 'virtual-amazon-attribute-name-value',\n                        name: 'virtual_amazon_attributes_' + i\n                    }),\n                    selectVirtualAttributeOption = new Element('select', {\n                        style: 'margin-top: 5px; display: none; width: 200px; font-size: 10px; background-position: calc(100% - 12px) -38px, 100%, calc(100% - 3.2rem) 0;',\n                        disabled: 'disabled',\n                        class: 'admin__control-select required-entry virtual-amazon-option',\n                        name: 'virtual_amazon_option_' + i\n                    }),\n                    selectVirtualAttributeOptionGroup = new Element('optgroup', {\n                        label: attribute.key\n                    }),\n                    spanVirtualAttributeAndOption = new Element('span', {\n                        style: 'display: none; line-height: 29px;',\n                        class: 'virtual-amazon-attribute-and-option'\n                    }),\n                    spanLeftHelpIcon = new Element('span', {\n                        style: 'display: none',\n                        class: 'left-help-icon'\n                    }),\n                    tdValue = new Element('div', {\n                        class: 'value',\n                        style: 'display: table-cell; padding-bottom: 5px; padding-left: 10px;'\n                    }),\n                    inputMagentoAttr = new Element('input', {\n                        value: attribute.key,\n                        type: 'hidden',\n                        class: 'magento-attribute-name-value',\n                        name: 'magento_attributes_' + i\n                    }),\n                    selectAmazonAttr = new Element('select', {\n                        class: 'admin__control-select required-entry M2ePro-amazon-attribute-unique-value amazon-attribute-name',\n                        name: 'amazon_attributes_' + i,\n                        style: 'width: 250px; font-size: 11px; background-position: calc(100% - 12px) -38px, 100%, calc(100% - 3.2rem) 0;'\n                    }),\n                    spanVirtualAttribute = new Element('span', {\n                        style: 'display: none; line-height: 33px;',\n                        class: 'virtual-amazon-attribute-name'\n                    }),\n                    spanRightHelpIcon = new Element('span', {\n                        style: 'display: none',\n                        class: 'right-help-icon'\n                    });\n\n                var helpIconTpl = $('product_search_help_icon_tpl');\n\n                spanLeftHelpIcon.update(helpIconTpl.innerHTML);\n                spanLeftHelpIcon.down('.tool-tip-message-text').update(M2ePro.translator.translate('help_icon_magento_greater_left'));\n                spanRightHelpIcon.update(helpIconTpl.innerHTML);\n                spanRightHelpIcon.down('.tool-tip-message-text').update(M2ePro.translator.translate('help_icon_magento_greater_right'));\n\n                var attributeStr = attribute.key;\n                if (attributeStr.length > 16) {\n                    attributeStr = attribute.key.substr(0, 15) + '...';\n                    spanVirtualAttributeAndOption.title = attribute.key;\n                    spanVirtualAttribute.title = attribute.key;\n                }\n\n                if (attribute.key.length < 31) {\n                    spanMagentoAttr.update(attribute.key);\n                } else {\n                    spanMagentoAttr.update(attribute.key.substr(0, 28) + '...');\n                    spanMagentoAttr.title = attribute.key;\n                }\n\n                spanVirtualAttribute.update(attributeStr + ' (<span>&ndash;</span>)');\n                spanVirtualAttributeAndOption.update(attributeStr + ' (<a href=\"javascript:void(0);\"></a>)');\n                spanVirtualAttributeAndOption.down('a').title = '';\n\n                spanVirtualAttributeAndOption.down('a').observe('click', function (event) {\n                    spanVirtualAttributeAndOption.hide();\n                    selectVirtualAttributeOption.show();\n                    selectVirtualAttributeOption.value = '';\n                    spanVirtualAttribute.down('span').update('&ndash;');\n                    spanVirtualAttribute.down('span').title = '';\n\n                    $('map_link_error_icon_' + id).show();\n                    $('map_link_' + id).innerHTML = '<span style=\"color: #808080\">' + M2ePro.translator.translate('assign') + '</span>';\n                });\n\n                var option = new Element('option', {\n                    value: ''\n                });\n                selectAmazonAttr.insert({bottom: option});\n\n                searchData.destinationAttributes.each(function (destinationAttribute) {\n                    var option = new Element('option', {\n                        value: destinationAttribute\n                    });\n                    option.update(destinationAttribute);\n                    selectAmazonAttr.insert({bottom: option});\n\n                    if (attribute.value == destinationAttribute) {\n                        selectAmazonAttr.value = destinationAttribute;\n                        prematchedAttributes.push(selectAmazonAttr);\n                    }\n                });\n                selectAmazonAttr.prevValue = '';\n\n                selectAmazonAttr.observe('change', function (event) {\n                    $('map_link_error_icon_' + id).show();\n                    $('map_link_' + id).innerHTML = '<span style=\"color: #808080\">' + M2ePro.translator.translate('assign') + '</span>';\n\n                    var result = true;\n                    if (selectAmazonAttr.value != '' && inputMagentoAttr.value != selectAmazonAttr.value &&\n                        searchData.productAttributes.indexOf(selectAmazonAttr.value) !== -1) {\n                        result = false;\n\n                        if (attribute.value == null) {\n                            self.alert(M2ePro.text.duplicate_amazon_attribute_error);\n                        }\n                        selectAmazonAttr.value = '';\n                    }\n                    attribute.value = null;\n\n                    var prevValueIndex = searchData.selectedDestinationAttributes.indexOf(selectAmazonAttr.prevValue);\n                    if (prevValueIndex > -1) {\n                        searchData.selectedDestinationAttributes.splice(prevValueIndex, 1);\n                    }\n\n                    if (selectAmazonAttr.value != '') {\n                        searchData.selectedDestinationAttributes.push(selectAmazonAttr.value);\n                    }\n                    selectAmazonAttr.prevValue = selectAmazonAttr.value;\n\n                    form.select('select').each(function (el) {\n                        result = Validation.get('M2ePro-amazon-attribute-unique-value').test($F(el), el) ? result : false;\n                    });\n\n                    if (result && searchData.selectedDestinationAttributes.length == searchData.destinationAttributes.length) {\n                        self.showVirtualAmazonAttributes(id);\n                    } else {\n                        self.hideVirtualAmazonAttributes(id);\n                    }\n                });\n\n                selectVirtualAttributeOption.observe('change', function (event) {\n                    var value = selectVirtualAttributeOption.value;\n\n                    spanVirtualAttributeAndOption.show();\n                    selectVirtualAttributeOption.hide();\n\n                    if (attributeStr.length + value.length < 28) {\n                        spanVirtualAttribute.down('span').update(value);\n                        spanVirtualAttribute.down('span').title = '';\n                        spanVirtualAttributeAndOption.down('a').update(value);\n                    } else {\n                        spanVirtualAttribute.down('span').update(value.substr(0, 22 - attributeStr.length) + '...');\n                        spanVirtualAttribute.down('span').title = value;\n                        spanVirtualAttributeAndOption.down('a').update(value.substr(0, 22 - attributeStr.length) + '...');\n                    }\n\n                    spanVirtualAttributeAndOption.down('a').title = M2ePro.text.change_option + ' \"' + value + '\"';\n\n                    var result = true;\n                    form.select('select').each(function (el) {\n                        if (Validation.isVisible(el)) {\n                            el.classNames().each(function (className) {\n                                var v = Validation.get(className),\n                                    validationResult = v.test($F(el), el);\n\n                                result = validationResult ? result : false;\n\n                                if (!validationResult) {\n                                    throw $break;\n                                }\n                            });\n                        }\n                    });\n\n                    if (result) {\n                        $('map_link_error_icon_' + id).hide();\n\n                        var data = {};\n                        data.virtual_matched_attributes = form.serialize(true);\n                        data.variations = searchData.amazonVariation;\n                        data = addslashes(encodeURIComponent(JSON.stringify(data)));\n\n                        var mapLinkTemplate = $('template_map_link_' + id).innerHTML;\n                        mapLinkTemplate = mapLinkTemplate.replace('%options_data%', data);\n                        $('map_link_' + id).innerHTML = mapLinkTemplate;\n                    } else {\n                        $('map_link_error_icon_' + id).show();\n                        $('map_link_' + id).innerHTML = '<span style=\"color: #808080\">' + M2ePro.translator.translate('assign') + '</span>';\n                    }\n                });\n\n                var option = new Element('option', {\n                    value: ''\n                });\n                selectVirtualAttributeOption.insert({bottom: option});\n\n                searchData.magentoVariationSet[attribute.key].each(function (optionValue) {\n                    var option = new Element('option', {\n                        value: optionValue\n                    });\n                    option.update(optionValue);\n                    selectVirtualAttributeOptionGroup.insert({bottom: option});\n                });\n                selectVirtualAttributeOption.insert({bottom: selectVirtualAttributeOptionGroup});\n\n                tdLabel.insert({bottom: spanMagentoAttr});\n                tdLabel.insert({bottom: inputVirtualAttribute});\n                tdLabel.insert({bottom: selectVirtualAttributeOption});\n                tdLabel.insert({bottom: spanVirtualAttributeAndOption});\n                tdLabel.insert({bottom: spanLeftHelpIcon});\n                tdValue.insert({bottom: inputMagentoAttr});\n                tdValue.insert({bottom: selectAmazonAttr});\n                tdValue.insert({bottom: spanVirtualAttribute});\n                tdValue.insert({bottom: spanRightHelpIcon});\n\n                tr.insert({bottom: tdLabel});\n                tr.insert({bottom: tdValue});\n\n                tHeader.insert({after: tr});\n\n                i++;\n            });\n\n            // form.select('.tool-tip-image').each(function (element) {\n            //     element.observe('mouseover', MagentoFieldTipObj.showToolTip);\n            //     element.observe('mouseout', MagentoFieldTipObj.onToolTipIconMouseLeave);\n            // });\n            //\n            // form.select('.tool-tip-message').each(function (element) {\n            //     element.observe('mouseout', MagentoFieldTipObj.onToolTipMouseLeave);\n            //     element.observe('mouseover', MagentoFieldTipObj.onToolTipMouseEnter);\n            // });\n\n            prematchedAttributes.each(function (el) {\n                el.simulate('change');\n            });\n        },\n\n        showVirtualAmazonAttributes: function (id) {\n            var self = this,\n                form = $('matching_attributes_form_' + id);\n\n            var virtualAmazonAttr = form.select('select.amazon-attribute-name[value=\"\"]');\n            virtualAmazonAttr.each(function (el) {\n                el.disable().hide();\n\n                var tr = el.up('.matching-attributes-table-attribute-row');\n                tr.down('.magento-attribute-name-value').disable();\n                tr.down('.virtual-amazon-attribute-name').show();\n                tr.down('.magento-attribute-name').hide();\n                tr.down('.virtual-amazon-attribute-name-value').enable();\n                tr.down('.virtual-amazon-option').enable().show();\n                tr.down('.right-help-icon').show();\n                tr.down('.left-help-icon').show();\n            });\n        },\n\n        hideVirtualAmazonAttributes: function (id) {\n            var self = this,\n                form = $('matching_attributes_form_' + id);\n\n            var virtualAmazonAttr = form.select('select.amazon-attribute-name[value=\"\"]');\n            virtualAmazonAttr.each(function (el) {\n                el.enable().show();\n\n                var tr = el.up('.matching-attributes-table-attribute-row');\n                tr.down('.magento-attribute-name-value').enable();\n                tr.down('.virtual-amazon-attribute-name').hide();\n                tr.down('.magento-attribute-name').show();\n                tr.down('.virtual-amazon-attribute-name-value').disable();\n                tr.down('.virtual-amazon-option').disable().hide();\n                tr.down('.virtual-amazon-attribute-and-option').hide();\n                tr.down('.right-help-icon').hide();\n                tr.down('.left-help-icon').hide();\n            });\n        },\n\n        // ---------------------------------------\n\n        renderMatchedAttributesVirtualMagentoView: function (id) {\n            var self = this,\n                form = $('matching_attributes_form_' + id),\n                tHeader = form.down('.matching-attributes-table-header'),\n                searchData = self.searchData[id];\n\n            form.select('.matching-attributes-table-attribute-row').each(function (el) {\n                el.remove();\n            });\n\n            var prematchedAttributes = [];\n            var i = 0;\n            $H(searchData.matchedAttributes).each(function (attribute) {\n\n                var tr = new Element('div', {\n                        style: 'display: table-row',\n                        class: 'matching-attributes-table-attribute-row'\n                    }),\n                    tdLabel = new Element('div', {\n                        class: 'label',\n                        style: 'display: table-cell; padding-bottom: 5px;'\n                    }),\n                    spanMagentoAttr = new Element('span'),\n                    tdValue = new Element('div', {\n                        class: 'value',\n                        style: 'display: table-cell; padding-bottom: 5px; padding-left: 10px;'\n                    }),\n                    inputMagentoAttr = new Element('input', {\n                        value: attribute.key,\n                        type: 'hidden',\n                        name: 'magento_attributes_' + i\n                    }),\n                    selectAmazonAttr = new Element('select', {\n                        class: 'admin__control-select required-entry M2ePro-amazon-attribute-unique-value amazon-attribute-name',\n                        name: 'amazon_attributes_' + i,\n                        style: 'width: 250px; font-size: 11px; background-position: calc(100% - 12px) -38px, 100%, calc(100% - 3.2rem) 0;'\n                    });\n\n                if (attribute.key.length < 31) {\n                    spanMagentoAttr.update(attribute.key);\n                } else {\n                    spanMagentoAttr.update(attribute.key.substr(0, 28) + '...');\n                    spanMagentoAttr.title = attribute.key;\n                }\n\n                var option = new Element('option', {\n                    value: ''\n                });\n                selectAmazonAttr.insert({bottom: option});\n\n                searchData.destinationAttributes.each(function (destinationAttribute) {\n                    var option = new Element('option', {\n                        value: destinationAttribute\n                    });\n                    option.update(destinationAttribute);\n                    selectAmazonAttr.insert({bottom: option});\n\n                    if (attribute.value == destinationAttribute) {\n                        selectAmazonAttr.value = destinationAttribute;\n                        prematchedAttributes.push(selectAmazonAttr);\n                    }\n                });\n                selectAmazonAttr.prevValue = '';\n\n                selectAmazonAttr.observe('change', function (event) {\n                    $('map_link_error_icon_' + id).show();\n                    $('map_link_' + id).innerHTML = '<span style=\"color: #808080\">' + M2ePro.translator.translate('assign') + '</span>';\n\n                    var result = true;\n                    if (selectAmazonAttr.value != '' && inputMagentoAttr.value != selectAmazonAttr.value &&\n                        searchData.destinationAttributes.indexOf(inputMagentoAttr.value) !== -1) {\n                        result = false;\n\n                        if (attribute.value == null) {\n                            self.alert(M2ePro.text.duplicate_magento_attribute_error);\n                        }\n                        selectAmazonAttr.value = '';\n                    }\n                    attribute.value = null;\n\n                    form.select('select.amazon-attribute-name').each(function (el) {\n                        el.classNames().each(function (className) {\n                            var v = Validation.get(className),\n                                validationResult = v.test($F(el), el);\n\n                            result = validationResult ? result : false;\n\n                            if (!validationResult) {\n                                throw $break;\n                            }\n                        });\n                    });\n\n                    if (result) {\n                        self.showVirtualMagentoAttributes(id, i);\n                    } else {\n                        self.hideVirtualMagentoAttributes(id);\n                    }\n                });\n\n                tdLabel.insert({bottom: spanMagentoAttr});\n                tdValue.insert({bottom: inputMagentoAttr});\n                tdValue.insert({bottom: selectAmazonAttr});\n\n                tr.insert({bottom: tdLabel});\n                tr.insert({bottom: tdValue});\n\n                tHeader.insert({after: tr});\n\n                i++;\n            });\n\n            prematchedAttributes.each(function (el) {\n                el.simulate('change');\n            });\n        },\n\n        showVirtualMagentoAttributes: function (id, lastAttributeIndex) {\n            var self = this,\n                form = $('matching_attributes_form_' + id),\n                tBody = form.down('.matching-attributes-table'),\n                searchData = self.searchData[id];\n\n            form.select('div.virtual-attribute').each(function (el) {\n                el.remove();\n            });\n\n            var selectedValues = [];\n            form.select('select.amazon-attribute-name').each(function (el) {\n                selectedValues.push(el.value);\n            });\n\n            var i = lastAttributeIndex;\n            searchData.destinationAttributes.each(function (attribute) {\n                if (selectedValues.indexOf(attribute) !== -1) {\n                    return true;\n                }\n                var tr = new Element('div', {\n                        style: 'display: table-row',\n                        class: 'matching-attributes-table-attribute-row virtual-attribute'\n                    }),\n                    tdLabel = new Element('div', {\n                        class: 'label',\n                        style: 'display: table-cell; padding-bottom: 5px;'\n                    }),\n                    spanMagentoAttr = new Element('div', {\n                        style: 'float: left; padding-top: 9px;'\n                    }),\n                    spanLeftHelpIcon = new Element('span', {\n                        class: 'left-help-icon'\n                    }),\n                    tdValue = new Element('div', {\n                        class: 'value',\n                        style: 'display: table-cell; padding-bottom: 5px; padding-left: 10px;'\n                    }),\n                    inputMagentoAttr = new Element('input', {\n                        value: attribute,\n                        type: 'hidden',\n                        name: 'virtual_magento_attributes_' + i\n                    }),\n                    spanVirtualAttribute = new Element('div', {\n                        style: 'display: none; float: left; padding-top: 9px'\n                    }),\n                    selectVirtualAttrOption = new Element('select', {\n                        style: 'width: 200px; font-size: 11px; background-position: calc(100% - 12px) -38px, 100%, calc(100% - 3.2rem) 0; float: left; margin-top: 3px',\n                        class: 'admin__control-select required-entry virtual-magento-option',\n                        name: 'virtual_magento_option_' + i\n                    }),\n                    virtualAttrOptionGroup = new Element('optgroup', {\n                        label: attribute\n                    }),\n                    spanRightHelpIcon = new Element('span', {\n                        class: 'right-help-icon'\n                    });\n\n                var helpIconTpl = $('product_search_help_icon_tpl');\n\n                spanLeftHelpIcon.update(helpIconTpl.innerHTML);\n                spanLeftHelpIcon.down('.tool-tip-message-text').update(M2ePro.translator.translate('help_icon_amazon_greater_left'));\n                spanRightHelpIcon.update(helpIconTpl.innerHTML);\n                spanRightHelpIcon.down('.tool-tip-message-text').update(M2ePro.translator.translate('help_icon_amazon_greater_right'));\n\n                var attributeStr = attribute;\n                if (attributeStr.length > 13) {\n                    attributeStr = attribute.substr(0, 12) + '...';\n                    spanMagentoAttr.title = attribute;\n                    spanVirtualAttribute.title = attribute;\n                }\n\n                spanMagentoAttr.update(attributeStr + ' (<span>&ndash;</span>)');\n                spanVirtualAttribute.update(attributeStr + ' (<a href=\"javascript:void(0);\"></a>)');\n                spanVirtualAttribute.down('a').title = '';\n\n                spanVirtualAttribute.down('a').observe('click', function (event) {\n                    spanVirtualAttribute.hide();\n                    selectVirtualAttrOption.show();\n                    selectVirtualAttrOption.value = '';\n                    spanMagentoAttr.down('span').update('&ndash;');\n                    spanMagentoAttr.down('span').title = '';\n\n                    $('map_link_error_icon_' + id).show();\n                    $('map_link_' + id).innerHTML = '<span style=\"color: #808080\">' + M2ePro.translator.translate('assign') + '</span>';\n                });\n\n                var option = new Element('option', {\n                    value: ''\n                });\n                selectVirtualAttrOption.insert({bottom: option});\n\n                searchData.amazonVariation.set[attribute].each(function (optionValue) {\n                    var option = new Element('option', {\n                        value: optionValue\n                    });\n                    option.update(optionValue);\n                    virtualAttrOptionGroup.insert({bottom: option});\n                });\n                selectVirtualAttrOption.insert({bottom: virtualAttrOptionGroup});\n\n                selectVirtualAttrOption.observe('change', function (event) {\n                    var value = selectVirtualAttrOption.value;\n\n                    spanVirtualAttribute.show();\n                    selectVirtualAttrOption.hide();\n\n                    if (attributeStr.length + value.length < 28) {\n                        spanMagentoAttr.down('span').update(value);\n                        spanMagentoAttr.down('span').title = '';\n                        spanVirtualAttribute.down('a').update(value);\n                    } else {\n                        spanMagentoAttr.down('span').update(value.substr(0, 27 - attributeStr.length) + '...');\n                        spanMagentoAttr.down('span').title = value;\n                        spanVirtualAttribute.down('a').update(value.substr(0, 27 - attributeStr.length) + '...');\n                    }\n\n                    spanVirtualAttribute.down('a').title = M2ePro.text.change_option + ' \"' + value + '\"';\n\n                    var result = true;\n                    form.select('select').each(function (el) {\n                        el.classNames().each(function (className) {\n                            var v = Validation.get(className),\n                                validationResult = v.test($F(el), el);\n\n                            result = validationResult ? result : false;\n\n                            if (!validationResult) {\n                                throw $break;\n                            }\n                        });\n                    });\n\n                    if (result) {\n                        $('map_link_error_icon_' + id).hide();\n\n                        var data = {};\n                        data.virtual_matched_attributes = form.serialize(true);\n                        data.variations = searchData.amazonVariation;\n                        data = addslashes(encodeURIComponent(JSON.stringify(data)));\n\n                        var mapLinkTemplate = $('template_map_link_' + id).innerHTML;\n                        mapLinkTemplate = mapLinkTemplate.replace('%options_data%', data);\n                        $('map_link_' + id).innerHTML = mapLinkTemplate;\n                    } else {\n                        $('map_link_error_icon_' + id).show();\n                        $('map_link_' + id).innerHTML = '<span style=\"color: #808080\">' + M2ePro.translator.translate('assign') + '</span>';\n                    }\n                });\n\n                tdLabel.insert({bottom: spanMagentoAttr});\n                tdLabel.insert({bottom: spanLeftHelpIcon});\n                tdValue.insert({bottom: inputMagentoAttr});\n                tdValue.insert({bottom: spanVirtualAttribute});\n                tdValue.insert({bottom: selectVirtualAttrOption});\n                tdValue.insert({bottom: spanRightHelpIcon});\n\n                tr.insert({bottom: tdLabel});\n                tr.insert({bottom: tdValue});\n\n                tBody.insert({bottom: tr});\n\n                i++;\n            });\n\n            // tBody.select('.tool-tip-image').each(function (element) {\n            //     element.observe('mouseover', MagentoFieldTipObj.showToolTip);\n            //     element.observe('mouseout', MagentoFieldTipObj.onToolTipIconMouseLeave);\n            // });\n            //\n            // tBody.select('.tool-tip-message').each(function (element) {\n            //     element.observe('mouseout', MagentoFieldTipObj.onToolTipMouseLeave);\n            //     element.observe('mouseover', MagentoFieldTipObj.onToolTipMouseEnter);\n            // });\n        },\n\n        hideVirtualMagentoAttributes: function (id) {\n            var self = this,\n                form = $('matching_attributes_form_' + id);\n\n            form.select('div.virtual-attribute').each(function (el) {\n                el.remove();\n            });\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/Product/Variation.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Common'\n], function (modal, MessageObj) {\n\n    window.AmazonListingProductVariation = Class.create();\n    AmazonListingProductVariation.prototype = Object.extend(new Common(), {\n\n        // ---------------------------------------\n\n        initialize: function (gridHandler) {\n            this.gridHandler = gridHandler;\n        },\n\n        setListingProductId: function (listingProductId) {\n            this.listingProductId = listingProductId;\n            return this;\n        },\n\n        setNeededVariationData: function (variationAttributes, variationsTree) {\n            this.variationAttributes = variationAttributes;\n            this.variationsTree = variationsTree;\n\n            return this;\n        },\n\n        //########################################\n\n        showSwitchToIndividualModePopUp: function (title) {\n            var self = this;\n\n            if (self.switchToIndividualModePopUp) {\n                self.switchToIndividualModePopUp.modal('openModal');\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation/getSwitchToIndividualModePopUp'), {\n                method: 'post',\n                onSuccess: function (transport) {\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    self.switchToIndividualModePopUp = jQuery('#switch_to_individual_popup');\n\n                    modal({\n                        title: M2ePro.translator.translate('switch_to_individual_mode_popup_title'),\n                        type: 'popup',\n                        modalClass: 'width-50',\n                        buttons: [{\n                            text: M2ePro.translator.translate('No'),\n                            class: 'action-secondary action-dismiss',\n                            click: function () {\n                                self.switchToIndividualModePopUp.modal('closeModal');\n                            }\n                        }, {\n                            text: M2ePro.translator.translate('Yes'),\n                            class: 'action-primary action-accept',\n                            click: function () {\n                                if ($('switch_to_individual_remember_checkbox').checked) {\n                                    new Ajax.Request(M2ePro.url.get('saveListingAdditionalData'), {\n                                        method: 'post',\n                                        parameters: {\n                                            param_name: 'hide_switch_to_individual_confirm',\n                                            param_value: 1\n                                        },\n                                        onSuccess: function (transport) {\n                                            self.gridHandler.unselectAllAndReload();\n                                        }\n                                    });\n                                }\n\n                                self.switchToIndividualModePopUp.modal('closeModal');\n                                self.showManagePopup(title);\n                            }\n                        }]\n                    }, self.switchToIndividualModePopUp);\n\n                    self.switchToIndividualModePopUp.modal('openModal');\n                }\n            });\n        },\n\n        showSwitchToParentModePopUp: function () {\n            var self = this;\n\n            if (self.switchToParentModePopUp) {\n                self.switchToParentModePopUp.modal('openModal');\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation/getSwitchToParentModePopUp'), {\n                method: 'post',\n                onSuccess: function (transport) {\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    self.switchToParentModePopUp = jQuery('#switch_to_parent_popup');\n\n                    modal({\n                        title: M2ePro.translator.translate('switch_to_parent_mode_popup_title'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('No'),\n                            class: 'action-secondary action-dismiss',\n                            click: function () {\n                                self.switchToParentModePopUp.modal('closeModal');\n                            }\n                        }, {\n                            text: M2ePro.translator.translate('Yes'),\n                            class: 'action-primary action-accept',\n                            click: function () {\n                                if ($('switch_to_parent_remember_checkbox').checked) {\n                                    new Ajax.Request(M2ePro.url.get('saveListingAdditionalData'), {\n                                        method: 'post',\n                                        parameters: {\n                                            param_name: 'hide_switch_to_parent_confirm',\n                                            param_value: 1\n                                        }\n                                    });\n                                }\n\n                                self.switchToParentModePopUp.modal('closeModal');\n                                self.resetListingProductVariation();\n                            }\n                        }]\n                    }, self.switchToParentModePopUp);\n\n                    self.switchToParentModePopUp.modal('openModal');\n                }\n            });\n        },\n\n        //########################################\n\n        showEditPopup: function (popupTitle) {\n            var self = this;\n\n            MessageObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_individual/getEditPopup'), {\n                method: 'get',\n                parameters: {\n                    listing_product_id: this.listingProductId\n                },\n                onSuccess: (function (transport) {\n\n                    try {\n                        var response = transport.responseText.evalJSON();\n\n                        if (response.type == 'error') {\n                            MessageObj['add' + response.type[0].toUpperCase() + response.type.slice(1) + 'Message'](response.message);\n                            return;\n                        }\n\n                        var popupContent = $('variation_individual_edit_popup');\n\n                        if (popupContent) {\n                            popupContent.remove();\n                        }\n\n                        $('html-body').insert({bottom: response.html});\n\n                        var variationForm = jQuery('#variation_edit_form').form();\n\n                        self.editPopup = jQuery('#variation_individual_edit_popup');\n\n                        modal({\n                            title: popupTitle,\n                            type: 'slide',\n                            buttons: [{\n                                text: M2ePro.translator.translate('Cancel'),\n                                click: function () {\n                                    self.editPopup.modal('closeModal');\n                                }\n                            },{\n                                text: M2ePro.translator.translate('Confirm'),\n                                class: 'action primary',\n                                click: function () {\n                                    if (!variationForm.valid()) {\n                                        return;\n                                    }\n\n                                    var variationData = {};\n                                    Form.getElements('variation_edit_form').each(function (selectElement) {\n                                        var attribute = selectElement.readAttribute('name');\n                                        selectElement.value && (variationData[attribute] = selectElement.value);\n                                    });\n\n                                    self.editAction(variationData);\n\n                                    self.editPopup.modal('closeModal');\n                                }\n                            }]\n                        }, self.editPopup);\n\n                        self.editPopup.modal('openModal');\n\n                    } catch (e) {\n                        this.editPopup.modal('closeModal');\n                        MessageObj.addErrorMessage('Internal Error.');\n                    }\n                }).bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        editPopupInit: function (currentVariation) {\n            var container = $('variation_edit_container');\n\n            var filters = {};\n\n            this.variationAttributes.each((function (attribute, i) {\n\n                var tr = container.appendChild(new Element('tr'));\n                tr.appendChild(new Element('td', {class: 'label', style: 'width: 25%; vertical-align: inherit;'}))\n                    .insert(attribute + ': <span class=\"required\">*</span>');\n\n                var select = tr\n                    .appendChild(new Element('td', {class: 'value'}))\n                    .appendChild(new Element('select', {\n                        name: 'variation_data[' + attribute + ']',\n                        class: 'required-entry admin__control-select',\n                        index: i\n                    }));\n\n                select\n                    .appendChild(new Element('option', {value: currentVariation[attribute]}))\n                    .insert(currentVariation[attribute]);\n\n                this.eachAttributeHandler(\n                    select,\n                    i,\n                    function () {\n                        return container.select('select[index]').filter(function (select) {\n                            return select.readAttribute('index') > i;\n                        });\n                    },\n                    filters\n                );\n\n            }).bind(this));\n\n            container.select('select[index]').each(function (select) {\n                select.simulate('change');\n            });\n        },\n\n        // ---------------------------------------\n\n        resetListingProductVariation: function () {\n            MessageObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product/variationReset'), {\n                method: 'get',\n                parameters: {\n                    listing_product_id: this.listingProductId\n                },\n                onSuccess: (function (transport) {\n\n                    try {\n                        var response = transport.responseText.evalJSON();\n\n                        MessageObj['add' + response.type[0].toUpperCase() + response.type.slice(1) + 'Message'](response.message);\n\n                        this.gridHandler.unselectAllAndReload();\n                    } catch (e) {\n                        this.editPopup.modal('closeModal');\n                        MessageObj.addErrorMessage('Internal Error.');\n                    }\n                }).bind(this)\n            });\n        },\n\n        //########################################\n\n        showManagePopup: function (popupTitle) {\n            var self = this;\n\n            MessageObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_individual/getManagePopup'), {\n                method: 'get',\n                parameters: {\n                    listing_product_id: this.listingProductId\n                },\n                onSuccess: (function (transport) {\n\n                    try {\n                        var response = transport.responseText.evalJSON();\n\n                        if (response.type == 'error') {\n                            MessageObj['add' + response.type[0].toUpperCase() + response.type.slice(1) + 'Message'](response.message);\n                            return;\n                        }\n\n                        var popupContent = $('variation_individual_manage_popup');\n\n                        if (popupContent) {\n                            popupContent.remove();\n                        }\n\n                        $('html-body').insert({bottom: response.html});\n\n                        var variationForm = jQuery('#variation_manage_form');\n                        self.initFormValidation(variationForm);\n\n                        self.managePopup = jQuery('#variation_individual_manage_popup');\n\n                        modal({\n                            title: popupTitle,\n                            type: 'slide',\n                            buttons: [{\n                                text: M2ePro.translator.translate('Cancel'),\n                                click: function () {\n                                    self.managePopup.modal('closeModal');\n                                }\n                            },{\n                                text: M2ePro.translator.translate('Confirm'),\n                                class: 'action primary',\n                                click: function () {\n                                    if (!variationForm.valid()) {\n                                        return;\n                                    }\n\n                                    var variationData = {};\n                                    Form.getElements('variation_manage_form').each(function (selectElement) {\n                                        var attribute = selectElement.readAttribute('name');\n                                        selectElement.value && (variationData[attribute] = selectElement.value);\n                                    });\n\n                                    self.manageAction(variationData);\n\n                                    self.managePopup.modal('closeModal');\n                                }\n                            }]\n                        }, self.managePopup);\n\n                        self.managePopup.modal('openModal');\n\n                        $('add_more_variation_button').observe('click', (function () {\n                            if (!variationForm.valid()) {\n                                return;\n                            }\n                            self.manageAddRow();\n                        }));\n\n                    } catch (e) {\n                        self.managePopup.modal('closeModal');\n                        MessageObj.addErrorMessage('Internal Error.');\n                    }\n                })\n            });\n        },\n\n        // ---------------------------------------\n\n        managePopupInit: function()\n        {\n            $('add_more_variation_button').simulate('click');\n        },\n\n        // ---------------------------------------\n\n        manageAddRow: function () {\n            var container = $('variation_manage_tbody');\n\n            var lastTr = container.select('tr').last();\n            var index = lastTr ? parseInt(lastTr.readAttribute('index')) + 1 : 1;\n\n            var tr = container.appendChild(new Element('tr', {index: index}));\n\n            var filters = {};\n\n            this.variationAttributes.each((function (attribute, i) {\n\n                var select = tr\n                    .appendChild(new Element('td', {style: 'vertical-align: top; padding: 5px 4px'}))\n                    .appendChild(new Element('select', {\n                        name: 'variation_data[' + index + '][' + attribute + ']',\n                        class: 'required-entry admin__control-select',\n                        style: 'width: 100%',\n                        index: i,\n                        disabled: true\n                    }));\n\n                this.eachAttributeHandler(\n                    select,\n                    i,\n                    function () {\n                        return tr.select('select[index]').filter(function (select) {\n                            return select.readAttribute('index') > i;\n                        });\n                    },\n                    filters\n                );\n\n            }).bind(this));\n\n            tr.appendChild(new Element('td', {style: 'vertical-align: top; padding: 10px 4px'}))\n                .appendChild(new Element('a', {class: 'remove-variation', href: 'javascript:void(0)'})).insert('<span></span>')\n                .observe('click', function () {\n                    if (container.select('tr').length > 1) {\n                        tr.remove();\n                    }\n\n                    if (container.select('tr').length == 1) {\n                        container.select('a.remove-variation').each(function (btn) {\n                            btn.hide();\n                        });\n                    }\n                });\n\n            container.select('a.remove-variation').each(function (btn) {\n                btn.hide();\n            });\n\n            if (container.select('tr').length > 1) {\n                container.select('a.remove-variation').each(function (btn) {\n                    btn.show();\n                });\n            }\n        },\n\n        //########################################\n\n        eachAttributeHandler: function (select, i, getNextSelects, filters) {\n            var attribute = this.variationAttributes[i];\n\n            if (!i) {\n                select.disabled = false;\n                this.renderAttributeValues(select, attribute);\n            }\n\n            select.observe('change', (function () {\n                filters[attribute] = select.value;\n\n                var nextSelects = getNextSelects.call(this);\n\n                if (nextSelects.length < 1) {\n                    return;\n                }\n\n                nextSelects.each(function (select) {\n                    select.disabled = true;\n                });\n\n                var nextSelect = nextSelects[0];\n\n                nextSelect.disabled = false;\n\n                this.renderAttributeValues(\n                    nextSelect, this.variationAttributes[i + 1], filters\n                );\n            }).bind(this));\n        },\n\n        // ---------------------------------------\n\n        renderAttributeValues: function (container, attribute, filters) {\n            filters = filters || {};\n\n            var values = this.getAttributeValues(attribute, this.variationsTree, filters);\n\n            var oldValue = container.value;\n            container.update();\n\n            container.appendChild(new Element('option', {style: 'display: none'}));\n\n            if (typeof values != 'undefined') {\n\n                values.each(function (value) {\n                    container.appendChild(new Element('option', {value: value})).insert(value);\n\n                    if (value == oldValue) {\n                        container.value = oldValue;\n                        container.simulate('change');\n                    }\n                });\n            }\n        },\n\n        // ---------------------------------------\n\n        getAttributeValues: function (attribute, attributesTree, filters) {\n            for (var treeAttribute in attributesTree) {\n\n                if (attribute == treeAttribute) {\n\n                    var values = [];\n                    for (var value in attributesTree[treeAttribute]) {\n                        value && values.push(value);\n                    }\n\n                    return values;\n                }\n\n                for (var filterAttribute in filters) {\n\n                    if (filterAttribute == treeAttribute) {\n                        return this.getAttributeValues(\n                            attribute,\n                            attributesTree[treeAttribute][filters[filterAttribute]],\n                            filters\n                        )\n                    }\n                }\n            }\n        },\n\n        //########################################\n\n        editAction: function (variationData) {\n            MessageObj.clear();\n\n            var parameters = Object.extend(\n                {\n                    listing_product_id: this.listingProductId\n                },\n                variationData\n            );\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_individual/edit'), {\n                method: 'post',\n                parameters: parameters,\n                onSuccess: (function (transport) {\n\n                    try {\n                        this.editPopup.modal('closeModal');\n\n                        var response = transport.responseText.evalJSON();\n\n                        MessageObj['add' + response.type[0].toUpperCase() + response.type.slice(1) + 'Message'](response.message);\n\n                        if (response.type == 'error') {\n                            this.scrollPageToTop();\n                        } else {\n                            this.gridHandler.unselectAllAndReload();\n                        }\n\n                    } catch (e) {\n                        console.log(e.stack);\n                        this.scrollPageToTop();\n                        this.editPopup.modal('closeModal');\n                        MessageObj.addErrorMessage('Internal Error.');\n                    }\n                }).bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        manageAction: function (variationData) {\n            MessageObj.clear();\n\n            var parameters = Object.extend(\n                {\n                    listing_product_id: this.listingProductId\n                },\n                variationData\n            );\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_individual/manage'), {\n                method: 'post',\n                parameters: parameters,\n                onSuccess: (function (transport) {\n\n                    try {\n                        this.managePopup.modal('closeModal');\n\n                        var response = transport.responseText.evalJSON();\n\n                        MessageObj['add' + response.type[0].toUpperCase() + response.type.slice(1) + 'Message'](response.message);\n\n                        if (response.type == 'error') {\n                            this.scrollPageToTop();\n                        } else {\n                            this.gridHandler.unselectAllAndReload();\n                        }\n\n                    } catch (e) {\n                        this.scrollPageToTop();\n                        this.managePopup.modal('closeModal');\n                        MessageObj.addErrorMessage('Internal Error.');\n                    }\n                }).bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        manageGenerateAction: function (unique) {\n            var self = this,\n                attributesIndexes = {};\n\n            $('variation_manage').select('th.data-grid-th').each(function (el, i) {\n                attributesIndexes[el.readAttribute('attribute').toLowerCase()] = i;\n            });\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_individual/generate'), {\n                method: 'post',\n                parameters: {\n                    listing_product_id: self.listingProductId,\n                    unique: +(unique)\n                },\n                onSuccess: function (transport) {\n\n                    try {\n                        var response = transport.responseText.evalJSON();\n\n                        if (response.type == 'error') {\n                            MessageObj.addErrorMessage(response.message);\n                            self.managePopup.modal('closeModal');\n                            return self.scrollPageToTop();\n                        }\n\n                        if (response.text.length < 1 && Boolean(unique)) {\n                            self.alert(M2ePro.translator.translate('no_variations_left'));\n                            return;\n                        }\n\n                        $('variation_manage_tbody').select('tr').invoke('remove');\n\n                        response.text.each(function (attributes) {\n\n                            self.manageAddRow();\n\n                            var tr = $('variation_manage_tbody').select('tr').last();\n\n                            var temp = [];\n\n                            attributes.each(function (attribute) {\n                                var index = attributesIndexes[attribute.attribute.toLowerCase()];\n                                var select = tr.down('select[index=' + index + ']');\n                                temp[index] = {select: select, value: attribute.option};\n                            });\n\n                            temp.each(function (obj) {\n                                obj.select.value = obj.value;\n                                obj.select.simulate('change');\n                            });\n                        });\n                    } catch (e) {\n                        self.scrollPageToTop();\n                        self.managePopup.modal('closeModal');\n                        MessageObj.addErrorMessage('Internal Error.');\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/Product/Repricing.js":"define([\n    'M2ePro/Plugin/Messages',\n    'Magento_Ui/js/modal/alert',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Action'\n], function (MessageObj, alert) {\n\n    window.AmazonListingProductRepricing = Class.create(Action, {\n\n        // ---------------------------------------\n\n        initialize: function ($super, gridHandler) {\n            $super(gridHandler);\n        },\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function (options) {\n            this.options = Object.extend(this.options, options);\n            return this;\n        },\n\n        // ---------------------------------------\n\n        openManagement: function () {\n            window.open(M2ePro.url.get('amazon_listing_product_repricing/openManagement'));\n        },\n\n        // ---------------------------------------\n\n        addToRepricing: function (productsIds) {\n            var self = this;\n            MessageObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_repricing/validateProductsBeforeAdd'), {\n                method: 'post',\n                parameters: {\n                    products_ids: productsIds\n                },\n                onSuccess: function(transport) {\n                    if (!transport.responseText.isJSON()) {\n                        alert({\n                            content: transport.responseText\n                        });\n                        return;\n                    }\n\n                    var response = transport.responseText.evalJSON();\n\n                    if(response.products_ids.length === 0) {\n                        MessageObj['add' + response.type[0].toUpperCase() + response.type.slice(1) + 'Message'](response.message);\n                        return;\n                    }\n\n                    if (response.products_ids.length === productsIds.split(',').length) {\n                        self.addToRepricingConfirm(productsIds);\n                        return;\n                    }\n\n                    var popupEl = $('regular_price_popup');\n\n                    if (popupEl) {\n                        popupEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: response});\n\n                    self.regularPricePopup = jQuery('#regular_price_popup');\n\n                    modal({\n                        title: title,\n                        type: 'slide',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Cancel'),\n                            click: function () {\n                                self.regularPricePopup.modal('closeModal');\n                            }\n                        }, {\n                            text: M2ePro.translator.translate('Confirm'),\n                            class: 'action primary',\n                            click: function () {\n                                self.addToRepricingConfirm(productsIds);\n                            }\n                        }]\n                    }, self.regularPricePopup);\n\n                    self.regularPricePopup.modal('openModal');\n                }\n            });\n        },\n\n        addToRepricingConfirm: function (productsIds) {\n            return this.postForm(M2ePro.url.get('amazon_listing_product_repricing/openAddProducts'), {'products_ids': productsIds});\n        },\n\n        showDetails: function (productsIds) {\n            return this.postForm(M2ePro.url.get('amazon_listing_product_repricing/openShowDetails'), {'products_ids': productsIds});\n        },\n\n        editRepricing: function (productsIds) {\n            return this.postForm(M2ePro.url.get('amazon_listing_product_repricing/openEditProducts'), {'products_ids': productsIds});\n        },\n\n        removeFromRepricing: function (productsIds) {\n            return this.postForm(M2ePro.url.get('amazon_listing_product_repricing/openRemoveProducts'), {'products_ids': productsIds});\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Listing/Product/Template/Shipping.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Action'\n], function (modal, MessageObj) {\n\n    window.AmazonListingProductTemplateShipping = Class.create(Action, {\n\n        // ---------------------------------------\n\n        initialize: function ($super, gridHandler) {\n            var self = this;\n            $super(gridHandler);\n        },\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function (options) {\n            this.options = Object.extend(this.options, options);\n            return this;\n        },\n\n        // ---------------------------------------\n\n        openPopUp: function (productsIds, shippingMode) {\n            var self = this;\n            self.gridHandler.unselectAll();\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_shipping/viewPopup'), {\n                method: 'post',\n                parameters: {\n                    products_ids:  productsIds,\n                    shipping_mode: shippingMode\n                },\n                onSuccess: function (transport) {\n\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return;\n                    }\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (!response.html) {\n                        if (response.messages.length > 0) {\n                            MessageObj.clear();\n                            response.messages.each(function (msg) {\n                                MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                            });\n                        }\n\n                        return;\n                    }\n\n                    var popupElId = (shippingMode == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account::SHIPPING_MODE_OVERRIDE'))\n                        ? '#template_shippingOverride_pop_up_content'\n                        : '#template_shippingTemplate_pop_up_content';\n\n                    var popupEl = jQuery(popupElId);\n\n                    if (popupEl.length) {\n                        popupEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: response.html});\n\n                    self.templateShippingPopup = jQuery(popupElId);\n\n                    var title             = M2ePro.translator.translate('templateShippingTemplatePopupTitle');\n                    var addNewPolicyTitle = M2ePro.translator.translate('Add New Shipping Template Policy');\n\n                    if (shippingMode == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account::SHIPPING_MODE_OVERRIDE')) {\n\n                        title             = M2ePro.translator.translate('templateShippingOverridePopupTitle');\n                        addNewPolicyTitle = M2ePro.translator.translate('Add New Shipping Override Policy');\n                    }\n\n                    modal({\n                        title: title,\n                        type: 'slide',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Cancel'),\n                            click: function () {\n                                self.templateShippingPopup.modal('closeModal');\n                            }\n                        }, {\n                            text: addNewPolicyTitle,\n                            class: 'action primary ',\n                            click: function () {\n                                self.createInNewTab(self.newTemplateUrl, shippingMode);\n                            }\n                        }]\n                    }, self.templateShippingPopup);\n\n                    self.templateShippingPopup.productsIds = response.products_ids;\n\n                    self.templateShippingPopup.modal('openModal');\n\n                    $('template_shipping_grid').observe('click', function (event) {\n                        if (!event.target.hasClassName('assign-shipping-template')) {\n                            return;\n                        }\n\n                        self.assign(event.target.getAttribute('templateShippingId'), shippingMode);\n                    });\n\n                    $('template_shipping_grid').on('click', '.new-shipping-template', function() {\n                        self.createInNewTab(self.newTemplateUrl, shippingMode);\n                    });\n\n                    self.loadGrid(shippingMode);\n                }\n            });\n        },\n\n        loadGrid: function (shippingMode) {\n\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_shipping/viewGrid'), {\n                method: 'post',\n                parameters: {\n                    products_ids: self.templateShippingPopup.productsIds,\n                    shipping_mode: shippingMode\n                },\n                onSuccess: function (transport) {\n                    $('template_shipping_grid').update(transport.responseText);\n                    $('template_shipping_grid').show();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        assign: function (templateId, shippingMode) {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_shipping/assign'), {\n                            method: 'post',\n                            parameters: {\n                                products_ids:  self.templateShippingPopup.productsIds,\n                                shipping_mode: shippingMode,\n                                template_id:   templateId\n                            },\n                            onSuccess: function (transport) {\n\n                                if (!transport.responseText.isJSON()) {\n                                    self.alert(transport.responseText);\n                                    return;\n                                }\n\n                                self.gridHandler.unselectAllAndReload();\n\n                                var response = transport.responseText.evalJSON();\n\n                                MessageObj.clear();\n                                response.messages.each(function (msg) {\n                                    MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                                });\n                            }\n                        });\n\n                        self.templateShippingPopup.modal('closeModal');\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        unassign: function (productsIds, shippingMode) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_shipping/unassign'), {\n                method: 'post',\n                parameters: {\n                    products_ids:  productsIds,\n                    shipping_mode: shippingMode\n                },\n                onSuccess: function (transport) {\n\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return;\n                    }\n\n                    self.gridHandler.unselectAllAndReload();\n\n                    var response = transport.responseText.evalJSON();\n\n                    MessageObj.clear();\n                    response.messages.each(function (msg) {\n                        MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                    });\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        createInNewTab: function (url, shippingMode) {\n            var self = this;\n            var win = window.open(url);\n\n            var intervalId = setInterval(function () {\n                if (!win.closed) {\n                    return;\n                }\n\n                clearInterval(intervalId);\n\n                self.loadGrid(shippingMode);\n            }, 1000);\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Listing/Product/Template/Description.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Action'\n], function (modal, MessageObj) {\n\n    window.AmazonListingProductTemplateDescription = Class.create(Action, {\n\n        // ---------------------------------------\n\n        initialize: function ($super, gridHandler) {\n            var self = this;\n\n            $super(gridHandler);\n\n        },\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function (options) {\n            this.options = Object.extend(this.options, options);\n            return this;\n        },\n\n        // ---------------------------------------\n\n        mapToTemplateDescription: function (el, templateId, mapToGeneralId) {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_description/assign'), {\n                            method: 'post',\n                            parameters: {\n                                products_ids: self.templateDescriptionPopup.productsIds,\n                                template_id: templateId\n                            },\n                            onSuccess: function (transport) {\n\n                                if (!transport.responseText.isJSON()) {\n                                    self.alert(transport.responseText);\n                                    return;\n                                }\n\n                                var response = transport.responseText.evalJSON();\n\n                                if (mapToGeneralId) {\n                                    ListingGridHandlerObj.productSearchHandler.addNewGeneralId(response.products_ids);\n                                } else {\n                                    self.gridHandler.unselectAllAndReload();\n\n                                    if (response.messages.length > 0) {\n                                        MessageObj.clear();\n                                        response.messages.each(function (msg) {\n                                            MessageObj['add' + response.type[0].toUpperCase() + response.type.slice(1) + 'Message'](msg);\n                                        });\n                                    }\n                                }\n                            }\n                        });\n\n                        self.templateDescriptionPopup.modal('closeModal');\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n        unassignFromTemplateDescription: function (productsIds) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_description/unassign'), {\n                method: 'post',\n                parameters: {\n                    products_ids: productsIds\n                },\n                onSuccess: function (transport) {\n\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return;\n                    }\n\n                    self.gridHandler.unselectAllAndReload();\n\n                    var response = transport.responseText.evalJSON();\n\n                    MessageObj.clear();\n                    response.messages.each(function (msg) {\n                        MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                    });\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        validateProductsForTemplateDescriptionAssign: function (productsIds) {\n            var self = this;\n            self.flagSuccess = false;\n\n            productsIds = productsIds || ListingGridHandlerObj.productSearchHandler.params.productId;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_description/validateProductsForAssign'), {\n                method: 'post',\n                parameters: {\n                    products_ids: productsIds\n                },\n                onSuccess: function (transport) {\n\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return;\n                    }\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (response.messages.length > 0) {\n                        MessageObj.clear();\n                        response.messages.each(function (msg) {\n                            MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                        });\n                    }\n\n                    if (!response.html) {\n                        return;\n                    }\n\n                    if (typeof popUp != 'undefined') {\n                        self.templateDescriptionPopup.modal('closeModal');\n                    }\n\n                    self.openPopUp(0, M2ePro.translator.translate('templateDescriptionPopupTitle'), response.products_ids, response.html);\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        openPopUp: function (mode, title, productsIds, contentData, checkIsNewAsinAccepted) {\n            var self = this;\n            self.gridHandler.unselectAll();\n\n            MessageObj.clear();\n\n            var popupEl = $('template_description_pop_up_content');\n\n            if (popupEl) {\n                popupEl.remove();\n            }\n\n            $('html-body').insert({bottom: contentData});\n\n            self.templateDescriptionPopup = jQuery('#template_description_pop_up_content');\n\n            modal({\n                title: title,\n                type: 'slide',\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    click: function () {\n                        self.templateDescriptionPopup.modal('closeModal');\n                    }\n                }, {\n                    text: M2ePro.translator.translate('Add New Description Policy'),\n                    class: 'action primary ',\n                    click: function () {\n                        self.createTemplateDescriptionInNewTab(M2ePro.url.get('newTemplateDescriptionUrl'));\n                    }\n                }]\n            }, self.templateDescriptionPopup);\n\n            self.templateDescriptionPopup.modal('openModal');\n\n            self.templateDescriptionPopup.productsIds = productsIds;\n            self.templateDescriptionPopup.checkIsNewAsinAccepted = checkIsNewAsinAccepted || 0;\n\n            self.loadTemplateDescriptionGrid();\n        },\n\n        loadTemplateDescriptionGrid: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_description/viewGrid'), {\n                method: 'post',\n                parameters: {\n                    products_ids: self.templateDescriptionPopup.productsIds,\n                    check_is_new_asin_accepted: self.templateDescriptionPopup.checkIsNewAsinAccepted\n                },\n                onSuccess: function (transport) {\n                    $('template_description_grid').update(transport.responseText);\n                    $('template_description_grid').show();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        createTemplateDescriptionInNewTab: function (stepWindowUrl) {\n            var self = this;\n            var win = window.open(stepWindowUrl);\n\n            var intervalId = setInterval(function () {\n                if (!win.closed) {\n                    return;\n                }\n\n                clearInterval(intervalId);\n\n                amazonTemplateDescriptionGridJsObject.reload();\n            }, 1000);\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/Product/Template/ProductTaxCode.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Action'\n], function (modal, MessageObj) {\n\n    window.AmazonListingProductTemplateProductTaxCode = Class.create(Action, {\n\n        // ---------------------------------------\n\n        initialize: function($super,gridHandler)\n        {\n            var self = this;\n            $super(gridHandler);\n        },\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function(options)\n        {\n            this.options = Object.extend(this.options,options);\n            return this;\n        },\n\n        // ---------------------------------------\n\n        openPopUp: function(productsIds)\n        {\n            var self = this;\n            self.gridHandler.unselectAll();\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_productTaxCode/viewPopup'), {\n                method: 'post',\n                parameters: {\n                    products_ids:  productsIds\n                },\n                onSuccess: function(transport) {\n\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return\n                    }\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (!response.html) {\n                        if (response.messages.length > 0) {\n                            MessageObj.clear();\n                            response.messages.each(function (msg) {\n                                MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                            });\n                        }\n\n                        return;\n                    }\n\n                    var popupElId = '#template_productTaxCode_pop_up_content';\n\n                    var popupEl = jQuery(popupElId);\n\n                    if (popupEl.length) {\n                        popupEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: response.html});\n\n                    self.templateProductTaxCodePopup = jQuery(popupElId);\n\n                    modal({\n                        title: M2ePro.translator.translate('templateProductTaxCodePopupTitle'),\n                        type: 'slide',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Cancel'),\n                            click: function () {\n                                self.templateProductTaxCodePopup.modal('closeModal');\n                            }\n                        }, {\n                            text: M2ePro.translator.translate('Add New Product Tax Code Policy'),\n                            class: 'action primary ',\n                            click: function () {\n                                self.createInNewTab(self.newTemplateUrl);\n                            }\n                        }]\n                    }, self.templateProductTaxCodePopup);\n\n                    self.templateProductTaxCodePopup.productsIds = response.products_ids;\n\n                    self.templateProductTaxCodePopup.modal('openModal');\n\n                    var grid = $('template_productTaxCode_grid');\n\n                    grid.observe('click', function(event) {\n                        if (!event.target.hasClassName('assign-productTaxCode-template')) {\n                            return;\n                        }\n\n                        self.assign(event.target.getAttribute('templateProductTaxCodeId'));\n                    });\n\n                    grid.on('click', '.new-productTaxCode-template', function() {\n                        self.createInNewTab(self.newTemplateUrl);\n                    });\n\n                    self.loadGrid();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        assign: function(templateId)\n        {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_productTaxCode/assign'), {\n                            method: 'post',\n                            parameters: {\n                                products_ids:  self.templateProductTaxCodePopup.productsIds,\n                                template_id:   templateId\n                            },\n                            onSuccess: function (transport) {\n\n                                if (!transport.responseText.isJSON()) {\n                                    self.alert(transport.responseText);\n                                    return;\n                                }\n\n                                self.gridHandler.unselectAllAndReload();\n\n                                var response = transport.responseText.evalJSON();\n\n                                MessageObj.clear();\n                                response.messages.each(function (msg) {\n                                    MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                                });\n                            }\n                        });\n\n                        self.templateProductTaxCodePopup.modal('closeModal');\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        unassign: function(productsIds)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_productTaxCode/unassign'), {\n                method: 'post',\n                parameters: {\n                    products_ids: productsIds\n                },\n                onSuccess: function(transport) {\n\n                    if (!transport.responseText.isJSON()) {\n                        alert(transport.responseText);\n                        return;\n                    }\n\n                    self.gridHandler.unselectAllAndReload();\n\n                    var response = transport.responseText.evalJSON();\n\n                    MessageObj.clear();\n                    response.messages.each(function (msg) {\n                        MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                    });\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        loadGrid: function()\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_productTaxCode/viewGrid'), {\n                method: 'post',\n                parameters: {\n                    products_ids: self.templateProductTaxCodePopup.productsIds\n                },\n                onSuccess: function(transport) {\n                    var grid = $('template_productTaxCode_grid');\n                    grid.update(transport.responseText);\n                    grid.show();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        createInNewTab: function(stepWindowUrl)\n        {\n            var self = this;\n            var win = window.open(stepWindowUrl);\n\n            var intervalId = setInterval(function() {\n                if (!win.closed) {\n                    return;\n                }\n\n                clearInterval(intervalId);\n\n                self.loadGrid();\n            }, 1000);\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Listing/Product/Repricing/Price.js":"define([\n], function () {\n\n    window.AmazonListingProductRepricingPrice = Class.create();\n    AmazonListingProductRepricingPrice.prototype = {\n\n        // ---------------------------------------\n\n        initialize: function (containerId) {\n        },\n\n        // ---------------------------------------\n\n        showRepricingPrice: function () {\n\n            var groupedSkus = {};\n\n            $$('.m2epro-repricing-price-value').each(function (el) {\n                var accountId = el.getAttribute('account_id');\n\n                if (typeof groupedSkus[accountId] == 'undefined') {\n                    groupedSkus[accountId] = []\n                }\n\n                groupedSkus[accountId][groupedSkus[accountId].length] = el.getAttribute('sku');\n            });\n\n            groupedSkus = JSON.stringify(groupedSkus);\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_repricing/getUpdatedPriceBySkus'), {\n                method: 'post',\n                parameters: {\n                    grouped_skus: groupedSkus\n                },\n                onSuccess: function (transport) {\n                    var resultData = transport.responseText.evalJSON();\n\n                    $H(resultData).each(function (item) {\n                        $H(item.value).each(function (priceItem) {\n                            $('m2epro_repricing_price_value_' + priceItem.key).update(priceItem.value)\n                        });\n                    });\n                }\n            });\n        }\n\n    };\n\n});","Ess_M2ePro/js/Amazon/Listing/Product/Variation/Manage.js":"define([\n    'M2ePro/Plugin/Messages',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Action'\n], function (MessageObj, modal) {\n\n    window.AmazonListingProductVariationManage = Class.create(Action, {\n\n        MATCHING_TYPE_EQUAL: 1,\n        MATCHING_TYPE_VIRTUAL_AMAZON: 2,\n        MATCHING_TYPE_VIRTUAL_MAGENTO: 3,\n\n        // ---------------------------------------\n\n        initialize: function ($super, gridHandler) {\n            var self = this;\n\n            $super(gridHandler);\n        },\n\n        // ---------------------------------------\n\n        options: {},\n        matchingType: 1,\n        matchedAttributes: [],\n        productAttributes: [],\n        destinationAttributes: [],\n        selectedDestinationAttributes: [],\n        magentoVariationSet: [],\n        amazonVariationSet: false,\n\n        setOptions: function (options) {\n            this.options = Object.extend(this.options, options);\n            this.initValidators();\n            return this;\n        },\n\n        initValidators: function () {\n            var self = this;\n\n            jQuery.validator.addMethod('M2ePro-amazon-attribute-unique-value', function(value, el) {\n                var existedValues = [],\n                    isValid = true,\n                    form = el.up('form');\n\n                form.select('select').each(function (el) {\n                    if (el.value != '') {\n                        if (existedValues.indexOf(el.value) === -1) {\n                            existedValues.push(el.value);\n                        } else {\n                            isValid = false;\n                        }\n                    }\n                });\n\n                return isValid;\n            }, M2ePro.translator.translate('variation_manage_matched_attributes_error_duplicate'));\n        },\n\n        initSettingsTab: function () {\n            var self = this,\n                form = $('variation_manager_attributes_form');\n\n            if (form && self.matchingType == self.MATCHING_TYPE_EQUAL) {\n                form.observe('change', function (e) {\n                    if (e.target.tagName != 'SELECT') {\n                        return;\n                    }\n\n                    $(e.target).select('.empty') && $(e.target).select('.empty').length && $(e.target).select('.empty')[0].hide();\n                });\n            }\n        },\n\n        // ---------------------------------------\n\n        parseResponse: function (response) {\n            if (!response.responseText.isJSON()) {\n                return;\n            }\n\n            return response.responseText.evalJSON();\n        },\n\n        // ---------------------------------------\n\n        openPopUp: function (productId, title, filter) {\n            var self = this;\n\n            MessageObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation/manage'), {\n                method: 'post',\n                parameters: {\n                    product_id: productId,\n                    filter: filter\n                },\n                onSuccess: function (transport) {\n\n                    var containerEl = $('variation_manage_tabs_container');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    self.variationProductManagePopup = jQuery('#variation_manage_tabs_container');\n\n                    modal({\n                        title: title.escapeHTML(),\n                        type: 'slide',\n                        closed: function() {\n                            self.gridHandler.unselectAllAndReload();\n                        },\n                        buttons: [\n                        //     {\n                        //     text: M2ePro.translator.translate('Close'),\n                        //     class: 'action primary ',\n                        //     click: function () {\n                        //         self.searchMenuPopup.modal('closeModal')\n                        //     }\n                        // }\n                        ]\n                    }, self.variationProductManagePopup);\n\n                    self.variationProductManagePopup.modal('openModal');\n                    self.variationProductManagePopup.productId = productId;\n\n                    self.initSettingsTab();\n                }\n            });\n        },\n\n        closeManageVariationsPopup: function () {\n            this.variationProductManagePopup.modal('closeModal');\n        },\n\n        // ---------------------------------------\n\n        openVocabularyAttributesPopUp: function (attributes) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_vocabulary/getAttributesPopup'), {\n                onSuccess: function (transport) {\n\n                    var containerEl = $('vocabulary_attributes_pupup');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    self.vocabularyAttributesPupup = jQuery('#vocabulary_attributes_pupup');\n\n                    modal({\n                        title: 'Vocabulary',\n                        type: 'popup',\n                        closed: function() {\n                            self.reloadVariationsGrid();\n                        },\n                        buttons: [{\n                            text: M2ePro.translator.translate('No'),\n                            class: 'action-secondary action-dismiss',\n                            click: function () {\n                                self.addAttributesToVocabulary(false);\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Yes'),\n                            class: 'action-primary action-accept',\n                            click: function () {\n                                self.addAttributesToVocabulary(true);\n                            }\n                        }]\n                    }, self.vocabularyAttributesPupup);\n\n                    self.vocabularyAttributesPupup.modal('openModal');\n\n                    $('vocabulary_attributes_data').value = Object.toJSON(attributes);\n\n                    var attributesHtml = '';\n                    $H(attributes).each(function (element) {\n                        attributesHtml += '<li>' + element.key + ' > ' + element.value + '</li>';\n                    });\n\n                    attributesHtml = '<ul style=\"list-style-position: inside;\">' + attributesHtml + '</ul>';\n\n                    var bodyHtml = str_replace('%attributes%', attributesHtml, $('vocabulary_attributes_pupup').innerHTML);\n\n                    $('vocabulary_attributes_pupup').update(bodyHtml);\n                }\n            });\n        },\n\n        addAttributesToVocabulary: function (needAdd) {\n            var self = this;\n\n            var isRemember = $('vocabulary_attributes_remember_checkbox').checked;\n\n            if (!needAdd && !isRemember) {\n                self.vocabularyAttributesPupup.modal('closeModal');\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_vocabulary/addAttributes'), {\n                method: 'post',\n                parameters: {\n                    attributes: $('vocabulary_attributes_data').value,\n                    need_add: needAdd ? 1 : 0,\n                    is_remember: isRemember ? 1 : 0\n                },\n                onSuccess: function (transport) {\n                    self.vocabularyAttributesPupup.modal('closeModal');\n                }\n            });\n        },\n\n        openVocabularyOptionsPopUp: function (options) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_vocabulary/getOptionsPopup'), {\n                onSuccess: function (transport) {\n\n                    var containerEl = $('vocabulary_options_pupup');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    self.vocabularyOptionsPopup = jQuery('#vocabulary_options_pupup');\n\n                    modal({\n                        title: 'Vocabulary',\n                        type: 'popup',\n                        closed: function() {\n                            self.reloadVariationsGrid();\n                        },\n                        buttons: [{\n                            text: M2ePro.translator.translate('No'),\n                            class: 'action-secondary action-dismiss',\n                            click: function () {\n                                self.addOptionsToVocabulary(false);\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Yes'),\n                            class: 'action-primary action-accept',\n                            click: function () {\n                                self.addOptionsToVocabulary(true);\n                            }\n                        }]\n                    }, self.vocabularyOptionsPopup);\n\n                    self.vocabularyOptionsPopup.modal('openModal');\n\n                    $('vocabulary_options_data').value = Object.toJSON(options);\n\n                    var optionsHtml = '';\n                    $H(options).each(function (element) {\n\n                        var valuesHtml = '';\n                        $H(element.value).each(function (value) {\n                            valuesHtml += value.key + ' > ' + value.value;\n                        });\n\n                        optionsHtml += '<li>' + element.key + ': ' + valuesHtml + '</li>';\n                    });\n\n                    optionsHtml = '<ul style=\"list-style-position: inside;\">' + optionsHtml + '</ul>';\n\n                    var bodyHtml = str_replace('%options%', optionsHtml, $('vocabulary_options_pupup').innerHTML);\n\n                    $('vocabulary_options_pupup').update(bodyHtml);\n                }\n            });\n        },\n\n        addOptionsToVocabulary: function (needAdd) {\n            var self = this;\n\n            var isRemember = $('vocabulary_options_remember_checkbox').checked;\n\n            if (!needAdd && !isRemember) {\n                self.vocabularyOptionsPopup.modal('closeModal');\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_vocabulary/addOptions'), {\n                method: 'post',\n                parameters: {\n                    options_data: $('vocabulary_options_data').value,\n                    need_add: needAdd ? 1 : 0,\n                    is_remember: isRemember ? 1 : 0\n                },\n                onSuccess: function (transport) {\n                    self.vocabularyOptionsPopup.modal('closeModal');\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        setGeneralIdOwner: function (value, hideConfirm) {\n            var self = this,\n                confirmAction;\n\n            confirmAction = function () {\n                new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_manage/setGeneralIdOwner'), {\n                    method: 'post',\n                    parameters: {\n                        product_id: self.variationProductManagePopup.productId,\n                        general_id_owner: value\n                    },\n                    onSuccess: function (transport) {\n\n                        var response = self.parseResponse(transport);\n                        if (response.success) {\n                            return self.reloadVariationsGrid();\n                        }\n\n                        if (response.empty_sku) {\n                            return self.openSkuPopUp();\n                        }\n                        self.openDescriptionTemplatePopUp(response.html);\n                    }\n                });\n            };\n\n            if (hideConfirm) {\n                confirmAction();\n            } else {\n                self.confirm({\n                    actions: {\n                        confirm: function () {\n                            confirmAction();\n                        },\n                        cancel: function () {\n                            return false;\n                        }\n                    }\n                });\n            }\n        },\n\n        openSkuPopUp: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_manage/getSkuPopup'), {\n                method: 'post',\n                parameters: {\n                    product_id: self.variationProductManagePopup.productId\n                },\n                onSuccess: function (transport) {\n\n                    var containerEl = $('manage_variation_sku_popup');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    self.skuPopup = jQuery('#manage_variation_sku_popup');\n\n                    modal({\n                        title: M2ePro.translator.translate('variation_manage_matched_sku_popup_title'),\n                        type: 'popup',\n                        modalClass: 'width-50',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Cancel'),\n                            class: 'action-secondary action-dismiss',\n                            click: function () {\n                                self.skuPopup.modal('closeModal');\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Confirm'),\n                            class: 'action-primary action-accept',\n                            click: function () {\n                                self.setProductSku();\n                            }\n                        }]\n                    }, self.skuPopup);\n\n                    self.skuPopup.modal('openModal');\n                }\n            });\n        },\n\n        setProductSku: function () {\n            var self = this,\n                data;\n\n            this.initFormValidation('#variation_manager_sku_form');\n\n            if (!jQuery('#variation_manager_sku_form').valid()) {\n                return;\n            }\n\n            data = $('variation_manager_sku_form').serialize(true);\n            data.product_id = self.variationProductManagePopup.productId;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_manage/setListingProductSku'), {\n                method: 'post',\n                parameters: data,\n                onSuccess: function (transport) {\n\n                    var response = self.parseResponse(transport);\n                    if (response.success) {\n                        self.skuPopup.modal('closeModal');\n                        self.setGeneralIdOwner(1, true);\n                    } else {\n                        var skuError = $('sku-error');\n\n                        if (!skuError) {\n                            skuError = new Element('label', {\n                                id : 'sku-error',\n                                for : 'sku',\n                                class: 'error',\n                                generated: true\n                            });\n\n                            $('sku').insert({after: skuError})\n                        }\n\n                        skuError.update(response.msg);\n                        skuError.show();\n                    }\n                }\n            });\n        },\n\n        openDescriptionTemplatePopUp: function (contentData) {\n            var self = this;\n            self.gridHandler.unselectAll();\n\n            MessageObj.clear();\n\n            if (!$('template_description_pop_up_content')) {\n                $('html-body').insert({bottom: contentData});\n            }\n\n            self.templateDescriptionPopup = jQuery('#template_description_pop_up_content');\n\n            modal({\n                title: M2ePro.translator.translate('templateDescriptionPopupTitle'),\n                type: 'slide',\n                buttons: [{\n                    text: M2ePro.translator.translate('Add New Description Policy'),\n                    class: 'action primary ',\n                    click: function () {\n                        ListingGridHandlerObj.templateDescriptionHandler.createTemplateDescriptionInNewTab(M2ePro.url.get('newTemplateDescriptionUrl'));\n                    }\n                }]\n            }, self.templateDescriptionPopup);\n\n            self.templateDescriptionPopup.modal('openModal');\n\n            self.templateDescriptionPopup.productsIds = self.variationProductManagePopup.productId;\n            self.templateDescriptionPopup.checkIsNewAsinAccepted = 1;\n\n            self.loadTemplateDescriptionGrid();\n        },\n\n        loadTemplateDescriptionGrid: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_description/viewGrid'), {\n                method: 'post',\n                parameters: {\n                    products_ids: self.variationProductManagePopup.productId,\n                    check_is_new_asin_accepted: 1,\n                    map_to_template_js_fn: 'ListingGridHandlerObj.variationProductManageHandler.mapToTemplateDescription'\n                },\n                onSuccess: function (transport) {\n                    $('template_description_grid').update(transport.responseText);\n                    $('template_description_grid').show();\n                }\n            });\n        },\n\n        mapToTemplateDescription: function (el, templateId, mapToGeneralId) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_description/assign'), {\n                method: 'post',\n                parameters: {\n                    products_ids: self.variationProductManagePopup.productId,\n                    template_id: templateId\n                },\n                onSuccess: function (transport) {\n                    var response = self.parseResponse(transport);\n                    if (response.type == 'success') {\n                        self.templateDescriptionPopup.modal('closeModal');\n                        self.setGeneralIdOwner(1, true);\n                    }\n                }\n            });\n\n            self.templateDescriptionPopup.modal('closeModal');\n        },\n\n        // ---------------------------------------\n\n        changeVariationTheme: function (el) {\n            var attrs = $('variation_manager_theme_attributes');\n            attrs.hide();\n            attrs.next().show();\n\n            el.hide();\n            el.next().show();\n\n            var channelVariationThemeNote = $('channel_variation_theme_note');\n            channelVariationThemeNote && channelVariationThemeNote.hide();\n        },\n\n        setVariationTheme: function () {\n            var self = this,\n                value = $('variation_manager_theme').value;\n\n            if (value) {\n                new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_manage/setVariationTheme'), {\n                    method: 'post',\n                    parameters: {\n                        product_id: self.variationProductManagePopup.productId,\n                        variation_theme: value\n                    },\n                    onSuccess: function (transport) {\n                        var response = self.parseResponse(transport);\n                        if (response.success) {\n                            self.reloadSettings();\n                        }\n                    }\n                });\n            }\n        },\n\n        cancelVariationTheme: function (el) {\n            var attrs = $('variation_manager_theme_attributes');\n            attrs.show();\n            attrs.next().hide();\n\n            el.up().previous().show();\n            el.up().hide();\n\n            var channelVariationThemeNote = $('channel_variation_theme_note');\n            channelVariationThemeNote && channelVariationThemeNote.show();\n        },\n\n        // ---------------------------------------\n\n        changeMatchedAttributes: function (el) {\n            $$('.variation_manager_attributes_amazon_value').each(function (el) {\n                el.hide();\n            });\n\n            $$('.variation_manager_attributes_amazon_select').each(function (el) {\n                el.show();\n            });\n\n            el.hide();\n            el.next().show();\n            el.next().next().show();\n        },\n\n        // ---------------------------------------\n\n        isValidAttributes: function () {\n            var self = this,\n                existedValues = [],\n                isValid = true,\n                form = $('variation_manager_attributes_form');\n\n            if (!form || (form && form.serialize() == '')) {\n                return true;\n            }\n            var data = form.serialize(true);\n\n            form.select('.validation-advice').each(function (el) {\n                el.hide();\n            });\n\n            if (typeof data['variation_attributes[amazon_attributes][]'] == 'string') {\n\n                if (data['variation_attributes[amazon_attributes][]'] != '') {\n                    return true;\n                }\n\n                var errorEl = form.select('.validation-advice')[0];\n                errorEl.show();\n                errorEl.update(M2ePro.translator.translate('variation_manage_matched_attributes_error'));\n\n                return false;\n            }\n\n            var i = 0;\n            data['variation_attributes[amazon_attributes][]'].each(function (attrVal) {\n                if (attrVal != '' && existedValues.indexOf(attrVal) === -1) {\n                    existedValues.push(attrVal);\n                } else {\n                    isValid = false;\n\n                    var errorEl = $('variation_manager_attributes_error_' + i);\n                    errorEl.show();\n                    if (attrVal == '') {\n                        errorEl.update(M2ePro.translator.translate('variation_manage_matched_attributes_error'));\n                    } else {\n                        errorEl.update(M2ePro.translator.translate('variation_manage_matched_attributes_error_duplicate'))\n                    }\n                }\n                i++;\n            });\n\n            return isValid;\n        },\n\n        setMatchedAttributes: function () {\n            var self = this,\n                data;\n\n            if (!self.isValidAttributes()) {\n                return;\n            }\n\n            $('variation_manager_attributes_form').select('.validation-advice').each(function (el) {\n                el.hide();\n            });\n\n            data = $('variation_manager_attributes_form').serialize(true);\n            data.product_id = self.variationProductManagePopup.productId;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_manage/setMatchedAttributes'), {\n                method: 'post',\n                parameters: data,\n                onSuccess: function (transport) {\n                    var response = self.parseResponse(transport);\n                    if (response.success) {\n                        self.reloadVariationsGrid();\n\n                        if (response['vocabulary_attributes']) {\n                            self.openVocabularyAttributesPopUp(response['vocabulary_attributes']);\n                        }\n                    }\n                }\n            });\n        },\n\n        cancelMatchedAttributes: function (el) {\n            $$('.variation_manager_attributes_amazon_value').each(function (el) {\n                el.show();\n            });\n\n            $$('.variation_manager_attributes_amazon_select').each(function (el) {\n                el.hide();\n            });\n\n            $('variation_manager_attributes_form').select('.validation-advice').each(function (el) {\n                el.hide();\n            });\n\n            el.hide();\n            el.previous().show();\n            el.next().hide();\n        },\n\n        // ---------------------------------------\n\n        renderMatchedAttributesNotSetView: function (type) {\n            var self = this,\n                form = $('variation_manager_attributes_form'),\n                tBody = form.down('tbody');\n\n            tBody.update();\n\n            $H(self.matchedAttributes).each(function (attribute) {\n                var tr = new Element('tr'),\n                    tdLabel = new Element('td', {\n                        class: 'label',\n                        style: 'border-right: 1px solid #D6D6D6 !important;'\n                    }),\n                    label = new Element('label'),\n                    tdValue = new Element('td', {\n                        class: 'value'\n                    }),\n                    valueSpan = new Element('span', {\n                        style: 'color: red;'\n                    });\n\n                label.innerHTML = attribute.key;\n                valueSpan.innerHTML = M2ePro.translator.translate('not_set');\n\n                tdLabel.insert({bottom: label});\n                tdValue.insert({bottom: valueSpan});\n\n                tr.insert({bottom: tdLabel});\n                tr.insert({bottom: tdValue});\n\n                tBody.insert({bottom: tr});\n            });\n\n            var tr = new Element('tr'),\n                tdBtns = new Element('td', {\n                    class: 'label',\n                    colspan: '2',\n                    style: 'text-align: right; border: none'\n                }),\n                setBtn = new Element('button', {class: 'action primary'});\n\n            setBtn.update(M2ePro.translator.translate('set_attributes'));\n            setBtn.observe('click', function (event) {\n                if (self.matchingType === self.MATCHING_TYPE_VIRTUAL_AMAZON) {\n                    self.renderMatchedAttributesVirtualAmazonView();\n                }\n\n                if (self.matchingType === self.MATCHING_TYPE_VIRTUAL_MAGENTO) {\n                    self.renderMatchedAttributesVirtualMagentoView();\n                }\n            });\n\n            tdBtns.insert({bottom: setBtn});\n            tr.insert({bottom: tdBtns});\n            tBody.insert({bottom: tr});\n\n        },\n\n        renderMatchedAttributesVirtualAmazonView: function () {\n            var self = this,\n                form = $('variation_manager_attributes_form'),\n                tBody = form.down('tbody');\n\n            tBody.update();\n            self.selectedDestinationAttributes = [];\n\n            var prematchedAttributes = [];\n            var i = 0;\n            $H(self.matchedAttributes).each(function (attribute) {\n\n                var tr = new Element('tr'),\n                    tdLabel = new Element('td', {\n                        class: 'label value',\n                        style: 'border-right: 1px solid #D6D6D6 !important; vertical-align: inherit;'\n                    }),\n                    labelMagentoAttr = new Element('label', {\n                        class: 'magento-attribute-name'\n                    }),\n                    inputVirtualAttribute = new Element('input', {\n                        style: 'display: none',\n                        value: attribute.key,\n                        type: 'hidden',\n                        disabled: 'disabled',\n                        class: 'virtual-amazon-attribute-name-value',\n                        name: 'variation_attributes[virtual_amazon_attributes][' + i + ']'\n                    }),\n                    selectVirtualAttributeOption = new Element('select', {\n                        style: 'display: none; width: 200px; margin-top: -3px',\n                        disabled: 'disabled',\n                        class: 'admin__control-select required-entry virtual-amazon-option',\n                        name: 'variation_attributes[virtual_amazon_option][' + i + ']'\n                    }),\n                    selectVirtualAttributeOptionGroup = new Element('optgroup', {\n                        label: attribute.key\n                    }),\n                    labelVirtualAttributeAndOption = new Element('span', {\n                        style: 'display: none; line-height: 20px; vertical-align: baseline;',\n                        class: 'virtual-amazon-attribute-and-option'\n                    }),\n                    spanLeftHelpIcon = new Element('span', {\n                        style: 'display: none',\n                        class: 'left-help-icon'\n                    }),\n                    tdValue = new Element('td', {\n                        class: 'value'\n                    }),\n                    inputMagentoAttr = new Element('input', {\n                        value: attribute.key,\n                        type: 'hidden',\n                        class: 'magento-attribute-name-value',\n                        name: 'variation_attributes[magento_attributes][' + i + ']'\n                    }),\n                    selectAmazonAttr = new Element('select', {\n                        class: 'admin__control-select required-entry M2ePro-amazon-attribute-unique-value amazon-attribute-name',\n                        name: 'variation_attributes[amazon_attributes][' + i + ']'\n                    }),\n                    spanVirtualAttribute = new Element('span', {\n                        style: 'display: none; line-height: 20px; vertical-align: baseline;',\n                        class: 'virtual-amazon-attribute-name'\n                    }),\n                    spanRightHelpIcon = new Element('span', {\n                        style: 'display: none',\n                        class: 'right-help-icon'\n                    });\n\n                var helpIconTpl = $('variation_settings_form_help_icon_tpl');\n\n                spanLeftHelpIcon.update(helpIconTpl.innerHTML);\n                spanLeftHelpIcon.down('.tool-tip-message-text').update(M2ePro.translator.translate('help_icon_magento_greater_left'));\n                spanRightHelpIcon.update(helpIconTpl.innerHTML);\n                spanRightHelpIcon.down('.tool-tip-message-text').update(M2ePro.translator.translate('help_icon_magento_greater_right'));\n\n                var attributeStr = attribute.key;\n                if (attribute.key.length > 13) {\n                    attributeStr = attribute.key.substr(0, 12) + '...';\n                    labelVirtualAttributeAndOption.title = attribute.key;\n                    spanVirtualAttribute.title = attribute.key;\n                }\n\n                if (attribute.key.length < 31) {\n                    labelMagentoAttr.update(attribute.key);\n                } else {\n                    labelMagentoAttr.update(attribute.key.substr(0, 28) + '...');\n                    labelMagentoAttr.title = attribute.key;\n                }\n\n                spanVirtualAttribute.update(attributeStr + ' (<span>&ndash;</span>)');\n                labelVirtualAttributeAndOption.update(attributeStr + ' (<a href=\"javascript:void(0);\"></a>)');\n                labelVirtualAttributeAndOption.down('a').title = '';\n\n                labelVirtualAttributeAndOption.down('a').observe('click', function (event) {\n                    labelVirtualAttributeAndOption.hide();\n                    selectVirtualAttributeOption.show();\n                    selectVirtualAttributeOption.value = '';\n                    spanVirtualAttribute.down('span').update('&ndash;');\n                    spanVirtualAttribute.down('span').title = '';\n                });\n\n                var option = new Element('option', {\n                    value: ''\n                });\n                selectAmazonAttr.insert({bottom: option});\n\n                self.destinationAttributes.each(function (destinationAttribute) {\n                    var option = new Element('option', {\n                        value: destinationAttribute\n                    });\n                    option.update(destinationAttribute);\n                    selectAmazonAttr.insert({bottom: option});\n\n                    if (attribute.value == destinationAttribute) {\n                        selectAmazonAttr.value = destinationAttribute;\n                        prematchedAttributes.push(selectAmazonAttr);\n                    }\n                });\n                selectAmazonAttr.prevValue = '';\n\n                selectAmazonAttr.observe('change', function (event) {\n\n                    var result = true;\n                    if (selectAmazonAttr.value != '' && inputMagentoAttr.value != selectAmazonAttr.value &&\n                        self.productAttributes.indexOf(selectAmazonAttr.value) !== -1) {\n                        result = false;\n\n                        if (attribute.value == null) {\n                            self.alert(M2ePro.translator.translate('duplicate_amazon_attribute_error'));\n                        }\n                        selectAmazonAttr.value = '';\n                    }\n                    attribute.value = null;\n\n                    var prevValueIndex = self.selectedDestinationAttributes.indexOf(selectAmazonAttr.prevValue);\n                    if (prevValueIndex > -1) {\n                        self.selectedDestinationAttributes.splice(prevValueIndex, 1);\n                    }\n\n                    if (selectAmazonAttr.value != '') {\n                        self.selectedDestinationAttributes.push(selectAmazonAttr.value);\n                    }\n                    selectAmazonAttr.prevValue = selectAmazonAttr.value;\n\n                    form.select('select').each(function (el) {\n                        result = Validation.get('M2ePro-amazon-attribute-unique-value').test($F(el), el) ? result : false;\n                    });\n\n                    if (result && self.selectedDestinationAttributes.length == self.destinationAttributes.length) {\n                        self.showVirtualAmazonAttributes();\n                    } else {\n                        self.hideVirtualAmazonAttributes();\n                    }\n                });\n\n                selectVirtualAttributeOption.observe('change', function (event) {\n                    var value = selectVirtualAttributeOption.value;\n\n                    labelVirtualAttributeAndOption.show();\n                    selectVirtualAttributeOption.hide();\n\n                    if (attributeStr.length + value.length < 28) {\n                        spanVirtualAttribute.down('span').update(value);\n                        spanVirtualAttribute.down('span').title = '';\n                        labelVirtualAttributeAndOption.down('a').update(value);\n                    } else {\n                        spanVirtualAttribute.down('span').update(value.substr(0, 24 - attributeStr.length) + '...');\n                        spanVirtualAttribute.down('span').title = value;\n                        labelVirtualAttributeAndOption.down('a').update(value.substr(0, 24 - attributeStr.length) + '...');\n                    }\n\n                    labelVirtualAttributeAndOption.down('a').title = M2ePro.translator.translate('change_option') + ' \"' + value + '\"';\n                });\n\n                var option = new Element('option', {\n                    value: ''\n                });\n                selectVirtualAttributeOption.insert({bottom: option});\n\n                self.magentoVariationSet[attribute.key].each(function (optionValue) {\n                    var option = new Element('option', {\n                        value: optionValue\n                    });\n                    option.update(optionValue);\n                    selectVirtualAttributeOptionGroup.insert({bottom: option});\n                });\n                selectVirtualAttributeOption.insert({bottom: selectVirtualAttributeOptionGroup});\n\n                tdLabel.insert({bottom: labelMagentoAttr});\n                tdLabel.insert({bottom: inputVirtualAttribute});\n                tdLabel.insert({bottom: labelVirtualAttributeAndOption});\n                tdLabel.insert({bottom: selectVirtualAttributeOption});\n                tdLabel.insert({bottom: spanLeftHelpIcon});\n                tdValue.insert({bottom: inputMagentoAttr});\n                tdValue.insert({bottom: selectAmazonAttr});\n                tdValue.insert({bottom: spanVirtualAttribute});\n                tdValue.insert({bottom: spanRightHelpIcon});\n\n                tr.insert({bottom: tdLabel});\n                tr.insert({bottom: tdValue});\n\n                tBody.insert({bottom: tr});\n\n                i++;\n            });\n\n            var tr = new Element('tr'),\n                tdBtns = new Element('td', {\n                    class: 'label',\n                    colspan: '2',\n                    style: 'text-align: right; border: none'\n                }),\n                cancelBtn = new Element('a', {\n                    href: 'javascript:void(0);',\n                    style: 'margin-left: 9px;'\n                }),\n                confirmBtn = new Element('button', {\n                    style: 'margin-left: 9px;',\n                    class: 'action primary'\n                });\n\n            cancelBtn.update(M2ePro.translator.translate('Cancel'));\n            confirmBtn.update(M2ePro.translator.translate('Confirm'));\n\n            cancelBtn.observe('click', function (event) {\n                self.renderMatchedAttributesNotSetView();\n            });\n            confirmBtn.observe('click', function (event) {\n                form.select('.validation-advice').each(function (el) {\n                    el.hide();\n                });\n\n                var result = true;\n                form.select('select').each(function (el) {\n                    el.classNames().each(function (className) {\n                        var validationResult = Validation.test(className, el);\n                        result = validationResult ? result : false;\n\n                        if (!validationResult) {\n                            throw $break;\n                        }\n                    });\n                });\n\n                form.select('.validation-advice').each(function (el) {\n                    jQuery(el).wrapInner('<label class=\"mage-error\">');\n                });\n\n                if (result) {\n                    var data = form.serialize(true);\n                    data.product_id = self.variationProductManagePopup.productId;\n\n                    new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_manage/setMatchedAttributes'), {\n                        method: 'post',\n                        parameters: data,\n                        onSuccess: function (transport) {\n                            var response = self.parseResponse(transport);\n                            if (response.success) {\n                                self.reloadVariationsGrid();\n\n                                if (response['vocabulary_attributes']) {\n                                    self.openVocabularyAttributesPopUp(response['vocabulary_attributes']);\n                                }\n                            }\n                        }\n                    });\n                }\n            });\n\n            tdBtns.insert({bottom: cancelBtn});\n            tdBtns.insert({bottom: confirmBtn});\n            tr.insert({bottom: tdBtns});\n            tBody.insert({bottom: tr});\n\n            prematchedAttributes.each(function (el) {\n                el.simulate('change');\n            });\n\n            tBody.select('.tool-tip-image').each(function (element) {\n                element.observe('mouseover', MagentoFieldTipObj.showToolTip);\n                element.observe('mouseout', MagentoFieldTipObj.onToolTipIconMouseLeave);\n            });\n\n            tBody.select('.tool-tip-message').each(function (element) {\n                element.observe('mouseout', MagentoFieldTipObj.onToolTipMouseLeave);\n                element.observe('mouseover', MagentoFieldTipObj.onToolTipMouseEnter);\n            });\n        },\n\n        showVirtualAmazonAttributes: function () {\n            var self = this,\n                form = $('variation_manager_attributes_form');\n\n            var virtualAmazonAttr = form.select('select.amazon-attribute-name[value=\"\"]');\n            virtualAmazonAttr.each(function (el) {\n                el.disable().hide();\n\n                var tr = el.up('tr');\n                tr.down('.magento-attribute-name-value').disable();\n                tr.down('.virtual-amazon-attribute-name').show();\n                tr.down('.magento-attribute-name').hide();\n                tr.down('.virtual-amazon-attribute-name-value').enable();\n                tr.down('.virtual-amazon-option').enable().show();\n                tr.down('.right-help-icon').show();\n                tr.down('.left-help-icon').show();\n            });\n        },\n\n        hideVirtualAmazonAttributes: function () {\n            var self = this,\n                form = $('variation_manager_attributes_form');\n\n            var virtualAmazonAttr = form.select('select.amazon-attribute-name[value=\"\"]');\n            virtualAmazonAttr.each(function (el) {\n                el.enable().show();\n\n                var tr = el.up('tr');\n                tr.down('.magento-attribute-name-value').enable();\n                tr.down('.virtual-amazon-attribute-name').hide();\n                tr.down('.magento-attribute-name').show();\n                tr.down('.virtual-amazon-attribute-name-value').disable();\n                tr.down('.virtual-amazon-option').disable().hide();\n                tr.down('.virtual-amazon-attribute-and-option').hide();\n                tr.down('.right-help-icon').hide();\n                tr.down('.left-help-icon').hide();\n            });\n        },\n\n        // ---------------------------------------\n\n        renderMatchedAttributesVirtualMagentoView: function () {\n            var self = this,\n                form = $('variation_manager_attributes_form'),\n                tBody = form.down('tbody');\n\n            tBody.update();\n\n            var prematchedAttributes = [];\n            var i = 0;\n            $H(self.matchedAttributes).each(function (attribute) {\n\n                var tr = new Element('tr'),\n                    tdLabel = new Element('td', {\n                        class: 'label',\n                        style: 'border-right: 1px solid #D6D6D6 !important;'\n                    }),\n                    labelMagentoAttr = new Element('label'),\n                    tdValue = new Element('td', {\n                        class: 'value'\n                    }),\n                    inputMagentoAttr = new Element('input', {\n                        value: attribute.key,\n                        type: 'hidden',\n                        name: 'variation_attributes[magento_attributes][' + i + ']'\n                    }),\n                    selectAmazonAttr = new Element('select', {\n                        class: 'admin__control-select required-entry M2ePro-amazon-attribute-unique-value amazon-attribute-name',\n                        name: 'variation_attributes[amazon_attributes][' + i + ']'\n                    });\n\n                if (attribute.key.length < 31) {\n                    labelMagentoAttr.update(attribute.key);\n                } else {\n                    labelMagentoAttr.update(attribute.key.substr(0, 28) + '...');\n                    labelMagentoAttr.title = attribute.key;\n                }\n\n                var option = new Element('option', {\n                    value: ''\n                });\n                selectAmazonAttr.insert({bottom: option});\n\n                self.destinationAttributes.each(function (destinationAttribute) {\n                    var option = new Element('option', {\n                        value: destinationAttribute\n                    });\n                    option.update(destinationAttribute);\n                    selectAmazonAttr.insert({bottom: option});\n\n                    if (attribute.value == destinationAttribute) {\n                        selectAmazonAttr.value = destinationAttribute;\n                        prematchedAttributes.push(selectAmazonAttr);\n                    }\n                });\n                selectAmazonAttr.prevValue = '';\n\n                selectAmazonAttr.observe('change', function (event) {\n                    var result = true;\n                    if (selectAmazonAttr.value != '' && inputMagentoAttr.value != selectAmazonAttr.value &&\n                        self.destinationAttributes.indexOf(inputMagentoAttr.value) !== -1) {\n                        result = false;\n\n                        if (attribute.value == null) {\n                            self.alert(M2ePro.translator.translate('duplicate_magento_attribute_error'));\n                        }\n                        selectAmazonAttr.value = '';\n                    }\n                    attribute.value = null;\n\n                    form.select('select.amazon-attribute-name').each(function (el) {\n                        el.classNames().each(function (className) {\n                            var v = Validation.get(className),\n                                validationResult = v.test($F(el), el);\n\n                            result = validationResult ? result : false;\n\n                            if (!validationResult) {\n                                throw $break;\n                            }\n                        });\n                    });\n\n                    if (result) {\n                        self.showVirtualMagentoAttributes(i);\n                    } else {\n                        self.hideVirtualMagentoAttributes();\n                    }\n                });\n\n                tdLabel.insert({bottom: labelMagentoAttr});\n                tdValue.insert({bottom: inputMagentoAttr});\n                tdValue.insert({bottom: selectAmazonAttr});\n\n                tr.insert({bottom: tdLabel});\n                tr.insert({bottom: tdValue});\n\n                tBody.insert({bottom: tr});\n\n                i++;\n            });\n\n            var tr = new Element('tr', {\n                    class: 'buttons-row'\n                }),\n                tdBtns = new Element('td', {\n                    class: 'label',\n                    colspan: '2',\n                    style: 'text-align: right; border: none'\n                }),\n                cancelBtn = new Element('a', {\n                    href: 'javascript:void(0);',\n                    style: 'margin-left: 9px;'\n                }),\n                confirmBtn = new Element('button', {\n                    style: 'margin-left: 9px;',\n                    class: 'action primary'\n                });\n\n            cancelBtn.update(M2ePro.translator.translate('Cancel'));\n            confirmBtn.update(M2ePro.translator.translate('Confirm'));\n\n            cancelBtn.observe('click', function (event) {\n                self.renderMatchedAttributesNotSetView();\n            });\n            confirmBtn.observe('click', function (event) {\n                form.select('.validation-advice').each(function (el) {\n                    el.hide();\n                });\n\n                var result = true;\n                form.select('select', 'input').each(function (el) {\n                    el.classNames().each(function (className) {\n                        var validationResult = Validation.test(className, el);\n                        result = validationResult ? result : false;\n\n                        if (!validationResult) {\n                            throw $break;\n                        }\n                    });\n                });\n\n                form.select('.validation-advice').each(function (el) {\n                    jQuery(el).wrapInner('<label class=\"mage-error\">');\n                });\n\n                if (result) {\n                    var data = form.serialize(true);\n                    data.product_id = self.variationProductManagePopup.productId;\n\n                    new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_manage/setMatchedAttributes'), {\n                        method: 'post',\n                        parameters: data,\n                        onSuccess: function (transport) {\n                            var response = self.parseResponse(transport);\n                            if (response.success) {\n                                self.reloadVariationsGrid();\n\n                                if (response['vocabulary_attributes']) {\n                                    self.openVocabularyAttributesPopUp(response['vocabulary_attributes']);\n                                }\n                            }\n                        }\n                    });\n                }\n            });\n\n            tdBtns.insert({bottom: cancelBtn});\n            tdBtns.insert({bottom: confirmBtn});\n            tr.insert({bottom: tdBtns});\n            tBody.insert({bottom: tr});\n\n            prematchedAttributes.each(function (el) {\n                el.simulate('change');\n            });\n        },\n\n        showVirtualMagentoAttributes: function (lastAttributeIndex) {\n            var self = this,\n                form = $('variation_manager_attributes_form'),\n                buttonsRow = form.down('.buttons-row');\n\n            form.select('tr.virtual-attribute').each(function (el) {\n                el.remove();\n            });\n\n            var selectedValues = [];\n            form.select('select.amazon-attribute-name').each(function (el) {\n                selectedValues.push(el.value);\n            });\n\n            var i = lastAttributeIndex;\n            self.destinationAttributes.each(function (attribute) {\n                if (selectedValues.indexOf(attribute) !== -1) {\n                    return true;\n                }\n                var tr = new Element('tr', {\n                        class: 'virtual-attribute'\n                    }),\n                    tdLabel = new Element('td', {\n                        class: 'label',\n                        style: 'line-height: 26px; border-right: 1px solid #D6D6D6 !important;'\n                    }),\n                    labelMagentoAttr = new Element('label'),\n                    spanLeftHelpIcon = new Element('span', {\n                        class: 'left-help-icon'\n                    }),\n                    tdValue = new Element('td', {\n                        class: 'value'\n                    }),\n                    inputMagentoAttr = new Element('input', {\n                        value: attribute,\n                        type: 'hidden',\n                        name: 'variation_attributes[virtual_magento_attributes][' + i + ']'\n                    }),\n                    spanVirtualAttribute = new Element('span', {\n                        style: 'display: none'\n                    }),\n                    spanRightHelpIcon = new Element('span', {\n                        class: 'right-help-icon'\n                    });\n\n                var helpIconTpl = $('variation_settings_form_help_icon_tpl');\n\n                spanLeftHelpIcon.update(helpIconTpl.innerHTML);\n                spanLeftHelpIcon.down('.tool-tip-message-text').update(M2ePro.translator.translate('help_icon_amazon_greater_left'));\n                spanRightHelpIcon.update(helpIconTpl.innerHTML);\n                spanRightHelpIcon.down('.tool-tip-message-text').update(M2ePro.translator.translate('help_icon_amazon_greater_right'));\n\n                var attributeStr = attribute;\n                if (attribute.length > 13) {\n                    attributeStr = attribute.substr(0, 12) + '...';\n                    labelMagentoAttr.title = attribute;\n                    spanVirtualAttribute.title = attribute;\n                }\n\n                labelMagentoAttr.update(attributeStr + ' (<span>&ndash;</span>)');\n\n                if (self.amazonVariationSet === false) {\n                    spanVirtualAttribute.update(attributeStr + ' (<span></span>)');\n                    spanVirtualAttribute.show();\n\n                    var virtualAttrOption = new Element('input', {\n                        type: 'text',\n                        style: 'width: 153px;',\n                        class: 'required-entry',\n                        name: 'variation_attributes[virtual_magento_option][' + i + ']'\n                    });\n\n                    virtualAttrOption.observe('keyup', function (event) {\n                        var value = virtualAttrOption.value;\n\n                        if (value == '') {\n                            labelMagentoAttr.down('span').update('&ndash;');\n                            labelMagentoAttr.down('span').title = '';\n                            return;\n                        }\n\n                        if (attributeStr.length + value.length < 21) {\n                            labelMagentoAttr.down('span').update(value);\n                            labelMagentoAttr.down('span').title = '';\n                        } else {\n                            labelMagentoAttr.down('span').update(value.substr(0, 20 - attributeStr.length) + '...');\n                            labelMagentoAttr.down('span').title = value;\n                        }\n                    });\n\n                    labelMagentoAttr.insert({bottom: spanLeftHelpIcon});\n                    spanVirtualAttribute.down('span').insert({bottom: virtualAttrOption});\n\n                    tdLabel.insert({bottom: labelMagentoAttr});\n                    tdValue.insert({bottom: inputMagentoAttr});\n                    tdValue.insert({bottom: spanVirtualAttribute});\n                    tdValue.insert({bottom: spanRightHelpIcon});\n                } else {\n                    var virtualAttrOption = new Element('select', {\n                            style: 'width: 255px;',\n                            class: 'admin__control-select required-entry virtual-magento-option',\n                            name: 'variation_attributes[virtual_magento_option][' + i + ']'\n                        }),\n                        virtualAttrOptionGroup = new Element('optgroup', {\n                            label: attribute\n                        });\n\n                    spanVirtualAttribute.update(attributeStr + ' (<a href=\"javascript:void(0);\"></a>)');\n                    spanVirtualAttribute.down('a').title = '';\n\n                    spanVirtualAttribute.down('a').observe('click', function (event) {\n                        spanVirtualAttribute.hide();\n                        virtualAttrOption.show();\n                        virtualAttrOption.value = '';\n                        labelMagentoAttr.down('span').update('&ndash;');\n                        labelMagentoAttr.down('span').title = '';\n                    });\n\n                    var option = new Element('option', {\n                        value: ''\n                    });\n                    virtualAttrOption.insert({bottom: option});\n\n                    self.amazonVariationSet[attribute].each(function (optionValue) {\n                        var option = new Element('option', {\n                            value: optionValue\n                        });\n                        option.update(optionValue);\n                        virtualAttrOptionGroup.insert({bottom: option});\n                    });\n                    virtualAttrOption.insert({bottom: virtualAttrOptionGroup});\n\n                    virtualAttrOption.observe('change', function (event) {\n                        var value = virtualAttrOption.value;\n\n                        spanVirtualAttribute.show();\n                        virtualAttrOption.hide();\n\n                        if (attributeStr.length + value.length < 28) {\n                            labelMagentoAttr.down('span').update(value);\n                            labelMagentoAttr.down('span').title = '';\n                        } else {\n                            labelMagentoAttr.down('span').update(value.substr(0, 22 - attributeStr.length) + '...');\n                            labelMagentoAttr.down('span').title = value;\n                        }\n\n                        if (attributeStr.length + value.length < 45) {\n                            spanVirtualAttribute.down('a').update(value);\n                        } else {\n                            spanVirtualAttribute.down('a').update(value.substr(0, 40 - attributeStr.length) + '...');\n                        }\n                        spanVirtualAttribute.down('a').title = M2ePro.translator.translate('change_option') + ' \"' + value + '\"';\n                    });\n\n                    labelMagentoAttr.insert({bottom: spanLeftHelpIcon});\n                    tdLabel.insert({bottom: labelMagentoAttr});\n                    tdValue.insert({bottom: inputMagentoAttr});\n                    tdValue.insert({bottom: spanVirtualAttribute});\n                    tdValue.insert({bottom: virtualAttrOption});\n                    tdValue.insert({bottom: spanRightHelpIcon});\n                }\n\n                tr.insert({bottom: tdLabel});\n                tr.insert({bottom: tdValue});\n\n                buttonsRow.insert({before: tr});\n\n                i++;\n            });\n\n            form.select('.tool-tip-image').each(function (element) {\n                element.observe('mouseover', MagentoFieldTipObj.showToolTip);\n                element.observe('mouseout', MagentoFieldTipObj.onToolTipIconMouseLeave);\n            });\n\n            form.select('.tool-tip-message').each(function (element) {\n                element.observe('mouseout', MagentoFieldTipObj.onToolTipMouseLeave);\n                element.observe('mouseover', MagentoFieldTipObj.onToolTipMouseEnter);\n            });\n        },\n\n        hideVirtualMagentoAttributes: function () {\n            var self = this,\n                form = $('variation_manager_attributes_form');\n\n            form.select('tr.virtual-attribute').each(function (el) {\n                el.remove();\n            });\n        },\n\n        // ---------------------------------------\n\n        reloadSettings: function (callback) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_manage/viewVariationsSettingsAjax'), {\n                method: 'post',\n                parameters: {\n                    product_id: self.variationProductManagePopup.productId\n                },\n                onSuccess: function (transport) {\n\n                    var response = self.parseResponse(transport);\n\n                    $('amazonVariationProductManageTabs_settings_content').update(response.html);\n                    self.initSettingsTab();\n\n                    var img = $('amazonVariationProductManageTabs_settings').down('img');\n\n                    img.hide();\n                    if (response.error_icon != '') {\n                        img.src = M2ePro.url.get('m2epro_skin_url') + '/images/' + response.error_icon + '.png';\n                        img.show();\n                    }\n\n                    if (callback) {\n                        callback.call();\n                    }\n                }\n            });\n        },\n\n        reloadVariationsGrid: function () {\n            ListingProductVariationManageVariationsGridObj.actionHandler.gridHandler.unselectAllAndReload();\n        },\n\n        // ---------------------------------------\n\n        openVariationsTab: function (createNewAsin) {\n            jQuery('#amazonVariationProductManageTabs').tabs('option', 'active', 0);\n            ListingProductVariationManageVariationsGridObj.showNewChildForm(\n                createNewAsin,\n                ListingGridHandlerObj.variationProductManageHandler.variationProductManagePopup.productId\n            );\n        },\n\n        // ---------------------------------------\n\n        reloadVocabulary: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_vocabulary/viewVocabularyAjax'), {\n                method: 'post',\n                parameters: {\n                    product_id: self.variationProductManagePopup.productId\n                },\n                onSuccess: function (transport) {\n                    $('amazonVariationProductManageTabs_vocabulary_content').update(transport.responseText);\n                }\n            });\n        },\n\n        saveAutoActionSettings: function () {\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_manage/saveAutoActionSettings'), {\n                method: 'post',\n                parameters: $('auto_action_settings_form').serialize(true)\n            });\n        },\n\n        removeAttributeFromVocabulary: function (el) {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_vocabulary/removeAttribute'), {\n                            method: 'post',\n                            parameters: {\n                                magento_attr: decodeHtmlentities(el.up().down('.magento-attribute-name').innerHTML),\n                                channel_attr: decodeHtmlentities(el.up().down('.channel-attribute-name').innerHTML)\n                            },\n                            onSuccess: function (transport) {\n                                self.reloadVocabulary();\n                            }\n                        });\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        removeOptionFromVocabulary: function (el) {\n            var self = this,\n                optionGroupRowEl = el.up('.channel-attribute-options-group');\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_vocabulary/removeOption'), {\n                            method: 'post',\n                            parameters: {\n                                product_option: decodeHtmlentities(optionGroupRowEl.down('.product-option').innerHTML),\n                                product_options_group: decodeHtmlentities(optionGroupRowEl.down('.product-options-group').innerHTML),\n                                channel_attr: decodeHtmlentities(optionGroupRowEl.down('.channel-attribute-name').innerHTML)\n                            },\n                            onSuccess: function (transport) {\n                                self.reloadVocabulary();\n                            }\n                        });\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/Product/Variation/Manage/Tabs/Variations/Grid.js":"define([\n    'M2ePro/Plugin/Messages',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Listing/View/Grid',\n    'M2ePro/Amazon/Listing/View/Action',\n    'M2ePro/Amazon/Listing/Product/Template/Description'\n], function (MessageObj, modal) {\n\n    window.AmazonListingProductVariationManageTabsVariationsGrid = Class.create(ListingViewGrid, {\n\n        // ---------------------------------------\n\n        initialize: function($super,gridId,listingId)\n        {\n            this.messageObj = Object.create(MessageObj);\n            this.messageObj.setContainer('#listing_product_variation_action_messages_container');\n\n            $super(gridId,listingId);\n        },\n\n        // ---------------------------------------\n\n        getLogViewUrl: function (rowId) {\n            var idField = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Block\\\\Adminhtml\\\\Log\\\\Listing\\\\Product\\\\AbstractGrid::LISTING_PRODUCT_ID_FIELD');\n\n            var params = {};\n            params[idField] = rowId;\n\n            return M2ePro.url.get('amazon_log_listing_product/index', params);\n        },\n\n        // ---------------------------------------\n\n        getComponent: function () {\n            return 'amazon';\n        },\n\n        // ---------------------------------------\n\n        getMaxProductsInPart: function () {\n            return 1000;\n        },\n\n        // ---------------------------------------\n\n        prepareActions: function ($super) {\n            this.actionHandler = new AmazonListingViewAction(this);\n\n            this.actions = {\n                listAction: this.actionHandler.listAction.bind(this.actionHandler),\n                relistAction: this.actionHandler.relistAction.bind(this.actionHandler),\n                reviseAction: this.actionHandler.reviseAction.bind(this.actionHandler),\n                stopAction: this.actionHandler.stopAction.bind(this.actionHandler),\n                stopAndRemoveAction: this.actionHandler.stopAndRemoveAction.bind(this.actionHandler),\n                previewItemsAction: this.actionHandler.previewItemsAction.bind(this.actionHandler),\n                startTranslateAction: this.actionHandler.startTranslateAction.bind(this.actionHandler),\n                stopTranslateAction: this.actionHandler.stopTranslateAction.bind(this.actionHandler)\n            };\n\n            this.templateDescriptionHandler = new AmazonListingProductTemplateDescription(this);\n\n            this.actions = Object.extend(this.actions, {\n                deleteAndRemoveAction: this.actionHandler.deleteAndRemoveAction.bind(this.actionHandler)\n            });\n        },\n\n        // ---------------------------------------\n\n        parseResponse: function (response) {\n            if (!response.responseText.isJSON()) {\n                return;\n            }\n\n            return response.responseText.evalJSON();\n        },\n\n        // ---------------------------------------\n\n        afterInitPage: function ($super) {\n            $super();\n\n            $$('.attributes-options-filter').each(this.initAttributesOptionsFilter, this);\n        },\n\n        initAttributesOptionsFilter: function (filterEl) {\n            var srcElement = Element.down(filterEl, 'select');\n\n            srcElement.observe('change', this.onAttributesOptionsFilterChange.bind(this));\n\n            var valuesDiv = Element.down(filterEl, '.attributes-options-filter-values');\n            valuesDiv.optionsCount = valuesDiv.childElementCount;\n\n            if (valuesDiv.optionsCount == srcElement.childElementCount - 1) {\n                srcElement.hide();\n            }\n\n            valuesDiv.optionsIterator = 0;\n            valuesDiv.childElements().each(function (attrValue) {\n\n                var removeImg = Element.down(attrValue, '.filter-param-remove'),\n                    attrName = Element.down(attrValue, 'input[type=\"hidden\"]'),\n                    selectedOption = Element.down(filterEl, 'select option[value=\"' + attrName.value + '\"]');\n\n                selectedOption.hide();\n\n                valuesDiv.optionsIterator++;\n\n                removeImg.show();\n                removeImg.observe('click', function () {\n                    valuesDiv.optionsCount--;\n                    selectedOption.show();\n                    srcElement.show();\n                    Element.remove(attrValue);\n                });\n            }, this);\n        },\n\n        onAttributesOptionsFilterChange: function (e) {\n            var srcElement = e.target || e.srcElement,\n                parentDiv = Element.up(srcElement, '.attributes-options-filter'),\n                valuesDiv = Element.down(parentDiv, '.attributes-options-filter-values'),\n                selectedOption = Element.down(srcElement, '[value=\"' + srcElement.value + '\"]');\n\n            selectedOption.hide();\n\n            valuesDiv.optionsCount++;\n            valuesDiv.optionsIterator++;\n\n            srcElement.enable();\n            if (valuesDiv.optionsCount == srcElement.childElementCount - 1) {\n                srcElement.hide();\n            }\n\n            var filterName = parentDiv.id.replace('attributes-options-filter_', '');\n\n            var newOptionContainer = new Element('div'),\n                newOptionLabel = new Element('div'),\n                newOptionValue = new Element('input', {\n                    type: 'text',\n                    style: 'width: 85%;',\n                    name: filterName + '[' + valuesDiv.optionsIterator + '][value]'\n                }),\n                newOptionAttr = new Element('input', {\n                    type: 'hidden',\n                    name: filterName + '[' + valuesDiv.optionsIterator + '][attr]',\n                    value: srcElement.value\n                }),\n                removeImg = Element.clone(Element.down(parentDiv, '.attributes-options-filter-selector .filter-param-remove'));\n\n            newOptionLabel.innerHTML = srcElement.value + ': ';\n            removeImg.show();\n\n            Event.observe(newOptionValue, 'keypress', this.getGridObj().filterKeyPress.bind(this.getGridObj()));\n\n            newOptionContainer.insert({bottom: newOptionLabel});\n            newOptionContainer.insert({bottom: newOptionValue});\n            newOptionContainer.insert({bottom: newOptionAttr});\n            newOptionContainer.insert({bottom: removeImg});\n\n            valuesDiv.insert({bottom: newOptionContainer});\n\n            removeImg.observe('click', function () {\n                valuesDiv.optionsCount--;\n                selectedOption.show();\n                srcElement.show();\n                newOptionContainer.remove();\n            }, this);\n\n            srcElement.value = '';\n        },\n\n        editProductOptions: function (el, attributes, variationsTree, listingProductId) {\n            this.renderProductOptionsForm(el, attributes, variationsTree, listingProductId);\n            this.validateAttributeOptions(el, variationsTree);\n\n            var mainContainer = Element.up(el, '.product-options-main'),\n                listContainer = Element.down(mainContainer, '.product-options-list'),\n                form = mainContainer.down('.product-options-edit'),\n                options = form.select('select.product-option');\n\n            var productOptions = [];\n            listContainer.select('.attribute-row').each(function (el) {\n                productOptions.push(el.down('.value').innerHTML);\n            });\n\n            var i = 0;\n            options.each(function (el) {\n                el.setValue(productOptions[i]).simulate('change');\n                i++;\n            });\n        },\n\n        renderProductOptionsForm: function (el, attributes, variationsTree, listingProductId) {\n            var mainContainer = Element.up(el, '.product-options-main'),\n                editContainer = Element.down(mainContainer, '.product-options-edit'),\n                listContainer = Element.down(mainContainer, '.product-options-list'),\n                self = this;\n\n            el.hide();\n            listContainer && listContainer.hide();\n\n            for (var i = 0; i < attributes.length; i++) {\n\n                var optionContainer = new Element('div'),\n                    optionLabel = new Element('div'),\n                    optionValue = new Element('select', {\n                        class: 'product-option admin__control-select',\n                        style: 'width: 100%',\n                        name: 'product_options[values][]'\n                    }),\n                    optionAttr = new Element('input', {\n                        class: 'product-attribute',\n                        type: 'hidden',\n                        name: 'product_options[attr][]',\n                        value: attributes[i]\n                    });\n\n                optionLabel.update(attributes[i] + ': ');\n                optionValue.observe('change', function () {\n                    self.validateAttributeOptions(el, variationsTree);\n                });\n\n                optionContainer.insert({bottom: optionLabel});\n                optionContainer.insert({bottom: optionValue});\n                optionContainer.insert({bottom: optionAttr});\n\n                editContainer.insert({bottom: optionContainer});\n            }\n\n            var confirmBtn = new Element('button', {\n                    class: 'action primary confirm-btn',\n                    style: 'font-size: 1.1rem; margin-top: 8px; margin-right: 9px;'\n                }),\n                cancelBtn = new Element('a', {\n                    href: 'javascript:void(0);',\n                    class: 'scalable',\n                    style: 'line-height: 27px; margin: 7px 8px;'\n                }),\n                listingProductIdEl = new Element('input', {\n                    type: 'hidden',\n                    name: 'product_id',\n                    value: listingProductId\n                }),\n                errorMsg = new Element('p', {\n                    class: 'error',\n                    style: 'display: none;'\n                });\n\n            confirmBtn.update(M2ePro.translator.translate('Confirm'));\n            confirmBtn.observe('click', function (event) {\n                event.stop();\n                var data = editContainer.serialize(true);\n\n                if (!self.validateAttributeOptions(el, variationsTree)) {\n                    var errorMsg = editContainer.down('p.error');\n                    errorMsg.show();\n                    errorMsg.innerHTML = M2ePro.translator.translate('error_changing_product_options');\n                    return;\n                }\n\n                new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_manage/setChildListingProductOptions'), {\n                    method: 'post',\n                    parameters: data,\n                    onSuccess: function (transport) {\n\n                        var response = self.parseResponse(transport);\n\n                        if (response['vocabulary_attribute_options']) {\n                            ListingGridHandlerObj.variationProductManageHandler.openVocabularyOptionsPopUp(response['vocabulary_attribute_options']);\n                            return;\n                        }\n\n                        if (response.success) {\n                            self.actionHandler.gridHandler.unselectAllAndReload();\n                        }\n                    }\n                });\n\n                el.show();\n                listContainer && listContainer.show();\n                editContainer.childElements().each(Element.remove);\n            });\n\n            cancelBtn.update(M2ePro.translator.translate('Cancel'));\n            cancelBtn.observe('click', function (event) {\n                event.stop();\n                el.show();\n                listContainer && listContainer.show();\n                editContainer.childElements().each(Element.remove);\n            });\n\n            editContainer.insert({bottom: listingProductIdEl});\n            editContainer.insert({bottom: errorMsg});\n            editContainer.insert({bottom: cancelBtn});\n            editContainer.insert({bottom: confirmBtn});\n        },\n\n        validateAttributeOptions: function (el, variations, i) {\n            var variation = $H(variations),\n                mainContainer = Element.up(el, '.product-options-main'),\n                form = mainContainer.down('.product-options-edit'),\n                attributes = form.select('input.product-attribute'),\n                options = form.select('select.product-option'),\n\n                index = i || 0,\n                valid = false;\n\n            if (index === 0) {\n                options.each(function (el) {\n                    el.disable();\n                });\n            }\n\n            if (!attributes[index] || !options[index]) {\n                if (variation.size() === 0) {\n                    valid = true;\n                    options.each(function (el) {\n                        if (el.value == '') {\n                            valid = false;\n                            throw $break;\n                        }\n                    });\n\n                    return valid;\n                }\n            }\n\n            var attr = variation.keys()[0];\n            attributes[index].value = attr;\n\n            var oldValue = options[index].value;\n            options[index].update();\n            options[index].enable();\n            options[index].appendChild(new Element('option', {style: 'display: none'}));\n\n            $H(variation.get(attr)).each(function (option) {\n                options[index].appendChild(new Element('option', {value: option[0]})).insert(option[0]);\n\n                if (option[0] == oldValue) {\n                    options[index].value = oldValue;\n                }\n            });\n\n            if (oldValue && variation.get(attr)[oldValue]) {\n                index++;\n                valid = this.validateAttributeOptions(el, variation.get(attr)[oldValue], index);\n            }\n\n            return valid;\n        },\n\n        // ---------------------------------------\n\n        showNewChildForm: function (createNewAsin, productId) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_manage/getNewChildForm'), {\n                method: 'post',\n                parameters: {\n                    product_id: productId\n                },\n                onSuccess: function (transport) {\n\n                    var containerEl = $('variation_manager_product_options_form_container');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    self.newChildPopup = jQuery('#variation_manager_product_options_form_container');\n\n                    modal({\n                        title: M2ePro.translator.translate('Add New Child Product'),\n                        type: 'slide',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            click: function () {\n                                self.newChildPopup.modal('closeModal')\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Confirm'),\n                            class: 'action primary ',\n                            click: function () {\n                                self.addNewChildProduct();\n                                self.newChildPopup.modal('closeModal')\n                            }\n                        }]\n                    }, self.newChildPopup);\n\n                    self.newChildPopup.modal('openModal');\n\n                    $$('#manage_variations_new_child_product_variation select').each(function (el) {\n                        el.select('option').invoke('remove');\n                    });\n\n                    $$('#manage_variations_new_child_channel_variation select').each(function (el) {\n                        el.select('option').invoke('remove');\n                    });\n\n                    $('new_child_product_product_options_error').hide();\n                    $('new_child_product_channel_options_error').hide();\n\n                    self.validateNewChildAttributeOptions('product');\n                    self.validateNewChildAttributeOptions('channel');\n\n                    if (createNewAsin) {\n                        self.createNewAsinBtn();\n                    } else {\n                        self.selectOptionsBtn();\n                    }\n\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        validateNewChildAttributeOptions: function (type, variations, i) {\n            if (!$('variation_manager_unused_' + type + '_variations_tree')) {\n                return true;\n            }\n\n            var variation = $H(variations || decodeHtmlentities($('variation_manager_unused_' + type + '_variations_tree').innerHTML).evalJSON()),\n                attributes = $$('.new-child-' + type + '-attribute'),\n                options = $$('.new-child-' + type + '-option'),\n                index = i || 0,\n                valid = false;\n\n            if (type == 'product') {\n                var channelOptions = $$('.new-child-channel-option'),\n                    formData = $('variation_manager_product_options_form').serialize(true);\n            }\n\n            if (index === 0) {\n                options.each(function (el) {\n                    el.disable();\n                });\n            }\n\n            if (!attributes[index] || !options[index]) {\n                if (variation.size() === 0) {\n                    valid = this.validateNewChild();\n                }\n                return valid;\n            }\n\n            var attr = variation.keys()[0];\n            attributes[index].value = attr;\n\n            var oldValue = options[index].value;\n            options[index].update();\n            options[index].enable();\n            options[index].appendChild(new Element('option', {style: 'display: none'}));\n\n            if (type == 'product' && formData.create_new_asin == 1) {\n                var channelEl = $('new_child_product_channel_option_' + index);\n\n                channelEl.update();\n                channelEl.appendChild(new Element('option', {value: oldValue})).insert(oldValue);\n                channelEl.value = oldValue;\n            }\n\n            $H(variation.get(attr)).each(function (option) {\n                options[index].appendChild(new Element('option', {value: option[0]})).insert(option[0]);\n\n                if (option[0] == oldValue) {\n                    options[index].value = oldValue;\n                }\n            });\n\n            if (oldValue) {\n                index++;\n                valid = this.validateNewChildAttributeOptions(type, variation.get(attr)[oldValue], index);\n            }\n\n            return valid;\n        },\n\n        validateNewChild: function (showErrors) {\n            var data = $('variation_manager_product_options_form').serialize(true),\n                valid = true;\n\n            $('new_child_product_product_options_error').hide();\n            $$('#manage_variations_new_child_product_variation select').each(function (el) {\n                if (el.value == '') {\n                    showErrors && $('new_child_product_product_options_error').show();\n                    valid = false;\n                    throw $break;\n                }\n            });\n\n            if (data.create_new_asin != 1) {\n                $('new_child_product_channel_options_error').hide();\n                $$('#manage_variations_new_child_channel_variation select').each(function (el) {\n                    if (el.value == '') {\n                        showErrors && $('new_child_product_channel_options_error').show();\n                        valid = false;\n                        throw $break;\n                    }\n                });\n            }\n\n            return valid;\n        },\n\n        // ---------------------------------------\n\n        addNewChildProduct: function () {\n            var self = this,\n                data;\n\n            if (!self.validateNewChild(true)) {\n                return;\n            }\n\n            data = $('variation_manager_product_options_form').serialize(true);\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_variation_manage/createNewChild'), {\n                method: 'post',\n                parameters: data,\n                onSuccess: function (transport) {\n                    var response = self.parseResponse(transport);\n                    if (response.msg) {\n                        self.messageObj.clear();\n                        self.messageObj['add' + response.type[0].toUpperCase() + response.type.slice(1) + 'Message'](response.msg);\n                    }\n\n                    if (response['vocabulary_attribute_options']) {\n                        ListingGridHandlerObj.variationProductManageHandler.openVocabularyOptionsPopUp(response['vocabulary_attribute_options']);\n                        return;\n                    }\n\n                    self.actionHandler.gridHandler.unselectAllAndReload();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        createNewAsinBtn: function () {\n            var optEl = $('manage_variations_select_options'),\n                newAsinLinkEl = $('manage_variations_create_new_asin');\n\n            optEl && optEl.show().down('input').enable();\n\n            $('new_child_product_channel_options_error_row').setStyle({visibility: 'hidden'});\n            newAsinLinkEl && newAsinLinkEl.hide();\n\n            $$('.new-child-channel-option').each(function (el) {\n                el.disable();\n            });\n\n            $('manage_variations_create_new_asin_title').show();\n\n            ListingProductVariationManageVariationsGridObj.validateNewChildAttributeOptions('product');\n        },\n\n        selectOptionsBtn: function () {\n            var optEl = $('manage_variations_select_options'),\n                newAsinEl = $('manage_variations_create_new_asin');\n\n            optEl && optEl.hide().down('input').disable();\n\n            $('new_child_product_channel_options_error_row').setStyle({visibility: 'visible'});\n            newAsinEl && newAsinEl.show();\n\n            $$('.new-child-channel-option').each(function (el) {\n                el.enable();\n                el.update();\n            });\n\n            $('manage_variations_create_new_asin_title').hide();\n\n            ListingProductVariationManageVariationsGridObj.validateNewChildAttributeOptions('channel');\n        },\n\n        // ---------------------------------------\n\n        unselectAllAndReload: function ($super) {\n            $super();\n\n            ListingGridHandlerObj.variationProductManageHandler.reloadSettings(null);\n            ListingGridHandlerObj.variationProductManageHandler.reloadVocabulary(null);\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/Product/Add/SourceMode/Category/Summary/Grid.js":"define([\n    'M2ePro/Grid'\n], function () {\n\n    window.AmazonListingProductAddSourceModeCategorySummaryGrid = Class.create(Grid, {\n\n        // ---------------------------------------\n\n        prepareActions: function () {\n            this.actions = {\n                removeAction: this.remove.bind(this)\n            };\n        },\n\n        // ---------------------------------------\n\n        remove: function () {\n            var self = this;\n\n            Grid.prototype.confirm({\n                actions: {\n                    confirm: function () {\n                        var url = M2ePro.url.get('amazon_listing_product_add/removeSessionProductsByCategory');\n                        new Ajax.Request(url, {\n                            parameters: {\n                                ids: self.getSelectedProductsString()\n                            },\n                            onSuccess: self.unselectAllAndReload.bind(self)\n                        });\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        confirm: function (config) {\n            if (config.actions && config.actions.confirm) {\n                config.actions.confirm();\n            }\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/Product/Add/NewAsin/Template/Description/Grid.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Listing/View/Grid',\n    'M2ePro/Amazon/Listing/View/Action',\n    'M2ePro/Amazon/Listing/Product/Template/Description'\n], function (modal, MessageObj) {\n\n    window.AmazonListingProductAddNewAsinTemplateDescriptionGrid = Class.create(ListingViewGrid, {\n\n        // ---------------------------------------\n\n        getComponent: function () {\n            return 'amazon';\n        },\n\n        // ---------------------------------------\n\n        getMaxProductsInPart: function () {\n            return 1000;\n        },\n\n        // ---------------------------------------\n\n        prepareActions: function ($super) {\n            $super();\n            this.actionHandler = new AmazonListingViewAction(this);\n            this.templateDescriptionHandler = new AmazonListingProductTemplateDescription(this);\n\n            this.actions = Object.extend(this.actions, {\n\n                setDescriptionTemplateAction: (function () {\n                    this.mapToNewAsin(this.getSelectedProductsString())\n                }).bind(this),\n                resetDescriptionTemplateAction: (function () {\n                    this.unmapFromNewAsin(this.getSelectedProductsString())\n                }).bind(this),\n\n                setDescriptionTemplateByCategoryAction: (function () {\n                    this.mapToNewAsin(this.getSelectedProductsStringFromCategory())\n                }).bind(this),\n                resetDescriptionTemplateByCategoryAction: (function () {\n                    this.unmapFromNewAsin(this.getSelectedProductsStringFromCategory())\n                }).bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        parseResponse: function (response) {\n            if (!response.responseText.isJSON()) {\n                return;\n            }\n\n            return response.responseText.evalJSON();\n        },\n\n        // ---------------------------------------\n\n        afterInitPage: function ($super) {\n            $super();\n        },\n\n        setDescriptionTemplateRowAction: function (id) {\n            this.mapToNewAsin(id);\n        },\n\n        resetDescriptionTemplateRowAction: function (id) {\n            this.unmapFromNewAsin(id);\n        },\n\n        // ---------------------------------------\n\n        setDescriptionTemplateByCategoryRowAction: function (id) {\n            this.mapToNewAsin(this.getSelectedProductsStringFromCategory(id));\n        },\n\n        resetDescriptionTemplateByCategoryRowAction: function (id) {\n            this.unmapFromNewAsin(this.getSelectedProductsStringFromCategory(id));\n        },\n\n        // ---------------------------------------\n\n        getSelectedProductsStringFromCategory: function (categoryIds) {\n            var productsIdsStr = '';\n\n            categoryIds = categoryIds || this.getGridMassActionObj().checkedString;\n            categoryIds = explode(',', categoryIds);\n\n            categoryIds.each(function (categoryId) {\n\n                if (productsIdsStr != '') {\n                    productsIdsStr += ',';\n                }\n                productsIdsStr += $('products_ids_' + categoryId).value;\n            });\n\n            return productsIdsStr;\n        },\n\n        // ---------------------------------------\n\n        mapToNewAsin: function (listingProductIds) {\n            var self = this;\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product/mapToNewAsin'), {\n                method: 'post',\n                parameters: {\n                    products_ids: listingProductIds\n                },\n                onSuccess: function (transport) {\n\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return;\n                    }\n\n                    var response = transport.responseText.evalJSON();\n\n                    self.templateDescriptionHandler.gridHandler.unselectAllAndReload();\n\n                    if (response.products_ids.length > 0) {\n                        ListingGridHandlerObj.templateDescriptionHandler.openPopUp(\n                            0, M2ePro.translator.translate('templateDescriptionPopupTitle'),\n                            response.products_ids, response.html, 1);\n                    } else {\n                        if (response.messages.length > 0) {\n                            MessageObj.clear();\n                            response.messages.each(function (msg) {\n                                MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1) + 'Message'](msg.text);\n                            });\n                        }\n                    }\n                }\n            });\n        },\n\n        unmapFromNewAsin: function (productsIds) {\n            var self = this;\n\n            self.templateDescriptionHandler.gridHandler.unselectAll();\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product/unmapFromAsin'), {\n                method: 'post',\n                parameters: {\n                    products_ids: productsIds\n                },\n                onSuccess: function (transport) {\n\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return;\n                    }\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (response.type == 'success') {\n                        self.templateDescriptionHandler.unassignFromTemplateDescription(productsIds);\n                    }\n                }\n            });\n        },\n\n        mapToTemplateDescription: function (el, templateId, mapToGeneralId) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_template_description/assign'), {\n                method: 'post',\n                parameters: {\n                    products_ids: ListingGridHandlerObj.templateDescriptionHandler.templateDescriptionPopup.productsIds,\n                    template_id: templateId\n                },\n                onSuccess: function (transport) {\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return;\n                    }\n\n                    var response = transport.responseText.evalJSON();\n                    self.mapToNewAsin(response.products_ids);\n                }\n            });\n\n            ListingGridHandlerObj.templateDescriptionHandler.templateDescriptionPopup.modal('closeModal');\n        },\n\n        checkCategoryProducts: function (url) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_add/checkNewAsinCategoryProducts'), {\n                method: 'post',\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == 1) {\n                        setLocation(url);\n                    } else {\n                        if (!transport.responseText.isJSON()) {\n                            self.alert(transport.responseText);\n                            return;\n                        }\n\n                        var response = transport.responseText.evalJSON();\n\n                        MessageObj.clear();\n                        MessageObj['add' + response.type[0].toUpperCase() + response.type.slice(1) + 'Message'](response.text);\n                    }\n                }\n            });\n        },\n\n        checkManualProducts: function (url) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_add/checkNewAsinManualProducts'), {\n                method: 'post',\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == 1) {\n                        setLocation(url);\n                    } else {\n                        if (!transport.responseText.isJSON()) {\n                            self.alert(transport.responseText);\n                            return;\n                        }\n\n                        var response = transport.responseText.evalJSON();\n\n                        if ($('new_asin_skip_popup_content')) {\n                            $('new_asin_skip_popup_content').remove();\n                        }\n                        $('html-body').insert({bottom: response.html});\n\n                        $('total_count').innerHTML = response.total_count;\n                        $('failed_count').update(response.failed_count);\n\n                        self.skipPopup = jQuery('#new_asin_skip_popup_content');\n\n                        modal({\n                            title: M2ePro.translator.translate('setDescriptionPolicy'),\n                            type: 'popup',\n                            buttons: [ {\n                                text: M2ePro.translator.translate('Cancel'),\n                                class: 'action-secondary action-dismiss',\n                                click: function () {\n                                    self.skipPopup.modal('closeModal');\n                                }\n                            }, {\n                                text: M2ePro.translator.translate('Continue'),\n                                class: 'action-primary action-accept',\n                                click: function () {\n                                    setLocation(response.continueUrl);\n                                    self.skipPopup.modal('closeModal');\n                                }\n                            }]\n                        }, self.skipPopup);\n\n                        self.skipPopup.modal('openModal');\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/Product/Add/SearchAsin/Grid.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Listing/View/Grid',\n    'M2ePro/Amazon/Listing/View/Action',\n    'M2ePro/Amazon/Listing/Product/Search'\n], function (modal, MessageObj) {\n\n    AmazonListingProductAddSearchAsinGrid = Class.create(ListingViewGrid, {\n\n        // ---------------------------------------\n\n        getComponent: function () {\n            return 'amazon';\n        },\n\n        // ---------------------------------------\n\n        getMaxProductsInPart: function () {\n            return 1000;\n        },\n\n        // ---------------------------------------\n\n        prepareActions: function ($super) {\n            $super();\n            this.actionHandler = new AmazonListingViewAction(this);\n            this.productSearchHandler = new AmazonListingProductSearch(this);\n\n            this.actions = Object.extend(this.actions, {\n\n                assignGeneralIdAction: (function () {\n                    this.productSearchHandler.searchGeneralIdAuto(this.getSelectedProductsString())\n                }).bind(this),\n                unassignGeneralIdAction: (function () {\n                    this.productSearchHandler.unmapFromGeneralId(this.getSelectedProductsString())\n                }).bind(this)\n\n            });\n\n            this.productSearchHandler.clearSearchResultsAndOpenSearchMenu = function () {\n                var self = this;\n\n                self.confirm({\n                    actions: {\n                        confirm: function () {\n                            self.popup.modal('closeModal');\n                            self.unmapFromGeneralId(self.params.productId);\n                        },\n                        cancel: function () {\n                            return false;\n                        }\n                    }\n                });\n            };\n        },\n\n        // ---------------------------------------\n\n        parseResponse: function (response) {\n            if (!response.responseText.isJSON()) {\n                return;\n            }\n\n            return response.responseText.evalJSON();\n        },\n\n        // ---------------------------------------\n\n        afterInitPage: function ($super) {\n            $super();\n        },\n\n        editSearchSettings: function (title, listingId) {\n            var self = this;\n\n            MessageObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_add/viewSearchSettings'), {\n                method: 'post',\n                parameters: {\n                    id: listingId\n                },\n                onSuccess: function (transport) {\n                    if (!$('edit_search_settings_popup')) {\n                        $('html-body').insert({bottom: '<div id=\"edit_search_settings_popup\"></div>'});\n                    }\n\n                    $('edit_search_settings_popup').update(transport.responseText);\n\n                    $('breadcrumb_container').remove();\n\n                    self.searchSettnigsPopup = jQuery('#edit_search_settings_popup');\n\n                    modal({\n                        title: title,\n                        type: 'slide',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Cancel'),\n                            click: function () {\n                                self.searchSettnigsPopup.modal('closeModal');\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Confirm'),\n                            class: 'action primary',\n                            click: function () {\n                                ListingGridHandlerObj.saveSearchSettings();\n                                self.searchSettnigsPopup.modal('closeModal');\n                            }\n                        }]\n                    }, self.searchSettnigsPopup);\n\n                    self.searchSettnigsPopup.modal('openModal');\n                    self.searchSettnigsPopup.listingId = listingId;\n                }\n            });\n        },\n\n        saveSearchSettings: function () {\n            var self = this,\n                data;\n\n            if (self.searchSettingsForm && !self.searchSettingsForm.validate()) {\n                return;\n            }\n\n            data = $('edit_form').serialize(true);\n            data.id = self.searchSettnigsPopup.listingId;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_add/saveSearchSettings'), {\n                method: 'post',\n                parameters: data,\n                onSuccess: function (transport) {\n                    self.actionHandler.gridHandler.unselectAllAndReload();\n                    self.searchSettnigsPopup.modal('closeModal');\n                }\n            });\n        },\n\n        checkSearchResults: function (listingId) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_add/checkSearchResults'), {\n                method: 'post',\n                parameters: {\n                    id: listingId\n                },\n                onSuccess: function (transport) {\n                    var response = self.parseResponse(transport);\n\n                    if (response.redirect) {\n                        return setLocation(response.redirect);\n                    }\n\n                    if (!$('search_asin_new_asin_popup')) {\n                        $('html-body').insert({bottom: response.html});\n                    }\n\n                    self.newAsinPopup = jQuery('#search_asin_new_asin_popup');\n\n                    modal({\n                        title: M2ePro.translator.translate('new_asin_popup_title'),\n                        type: 'popup',\n                        buttons: [{\n                            class: 'action-secondary action-dismiss',\n                            text: M2ePro.translator.translate('No'),\n                            click: function () {\n                                self.showNewAsinPopup(0);\n                            }\n                        }, {\n                            text: M2ePro.translator.translate('Yes'),\n                            class: 'action-primary action-accept',\n                            click: function () {\n                                self.showNewAsinPopup(1);\n                            }\n                        }]\n                    }, self.newAsinPopup);\n\n                    var modalHeader = jQuery('#search_asin_new_asin_popup')\n                                        .closest('.modal-inner-wrap')\n                                        .find('h1.modal-title'),\n                        tips = jQuery('#new_asin_title_help_tips');\n\n                    tips.insertAfter(modalHeader);\n                    tips.show();\n\n                    self.newAsinPopup.modal('openModal');\n                    self.newAsinPopup.listingId = listingId;\n                }\n            });\n        },\n\n        showNewAsinPopup: function (showNewAsinStep) {\n            var self = this,\n                remember = $('asin_search_new_asin_remember_checkbox').checked;\n\n            new Ajax.Request(M2ePro.url.get('amazon_listing_product_add/showNewAsinStep'), {\n                method: 'post',\n                parameters: {\n                    show_new_asin_step: +showNewAsinStep,\n                    remember: +remember,\n                    id: self.newAsinPopup.listingId\n                },\n                onSuccess: function (transport) {\n                    var response = self.parseResponse(transport);\n\n                    if (response.redirect) {\n                        return setLocation(response.redirect);\n                    }\n                }\n            });\n\n            self.newAsinPopup.modal('closeModal');\n        },\n\n        // ---------------------------------------\n\n        showNotCompletedPopup: function () {\n            var self = this;\n\n            if (!$('not_completed_popup')) {\n                $('html-body').insert({bottom: '<div id=\"not_completed_popup\">' + M2ePro.translator.translate('not_completed_popup_text') + '</div>'});\n            }\n\n            var popup = jQuery('#not_completed_popup');\n\n            modal({\n                title: M2ePro.translator.translate('not_completed_popup_title'),\n                type: 'popup',\n                buttons: [{\n                    text: M2ePro.translator.translate('Close'),\n                    class: 'action-secondary action-dismiss',\n                    click: function () {\n                        popup.modal('closeModal');\n                    }\n                }]\n            }, popup);\n\n            popup.modal('openModal');\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/Create/Selling.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    window.AmazonListingCreateSelling = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function () {\n            jQuery.validator.addMethod('M2ePro-validate-condition-note-length', function(value) {\n                if ($('condition_note_mode').value != M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::CONDITION_NOTE_MODE_CUSTOM_VALUE')) {\n                    return true;\n                }\n\n                return value.length <= 2000;\n            }, M2ePro.translator.translate('condition_note_length_error'));\n\n            jQuery.validator.addMethod('M2ePro-validate-sku-modification-custom-value', function(value) {\n                if ($('sku_modification_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::SKU_MODIFICATION_MODE_NONE')) {\n                    return true;\n                }\n\n                if ($('sku_modification_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::SKU_MODIFICATION_MODE_TEMPLATE')) {\n                    return value.match(/%value%/g);\n                }\n\n                return true;\n            }, M2ePro.translator.translate('sku_modification_custom_value_error'));\n\n            jQuery.validator.addMethod('M2ePro-validate-sku-modification-custom-value-max-length', function(value) {\n                if ($('sku_modification_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::SKU_MODIFICATION_MODE_NONE')) {\n                    return true;\n                }\n\n                if ($('sku_modification_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::SKU_MODIFICATION_MODE_TEMPLATE')) {\n                    value = value.replace('%value%', '');\n                }\n\n                return value.length < M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing_Product_Action_Type_ListAction_Validator_Sku_General::SKU_MAX_LENGTH');\n            }, M2ePro.translator.translate('sku_modification_custom_value_max_length_error'));\n        },\n\n        // ---------------------------------------\n\n        getAvailableConstantsForImages: function () {\n            return [\n                M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::CONDITION_USED_LIKE_NEW'),\n                M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::CONDITION_USED_VERY_GOOD'),\n                M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::CONDITION_USED_GOOD'),\n                M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::CONDITION_USED_ACCEPTABLE'),\n                M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::CONDITION_COLLECTIBLE_LIKE_NEW'),\n                M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::CONDITION_COLLECTIBLE_VERY_GOOD'),\n                M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::CONDITION_COLLECTIBLE_GOOD'),\n                M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::CONDITION_COLLECTIBLE_ACCEPTABLE'),\n            ];\n        },\n\n        // ---------------------------------------\n\n        sku_mode_change: function () {\n            var self = AmazonListingCreateSellingObj;\n\n            $('sku_custom_attribute').value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::SKU_MODE_CUSTOM_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('sku_custom_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n\n        sku_modification_mode_change: function () {\n            if ($('sku_modification_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::SKU_MODIFICATION_MODE_TEMPLATE')) {\n                $('sku_modification_custom_value').value = '%value%';\n            } else {\n                $('sku_modification_custom_value').value = '';\n            }\n\n            if ($('sku_modification_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::SKU_MODIFICATION_MODE_NONE')) {\n                $('sku_modification_custom_value_tr').hide();\n            } else {\n                $('sku_modification_custom_value_tr').show();\n            }\n        },\n\n        // ---------------------------------------\n\n        condition_mode_change: function () {\n            var self = AmazonListingCreateSellingObj,\n                attributeCode = this.options[this.selectedIndex].getAttribute('attribute_code'),\n                condition_note_mode = $('condition_note_mode'),\n                conditionValue = $('condition_value'),\n                conditionCustomAttribute = $('condition_custom_attribute');\n\n            $('magento_block_amazon_listing_add_images-wrapper').hide();\n            $('condition_note_mode_tr').show();\n            $('condition_note_value_tr').show();\n\n            conditionValue.value = '';\n            conditionCustomAttribute.value = '';\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::CONDITION_MODE_DEFAULT')) {\n                self.updateHiddenValue(this, conditionValue);\n\n                if (attributeCode == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::CONDITION_NEW')) {\n                    $('condition_note_mode_tr').hide();\n                    $('condition_note_value_tr').hide();\n                } else {\n                    self.condition_note_mode_change();\n                }\n\n                if (self.getAvailableConstantsForImages().indexOf(attributeCode) == -1) {\n                    $('image_main_attribute').value = '';\n                    $('image_main_mode').selectedIndex = M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::IMAGE_MAIN_MODE_NONE');\n                    $('image_main_mode').simulate('change');\n                } else {\n                    $('magento_block_amazon_listing_add_images-wrapper').show();\n                }\n            } else {\n                self.updateHiddenValue(this, conditionCustomAttribute);\n                $('condition_note_mode_tr').show();\n                self.condition_note_mode_change();\n\n                $('magento_block_amazon_listing_add_images-wrapper').show();\n            }\n        },\n\n        // ---------------------------------------\n\n        image_main_mode_change: function () {\n            var self = AmazonListingCreateSellingObj;\n\n            $('gallery_images_mode_tr').show();\n\n            $('image_main_attribute').value = '';\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::IMAGE_MAIN_MODE_NONE')) {\n                $('gallery_images_mode_tr').hide();\n                $('gallery_images_limit').value = '';\n                $('gallery_images_attribute').value = '';\n                $('gallery_images_mode').selectedIndex = M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::GALLERY_IMAGES_MODE_NONE');\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::IMAGE_MAIN_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('image_main_attribute'));\n            }\n        },\n\n        gallery_images_mode_change: function () {\n            var self = AmazonListingCreateSellingObj;\n\n            $('gallery_images_limit').value = '';\n            $('gallery_images_attribute').value = '';\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::GALLERY_IMAGES_MODE_PRODUCT')) {\n                self.updateHiddenValue(this, $('gallery_images_limit'));\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::GALLERY_IMAGES_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('gallery_images_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n\n        gift_wrap_mode_change: function () {\n            var self = AmazonListingCreateSellingObj;\n\n            $('gift_wrap_attribute').value = '';\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::GIFT_WRAP_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('gift_wrap_attribute'));\n            }\n        },\n\n        gift_message_mode_change: function () {\n            var self = AmazonListingCreateSellingObj;\n\n            $('gift_message_attribute').value = '';\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::GIFT_MESSAGE_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('gift_message_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n\n        condition_note_mode_change: function () {\n            var self = AmazonListingCreateSellingObj;\n\n            if ($('condition_note_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::CONDITION_NOTE_MODE_CUSTOM_VALUE')) {\n                $('condition_note_value_tr').show();\n            } else {\n                $('condition_note_value_tr').hide();\n            }\n        },\n\n        handling_time_mode_change: function () {\n            var self = AmazonListingCreateSellingObj;\n\n            $('handling_time_custom_attribute').value = '';\n            $('handling_time_value').value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::HANDLING_TIME_MODE_RECOMMENDED')) {\n                self.updateHiddenValue(this, $('handling_time_value'));\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::HANDLING_TIME_MODE_CUSTOM_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('handling_time_custom_attribute'));\n            }\n        },\n\n        restock_date_mode_change: function () {\n            var self = AmazonListingCreateSellingObj;\n\n            $('restock_date_value_tr').hide();\n\n            $('restock_date_custom_attribute').value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::RESTOCK_DATE_MODE_CUSTOM_VALUE')) {\n                $('restock_date_value_tr').show();\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::RESTOCK_DATE_MODE_CUSTOM_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('restock_date_custom_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n\n        appendToText: function (ddId, targetId) {\n            if ($(ddId).value == '') {\n                return;\n            }\n\n            var attributePlaceholder = '#' + $(ddId).value + '#',\n                element = $(targetId);\n\n            if (document.selection) {\n                /* IE */\n                element.focus();\n                document.selection.createRange().text = attributePlaceholder;\n                element.focus();\n            } else if (element.selectionStart || element.selectionStart == '0') {\n                /* Webkit */\n                var startPos = element.selectionStart,\n                    endPos = element.selectionEnd,\n                    scrollTop = element.scrollTop,\n                    tempValue;\n\n                tempValue = element.value.substring(0, startPos);\n                tempValue += attributePlaceholder;\n                tempValue += element.value.substring(endPos, element.value.length);\n                element.value = tempValue;\n\n                element.focus();\n                element.selectionStart = startPos + attributePlaceholder.length;\n                element.selectionEnd = startPos + attributePlaceholder.length;\n                element.scrollTop = scrollTop;\n            } else {\n                element.value += attributePlaceholder;\n                element.focus();\n            }\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/Create/General.js":"define([\n    'underscore',\n    'Magento_Ui/js/modal/alert',\n    'M2ePro/Amazon/Listing/Create/General/MarketplaceSynchProgress',\n    'M2ePro/Plugin/ProgressBar',\n    'M2ePro/Plugin/AreaWrapper'\n], function (_, alert) {\n\n    window.AmazonListingCreateGeneral = Class.create();\n    AmazonListingCreateGeneral.prototype = {\n\n        marketplaceSynchProgressObj: null,\n        accounts: null,\n        selectedAccountId: null,\n\n        // ---------------------------------------\n\n        initialize: function () {\n            var self = this;\n\n            self.marketplaceSynchProgressObj = new AmazonListingCreateGeneralMarketplaceSynchProgress(\n                new ProgressBar('progress_bar'),\n                new AreaWrapper('content_container')\n            );\n\n            CommonObj.setValidationCheckRepetitionValue(\n                'M2ePro-listing-title',\n                M2ePro.translator.translate('The specified Title is already used for other Listing. Listing Title must be unique.'),\n                'Listing', 'title', 'id', null, M2ePro.php.constant('Ess_M2ePro_Helper_Component_Amazon::NICK')\n            );\n\n            self.initAccount();\n            self.initMarketplace();\n        },\n\n        initAccount: function () {\n            var self = this;\n\n            $('account_id').observe('change', function() {\n                self.selectedAccountId = this.value;\n\n                if (this.value == '') {\n                    $('marketplace_info').hide();\n                    return;\n                }\n\n                var account = _.findWhere(self.accounts, {id: this.value});\n                if (!_.isUndefined(account)) {\n                    $('marketplace_info').show();\n                    $('marketplace_id').value = account.marketplace_id;\n                    $('marketplace_title').innerHTML = account.marketplace_title;\n                    $('marketplace_url').innerHTML = account.marketplace_url;\n                }\n            });\n\n            self.renderAccounts();\n\n            $('add_account_button').observe('click', function() {\n                var win = window.open(M2ePro.url.get('amazon_account/newAction'));\n\n                var intervalId = setInterval(function() {\n\n                    if (!win.closed) {\n                        return;\n                    }\n\n                    clearInterval(intervalId);\n\n                    self.renderAccounts();\n\n                }, 1000);\n            });\n        },\n\n        initMarketplace: function () {\n            var self = this;\n\n            $('save_and_next').observe('click', function() {\n                if (self.marketplaceSynchProgressObj.runningNow) {\n                    alert({\n                        content: M2ePro.translator.translate('Please wait while Synchronization is finished.')\n                    });\n                    return;\n                }\n                jQuery('#edit_form').valid() && self.synchronizeMarketplace($('marketplace_id').value);\n            });\n        },\n\n        renderAccounts: function (callback) {\n            var self = this;\n\n            var account_add_btn = $('add_account_button');\n            var account_label_el = $('account_label');\n            var account_select_el = $('account_id');\n            var marketplace_info = $('marketplace_info');\n\n            //firefox can't simulate events for disabled elements\n            if (account_select_el.disabled) {\n                account_select_el.enable();\n                self.accountDisabled = true;\n            }\n\n            new Ajax.Request(M2ePro.url.get('general/getAccounts'), {\n                method: 'get',\n                onSuccess: function(transport) {\n                    var accounts = transport.responseText.evalJSON();\n\n                    if (_.isNull(self.accounts)) {\n                        self.accounts = accounts;\n                    }\n\n                    if (_.isNull(self.selectedAccountId)) {\n                        self.selectedAccountId = account_select_el.value;\n                    }\n\n                    var isAccountsChanged = !self.isAccountsEqual(accounts);\n\n                    if (isAccountsChanged) {\n                        self.accounts = accounts;\n                    }\n\n                    if (accounts.length == 0) {\n                        account_add_btn.down('span').update(M2ePro.translator.translate('Add'));\n                        account_label_el.update(M2ePro.translator.translate('Account not found, please create it.'));\n                        account_label_el.show();\n                        account_select_el.hide();\n                        marketplace_info.hide();\n                        return;\n                    }\n\n                    marketplace_info.show();\n\n                    account_select_el.update();\n                    account_select_el.appendChild(new Element('option', {style: 'display: none'}));\n                    accounts.each(function(account) {\n                        account_select_el.appendChild(new Element('option', {value: account.id})).insert(account.title);\n                    });\n\n                    account_add_btn.down('span').update(M2ePro.translator.translate('Add Another'));\n\n                    if (accounts.length === 1) {\n                        var account = _.first(accounts);\n\n                        self.selectedAccountId = account.id;\n\n                        var accountElement;\n\n                        if (M2ePro.formData.wizard) {\n                            accountElement = new Element('span').update(account.title);\n                        } else {\n                            var accountLink = M2ePro.url.get('amazon_account/edit', {'id': account.id, close_on_save: 1});\n                            accountElement = new Element('a', {\n                                'href': accountLink,\n                                'target': '_blank'\n                            }).update(account.title);\n                        }\n\n                        account_label_el.update(accountElement);\n\n                        account_label_el.show();\n                        account_select_el.hide();\n                    } else if (isAccountsChanged) {\n                        self.selectedAccountId = _.last(accounts).id;\n\n                        account_label_el.hide();\n                        account_select_el.show();\n                    }\n\n                    account_select_el.setValue(self.selectedAccountId);\n\n                    account_select_el.simulate('change');\n\n                    //firefox can't simulate events for disabled elements\n                    if (self.accountDisabled) {\n                        account_select_el.disable();\n                    }\n\n                    callback && callback();\n                }\n            });\n        },\n\n        synchronizeMarketplace: function (marketplaceId) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('general/isMarketplaceEnabled'), {\n                method: 'get',\n                parameters: { marketplace_id: marketplaceId },\n                onSuccess: function(transport) {\n\n                    var result = transport.responseText.evalJSON();\n                    if (result.status) {\n                        return self.marketplaceSynchProgressObj.end();\n                    }\n\n                    var title = 'Amazon ' + $('marketplace_title').innerHTML;\n\n                    $('save_and_next').disable();\n\n                    self.marketplaceSynchProgressObj.runTask(\n                        title,\n                        M2ePro.url.get('amazon_marketplace/runSynchNow', {marketplace_id: marketplaceId})\n                    );\n                }\n            });\n        },\n\n        isAccountsEqual: function (newAccounts) {\n            if (!newAccounts.length && !this.accounts.length) {\n                return true;\n            }\n\n            if (newAccounts.length !== this.accounts.length) {\n                return false;\n            }\n\n            return _.every(this.accounts, function (account) {\n                return _.where(newAccounts, account).length > 0;\n            });\n        }\n\n        // ---------------------------------------\n    };\n});","Ess_M2ePro/js/Amazon/Listing/Create/Search.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    window.AmazonListingCreateSearch = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function () {\n\n        },\n\n        // ---------------------------------------\n\n        general_id_mode_change: function () {\n            var self = AmazonListingCreateSearchObj;\n\n            $('general_id_custom_attribute').value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::GENERAL_ID_MODE_CUSTOM_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('general_id_custom_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n\n        worldwide_id_mode_change: function () {\n            var self = AmazonListingCreateSearchObj;\n\n            $('worldwide_id_custom_attribute').value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Listing::WORLDWIDE_ID_MODE_CUSTOM_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('worldwide_id_custom_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Listing/Create/General/MarketplaceSynchProgress.js":"define([\n    'M2ePro/SynchProgress'\n], function () {\n    AmazonListingCreateGeneralMarketplaceSynchProgress = Class.create(SynchProgress, {\n\n        // ---------------------------------------\n\n        runningNow: false,\n\n        // ---------------------------------------\n\n        start: function ($super, title, status) {\n            $super(title, status);\n            this.runningNow = true;\n        },\n\n        end: function ($super) {\n            $super();\n            this.runningNow = false;\n            this.saveClick(M2ePro.url.get('amazon_listing_create/index'), true)\n        },\n\n        runTask: function (title, url, callBackWhenEnd) {\n            title = title || '';\n            url = url || '';\n            callBackWhenEnd = callBackWhenEnd || '';\n\n            if (url == '') {\n                return;\n            }\n\n            var self = this;\n            new Ajax.Request(M2ePro.url.get('general/synchCheckState'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == self.stateExecuting) {\n\n                        self.start(\n                            M2ePro.translator.translate('Another Synchronization Is Already Running.'),\n                            M2ePro.translator.translate('Getting information. Please wait ...')\n                        );\n\n                        setTimeout(function () {\n                            self.startGetExecutingInfo('self.runTask(\\'' + title + '\\',\\'' + url + '\\',\"' + callBackWhenEnd + '\");');\n                        }, 2000);\n\n                    } else {\n\n                        self.start(title, M2ePro.translator.translate('Preparing to start. Please wait ...'));\n\n                        new Ajax.Request(url, {\n                            method: 'get', asynchronous: true\n                        });\n\n                        setTimeout(function () {\n                            self.startGetExecutingInfo(callBackWhenEnd);\n                        }, 2000);\n                    }\n                }\n            });\n        },\n\n        startGetExecutingInfo: function (callBackWhenEnd) {\n            callBackWhenEnd = callBackWhenEnd || '';\n\n            var self = this;\n            new Ajax.Request(M2ePro.url.get('general/synchGetExecutingInfo'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function (transport) {\n\n                    var data = transport.responseText.evalJSON(true);\n\n                    if (data.mode == self.stateExecuting) {\n\n                        self.progressBarObj.setTitle(data.title);\n                        if (data.percents <= 0) {\n                            self.progressBarObj.setPercents(0, 0);\n                        } else if (data.percents >= 100) {\n                            self.progressBarObj.setPercents(100, 0);\n                        } else {\n                            self.progressBarObj.setPercents(data.percents, 1);\n                        }\n                        self.progressBarObj.setStatus(data.status);\n\n                        self.wrapperObj.lock();\n                        $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n\n                        setTimeout(function () {\n                            self.startGetExecutingInfo(callBackWhenEnd);\n                        }, 3000);\n\n                    } else {\n\n                        self.progressBarObj.setPercents(100, 0);\n\n                        // ---------------------------------------\n                        setTimeout(function () {\n\n                            if (callBackWhenEnd != '') {\n                                eval(callBackWhenEnd);\n                            } else {\n                                self.end();\n                            }\n\n                        }, 1500);\n                        // ---------------------------------------\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Account.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Common',\n    'extjs/ext-tree-checkbox',\n    'mage/adminhtml/form'\n], function(modal){\n\n    window.EbayAccount = Class.create(Common, {\n\n    // ---------------------------------------\n\n    initialize: function()\n    {\n        this.setValidationCheckRepetitionValue('M2ePro-account-title',\n            M2ePro.translator.translate('The specified Title is already used for other Account. Account Title must be unique.'),\n            'Account', 'title', 'id',\n            M2ePro.formData.id,\n            M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay::NICK')\n        );\n\n        jQuery.validator.addMethod('M2ePro-account-token-session', function(value) {\n            return value != '';\n        }, M2ePro.translator.translate('You must get token.'));\n\n        jQuery.validator.addMethod('M2ePro-account-customer-id', function(value) {\n\n            var checkResult = false;\n\n            if ($('magento_orders_customer_id_container').getStyle('display') == 'none') {\n                return true;\n            }\n\n            new Ajax.Request(M2ePro.url.get('general/checkCustomerId'), {\n                method: 'post',\n                asynchronous: false,\n                parameters: {\n                    customer_id : value,\n                    id          : M2ePro.formData.id\n                },\n                onSuccess: function(transport) {\n                    checkResult = transport.responseText.evalJSON()['ok'];\n                }\n            });\n\n            return checkResult;\n        }, M2ePro.translator.translate('No Customer entry is found for specified ID.'));\n\n        jQuery.validator.addMethod('M2ePro-account-order-number-prefix', function(value) {\n\n            if ($('magento_orders_number_prefix_mode').value == 0) {\n                return true;\n            }\n\n            return value.length <= 5;\n        }, M2ePro.translator.translate('Prefix length should not be greater than 5 characters.'));\n\n        jQuery.validator.addMethod('M2ePro-account-feedback-templates', function(value) {\n\n            if (value == 0) {\n                return true;\n            }\n\n            var checkResult = false;\n\n            new Ajax.Request(M2ePro.url.get('ebay_account_feedback/templateCheck'), {\n                method: 'post',\n                asynchronous: false,\n                parameters: {\n                    id: M2ePro.formData.id\n                },\n                onSuccess: function(transport) {\n                    checkResult = transport.responseText.evalJSON()['ok'];\n                }\n            });\n\n            return checkResult;\n        }, M2ePro.translator.translate('You should create at least one Response Template.'));\n\n        jQuery.validator.addMethod('M2ePro-require-select-attribute', function(value, el) {\n\n            if ($('other_listings_mapping_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::OTHER_LISTINGS_MAPPING_MODE_NO')) {\n                return true;\n            }\n\n            var isAttributeSelected = false;\n\n            $$('.attribute-mode-select').each(function(obj) {\n                if (obj.value != 0) {\n                    isAttributeSelected = true;\n                }\n            });\n\n            return isAttributeSelected;\n        }, M2ePro.translator.translate('If Yes is chosen, you must select at least one Attribute for Product Mapping.'));\n    },\n\n    initObservers: function()\n    {\n        if (!M2ePro.formData.id) {\n            return;\n        }\n\n        //tab listingOther\n        $('other_listings_synchronization')\n            .observe('change', this.other_listings_synchronization_change)\n            .simulate('change');\n        $('other_listings_mapping_mode')\n            .observe('change', this.other_listings_mapping_mode_change)\n            .simulate('change');\n        $('mapping_sku_mode')\n            .observe('change', this.mapping_sku_mode_change)\n            .simulate('change');\n        $('mapping_title_mode')\n            .observe('change', this.mapping_title_mode_change)\n            .simulate('change');\n\n        //$('ebayAccountEditTabs_listingOther').removeClassName('changed');\n\n        //tab orders\n        $('magento_orders_listings_mode').observe('change', this.magentoOrdersListingsModeChange).simulate('change');\n        $('magento_orders_listings_store_mode').observe('change', this.magentoOrdersListingsStoreModeChange).simulate('change');\n\n        $('magento_orders_listings_other_mode').observe('change', this.magentoOrdersListingsOtherModeChange).simulate('change');\n        $('magento_orders_listings_other_product_mode').observe('change', this.magentoOrdersListingsOtherProductModeChange);\n\n        $('magento_orders_number_source').observe('change', this.magentoOrdersNumberSourceChange);\n        $('magento_orders_number_prefix_mode').observe('change', this.magentoOrdersNumberPrefixModeChange).simulate('change');\n        $('magento_orders_number_prefix_prefix').observe('keyup', this.magentoOrdersNumberPrefixPrefixChange).simulate('change');\n        EbayAccountObj.renderOrderNumberExample();\n\n        $('magento_orders_customer_mode').observe('change', this.magentoOrdersCustomerModeChange).simulate('change');\n\n        $('magento_orders_status_mapping_mode').observe('change', this.magentoOrdersStatusMappingModeChange);\n\n        $('magento_orders_creation_mode').observe('change', this.magentoOrdersCreationModeChange).simulate('change');\n\n        $('order_number_example-note').previous().remove();\n    },\n\n    // ---------------------------------------\n\n    saveAndClose: function()\n    {\n        var self = this,\n            url = typeof M2ePro.url.urls.formSubmit == 'undefined' ?\n                M2ePro.url.formSubmit + 'back/'+Base64.encode('list')+'/' :\n                M2ePro.url.get('formSubmit', {'back': Base64.encode('list')});\n\n        if (!this.isValidForm()) {\n            return;\n        }\n\n        new Ajax.Request(url, {\n            method: 'post',\n            parameters: Form.serialize($('edit_form')),\n            onSuccess: function(transport) {\n                transport = transport.responseText.evalJSON();\n\n                if (transport.success) {\n                    window.close();\n                } else {\n                    self.alert(transport.message);\n                }\n            }\n        });\n    },\n\n    // ---------------------------------------\n\n    deleteClick: function()\n    {\n        this.confirm({\n            content: M2ePro.translator.translate('Be attentive! By Deleting Account you delete all information on it from M2E Pro Server. This will cause inappropriate work of all Accounts\\' copies.'),\n            actions: {\n                confirm: function () {\n                    setLocation(M2ePro.url.get('deleteAction'));\n                },\n                cancel: function () {\n                    return false;\n                }\n            }\n        });\n    },\n\n    // ---------------------------------------\n\n    get_token: function()\n    {\n        if ($('token_session').value == '') {\n            $('token_session').value = '0';\n        }\n        if ($('token_expired_date').value == '') {\n            $('token_expired_date').value = '0';\n        }\n\n        if (!jQuery('#edit_form').valid()) {\n            return;\n        }\n\n        this.submitForm(M2ePro.url.get('ebay_account/beforeGetToken', {'id': M2ePro.formData.id}));\n    },\n\n    // ---------------------------------------\n\n    feedbacksReceiveChange: function()\n    {\n        var self = EbayAccountObj ;\n\n        if ($('feedbacks_receive').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::FEEDBACKS_RECEIVE_YES')) {\n            $('feedbacks_auto_response_container').show();\n        } else {\n            $('feedbacks_auto_response_container').hide();\n\n        }\n        $('feedbacks_auto_response').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::FEEDBACKS_AUTO_RESPONSE_NONE');\n        self.feedbacksAutoResponseChange();\n    },\n\n    feedbacksAutoResponseChange: function()\n    {\n        if ($('feedbacks_auto_response').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::FEEDBACKS_AUTO_RESPONSE_NONE')) {\n            $('feedbacks_auto_response_only_positive_container').hide();\n            $('feedback_templates_grid_container').hide();\n        } else {\n            $('feedbacks_auto_response_only_positive_container').show();\n            $('feedback_templates_grid_container').show();\n        }\n    },\n\n    // ---------------------------------------\n\n    openFeedbackTemplatePopup: function(templateId)\n    {\n        var self = this;\n\n        new Ajax.Request(M2ePro.url.get('ebay_account_feedback_template/getForm'), {\n            method: 'GET',\n            parameters: {\n                id: templateId\n            },\n            onSuccess: function(transport) {\n\n                var response = transport.responseText.evalJSON();\n\n                var container = $('edit_feedback_template_form_container');\n\n                if (container) {\n                    container.remove();\n                }\n\n                $('html-body').insert({\n                    bottom: '<div id=\"edit_feedback_template_form_container\">' + response.html + '</div>'\n                });\n\n                self.initFormValidation('#edit_feedback_template_form');\n\n                self.feedbackTemplatePopup = jQuery('#edit_feedback_template_form_container');\n\n                modal({\n                    title: response.title,\n                    type: 'popup',\n                    modalClass: 'width-50',\n                    buttons: [{\n                        text: M2ePro.translator.translate('Cancel'),\n                        class: 'action-secondary action-dismiss',\n                        click: function () {\n                            self.feedbackTemplatePopup.modal('closeModal');\n                        }\n                    },{\n                        text: M2ePro.translator.translate('Save'),\n                        class: 'action-primary',\n                        click: function () {\n                            if (!jQuery('#edit_feedback_template_form').valid()) {\n                                return false;\n                            }\n\n                            new Ajax.Request(M2ePro.url.get('ebay_account_feedback_template/save'), {\n                                parameters: $('edit_feedback_template_form').serialize(true),\n                                onSuccess: function() {\n                                    self.feedbackTemplatePopup.modal('closeModal');\n                                    $('add_feedback_template_button_container').hide();\n                                    $('feedback_templates_grid').show();\n                                    window['ebayAccountEditTabsFeedbackGridJsObject'].reload();\n                                }\n                            });\n                        }\n                    }]\n                }, self.feedbackTemplatePopup);\n\n                self.feedbackTemplatePopup.modal('openModal');\n            }\n        });\n    },\n\n    // ---------------------------------------\n\n    feedbacksDeleteAction: function(id)\n    {\n        this.confirm({\n            actions: {\n                confirm: function () {\n                    new Ajax.Request(M2ePro.url.get('ebay_account_feedback_template/delete'), {\n                        method: 'post',\n                        parameters: {\n                            id: id\n                        },\n                        onSuccess: function() {\n                            if ($('ebayAccountEditTabsFeedbackGrid').select('tbody tr').length == 1) {\n                                $('add_feedback_template_button_container').show();\n                                $('feedback_templates_grid').hide();\n                            }\n\n                            window['ebayAccountEditTabsFeedbackGridJsObject'].reload();\n                        }\n                    });\n                },\n                cancel: function () {\n                    return false;\n                }\n            }\n        });\n    },\n\n    // ---------------------------------------\n\n    ebayStoreUpdate: function()\n    {\n        var self = EbayAccountObj ;\n        self.submitForm(M2ePro.url.get('formSubmit', {'update_ebay_store': 1, 'back': Base64.encode('edit')}));\n    },\n\n    ebayStoreSelectCategory: function(id)\n    {\n        $('ebay_store_categories_selected_container').show();\n        $('ebay_store_categories_selected').value = id;\n    },\n\n    ebayStoreSelectCategoryHide: function()\n    {\n        $('ebay_store_categories_selected_container').hide();\n        $('ebay_store_categories_selected').value = '';\n    },\n\n    ebayStoreInitExtTree: function(categoriesTreeArray)\n    {\n        var tree = new Ext.tree.TreePanel('tree-div', {\n            animate: true,\n            enableDD: false,\n            containerScroll: true,\n            rootUIProvider: Ext.tree.CheckboxNodeUI,\n            rootVisible: false\n        });\n\n        tree.on('check', function(node, checked) {\n            varienElementMethods.setHasChanges(node.getUI().checkbox);\n            tree.getRootNode().cascade(function(n) {\n                var ui = n.getUI();\n                if(node !== n && ui.checkbox !== undefined) {\n                    ui.checkbox.checked = false;\n                }\n            });\n            EbayAccountObj.ebayStoreSelectCategory(node.attributes.id);\n        }, tree);\n\n        var root = new Ext.tree.TreeNode({\n            text: 'root',\n            draggable: false,\n            checked: 'false',\n            id: '__root__',\n            uiProvider: Ext.tree.CheckboxNodeUI\n        });\n\n        tree.setRootNode(root);\n\n        var buildCategoryTree = function (parent, config) {\n            if (!config) return null;\n\n            if (parent && config && config.length){\n\n                for (var i = 0; i < config.length; i++) {\n                    config[i].uiProvider = Ext.tree.CheckboxNodeUI;\n                    var node = new Ext.tree.TreeNode(config[i]);\n                    parent.appendChild(node);\n                    if(config[i].children) {\n                        buildCategoryTree(node, config[i].children);\n                    }\n                }\n            }\n        };\n\n        buildCategoryTree(root, categoriesTreeArray);\n\n        tree.addListener('click', function(node){\n            node.getUI().check(!node.getUI().checked());\n        });\n\n        tree.render();\n        root.expand();\n    },\n\n    // ---------------------------------------\n\n    magentoOrdersListingsModeChange: function()\n    {\n        var self = EbayAccountObj ;\n\n        if ($('magento_orders_listings_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_LISTINGS_MODE_YES')) {\n            $('magento_orders_listings_store_mode_container').show();\n        } else {\n            $('magento_orders_listings_store_mode_container').hide();\n            $('magento_orders_listings_store_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_LISTINGS_STORE_MODE_DEFAULT');\n        }\n\n        self.magentoOrdersListingsStoreModeChange();\n        self.changeVisibilityForOrdersModesRelatedBlocks();\n    },\n\n    magentoOrdersListingsStoreModeChange: function()\n    {\n        if ($('magento_orders_listings_store_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_LISTINGS_STORE_MODE_CUSTOM')) {\n            $('magento_orders_listings_store_id_container').show();\n        } else {\n            $('magento_orders_listings_store_id_container').hide();\n            $('magento_orders_listings_store_id').value = '';\n        }\n    },\n\n    magentoOrdersListingsOtherModeChange: function()\n    {\n        var self = EbayAccountObj ;\n\n        if ($('magento_orders_listings_other_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_LISTINGS_OTHER_MODE_YES')) {\n            $('magento_orders_listings_other_product_mode_container').show();\n            $('magento_orders_listings_other_store_id_container').show();\n        } else {\n            $('magento_orders_listings_other_product_mode_container').hide();\n            $('magento_orders_listings_other_store_id_container').hide();\n            $('magento_orders_listings_other_product_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_LISTINGS_OTHER_PRODUCT_MODE_IGNORE');\n            $('magento_orders_listings_other_store_id').value = '';\n        }\n\n        self.magentoOrdersListingsOtherProductModeChange();\n        self.changeVisibilityForOrdersModesRelatedBlocks();\n    },\n\n    magentoOrdersListingsOtherProductModeChange: function()\n    {\n        if ($('magento_orders_listings_other_product_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_LISTINGS_OTHER_PRODUCT_MODE_IGNORE')) {\n            $('magento_orders_listings_other_product_mode_note').hide();\n            $('magento_orders_listings_other_product_tax_class_id_container').hide();\n        } else {\n            $('magento_orders_listings_other_product_mode_note').show();\n            $('magento_orders_listings_other_product_tax_class_id_container').show();\n        }\n    },\n\n    magentoOrdersNumberSourceChange: function()\n    {\n        var self = EbayAccountObj ;\n        self.renderOrderNumberExample();\n    },\n\n    magentoOrdersNumberPrefixModeChange: function()\n    {\n        var self = EbayAccountObj ;\n\n        if ($('magento_orders_number_prefix_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_NUMBER_PREFIX_MODE_YES')) {\n            $('magento_orders_number_prefix_container').show();\n        } else {\n            $('magento_orders_number_prefix_container').hide();\n            $('magento_orders_number_prefix_prefix').value = '';\n        }\n\n        self.renderOrderNumberExample();\n    },\n\n    magentoOrdersNumberPrefixPrefixChange: function()\n    {\n        var self = EbayAccountObj ;\n        self.renderOrderNumberExample();\n    },\n\n    renderOrderNumberExample: function()\n    {\n        var orderNumber = $('sample_magento_order_id').value;\n        if ($('magento_orders_number_source').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_NUMBER_SOURCE_CHANNEL')) {\n            orderNumber = $('sample_ebay_order_id').value;\n        }\n\n        if ($('magento_orders_number_prefix_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_NUMBER_PREFIX_MODE_YES')) {\n            orderNumber = $('magento_orders_number_prefix_prefix').value + orderNumber;\n        }\n\n        $('order_number_example_container').update(orderNumber);\n    },\n\n    magentoOrdersCustomerModeChange: function()\n    {\n        var customerMode = $('magento_orders_customer_mode').value;\n\n        if (customerMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_CUSTOMER_MODE_PREDEFINED')) {\n            $('magento_orders_customer_id_container').show();\n            $('magento_orders_customer_id').addClassName('M2ePro-account-product-id');\n        } else {  // M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::ORDERS_CUSTOMER_MODE_GUEST') || M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::ORDERS_CUSTOMER_MODE_NEW')\n            $('magento_orders_customer_id_container').hide();\n            $('magento_orders_customer_id').value = '';\n            $('magento_orders_customer_id').removeClassName('M2ePro-account-product-id');\n        }\n\n        var action = (customerMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_CUSTOMER_MODE_NEW')) ? 'show' : 'hide';\n        $('magento_orders_customer_new_website_id_container')[action]();\n        $('magento_orders_customer_new_group_id_container')[action]();\n        $('magento_orders_customer_new_notifications_container')[action]();\n\n        if(action == 'hide') {\n            $('magento_orders_customer_new_website_id').value = '';\n            $('magento_orders_customer_new_group_id').value = '';\n            $('magento_orders_customer_new_notifications').value = '';\n        }\n    },\n\n    magentoOrdersInStorePickupStatusesModeChange: function()\n    {\n        if ($('magento_orders_in_store_pickup_statuses_mode').value == 1) {\n            $('magento_orders_in_store_pickup_statuses_ready_for_pickup_tr').show();\n            $('magento_orders_in_store_pickup_statuses_picked_up_tr').show();\n        } else {\n            $('magento_orders_in_store_pickup_statuses_ready_for_pickup_tr').hide();\n            $('magento_orders_in_store_pickup_statuses_picked_up_tr').hide();\n        }\n    },\n\n    magentoOrdersStatusMappingModeChange: function()\n    {\n        // Reset dropdown selected values to default\n        $('magento_orders_status_mapping_new').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_STATUS_MAPPING_NEW');\n        $('magento_orders_status_mapping_paid').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_STATUS_MAPPING_PAID');\n        $('magento_orders_status_mapping_shipped').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_STATUS_MAPPING_SHIPPED');\n        // Default auto create invoice & shipping\n        $('magento_orders_invoice_mode').checked = true;\n        $('magento_orders_shipment_mode').checked = true;\n        var disabled = $('magento_orders_status_mapping_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_STATUS_MAPPING_MODE_DEFAULT');\n        $('magento_orders_status_mapping_new').disabled = disabled;\n        $('magento_orders_status_mapping_paid').disabled = disabled;\n        $('magento_orders_status_mapping_shipped').disabled = disabled;\n        $('magento_orders_invoice_mode').disabled = disabled;\n        $('magento_orders_shipment_mode').disabled = disabled;\n    },\n\n    magentoOrdersCreationModeChange: function()\n    {\n        var creationMode = $('magento_orders_creation_mode').value;\n\n        if (creationMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_CREATE_IMMEDIATELY')) {\n            $('magento_orders_creation_mode_immediately_warning').show();\n            $('magento_orders_creation_reservation_days_container').show();\n            $('magento_orders_qty_reservation_days').value = 1;\n            $('magento_orders_qty_reservation_days_container').hide();\n        } else {\n            $('magento_orders_creation_mode_immediately_warning').hide();\n            $('magento_orders_creation_reservation_days').value = 0;\n            $('magento_orders_creation_reservation_days_container').hide();\n            $('magento_orders_qty_reservation_days_container').show();\n        }\n    },\n\n    changeVisibilityForOrdersModesRelatedBlocks: function()\n    {\n        var self = EbayAccountObj ;\n\n        if ($('magento_orders_listings_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_LISTINGS_MODE_NO') &&\n            $('magento_orders_listings_other_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_LISTINGS_OTHER_MODE_NO')) {\n\n            $('magento_block_ebay_accounts_magento_orders_number-wrapper').hide();\n            $('magento_orders_number_source').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_NUMBER_SOURCE_MAGENTO');\n            $('magento_orders_number_prefix_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_NUMBER_PREFIX_MODE_NO');\n            self.magentoOrdersNumberPrefixModeChange();\n\n            $('magento_block_ebay_accounts_magento_orders_customer-wrapper').hide();\n            $('magento_orders_customer_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_CUSTOMER_MODE_GUEST');\n            self.magentoOrdersCustomerModeChange();\n\n            $('magento_block_ebay_accounts_magento_orders_status_mapping-wrapper').hide();\n            $('magento_orders_status_mapping_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_STATUS_MAPPING_MODE_DEFAULT');\n            self.magentoOrdersStatusMappingModeChange();\n\n            $('magento_block_ebay_accounts_magento_orders_rules-wrapper').hide();\n            $('magento_orders_creation_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_CREATE_CHECKOUT_AND_PAID');\n            $('magento_orders_creation_reservation_days').value = 0;\n            $('magento_orders_qty_reservation_days').value = 1;\n\n            $('magento_block_ebay_accounts_magento_orders_tax-wrapper').hide();\n            $('magento_orders_tax_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::MAGENTO_ORDERS_TAX_MODE_MIXED');\n        } else {\n            $('magento_block_ebay_accounts_magento_orders_number-wrapper').show();\n            $('magento_block_ebay_accounts_magento_orders_customer-wrapper').show();\n            $('magento_block_ebay_accounts_magento_orders_status_mapping-wrapper').show();\n            $('magento_block_ebay_accounts_magento_orders_rules-wrapper').show();\n            $('magento_block_ebay_accounts_magento_orders_tax-wrapper').show();\n        }\n    },\n\n    // ---------------------------------------\n\n    other_listings_synchronization_change: function()\n    {\n        var relatedStoreViews = $('magento_block_ebay_accounts_other_listings_related_store_views-wrapper');\n\n        if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::OTHER_LISTINGS_SYNCHRONIZATION_YES')) {\n            $('other_listings_mapping_mode_tr').show();\n            $('other_listings_mapping_mode').simulate('change');\n            if (relatedStoreViews) {\n                relatedStoreViews.show();\n            }\n        } else {\n            $('other_listings_mapping_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::OTHER_LISTINGS_MAPPING_MODE_NO');\n            $('other_listings_mapping_mode').simulate('change');\n            $('other_listings_mapping_mode_tr').hide();\n            if (relatedStoreViews) {\n                relatedStoreViews.hide();\n            }\n        }\n    },\n\n    other_listings_mapping_mode_change: function()\n    {\n        if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::OTHER_LISTINGS_MAPPING_MODE_YES')) {\n            $('magento_block_ebay_accounts_other_listings_product_mapping-wrapper').show();\n        } else {\n            $('magento_block_ebay_accounts_other_listings_product_mapping-wrapper').hide();\n\n            $('mapping_sku_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::OTHER_LISTINGS_MAPPING_SKU_MODE_NONE');\n            $('mapping_title_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::OTHER_LISTINGS_MAPPING_TITLE_MODE_NONE');\n        }\n\n        $('mapping_sku_mode').simulate('change');\n        $('mapping_title_mode').simulate('change');\n    },\n\n    synchronization_mapped_change: function()\n    {\n       if (this.value == 0) {\n           $('settings_button').hide();\n       } else {\n           $('settings_button').show();\n       }\n    },\n\n    mapping_sku_mode_change: function()\n    {\n        var self        = EbayAccountObj ,\n            attributeEl = $('mapping_sku_attribute');\n\n        $('mapping_sku_priority').hide();\n        if (this.value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::OTHER_LISTINGS_MAPPING_SKU_MODE_NONE')) {\n            $('mapping_sku_priority').show();\n        }\n\n        attributeEl.value = '';\n        if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::OTHER_LISTINGS_MAPPING_SKU_MODE_CUSTOM_ATTRIBUTE')) {\n            self.updateHiddenValue(this, attributeEl);\n        }\n    },\n\n    mapping_title_mode_change: function()\n    {\n        var self        = EbayAccountObj ,\n            attributeEl = $('mapping_title_attribute');\n\n        $('mapping_title_priority').hide();\n        if (this.value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::OTHER_LISTINGS_MAPPING_TITLE_MODE_NONE')) {\n            $('mapping_title_priority').show();\n        }\n\n        attributeEl.value = '';\n        if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Account::OTHER_LISTINGS_MAPPING_TITLE_MODE_CUSTOM_ATTRIBUTE')) {\n            self.updateHiddenValue(this, attributeEl);\n        }\n    }\n\n    // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Ebay/MarketplaceSynchProgress.js":"define([\n    'M2ePro/Plugin/Messages',\n    'M2ePro/SynchProgress'\n], function(MessageObj) {\n\n    window.EbayMarketplaceSynchProgress = Class.create(SynchProgress, {\n\n        // ---------------------------------------\n\n        printFinalMessage: function (resultType) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_marketplace/isExistDeletedCategories'), {\n                method: 'post',\n                asynchronous: true,\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == 1) {\n                        MessageObj.addWarningMessage(str_replace(\n                            '%url%',\n                            M2ePro.url.get('ebay_category/index', {filter: base64_encode('state=0')}),\n                            M2ePro.translator.translate('Some eBay Categories were deleted from eBay. Click <a target=\"_blank\" href=\"%url%\">here</a> to check.')\n                        ));\n                    }\n\n                    if (resultType == self.resultTypeError) {\n                        MessageObj.addErrorMessage(str_replace(\n                            '%url%',\n                            M2ePro.url.get('logViewUrl'),\n                            M2ePro.translator.translate('Synchronization ended with errors. <a target=\"_blank\" href=\"%url%\">View Log</a> for details.')\n                        ));\n                    } else if (resultType == self.resultTypeWarning) {\n                        MessageObj.addWarningMessage(str_replace(\n                            '%url%',\n                            M2ePro.url.get('logViewUrl'),\n                            M2ePro.translator.translate('Synchronization ended with warnings. <a target=\"_blank\" href=\"%url%\">View Log</a> for details.')\n                        ));\n                    } else {\n                        MessageObj.addSuccessMessage(M2ePro.translator.translate('Synchronization has successfully ended.'));\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Configuration/General.js":"define(['knockout'], function(ko){\n    return {\n        mode: ko.observable()\n    }\n});","Ess_M2ePro/js/Ebay/Configuration/Account/ListingOther.js":"define(['knockout'], function(ko){\n    return {\n        synchronization: ko.observable(),\n        mappingMode: ko.observable(),\n        mappingSkuMode: ko.observable(),\n        mappingTitleMode: ko.observable(),\n    }\n});","Ess_M2ePro/js/Ebay/Template/Synchronization.js":"define([\n    'M2ePro/Common',\n    'Magento_Ui/js/modal/confirm'\n], function () {\n\n    window.EbayTemplateSynchronization = Class.create(Common, {\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            var self = this;\n            jQuery.validator.addMethod('M2ePro-validate-qty', function(value, el) {\n\n                if (self.isElementHiddenFromPage(el)) {\n                    return true;\n                }\n\n                if (value.match(/[^\\d]+/g) || value <= 0) {\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('Wrong value. Only integer numbers.'));\n\n            // ---------------------------------------\n            jQuery.validator.addMethod('M2ePro-validate-conditions-between', function(value, el) {\n\n                var minValue = $(el.id.replace('_max','')).value;\n\n                if (!el.up('.admin__field').visible()) {\n                    return true;\n                }\n\n                return parseInt(value) > parseInt(minValue);\n            }, M2ePro.translator.translate('Must be greater than \"Min\".'));\n            // ---------------------------------------\n\n            // ---------------------------------------\n            jQuery.validator.addMethod('M2ePro-validate-stop-relist-conditions-product-status', function(value, el) {\n\n                if (EbayTemplateSynchronizationObj.isRelistModeDisabled()) {\n                    return true;\n                }\n\n                if ($('stop_status_disabled').value == 1 && $('relist_status_enabled').value == 0) {\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('Inconsistent Settings in Relist and Stop Rules.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-stop-relist-conditions-stock-availability', function(value, el) {\n\n                if (EbayTemplateSynchronizationObj.isRelistModeDisabled()) {\n                    return true;\n                }\n\n                if ($('stop_out_off_stock').value == 1 && $('relist_is_in_stock').value == 0) {\n                    return false;\n                }\n\n                return true;\n            },  M2ePro.translator.translate('Inconsistent Settings in Relist and Stop Rules.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-stop-relist-conditions-item-qty', function(value, el) {\n\n                if (EbayTemplateSynchronizationObj.isRelistModeDisabled()) {\n                    return true;\n                }\n\n                var stopMaxQty = 0,\n                    relistMinQty = 0;\n\n                var qtyType = el.getAttribute('qty_type');\n\n                switch (parseInt($('stop_qty_' + qtyType).value)) {\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::STOP_QTY_NONE'):\n                        return true;\n                        break;\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::STOP_QTY_LESS'):\n                        stopMaxQty = parseInt($('stop_qty_' + qtyType + '_value').value);\n                        break;\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::STOP_QTY_BETWEEN'):\n                        stopMaxQty = parseInt($('stop_qty_' + qtyType + '_value_max').value);\n                        break;\n                }\n\n                switch (parseInt($('relist_qty_' + qtyType).value)) {\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::RELIST_QTY_NONE'):\n                        return false;\n                        break;\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::RELIST_QTY_MORE'):\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::RELIST_QTY_BETWEEN'):\n                        relistMinQty = parseInt($('relist_qty_' + qtyType + '_value').value);\n                        break;\n                }\n\n                if (relistMinQty <= stopMaxQty) {\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('Inconsistent Settings in Relist and Stop Rules.'));\n            // ---------------------------------------\n\n            // ---------------------------------------\n            jQuery.validator.addMethod('M2ePro-validate-schedule-interval-date', function(value, el) {\n\n                if (!el.up('tr').visible()) {\n                    return true;\n                }\n\n                return el.value.match('^[0-9]{4}-[0-9]{2}-[0-9]{1,2}$');\n            }, M2ePro.translator.translate('Wrong value.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-schedule-week-days', function(value, el) {\n\n                var countOfCheckedDays = 0;\n\n                if (!EbayTemplateSynchronizationObj.isScheduleModeEnabled()) {\n                    return true;\n                }\n\n                $$('.schedule_week_day_mode').each(function(el) {\n                    el.checked && countOfCheckedDays++;\n                });\n\n                return countOfCheckedDays > 0;\n            }, M2ePro.translator.translate('You need to choose at set at least one time for the schedule to run.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-selected-schedule-time', function(value, el) {\n\n                var countUnselectedControls = 0;\n\n                if (!EbayTemplateSynchronizationObj.isScheduleModeEnabled()) {\n                    return true;\n                }\n\n                if (!el.up('tr').select('.schedule_week_day_mode').shift().checked) {\n                    return true;\n                }\n\n                el.up('td').select('select').each(function(el) {\n                    el.value == '' && countUnselectedControls++;\n                });\n\n                return countUnselectedControls == 0;\n            }, M2ePro.translator.translate('You should specify time.'));\n            // ---------------------------------------\n\n            // ---------------------------------------\n            jQuery.validator.addMethod('M2ePro-validate-schedule-wrong-interval-date', function(value, el) {\n\n                if (!el.up('tr').visible()) {\n                    return true;\n                }\n\n                var fromDate = new Date($('schedule_interval_date_from').value),\n                    toDate   = new Date(value);\n\n                return (toDate - fromDate) >= 0;\n            }, M2ePro.translator.translate('Must be greater than \"Active From\" Date.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-schedule-wrong-interval-time', function(value, el) {\n\n                if (!EbayTemplateSynchronizationObj.isScheduleModeEnabled()) {\n                    return true;\n                }\n\n                if (!el.up('tr').select('.schedule_week_day_mode').shift().checked) {\n                    return true;\n                }\n\n                var now      = new Date(),\n                    fromTime = new Date(now.toDateString() + ' ' + $(el.id.replace('validator_to','from')).value),\n                    toTime   = new Date(now.toDateString() + ' ' + $(el.id.replace('validator_to','to')).value);\n\n                return (toTime - fromTime) > 0;\n            }, M2ePro.translator.translate('Must be greater than \"From Time\".'));\n            // ---------------------------------------\n        },\n\n        initObservers: function()\n        {\n            //list\n            $('list_mode').observe('change', EbayTemplateSynchronizationObj.listMode_change).simulate('change');\n            $('list_qty_magento').observe('change', EbayTemplateSynchronizationObj.listQty_change).simulate('change');\n            $('list_qty_calculated').observe('change', EbayTemplateSynchronizationObj.listQty_change).simulate('change');\n            $('list_advanced_rules_mode').observe('change', EbayTemplateSynchronizationObj.listAdvancedRules_change).simulate('change');\n\n            //relist\n            $('relist_mode').observe('change', EbayTemplateSynchronizationObj.relistMode_change).simulate('change');\n            $('relist_qty_magento').observe('change', EbayTemplateSynchronizationObj.relistQty_change).simulate('change');\n            $('relist_qty_calculated').observe('change', EbayTemplateSynchronizationObj.relistQty_change).simulate('change');\n            $('relist_advanced_rules_mode').observe('change', EbayTemplateSynchronizationObj.relistAdvancedRules_change).simulate('change');\n\n            //revise\n            $('revise_update_qty').observe('change', EbayTemplateSynchronizationObj.reviseQty_change)\n                .simulate('change');\n\n            $('revise_update_qty_max_applied_value_mode').observe('change', EbayTemplateSynchronizationObj.reviseQtyMaxAppliedValueMode_change)\n                .simulate('change');\n\n            $('revise_update_price').observe('change', EbayTemplateSynchronizationObj.revisePrice_change)\n                .simulate('change');\n\n            $('revise_update_price_max_allowed_deviation_mode').observe('change', EbayTemplateSynchronizationObj.revisePriceMaxAllowedDeviationMode_change)\n                .simulate('change');\n\n            //stop\n            $('stop_qty_magento').observe('change', EbayTemplateSynchronizationObj.stopQty_change).simulate('change');\n            $('stop_qty_calculated').observe('change', EbayTemplateSynchronizationObj.stopQty_change).simulate('change');\n            $('stop_advanced_rules_mode').observe('change', EbayTemplateSynchronizationObj.stopAdvancedRules_change).simulate('change');\n        },\n\n        // ---------------------------------------\n\n        isRelistModeDisabled: function()\n        {\n            return $('relist_mode').value == 0;\n        },\n\n        isScheduleModeEnabled: function()\n        {\n            return $('schedule_mode').value == 1;\n        },\n\n        // ---------------------------------------\n\n        listMode_change: function()\n        {\n            var rulesContainer         = $('magento_block_ebay_template_synchronization_form_data_list_rules'),\n                advancedRulesContainer = $('magento_block_ebay_template_synchronization_list_advanced_filters');\n\n            rulesContainer.hide();\n            advancedRulesContainer.hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::LIST_MODE_YES')) {\n                rulesContainer.show();\n                advancedRulesContainer.show();\n            }\n        },\n\n        listQty_change: function()\n        {\n            var qtyType = this.getAttribute('qty_type');\n\n            var valueContainer    = $('list_qty_' + qtyType + '_value_container'),\n                valueMaxContainer = $('list_qty_' + qtyType + '_value_max_container'),\n                item              = valueContainer.select('label span')[0];\n\n            valueContainer.hide();\n            valueMaxContainer.hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::LIST_QTY_LESS') ||\n                this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::LIST_QTY_MORE')) {\n                item.innerHTML = M2ePro.translator.translate('Quantity');\n                valueContainer.show();\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::LIST_QTY_BETWEEN')) {\n                item.innerHTML = M2ePro.translator.translate('Min Quantity');\n                valueContainer.show();\n                valueMaxContainer.show();\n            }\n        },\n\n        listAdvancedRules_change: function()\n        {\n            var rulesContainer = $('list_advanced_rules_filters_container'),\n                warningContainer = $('list_advanced_rules_filters_warning');\n\n            rulesContainer.hide();\n            warningContainer.hide();\n\n            if (this.value == 1) {\n                rulesContainer.show();\n                warningContainer.show();\n            }\n        },\n\n        // ---------------------------------------\n\n        reviseQty_change: function()\n        {\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::REVISE_UPDATE_QTY_YES')) {\n                $('revise_update_qty_max_applied_value_mode_tr').show();\n                $('revise_update_qty_max_applied_value_line_tr').show();\n                $('revise_update_qty_max_applied_value_mode').simulate('change');\n            } else {\n                $('revise_update_qty_max_applied_value_mode_tr').hide();\n                $('revise_update_qty_max_applied_value_line_tr').hide();\n                $('revise_update_qty_max_applied_value_tr').hide();\n                $('revise_update_qty_max_applied_value_mode').value = M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::REVISE_MAX_AFFECTED_QTY_MODE_OFF');\n            }\n        },\n\n        reviseQtyMaxAppliedValueMode_change: function(event)\n        {\n            var self = EbayTemplateSynchronizationObj;\n\n            $('revise_update_qty_max_applied_value_tr').hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::REVISE_MAX_AFFECTED_QTY_MODE_ON')) {\n                $('revise_update_qty_max_applied_value_tr').show();\n            } else if(!event.cancelable) {\n                self.openReviseMaxAppliedQtyDisableConfirmationPopUp();\n            }\n        },\n\n        openReviseMaxAppliedQtyDisableConfirmationPopUp: function()\n        {\n            var self = this;\n\n            var element = jQuery('#revise_qty_max_applied_value_confirmation_popup_template').clone();\n\n            element.confirm({\n                title: M2ePro.translator.translate('Are you sure?'),\n                actions: {\n                    confirm: self.reviseQtyMaxAppliedValueDisableConfirm,\n                    cancel: self.reviseQtyMaxAppliedValueDisableCancel\n                },\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    class: 'action-secondary action-dismiss',\n                    click: function (event) {\n                        this.closeModal(event);\n                    }\n                }, {\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action-primary action-accept',\n                    click: function (event) {\n                        this.closeModal(event, true);\n                    }\n                }]\n            });\n        },\n\n        reviseQtyMaxAppliedValueDisableCancel: function()\n        {\n            $('revise_update_qty_max_applied_value_mode').selectedIndex = 1;\n            $('revise_update_qty_max_applied_value_mode').simulate('change');\n        },\n\n        reviseQtyMaxAppliedValueDisableConfirm: function()\n        {\n            $('revise_update_qty_max_applied_value_mode').selectedIndex = 0;\n            $('revise_update_qty_max_applied_value_mode').simulate('change');\n        },\n\n        // ---------------------------------------\n\n        revisePrice_change: function()\n        {\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::REVISE_UPDATE_PRICE_YES')) {\n                $('revise_update_price_max_allowed_deviation_mode_tr').show();\n                $('revise_update_price_max_allowed_deviation_tr').show();\n                $('revise_update_price_line').show();\n                $('revise_update_price_max_allowed_deviation_mode').simulate('change');\n            } else {\n                $('revise_update_price_max_allowed_deviation_mode_tr').hide();\n                $('revise_update_price_max_allowed_deviation_tr').hide();\n                $('revise_update_price_line').hide();\n                $('revise_update_price_max_allowed_deviation_mode').value = M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::REVISE_MAX_ALLOWED_PRICE_DEVIATION_MODE_OFF');\n            }\n        },\n\n        revisePriceMaxAllowedDeviationMode_change: function(event)\n        {\n            var self = EbayTemplateSynchronizationObj;\n\n            $('revise_update_price_max_allowed_deviation_tr').hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::REVISE_MAX_ALLOWED_PRICE_DEVIATION_MODE_ON')) {\n                $('revise_update_price_max_allowed_deviation_tr').show();\n            } else if (!event.cancelable) {\n                self.openReviseMaxAllowedDeviationPriceDisableConfirmationPopUp();\n            }\n        },\n\n        openReviseMaxAllowedDeviationPriceDisableConfirmationPopUp: function()\n        {\n            var self = this;\n\n            var element = jQuery('#revise_price_max_max_allowed_deviation_confirmation_popup_template').clone();\n\n            element.confirm({\n                title: M2ePro.translator.translate('Are you sure?'),\n                actions: {\n                    confirm: self.revisePriceMaxAllowedDeviationDisableConfirm,\n                    cancel: self.revisePriceMaxAllowedDeviationDisableCancel\n                },\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    class: 'action-secondary action-dismiss',\n                    click: function (event) {\n                        this.closeModal(event);\n                    }\n                }, {\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action-primary action-accept',\n                    click: function (event) {\n                        this.closeModal(event, true);\n                    }\n                }]\n            });\n        },\n\n        revisePriceMaxAllowedDeviationDisableCancel: function()\n        {\n            $('revise_update_price_max_allowed_deviation_mode').selectedIndex = 1;\n            $('revise_update_price_max_allowed_deviation_mode').simulate('change');\n        },\n\n        revisePriceMaxAllowedDeviationDisableConfirm: function()\n        {\n            $('revise_update_price_max_allowed_deviation_mode').selectedIndex = 0;\n            $('revise_update_price_max_allowed_deviation_mode').simulate('change');\n        },\n\n        // ---------------------------------------\n\n        relistMode_change: function()\n        {\n            var rulesContainer         = $('magento_block_ebay_template_synchronization_form_data_relist_rules'),\n                advancedRulesContainer = $('magento_block_ebay_template_synchronization_relist_advanced_filters'),\n                userLockContainer      = $('relist_filter_user_lock_tr_container'),\n                sendDataContainer      = $('relist_send_data_tr_container');\n\n            userLockContainer.hide();\n            sendDataContainer.hide();\n            rulesContainer.hide();\n            advancedRulesContainer.hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::RELIST_MODE_YES')) {\n                userLockContainer.show();\n                sendDataContainer.show();\n                rulesContainer.show();\n                advancedRulesContainer.show();\n            }\n        },\n\n        relistQty_change: function()\n        {\n            var qtyType = this.getAttribute('qty_type');\n\n            var valueContainer    = $('relist_qty_' + qtyType + '_value_container'),\n                valueMaxContainer = $('relist_qty_' + qtyType + '_value_max_container'),\n                item              = valueContainer.select('label span')[0];\n\n            valueContainer.hide();\n            valueMaxContainer.hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::RELIST_QTY_LESS') ||\n                this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::RELIST_QTY_MORE')) {\n                item.innerHTML = M2ePro.translator.translate('Quantity');\n                valueContainer.show();\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::RELIST_QTY_BETWEEN')) {\n                item.innerHTML = M2ePro.translator.translate('Min Quantity');\n                valueContainer.show();\n                valueMaxContainer.show();\n            }\n        },\n\n        relistAdvancedRules_change: function()\n        {\n            var rulesContainer = $('relist_advanced_rules_filters_container'),\n                warningContainer = $('relist_advanced_rules_filters_warning');\n\n            rulesContainer.hide();\n            warningContainer.hide();\n\n            if (this.value == 1) {\n                rulesContainer.show();\n                warningContainer.show();\n            }\n        },\n\n        // ---------------------------------------\n\n        stopQty_change: function()\n        {\n            var qtyType = this.getAttribute('qty_type');\n\n            var valueContainer    = $('stop_qty_' + qtyType + '_value_container'),\n                valueMaxContainer = $('stop_qty_' + qtyType + '_value_max_container'),\n                item              = valueContainer.select('label span')[0];\n\n            valueContainer.hide();\n            valueMaxContainer.hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::STOP_QTY_LESS') ||\n                this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::STOP_QTY_MORE')) {\n                item.innerHTML = M2ePro.translator.translate('Quantity');\n                valueContainer.show();\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Synchronization::STOP_QTY_BETWEEN')) {\n                item.innerHTML = M2ePro.translator.translate('Min Quantity');\n                valueContainer.show();\n                valueMaxContainer.show();\n            }\n        },\n\n        stopAdvancedRules_change: function()\n        {\n            var rulesContainer = $('stop_advanced_rules_filters_container'),\n                warningContainer = $('stop_advanced_rules_filters_warning');\n\n            rulesContainer.hide();\n            warningContainer.hide();\n\n            if (this.value == 1) {\n                rulesContainer.show();\n                warningContainer.show();\n            }\n        },\n\n        // ---------------------------------------\n\n        scheduleModeChange: function()\n        {\n            $('schedule_interval_mode_tr','schedule_interval_value_tr',\n                'magento_block_ebay_template_synchronization_form_data_schedule_week').invoke('hide');\n\n            if (this.value == 1) {\n                $('schedule_interval_mode_tr','magento_block_ebay_template_synchronization_form_data_schedule_week').invoke('show');\n                $('schedule_interval_mode').simulate('change');\n            }\n        },\n\n        scheduleIntervalModeChange: function()\n        {\n            var valueTr = $('schedule_interval_value_tr');\n\n            valueTr.hide();\n            if (EbayTemplateSynchronizationObj.isScheduleModeEnabled() && this.value == 1) {\n                valueTr.show();\n            }\n        },\n\n        scheduleDayModeChange: function()\n        {\n            var containerFrom = $(this.id.replace('mode','') + 'container_from'),\n                containerTo   = $(this.id.replace('mode','') + 'container_to');\n\n            containerFrom.hide();\n            containerTo.hide();\n\n            if (this.checked) {\n                containerFrom.show();\n                containerTo.show();\n            }\n        },\n\n        scheduleTimeSelectChange: function()\n        {\n            var inputId = this.id.match('(.)*(?=_)')[0];\n\n            var hours   = $(inputId + '_hours').value,\n                minutes = $(inputId + '_minutes').value,\n                ampm    = $(inputId + '_ampm').value;\n\n            $(inputId).value =  hours + ':' + minutes + ' ' + ampm;\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Template/Shipping.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Common'\n], function (jQuery, modal) {\n    window.EbayTemplateShipping = Class.create(Common, {\n\n        // ---------------------------------------\n\n        shippingMethods: {},\n        missingAttributes: {},\n\n        discountProfiles: [],\n        shippingServices: [],\n        shippingLocations: [],\n\n        counter: {\n            local: 0,\n            international: 0,\n            total: 0\n        },\n\n        originCountry: null,\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            jQuery.validator.addMethod('M2ePro-location-or-postal-required', function() {\n                return $('address_mode').value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::ADDRESS_MODE_NONE') ||\n                    $('postal_code_mode').value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::POSTAL_CODE_MODE_NONE');\n            }, M2ePro.translator.translate('Location or Zip/Postal Code should be specified.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-international-ship-to-location', function(value, el) {\n                return $$('input[name=\"'+el.name+'\"]').any(function(o) {\n                    return o.checked;\n                });\n            }, M2ePro.translator.translate('Select one or more international ship-to Locations.'));\n\n            jQuery.validator.addMethod('M2ePro-required-if-calculated', function(value) {\n\n                if(EbayTemplateShippingObj.isLocalShippingModeCalculated() ||\n                    EbayTemplateShippingObj.isInternationalShippingModeCalculated()) {\n                    return value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::POSTAL_CODE_MODE_NONE');\n                }\n\n                return true;\n            }, M2ePro.translator.translate('This is a required field.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-shipping-methods', function(value, el) {\n\n                var locationType = /local/.test(el.id) ? 'local' : 'international',\n                    shippingModeValue = $(locationType + '_shipping_mode').value;\n\n                shippingModeValue = parseInt(shippingModeValue);\n\n                if (shippingModeValue !== M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_FLAT') &&\n                    shippingModeValue !== M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_CALCULATED')) {\n                    return true;\n                }\n\n                return EbayTemplateShippingObj.counter[locationType] != 0;\n            },  M2ePro.translator.translate('You should specify at least one Shipping Method.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-shipping-service', function(value, el) {\n\n                var hidden = !$(el).visible();\n                var current = el;\n\n                while (!hidden) {\n                    el = $(el).up();\n                    hidden = !el.visible();\n                    if (el == document || el.hasClassName('entry-edit')) {\n                        break;\n                    }\n                }\n\n                if (hidden || current.up('table').id == 'shipping_international_table') {\n                    return true;\n                }\n\n                return value != '';\n            }, M2ePro.translator.translate('This is a required field.'));\n        },\n\n        initObservers: function()\n        {\n            jQuery('#country_mode')\n                .on('change', EbayTemplateShippingObj.countryModeChange)\n                .trigger('change');\n\n            jQuery('#postal_code_mode')\n                .on('change', EbayTemplateShippingObj.postalCodeModeChange)\n                .trigger('change');\n\n            jQuery('#address_mode')\n                .on('change', EbayTemplateShippingObj.addressModeChange)\n                .trigger('change');\n\n            jQuery('#local_shipping_mode')\n                .on('change', EbayTemplateShippingObj.localShippingModeChange)\n                .trigger('change');\n\n            if ($('local_shipping_rate_table_mode')) {\n                jQuery('#local_shipping_rate_table_mode')\n                    .on('change', EbayTemplateShippingObj.rateTableModeChange);\n            }\n\n            if ($('international_shipping_rate_table_mode')) {\n                jQuery('#international_shipping_rate_table_mode')\n                    .on('change', EbayTemplateShippingObj.rateTableModeChange);\n            }\n\n            EbayTemplateShippingObj.prepareMeasurementObservers('local');\n\n            jQuery('#dispatch_time')\n                .on('change', EbayTemplateShippingObj.dispatchTimeChange)\n                .trigger('change');\n\n            if ($('click_and_collect_mode')) {\n                jQuery('#click_and_collect_mode')\n                    .on('change', EbayTemplateShippingObj.clickAndCollectModeChange)\n                    .trigger('change');\n            }\n\n            if ($('cross_border_trade')) {\n                jQuery('#cross_border_trade')\n                    .on('change', EbayTemplateShippingObj.crossBorderTradeChange)\n                    .trigger('change');\n            }\n\n            jQuery('#international_shipping_mode')\n                .on('change', EbayTemplateShippingObj.internationalShippingModeChange)\n                .trigger('change');\n\n            jQuery('.shipping_excluded_location_region_link').each(function(){\n                jQuery(this).on('click', EbayTemplateShippingObj.checkExcludeLocationsRegionsSelection)\n                    .on('mouseover', function(event){ this.down('label').style.textDecoration = 'underline'; })\n                    .on('mouseout', function(event){ this.down('label').style.textDecoration = 'none'; });\n            });\n\n            jQuery('.shipping_excluded_location').each(function(){\n                jQuery(this).on('change', EbayTemplateShippingObj.selectExcludeLocation);\n            });\n\n            EbayTemplateShippingObj.renderShippingMethods(EbayTemplateShippingObj.shippingMethods);\n\n            EbayTemplateShippingObj.checkMessages('local');\n            EbayTemplateShippingObj.checkMessages('international');\n        },\n\n        // ---------------------------------------\n\n        countryModeChange : function()\n        {\n            var self = EbayTemplateShippingObj,\n                elem = $('country_mode');\n            if (elem.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::COUNTRY_MODE_CUSTOM_VALUE')) {\n\n                self.updateHiddenValue(elem, $('country_custom_value'));\n            }\n\n            if (elem.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::COUNTRY_MODE_CUSTOM_ATTRIBUTE')) {\n\n                self.updateHiddenValue(elem, $('country_custom_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n\n        postalCodeModeChange: function()\n        {\n            var self = EbayTemplateShippingObj,\n                elem = $('postal_code_mode');\n\n            if (elem.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::POSTAL_CODE_MODE_CUSTOM_VALUE')) {\n                $('postal_code_custom_value_tr').show();\n            } else {\n                $('postal_code_custom_value_tr').hide();\n            }\n\n            if (elem.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::POSTAL_CODE_MODE_CUSTOM_ATTRIBUTE')) {\n\n                self.updateHiddenValue(elem, $('postal_code_custom_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n\n        addressModeChange: function()\n        {\n            var self = EbayTemplateShippingObj,\n                elem = $('address_mode');\n\n            if (elem.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::ADDRESS_MODE_CUSTOM_VALUE')) {\n                $('address_custom_value_tr').show();\n            } else {\n                $('address_custom_value_tr').hide();\n            }\n\n            if (elem.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::ADDRESS_MODE_CUSTOM_ATTRIBUTE')) {\n\n                self.updateHiddenValue(elem, $('address_custom_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n\n        dispatchTimeChange: function()\n        {\n            if (!$('click_and_collect_mode')) {\n                return;\n            }\n\n            if (this.value > 3 || (!EbayTemplateShippingObj.isLocalShippingModeFlat()\n                && !EbayTemplateShippingObj.isLocalShippingModeCalculated())\n            ) {\n                $('click_and_collect_mode_tr').hide();\n                $('click_and_collect_mode').selectedIndex = 1;\n                jQuery('#click_and_collect_mode').trigger('change');\n\n                return;\n            }\n\n            $('click_and_collect_mode_tr').show();\n            jQuery('#click_and_collect_mode').trigger('change');\n        },\n\n        // ---------------------------------------\n\n        localShippingModeChange: function()\n        {\n            // ---------------------------------------\n            $('magento_block_ebay_template_shipping_form_data_international-wrapper').hide();\n            $('local_shipping_methods_tr').hide();\n            $('magento_block_ebay_template_shipping_form_data_excluded_locations-wrapper').show();\n            // ---------------------------------------\n\n            // clear selected shipping methods\n            // ---------------------------------------\n            $$('#shipping_local_tbody .icon-btn').each(function(el) {\n                EbayTemplateShippingObj.removeRow.call(el, 'local');\n            });\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (EbayTemplateShippingObj.isLocalShippingModeFlat()\n                || EbayTemplateShippingObj.isLocalShippingModeCalculated()\n            ) {\n                $$('.local-shipping-tr').invoke('show');\n                jQuery('#dispatch_time').trigger('change');\n\n                $('domestic_shipping_fieldset-wrapper').setStyle({\n                    borderBottom: null\n                });\n            } else {\n                $$('.local-shipping-tr').invoke('hide');\n                $('domestic_shipping_fieldset-wrapper').setStyle({\n                    borderBottom: '0px'\n                });\n\n                if ($('click_and_collect_mode')) {\n                    $('click_and_collect_mode').selectedIndex = 1;\n                    jQuery('#click_and_collect_mode').trigger('change');\n                }\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            EbayTemplateShippingObj.updateMeasurementVisibility();\n            EbayTemplateShippingObj.updateCashOnDeliveryCostVisibility();\n            EbayTemplateShippingObj.updateCrossBorderTradeVisibility();\n            EbayTemplateShippingObj.updateRateTableVisibility('local');\n            EbayTemplateShippingObj.updateLocalHandlingCostVisibility();\n            EbayTemplateShippingObj.renderDiscountProfiles('local');\n            EbayTemplateShippingObj.clearMessages('local');\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (EbayTemplateShippingObj.isLocalShippingModeFlat()) {\n                $('magento_block_ebay_template_shipping_form_data_international-wrapper').show();\n                $('local_shipping_methods_tr').show();\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (EbayTemplateShippingObj.isLocalShippingModeCalculated()) {\n                $('magento_block_ebay_template_shipping_form_data_international-wrapper').show();\n                $('local_shipping_methods_tr').show();\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (EbayTemplateShippingObj.isLocalShippingModeFreight()) {\n                $('international_shipping_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_NO_INTERNATIONAL');\n                jQuery('#international_shipping_mode').trigger('change');\n\n                $('magento_block_ebay_template_shipping_form_data_excluded_locations-wrapper').hide();\n                EbayTemplateShippingObj.resetExcludeLocationsList();\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (EbayTemplateShippingObj.isLocalShippingModeLocal()) {\n                $('international_shipping_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_NO_INTERNATIONAL');\n                jQuery('#international_shipping_mode').trigger('change');\n\n                $('magento_block_ebay_template_shipping_form_data_excluded_locations-wrapper').hide();\n                EbayTemplateShippingObj.resetExcludeLocationsList();\n            }\n            // ---------------------------------------\n        },\n\n        isLocalShippingModeFlat: function()\n        {\n            return $('local_shipping_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_FLAT');\n        },\n\n        isLocalShippingModeCalculated: function()\n        {\n            return $('local_shipping_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_CALCULATED');\n        },\n\n        isLocalShippingModeFreight: function()\n        {\n            return $('local_shipping_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_FREIGHT');\n        },\n\n        isLocalShippingModeLocal: function()\n        {\n            return $('local_shipping_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_LOCAL');\n        },\n\n        // ---------------------------------------\n\n        hasSurcharge: function(locationType)\n        {\n            var marketplaceId = $$('[name=\"shipping[marketplace_id]\"]')[0];\n            return locationType == 'local' && marketplaceId  && ['1', '9'].indexOf(marketplaceId.value) != -1;\n        },\n\n        // ---------------------------------------\n\n        internationalShippingModeChange: function()\n        {\n            // clear selected shipping methods\n            // ---------------------------------------\n            $$('#shipping_international_tbody .icon-btn').each(function(el) {\n                EbayTemplateShippingObj.removeRow.call(el, 'international');\n            });\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (EbayTemplateShippingObj.isInternationalShippingModeFlat()\n                || EbayTemplateShippingObj.isInternationalShippingModeCalculated()\n            ) {\n                $('add_international_shipping_method_button').show();\n                $('shipping_international_table').hide();\n                $('international_shipping_methods_tr').show();\n                $$('.international-shipping-tr').invoke('show');\n            } else {\n                $('international_shipping_methods_tr').hide();\n                $$('.international-shipping-tr').invoke('hide');\n                EbayTemplateShippingObj.deleteExcludedLocation('international', 'type', 'excluded_locations_hidden');\n                EbayTemplateShippingObj.updateExcludedLocationsTitles('excluded_locations_titles');\n\n                if ($('international_shipping_rate_table_mode')) {\n                    $('international_shipping_rate_table_mode').selectedIndex = 0;\n                    jQuery('#international_shipping_rate_table_mode').trigger('change');\n                }\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            EbayTemplateShippingObj.updateMeasurementVisibility();\n            EbayTemplateShippingObj.renderDiscountProfiles('international');\n            EbayTemplateShippingObj.updateRateTableVisibility('international');\n            EbayTemplateShippingObj.updateInternationalHandlingCostVisibility();\n            EbayTemplateShippingObj.clearMessages('international');\n            // ---------------------------------------\n        },\n\n        isInternationalShippingModeFlat: function()\n        {\n            return $('international_shipping_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_FLAT');\n        },\n\n        isInternationalShippingModeCalculated: function()\n        {\n            return $('international_shipping_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_CALCULATED');\n        },\n\n        isInternationalShippingModeNoInternational: function()\n        {\n            return $('international_shipping_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_NO_INTERNATIONAL');\n        },\n\n        getCalculatedLocationType: function()\n        {\n            if (EbayTemplateShippingObj.isLocalShippingModeCalculated()) {\n                return 'local';\n            }\n\n            if (EbayTemplateShippingObj.isInternationalShippingModeCalculated()) {\n                return 'international';\n            }\n\n            return null;\n        },\n\n        isShippingModeCalculated: function(locationType)\n        {\n            if (locationType == 'local') {\n                return EbayTemplateShippingObj.isLocalShippingModeCalculated();\n            }\n\n            if (locationType == 'international') {\n                return EbayTemplateShippingObj.isInternationalShippingModeCalculated();\n            }\n\n            return false;\n        },\n\n        // ---------------------------------------\n\n        isClickAndCollectEnabled: function()\n        {\n            if (!$('click_and_collect_mode')) {\n                return false;\n            }\n\n            return $('click_and_collect_mode').value == 1;\n        },\n\n        // ---------------------------------------\n\n        crossBorderTradeChange: function()\n        {\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::CROSS_BORDER_TRADE_NONE')) {\n                $('international_shipping_none').show();\n            } else {\n                $('international_shipping_none').hide();\n                if (EbayTemplateShippingObj.isInternationalShippingModeNoInternational()) {\n                    $('international_shipping_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_FLAT');\n                    jQuery('#international_shipping_mode').trigger('change');\n                }\n            }\n        },\n\n        // ---------------------------------------\n\n        updateCrossBorderTradeVisibility: function()\n        {\n            if(!$('magento_block_ebay_template_shipping_form_data_cross_border_trade-wrapper')) {\n                return;\n            }\n\n            if (EbayTemplateShippingObj.isLocalShippingModeFlat()\n                || EbayTemplateShippingObj.isLocalShippingModeCalculated()\n            ) {\n                $('magento_block_ebay_template_shipping_form_data_cross_border_trade-wrapper').show();\n            } else {\n                $('magento_block_ebay_template_shipping_form_data_cross_border_trade-wrapper').hide();\n                $('cross_border_trade').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::CROSS_BORDER_TRADE_NONE');\n            }\n        },\n\n        // ---------------------------------------\n\n        updateRateTableVisibility: function(locationType)\n        {\n            var shippingMode = $(locationType + '_shipping_mode').value;\n\n            if (!$(locationType+'_shipping_rate_table_mode_tr')) {\n                return;\n            }\n\n            if (shippingMode != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_FLAT')) {\n                $(locationType+'_shipping_rate_table_mode_tr').hide();\n                $(locationType+'_shipping_rate_table_mode').value = 0;\n            } else {\n                $(locationType+'_shipping_rate_table_mode_tr').show();\n            }\n        },\n\n        isRateTableEnabled: function()\n        {\n            var local = $('local_shipping_rate_table_mode'),\n                international = $('international_shipping_rate_table_mode');\n\n            if (!local && !international) {\n                return false;\n            }\n\n            return (local && local.value != 0) ||\n                (international && international.value != 0);\n        },\n\n        rateTableModeChange: function()\n        {\n            var absoluteHide = !!(!EbayTemplateShippingObj.isLocalShippingModeFlat() ||\n            EbayTemplateShippingObj.isRateTableEnabled());\n            $$('[id^=\"shipping_variant_cost_surcharge_\"]').each(function(surchargeRow) {\n                var row = surchargeRow.previous('tr');\n\n                // for template without data\n                if (!row) {\n                    return;\n                }\n\n                var inputCostSurchargeCV = surchargeRow.select('.shipping-cost-surcharge')[0];\n                var inputCostSurchargeCA = surchargeRow.select('.shipping-cost-surcharge-ca')[0];\n\n                inputCostSurchargeCV.hide();\n                inputCostSurchargeCA.hide();\n\n                if (absoluteHide || !(/(FedEx|UPS)/.test(row.select('.shipping-service')[0].value)) ||\n                    row.select('.cost-mode')[0].value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Service::COST_MODE_FREE')) {\n                    surchargeRow.hide();\n                } else {\n                    surchargeRow.show();\n\n                    if (row.select('.cost-mode')[0].value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Service::COST_MODE_CUSTOM_VALUE')) {\n                        inputCostSurchargeCV.show();\n                        inputCostSurchargeCV.disabled = false;\n                    } else if (row.select('.cost-mode')[0].value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Service::COST_MODE_CUSTOM_ATTRIBUTE')) {\n                        inputCostSurchargeCA.show();\n                    }\n                }\n            });\n\n            EbayTemplateShippingObj.updatePackageBlockState();\n        },\n\n        // ---------------------------------------\n\n        clickAndCollectModeChange: function()\n        {\n            EbayTemplateShippingObj.updatePackageBlockState();\n        },\n\n        // ---------------------------------------\n\n        updateLocalHandlingCostVisibility: function()\n        {\n            if (!$('local_handling_cost_cv_tr')) {\n                return;\n            }\n\n            if (EbayTemplateShippingObj.isLocalShippingModeFlat()) {\n                $('local_handling_cost_cv_tr').hide();\n                $('local_handling_cost').value = '';\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (EbayTemplateShippingObj.isLocalShippingModeCalculated()) {\n                $('local_handling_cost_cv_tr').show();\n            }\n            // ---------------------------------------\n        },\n\n        updateInternationalHandlingCostVisibility: function()\n        {\n            if (!$('international_handling_cost_cv_tr')) {\n                return;\n            }\n\n            if (EbayTemplateShippingObj.isInternationalShippingModeCalculated()) {\n                $('international_handling_cost_cv_tr').show();\n            } else {\n                $('international_handling_cost_cv_tr').hide();\n                $('international_handling_cost').value = '';\n            }\n        },\n\n        // ---------------------------------------\n\n        updateDiscountProfiles: function(accountId)\n        {\n            new Ajax.Request(M2ePro.url.get('ebay_template_shipping/updateDiscountProfiles'), {\n                method: 'get',\n                parameters: {\n                    'account_id': accountId\n                },\n                onSuccess: function(transport) {\n                    EbayTemplateShippingObj.discountProfiles[accountId]['profiles'] = transport.responseText.evalJSON(true);\n                    EbayTemplateShippingObj.renderDiscountProfiles('local', accountId);\n                    EbayTemplateShippingObj.renderDiscountProfiles('international', accountId);\n                }\n            });\n        },\n\n        renderDiscountProfiles: function(locationType, renderAccountId)\n        {\n            if (typeof renderAccountId == 'undefined') {\n                $$('.' + locationType + '-discount-profile-account-tr').each(function(account) {\n                    var accountId = account.readAttribute('account_id');\n\n                    if ($(locationType + '_shipping_discount_profile_id_' + accountId)) {\n                        var value = EbayTemplateShippingObj.discountProfiles[accountId]['selected'][locationType];\n\n                        var html = EbayTemplateShippingObj.getDiscountProfilesHtml(locationType, accountId);\n                        $(locationType + '_shipping_discount_profile_id_' + accountId).update(html);\n\n                        if (value && EbayTemplateShippingObj.discountProfiles[accountId]['profiles'].length > 0) {\n                            var select = $(locationType + '_shipping_discount_profile_id_' + accountId);\n\n                            for (var i = 0; i < select.length; i++) {\n                                if (select[i].value == value) {\n                                    select.value = value;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                });\n            } else {\n                if ($(locationType + '_shipping_discount_profile_id_' + renderAccountId)) {\n                    var value = EbayTemplateShippingObj.discountProfiles[renderAccountId]['selected'][locationType];\n                    var html = EbayTemplateShippingObj.getDiscountProfilesHtml(locationType, renderAccountId);\n\n                    $(locationType + '_shipping_discount_profile_id_' + renderAccountId).update(html);\n\n                    if (value && EbayTemplateShippingObj.discountProfiles[renderAccountId]['profiles'].length > 0) {\n                        $(locationType + '_shipping_discount_profile_id_' + renderAccountId).value = value;\n                    }\n                }\n            }\n\n        },\n\n        getDiscountProfilesHtml: function(locationType, accountId)\n        {\n            var shippingModeSelect = $(locationType + '_shipping_mode');\n            var desiredProfileType = null;\n            var html = '<option value=\"\">'+M2ePro.translator.translate('None')+'</option>';\n\n            switch (parseInt(shippingModeSelect.value)) {\n                case M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_FLAT'):\n                    desiredProfileType = 'flat_shipping';\n                    break;\n                case M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping::SHIPPING_TYPE_CALCULATED'):\n                    desiredProfileType = 'calculated_shipping';\n                    break;\n            }\n\n            if (desiredProfileType === null) {\n                return html;\n            }\n\n            EbayTemplateShippingObj.discountProfiles[accountId]['profiles'].each(function(profile) {\n                if (profile.type != desiredProfileType) {\n                    return;\n                }\n\n                html += '<option value=\"'+profile.profile_id+'\">'+profile.profile_name+'</option>';\n            });\n\n            return html;\n        },\n\n        // ---------------------------------------\n\n        updateCashOnDeliveryCostVisibility: function()\n        {\n            if (!$('cash_on_delivery_cost_cv_tr')) {\n                return;\n            }\n\n            if (EbayTemplateShippingObj.isLocalShippingModeFlat()\n                || EbayTemplateShippingObj.isLocalShippingModeCalculated()\n            ) {\n                $('cash_on_delivery_cost_cv_tr').show();\n            } else {\n                $('cash_on_delivery_cost_cv_tr').hide();\n                $('cash_on_delivery_cost').value = '';\n            }\n        },\n\n        // ---------------------------------------\n\n        packageSizeChange: function()\n        {\n            var self = EbayTemplateShippingObj;\n\n            var packageSizeMode = this.value;\n\n            $('package_size_mode').value = packageSizeMode;\n            $('package_size_attribute').value = '';\n\n            if (packageSizeMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Calculated::PACKAGE_SIZE_CUSTOM_VALUE')) {\n                self.updateHiddenValue(this, $('package_size_value'));\n\n                var showDimension = parseInt(this.options[this.selectedIndex].getAttribute('dimensions_supported'));\n                self.updateDimensionVisibility(showDimension);\n            } else if (packageSizeMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Calculated::PACKAGE_SIZE_CUSTOM_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('package_size_attribute'));\n                self.updateDimensionVisibility(true);\n            }\n        },\n\n        // ---------------------------------------\n\n        updateDimensionVisibility: function(showDimension)\n        {\n            if (showDimension) {\n                $('dimensions_tr').show();\n                jQuery('#dimension_mode').trigger('change');\n            } else {\n                $('dimensions_tr').hide();\n                $('dimension_mode').value = 0;\n                jQuery('#dimension_mode').trigger('change');\n            }\n        },\n\n        // ---------------------------------------\n\n        dimensionModeChange: function()\n        {\n            $$('.dimensions_ca_tr, .dimensions_cv_tr').invoke('hide');\n\n            if (this.value != 0) {\n                $$(this.value == 1 ? '.dimensions_cv_tr' : '.dimensions_ca_tr').invoke('show');\n            }\n        },\n\n        // ---------------------------------------\n\n        weightChange: function()\n        {\n            var measurementNoteElement = this.up().next('.note');\n\n            $('weight_cv').hide();\n            measurementNoteElement.hide();\n\n            var weightMode = this.value;\n\n            $('weight_mode').value = weightMode;\n            $('weight_attribute').value = '';\n\n            if (weightMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Calculated::WEIGHT_CUSTOM_VALUE')) {\n                $('weight_cv').show();\n            } else if (weightMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Calculated::WEIGHT_CUSTOM_ATTRIBUTE')) {\n                EbayTemplateShippingObj.updateHiddenValue(this, $('weight_attribute'));\n                measurementNoteElement.show();\n            }\n        },\n\n        // ---------------------------------------\n\n        isMeasurementSystemEnglish: function()\n        {\n            return $('measurement_system').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Calculated::MEASUREMENT_SYSTEM_ENGLISH');\n        },\n\n        measurementSystemChange: function()\n        {\n            $$('.measurement-system-english, .measurement-system-metric').invoke('hide');\n\n            if (EbayTemplateShippingObj.isMeasurementSystemEnglish()) {\n                $$('.measurement-system-english').invoke('show');\n            } else {\n                $$('.measurement-system-metric').invoke('show');\n            }\n        },\n\n        // ---------------------------------------\n\n        updateMeasurementVisibility: function()\n        {\n            if (EbayTemplateShippingObj.isLocalShippingModeCalculated()) {\n                EbayTemplateShippingObj.showMeasurementOptions('local', 'calculated');\n                EbayTemplateShippingObj.updatePackageBlockState();\n                return;\n            }\n\n            if (EbayTemplateShippingObj.isInternationalShippingModeCalculated()) {\n                EbayTemplateShippingObj.showMeasurementOptions('international', 'calculated');\n                EbayTemplateShippingObj.updatePackageBlockState();\n                return;\n            }\n\n            if (EbayTemplateShippingObj.isLocalShippingModeFlat()\n                && EbayTemplateShippingObj.isRateTableEnabled()\n            ) {\n                EbayTemplateShippingObj.showMeasurementOptions('local', 'flat');\n            }\n\n            EbayTemplateShippingObj.updatePackageBlockState();\n        },\n\n        showMeasurementOptions: function(locationType, shippingMode)\n        {\n            $$('#block_shipping_template_calculated_options tr').each(function(element) {\n                if (element.hasClassName('visible-for-'+shippingMode+'-by-default')) {\n                    element.show();\n                } else {\n                    element.hide();\n                }\n            });\n\n            EbayTemplateShippingObj.prepareMeasurementObservers(shippingMode);\n        },\n\n        prepareMeasurementObservers: function(shippingMode)\n        {\n            jQuery('#measurement_system')\n                .on('change', EbayTemplateShippingObj.measurementSystemChange)\n                .trigger('change');\n\n            if (shippingMode == 'calculated') {\n                jQuery('#package_size')\n                    .on('change', EbayTemplateShippingObj.packageSizeChange)\n                    .trigger('change');\n            }\n\n            if ($('dimension_mode')) {\n                jQuery('#dimension_mode')\n                    .on('change', EbayTemplateShippingObj.dimensionModeChange)\n                    .trigger('change');\n            }\n\n            jQuery('#weight')\n                .on('change', EbayTemplateShippingObj.weightChange)\n                .trigger('change');\n        },\n\n        // ---------------------------------------\n\n        serviceChange: function()\n        {\n            var row = $(this).up('tr');\n\n            if (this.up('table').id != 'shipping_international_table') {\n                this.down(0).hide();\n            }\n\n            if (this.value === '') {\n                row.select('.cost-mode')[0].hide();\n                row.select('.shipping-cost-cv')[0].hide();\n                row.select('.shipping-cost-ca')[0].hide();\n                row.select('.shipping-cost-additional')[0].hide();\n                row.select('.shipping-cost-additional-ca')[0].hide();\n            } else {\n                row.select('.cost-mode')[0].show();\n                jQuery(row.select('.cost-mode')[0]).trigger('change');\n            }\n        },\n\n        // ---------------------------------------\n\n        serviceCostModeChange: function()\n        {\n            var row = $(this).up('tr');\n\n            // ---------------------------------------\n            var surchargeRow = $('shipping_variant_cost_surcharge_' + this.name.match(/\\d+/) + '_tr');\n\n            if (EbayTemplateShippingObj.isLocalShippingModeFlat() && surchargeRow) {\n                var inputCostSurchargeCV = surchargeRow.select('.shipping-cost-surcharge')[0];\n                var inputCostSurchargeCA = surchargeRow.select('.shipping-cost-surcharge-ca')[0];\n\n                if (!EbayTemplateShippingObj.isRateTableEnabled() &&\n                    /(FedEx|UPS)/.test(row.select('.shipping-service')[0].value)) {\n                    surchargeRow.show();\n                } else {\n                    surchargeRow.hide();\n                }\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            var inputCostCV = row.select('.shipping-cost-cv')[0];\n            var inputCostCA = row.select('.shipping-cost-ca')[0];\n            var inputCostAddCV = row.select('.shipping-cost-additional')[0];\n            var inputCostAddCA = row.select('.shipping-cost-additional-ca')[0];\n            var inputPriority = row.select('.shipping-priority')[0];\n            // ---------------------------------------\n\n            // ---------------------------------------\n            [inputCostCV, inputCostCA, inputCostAddCV, inputCostAddCA].invoke('hide');\n            if (surchargeRow) {\n                inputCostSurchargeCV.hide();\n                inputCostSurchargeCA.hide();\n            }\n\n            inputPriority.show();\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Service::COST_MODE_CUSTOM_VALUE')) {\n                inputCostCV.show();\n                inputCostCV.disabled = false;\n\n                inputCostAddCV.show();\n                inputCostAddCV.disabled = false;\n\n                if (surchargeRow && !EbayTemplateShippingObj.isRateTableEnabled()) {\n                    inputCostSurchargeCV.show();\n                    inputCostSurchargeCV.disabled = false;\n                }\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Service::COST_MODE_CUSTOM_ATTRIBUTE')) {\n                inputCostCA.show();\n                inputCostAddCA.show();\n                surchargeRow && !EbayTemplateShippingObj.isRateTableEnabled() && inputCostSurchargeCA.show();\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Service::COST_MODE_FREE')) {\n\n                var isLocalMethod = /local/.test(row.id);\n\n                if (isLocalMethod && EbayTemplateShippingObj.isLocalShippingModeCalculated()) {\n                    inputPriority.value = 0;\n                    inputCostCV.value = 0;\n                    inputCostAddCV.value = 0;\n\n                    [inputPriority, inputCostCV, inputCostAddCV].invoke('hide');\n\n                } else {\n                    inputCostCV.show();\n                    inputCostCV.value = 0;\n                    inputCostCV.disabled = true;\n\n                    inputCostAddCV.show();\n                    inputCostAddCV.value = 0;\n                    inputCostAddCV.disabled = true;\n                }\n\n                if (surchargeRow) {\n                    inputCostSurchargeCV.hide();\n                    inputCostSurchargeCA.hide();\n\n                    surchargeRow.hide();\n                }\n            }\n            // ---------------------------------------\n        },\n\n        // ---------------------------------------\n\n        shippingLocationChange: function()\n        {\n            var i = this.name.match(/\\d+/);\n            var current = this;\n\n            if (this.value != 'Worldwide') {\n                return;\n            }\n\n            $$('input[name=\"shipping[shippingLocation][' + i + '][]\"]').each(function(item) {\n                if (current.checked && item != current) {\n                    item.checked = false;\n                    item.disabled = true;\n                } else {\n                    item.disabled = false;\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        addRow: function(type) // local|international\n        {\n            $('shipping_'+type+'_table').show();\n            $('add_'+type+'_shipping_method_button').hide();\n\n            var id = 'shipping_' + type + '_tbody';\n            var i = EbayTemplateShippingObj.counter.total;\n\n            // ---------------------------------------\n            var tpl = $$('#block_listing_template_shipping_table_row_template_table tbody')[0].innerHTML;\n            tpl = tpl.replace(/%i%/g, i);\n            tpl = tpl.replace(/%type%/g, type);\n            $(id).insert(tpl);\n            // ---------------------------------------\n\n            // ---------------------------------------\n            var row = $('shipping_variant_' + type + '_' + i + '_tr');\n            // ---------------------------------------\n\n            // ---------------------------------------\n            AttributeObj.renderAttributesWithEmptyOption('shipping[shipping_cost_attribute][' + i + ']', row.down('.shipping-cost-ca'));\n            var handlerObj = new AttributeCreator('shipping[shipping_cost_attribute][' + i + ']');\n            handlerObj.setSelectObj($('shipping[shipping_cost_attribute][' + i + ']'));\n            handlerObj.injectAddOption();\n            AttributeObj.renderAttributesWithEmptyOption('shipping[shipping_cost_additional_attribute][' + i + ']', row.down('.shipping-cost-additional-ca'));\n            var handlerObj = new AttributeCreator('shipping[shipping_cost_additional_attribute][' + i + ']');\n            handlerObj.setSelectObj($('shipping[shipping_cost_additional_attribute][' + i + ']'));\n            handlerObj.injectAddOption();\n            // ---------------------------------------\n\n            // ---------------------------------------\n            EbayTemplateShippingObj.renderServices(row.select('.shipping-service')[0], type);\n            EbayTemplateShippingObj.initRow(row);\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (type == 'international') {\n                tpl = $$('#block_shipping_table_locations_row_template_table tbody')[0].innerHTML;\n                tpl = tpl.replace(/%i%/g, i);\n                $(id).insert(tpl);\n                EbayTemplateShippingObj.renderShipToLocationCheckboxes(i);\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (EbayTemplateShippingObj.isLocalShippingModeFlat() &&\n                EbayTemplateShippingObj.hasSurcharge(type)) {\n\n                tpl = $$('#block_shipping_table_cost_surcharge_row_template_table tbody')[0].innerHTML;\n                tpl = tpl.replace(/%i%/g, i);\n                $(id).insert(tpl);\n\n                AttributeObj.renderAttributesWithEmptyOption(\n                    'shipping[shipping_cost_surcharge_attribute][' + i + ']',\n                    $('shipping_variant_cost_surcharge_' + i + '_tr').down('.shipping-cost-surcharge-ca'));\n                $('shipping[shipping_cost_surcharge_attribute][' + i + ']').insert({\n                    top: new Element('option', {selected: true}).update(M2ePro.translator.translate('None'))\n                });\n                var handlerObj = new AttributeCreator('shipping[shipping_cost_surcharge_attribute][' + i + ']');\n                handlerObj.setSelectObj($('shipping[shipping_cost_surcharge_attribute][' + i + ']'));\n                handlerObj.injectAddOption();\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            EbayTemplateShippingObj.counter[type]++;\n            EbayTemplateShippingObj.counter.total++;\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (type == 'local' && EbayTemplateShippingObj.counter[type] >= 4) {\n                $(id).up('table').select('tfoot')[0].hide();\n            }\n            if (type == 'international' && EbayTemplateShippingObj.counter[type] >= 5) {\n                $(id).up('table').select('tfoot')[0].hide();\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            var isAttributeMode = function(element) {\n                return element.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Shipping::COUNTRY_MODE_CUSTOM_ATTRIBUTE');\n            };\n\n            row.down('[name^=\"shipping[shipping_cost_attribute]\"]').observe('change', function(event) {\n                var element = event.target.up('tr').down('[name^=\"shipping[cost_mode]\"]');\n\n                if (!isAttributeMode(element)) {\n                    return;\n                }\n\n                EbayTemplateShippingObj.checkMessages(type);\n            });\n\n            row.down('[name^=\"shipping[shipping_cost_additional_attribute]\"]').observe('change', function(event) {\n                var element = event.target.up('tr').down('[name^=\"shipping[cost_mode]\"]');\n\n                if (!isAttributeMode(element)) {\n                    return;\n                }\n\n                EbayTemplateShippingObj.checkMessages(type);\n            });\n\n            if (type == 'local') {\n\n                var next = row.next(\"[id^='shipping_variant_cost_surcharge']\");\n\n                if (next) {\n                    next.down('[name^=\"shipping[shipping_cost_surcharge_attribute]\"]').observe('change', function(event) {\n                        var element = row.down('[name^=\"shipping[cost_mode]\"]');\n\n                        if (!isAttributeMode(element)) {\n                            return;\n                        }\n\n                        EbayTemplateShippingObj.checkMessages(type);\n                    });\n                }\n            }\n            // ---------------------------------------\n\n            return row;\n        },\n\n        // ---------------------------------------\n\n        initRow: function(row)\n        {\n            var locationType = /local/.test(row.id) ? 'local' : 'international';\n\n            // ---------------------------------------\n            if (EbayTemplateShippingObj.isShippingModeCalculated(locationType)) {\n                row.select('.cost-mode')[0].value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Service::COST_MODE_CALCULATED');\n                row.select('.shipping-mode-option-notcalc').invoke('remove');\n\n                if (locationType == 'international' || $$('#shipping_local_tbody .cost-mode').length > 1) {\n                    // only one calculated shipping method can have free mode\n                    row.select('.shipping-mode-option-free').invoke('remove');\n                }\n            } else {\n                row.select('.cost-mode')[0].value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Service::COST_MODE_FREE');\n                row.select('.shipping-mode-option-calc')[0].remove();\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            EbayTemplateShippingObj.renderServices(row.select('.shipping-service')[0], locationType);\n            // ---------------------------------------\n\n            // ---------------------------------------\n            jQuery(row.select('.cost-mode')[0]).trigger('change');\n            jQuery(row.select('.shipping-service')[0]).trigger('change');\n            // ---------------------------------------\n        },\n\n        // ---------------------------------------\n\n        renderServices: function(el, locationType)\n        {\n            var html = '';\n            var isCalculated = EbayTemplateShippingObj.isShippingModeCalculated(locationType);\n            var selectedPackage = $('package_size_value').value;\n            var categoryMethods = '';\n\n            // not selected international shipping service\n            if (locationType == 'international') {\n                html += '<option value=\"\">--</option>';\n            } else {\n                html += '<option value=\"\">'+ M2ePro.translator.translate('Select Shipping Service') +'</option>';\n            }\n\n            if (Object.isArray(EbayTemplateShippingObj.shippingServices) && EbayTemplateShippingObj.shippingServices.length == 0) {\n                $(el).update(html);\n                return;\n            }\n\n            $H(EbayTemplateShippingObj.shippingServices).each(function(category) {\n\n                categoryMethods = '';\n                category.value.methods.each(function(service) {\n                    var isServiceOfSelectedDestination = (locationType == 'local' && service.is_international == 0) || (locationType == 'international' && service.is_international == 1);\n                    var isServiceOfSelectedType = (isCalculated && service.is_calculated == 1) || (! isCalculated && service.is_flat == 1);\n\n                    if (!isServiceOfSelectedDestination || !isServiceOfSelectedType) {\n                        return;\n                    }\n\n                    if (isCalculated) {\n                        if (service.data.ShippingPackage.indexOf(selectedPackage) != -1) {\n                            categoryMethods += '<option value=\"' + service.ebay_id + '\">' + service.title + '</option>';\n                        }\n\n                        return;\n                    }\n\n                    categoryMethods += '<option value=\"' + service.ebay_id + '\">' + service.title + '</option>';\n                });\n\n                if (categoryMethods != '') {\n                    noCategoryTitle = category[0] == '';\n                    if (noCategoryTitle) {\n                        html += categoryMethods;\n                    } else {\n                        if (locationType == 'local') {\n                            html += '<optgroup ebay_id=\"'+category.key+'\" label=\"' + category.value.title + '\">' + categoryMethods + '</optgroup>';\n                        } else {\n                            html += '<optgroup label=\"' + category.value.title + '\">' + categoryMethods + '</optgroup>';\n                        }\n\n                    }\n                }\n            });\n\n            $(el).update(html);\n        },\n\n        // ---------------------------------------\n\n        renderShipToLocationCheckboxes: function(i)\n        {\n            var html = '';\n\n            // ---------------------------------------\n            EbayTemplateShippingObj.shippingLocations.each(function(location) {\n                if (location.ebay_id == 'Worldwide') {\n                    html += '<div style=\"margin-bottom: 10px;\">' +\n                        '<input' +\n                        ' id=\"shipping_shippingLocation_' + location.ebay_id + '_' + i + '\"' +\n                        ' type=\"checkbox\"' +\n                        ' name=\"shipping[shippingLocation][' + i + '][]\" value=\"' + location.ebay_id + '\"' +\n                        ' onclick=\"EbayTemplateShippingObj.shippingLocationChange.call(this);\"' +\n                        ' class=\"shipping-location M2ePro-validate-international-ship-to-location admin__control-checkbox\"' +\n                        '/>' +\n                        '<label ' +\n                        'for=\"shipping_shippingLocation_'+ location.ebay_id + '_' + i + '\"' +\n                        'class=\"admin__field-label\"' +\n                        '>' +\n                        '<span><b>' + location.title + '</b></span>' +\n                        '</label>' +\n                        '</div>';\n                } else {\n                    html +=\n                        '<input' +\n                        ' id=\"shipping_shippingLocation_' + location.ebay_id + '_' + i + '\"' +\n                        ' type=\"checkbox\"' +\n                        ' name=\"shipping[shippingLocation][' + i + '][]\" value=\"' + location.ebay_id + '\"' +\n                        ' onclick=\"EbayTemplateShippingObj.shippingLocationChange.call(this);\"' +\n                        ' class=\"admin__control-checkbox\"' +\n                        '/>' +\n                        '<label style=\"width: 142px; text-align: left; margin-bottom: 5px;\" ' +\n                        'class=\"nobr admin__field-label\"' +\n                        'for=\"shipping_shippingLocation_'+ location.ebay_id + '_' + i + '\"' +\n                        '>' +\n                        '<span>' + location.title + '</span>' +\n                        '</label>';\n                }\n            });\n            // ---------------------------------------\n\n            // ---------------------------------------\n            $$('#shipping_variant_locations_' + i + '_tr td')[0].innerHTML = '<div style=\"margin: 5px 10px\">' + html + '</div>';\n            $$('#shipping_variant_locations_' + i + '_tr td')[0].innerHTML += '<div style=\"clear: both; margin-bottom: 10px;\" />';\n            // ---------------------------------------\n\n            if (!EbayTemplateShippingObj.shippingMethods[i]) {\n                return;\n            }\n\n            // ---------------------------------------\n            var locations = [];\n            EbayTemplateShippingObj.shippingMethods[i].locations.each(function(item) {\n                locations.push(item);\n            });\n            // ---------------------------------------\n\n            // ---------------------------------------\n            $$('input[name=\"shipping[shippingLocation][' + i + '][]\"]').each(function(el) {\n                if (locations.indexOf(el.value) != -1) {\n                    el.checked = true;\n                }\n                jQuery(el).trigger('change');\n            });\n            // ---------------------------------------\n\n            $$('input[value=\"Worldwide\"]').each(function(element) {\n                EbayTemplateShippingObj.shippingLocationChange.call(element);\n            });\n        },\n\n        // ---------------------------------------\n\n        removeRow: function(locationType)\n        {\n            var table = $(this).up('table');\n\n            if (locationType == 'international') {\n                $(this).up('tr').next().remove();\n            }\n\n            if (EbayTemplateShippingObj.hasSurcharge(locationType)) {\n                var i = $(this).up('tr').id.match(/\\d+/);\n                var next = $(this).up('tr').next('[id=shipping_variant_cost_surcharge_' + i + '_tr]');\n                next && next.remove();\n            }\n\n            $(this).up('tr').remove();\n\n            EbayTemplateShippingObj.counter[locationType]--;\n\n            if (EbayTemplateShippingObj.counter[locationType] == 0) {\n                $('shipping_'+locationType+'_table').hide();\n                $('add_'+locationType+'_shipping_method_button').show();\n            }\n\n            if (locationType == 'local' && EbayTemplateShippingObj.counter[locationType] < 4) {\n                table.select('tfoot')[0].show();\n            }\n            if (locationType == 'international' && EbayTemplateShippingObj.counter[locationType] < 5) {\n                table.select('tfoot')[0].show();\n            }\n\n            EbayTemplateShippingObj.updateMeasurementVisibility();\n        },\n\n        // ---------------------------------------\n\n        hasMissingServiceAttribute: function(code, position)\n        {\n            if (typeof EbayTemplateShippingObj.missingAttributes['services'][position] == 'undefined') {\n                return false;\n            }\n\n            if (typeof EbayTemplateShippingObj.missingAttributes['services'][position][code] == 'undefined') {\n                return false;\n            }\n\n            return true;\n        },\n\n        addMissingServiceAttributeOption: function(select, code, position, value)\n        {\n            var option = document.createElement('option');\n\n            option.value = value;\n            option.innerHTML = EbayTemplateShippingObj.missingAttributes['services'][position][code];\n\n            var first = select.down('.empty').next();\n\n            first.insert({ before: option });\n        },\n\n        renderShippingMethods: function(shippingMethods)\n        {\n            if (shippingMethods.length > 0) {\n                $('shipping_local_table').show();\n                $('add_local_shipping_method_button').hide();\n            } else {\n                $('shipping_local_table').hide();\n                $('add_local_shipping_method_button').show();\n            }\n\n            shippingMethods.each(function(service, i) {\n\n                var type = service.shipping_type == 1 ? 'international' : 'local';\n                var row = EbayTemplateShippingObj.addRow(type);\n                var surchargeRow = $('shipping_variant_cost_surcharge_' + i + '_tr');\n\n                row.down('.shipping-service').value = service.shipping_value;\n                row.down('.cost-mode').value = service.cost_mode;\n\n                if (service.cost_mode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Service::COST_MODE_CUSTOM_VALUE')) {\n                    row.down('.shipping-cost-cv').value = service.cost_value;\n                    row.down('.shipping-cost-additional').value = service.cost_additional_value;\n\n                    if (surchargeRow) {\n                        surchargeRow.down('.shipping-cost-surcharge').value = service.cost_surcharge_value;\n                    }\n\n                } else if (service.cost_mode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Shipping\\\\Service::COST_MODE_CUSTOM_ATTRIBUTE')) {\n                    if (EbayTemplateShippingObj.hasMissingServiceAttribute('cost_value', i)) {\n                        EbayTemplateShippingObj.addMissingServiceAttributeOption(\n                            row.down('.shipping-cost-ca select'), 'cost_value', i, service.cost_value\n                        );\n                    }\n\n                    if (EbayTemplateShippingObj.hasMissingServiceAttribute('cost_additional_value', i)) {\n                        EbayTemplateShippingObj.addMissingServiceAttributeOption(\n                            row.down('.shipping-cost-additional-ca select'), 'cost_additional_value', i, service.cost_additional_value\n                        );\n                    }\n\n                    row.down('.shipping-cost-ca select').value = service.cost_value;\n                    row.down('.shipping-cost-additional-ca select').value = service.cost_additional_value;\n\n                    if (surchargeRow) {\n                        surchargeRow.down('.shipping-cost-surcharge-ca select').value = service.cost_surcharge_value;\n                    }\n\n                }\n\n                row.down('.shipping-priority').value = service.priority;\n                jQuery(row.down('.cost-mode')).trigger('change');\n                jQuery(row.down('.shipping-service')).trigger('change');\n            });\n        },\n\n        replaceSelectWithInputHidden: function(select)\n        {\n            var td = select.up('td');\n            var label = select.options[select.selectedIndex].innerHTML;\n            var input = '<input type=\"hidden\" ' +\n                'name=\"' + select.name + '\" ' +\n                'id=\"' + select.id + '\" ' +\n                'value=\"' + select.value + '\" ' +\n                'class=\"' + select.className + '\" />';\n\n            $(select).replace('');\n            $(td).insert('<span>' + label + input + '</span>');\n\n            if (td.down('.cost-mode')) {\n                td.down('.cost-mode').observe('change', EbayTemplateShippingObj.serviceCostModeChange);\n            }\n        },\n\n        // ---------------------------------------\n\n        initExcludeListPopup: function()\n        {\n            var element = jQuery('#magento_block_ebay_template_shipping_form_data_exclude_locations_popup');\n\n            modal({\n                title: M2ePro.translator.translate('Excluded Shipping Locations'),\n                type: 'slide',\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    click: function () {\n                        element.modal('closeModal');\n                    }\n                },{\n                    text: M2ePro.translator.translate('Save'),\n                    class: 'action-primary',\n                    id: 'save_popup_button',\n                    click: function () {\n                        EbayTemplateShippingObj.saveExcludeLocationsList();\n                        element.modal('closeModal');\n                    }\n                }]\n            }, element);\n        },\n\n        showExcludeListPopup: function()\n        {\n            var self = EbayTemplateShippingObj;\n\n            self.updatePopupData();\n            self.checkExcludeLocationSelection();\n\n            self.afterInitPopupActions();\n\n            jQuery('#magento_block_ebay_template_shipping_form_data_exclude_locations_popup').modal('openModal');\n        },\n\n        // ---------------------------------------\n\n        updatePopupData: function()\n        {\n            $('excluded_locations_popup_hidden').value = $('excluded_locations_hidden').value;\n            EbayTemplateShippingObj.updateExcludedLocationsTitles();\n        },\n\n        checkExcludeLocationSelection: function()\n        {\n            var self = EbayTemplateShippingObj,\n                excludedLocations = $('excluded_locations_popup_hidden').value.evalJSON();\n\n            $$('.shipping_excluded_location').each(function(el) { el.checked = 0; });\n\n            $$('.shipping_excluded_location').each(function(el) {\n\n                for (var i = 0; i < excludedLocations.length; i++) {\n                    if (excludedLocations[i]['code'] == el.value) {\n                        el.checked = 1;\n                        el.hasClassName('shipping_excluded_region') && self.selectExcludedLocationAllRegion(el.value, 1);\n                    }\n                }\n            });\n\n            EbayTemplateShippingObj.updateExcludedLocationsSelectedRegions();\n        },\n\n        selectExcludedLocationAllRegion: function(regionCode, checkBoxState)\n        {\n            $$('div[id=\"shipping_excluded_location_international_region_' + regionCode + '\"] .shipping_excluded_location').each(function(el) {\n                el.checked = checkBoxState;\n            });\n        },\n\n        afterInitPopupActions: function()\n        {\n            var firstNavigationLink = $$('.shipping_excluded_location_region_link').shift();\n            firstNavigationLink && jQuery(firstNavigationLink).trigger('click');\n\n            EbayTemplateShippingObj.isInternationalShippingModeNoInternational()\n                ? $('exclude_locations_popup_international').hide()\n                : $('exclude_locations_popup_international').show();\n\n            EbayTemplateShippingObj.updatePopupSizes();\n        },\n\n        updatePopupSizes: function()\n        {\n            var popupHeight = '445px',\n                popupGeneralContentMinHeight = '380px';\n\n            if (EbayTemplateShippingObj.isInternationalShippingModeNoInternational()) {\n                popupHeight = '280px';\n                popupGeneralContentMinHeight = '200px';\n            }\n\n            $('excluded_locations_popup_content_general').setStyle({ 'min-height': popupGeneralContentMinHeight });\n\n            if ($('exclude_locations_international_regions')) {\n                var standartRegionHeight = $('exclude_locations_international_regions').getHeight();\n                $('exclude_locations_international_locations').setStyle({ 'height': standartRegionHeight + 'px' });\n            }\n        },\n\n        // ---------------------------------------\n\n        saveExcludeLocationsList: function()\n        {\n            var title          = $('excluded_locations_popup_titles').innerHTML,\n                titleContainer = $('excluded_locations_titles');\n\n            title == M2ePro.translator.translate('None')\n                ? titleContainer.innerHTML = M2ePro.translator.translate('No Locations are currently excluded.')\n                : titleContainer.innerHTML = title;\n\n            $('excluded_locations_hidden').value = $('excluded_locations_popup_hidden').value;\n        },\n\n        resetExcludeLocationsList: function(window)\n        {\n            window = window || 'general';\n\n            if (window == 'general') {\n                $('excluded_locations_hidden').value = '[]';\n                $('excluded_locations_titles').innerHTML = M2ePro.translator.translate('No Locations are currently excluded.');\n                return;\n            }\n\n            $('excluded_locations_popup_hidden').value = '[]';\n            EbayTemplateShippingObj.updateExcludedLocationsTitles();\n            EbayTemplateShippingObj.checkExcludeLocationSelection();\n        },\n\n        // ---------------------------------------\n\n        selectExcludeLocation: function()\n        {\n            EbayTemplateShippingObj.updateExcludedLocationsHiddenInput(this);\n            EbayTemplateShippingObj.updateExcludedLocationsTitles();\n            EbayTemplateShippingObj.updateExcludedLocationsSelectedRegions();\n        },\n\n        updateExcludedLocationsHiddenInput: function(element)\n        {\n            var self = EbayTemplateShippingObj,\n                asia = $('shipping_excluded_location_international_Asia');\n\n            if (element.hasClassName('shipping_excluded_region')) {\n\n                element.checked\n                    ? self.processRegionWasSelected(element) : self.processRegionWasDeselected(element);\n\n                self.processRelatedRegions(element);\n\n            } else {\n\n                element.checked\n                    ? self.processOneLocationWasSelected(element) : self.processOneLocationWasDeselected(element);\n\n                if (self.isChildAsiaRegion(element.getAttribute('region'))) {\n                    self.processAsiaChildRegion(element);\n                }\n            }\n\n            if (self.isAllLocationsOfAsiaAreSelected() && !asia.checked) {\n                asia.checked = 1;\n                self.processRegionWasSelected($(asia));\n            }\n        },\n\n        // ---------------------------------------\n\n        processRegionWasSelected: function(regionCheckBox)\n        {\n            var self = EbayTemplateShippingObj,\n\n                code   = regionCheckBox.value,\n                title  = regionCheckBox.next().innerHTML,\n                region = regionCheckBox.getAttribute('region'),\n                type   = regionCheckBox.getAttribute('location_type');\n\n            self.selectExcludedLocationAllRegion(code, 1);\n            self.deleteExcludedLocation(code, 'region');\n            self.addExcludedLocation(code, title, region, type);\n        },\n\n        processRegionWasDeselected: function(regionCheckBox)\n        {\n            var self = EbayTemplateShippingObj,\n                code = regionCheckBox.value;\n\n            self.selectExcludedLocationAllRegion(code, 0);\n            self.deleteExcludedLocation(code);\n        },\n\n        processRelatedRegions: function(regionCheckBox)\n        {\n            var self = EbayTemplateShippingObj;\n\n            if (self.isAsiaRegion(regionCheckBox.value)) {\n                self.processAsiaRegion(regionCheckBox);\n            }\n\n            if (self.isChildAsiaRegion(regionCheckBox.value)) {\n                self.processAsiaChildRegion(regionCheckBox);\n            }\n        },\n\n        processAsiaRegion: function(regionCheckBox)\n        {\n            var self = EbayTemplateShippingObj;\n\n            var middleEast = $('shipping_excluded_location_international_Middle East'),\n                southeastAsia = $('shipping_excluded_location_international_Southeast Asia');\n\n            if (regionCheckBox.checked) {\n\n                if (!middleEast.checked) {\n                    middleEast.checked = 1;\n                    self.processRegionWasSelected(middleEast);\n                }\n\n                if (!southeastAsia.checked) {\n                    southeastAsia.checked = 1;\n                    self.processRegionWasSelected(southeastAsia);\n                }\n\n                return;\n            }\n\n            middleEast.checked = 0;\n            southeastAsia.checked = 0;\n\n            self.processRegionWasDeselected(middleEast);\n            self.processRegionWasDeselected(southeastAsia);\n        },\n\n        processAsiaChildRegion: function(regionCheckBox)\n        {\n            var self = EbayTemplateShippingObj,\n                asia = $('shipping_excluded_location_international_Asia');\n\n            if (!regionCheckBox.checked && asia.checked) {\n\n                var code = asia.value;\n\n                asia.checked = 0;\n                self.deleteExcludedLocation(code, 'code');\n\n                $$('div[id=\"shipping_excluded_location_international_region_' + code + '\"] .shipping_excluded_location').each(function(el) {\n                    el.checked = 1;\n                    self.addExcludedLocation(el.value, el.next().innerHTML, el.getAttribute('region'), el.getAttribute('type'));\n                });\n            }\n        },\n\n        processOneLocationWasSelected: function(locationCheckBox)\n        {\n            var self = EbayTemplateShippingObj,\n\n                code   = locationCheckBox.value,\n                title  = locationCheckBox.next().innerHTML,\n                region = locationCheckBox.getAttribute('region'),\n                type   = locationCheckBox.getAttribute('location_type');\n\n            self.addExcludedLocation(code, title, region, type);\n\n            if (!self.isAllLocationsOfRegionAreSelected(region)) {\n                return;\n            }\n\n            if (self.isAsiaRegion(region) && !self.isAllLocationsOfAsiaAreSelected()) {\n                return;\n            }\n\n            var regionTitle = $('shipping_excluded_location_international_' + region).next('label').innerHTML;\n\n            $('shipping_excluded_location_international_' + region).checked = 1;\n            self.deleteExcludedLocation(region, 'region');\n            self.addExcludedLocation(region, regionTitle, null, type);\n        },\n\n        processOneLocationWasDeselected: function(locationCheckBox)\n        {\n            var self = EbayTemplateShippingObj,\n\n                code   = locationCheckBox.value,\n                region = locationCheckBox.getAttribute('region'),\n                type   = locationCheckBox.getAttribute('location_type');\n\n            self.deleteExcludedLocation(code);\n\n            if (region == null) {\n                return;\n            }\n\n            self.deleteExcludedLocation(region);\n            self.deleteExcludedLocation(region, 'region');\n\n            $('shipping_excluded_location_international_' + region).checked = 0;\n\n            var result = self.getLocationsByRegion(region);\n            result['locations'].each(function(el) {\n                self.addExcludedLocation(el.value, el.next().innerHTML, region, type);\n            });\n        },\n\n        // ---------------------------------------\n\n        updateExcludedLocationsTitles: function(sourse)\n        {\n            sourse = sourse || 'excluded_locations_popup_titles';\n\n            var excludedLocations = $(sourse.replace('titles','hidden')).value.evalJSON(),\n                title = sourse == 'excluded_locations_popup_titles'\n                    ? M2ePro.translator.translate('None')\n                    : M2ePro.translator.translate('No Locations are currently excluded.');\n\n            if (excludedLocations.length) {\n\n                title = [];\n\n                excludedLocations.each(function(location) {\n                    var currentTitle = EbayTemplateShippingObj.isRootLocation(location)\n                        ? '<b>' + location['title'] + '</b>' : location['title'];\n                    title.push(currentTitle);\n                });\n\n                title = title.join(', ');\n            }\n\n            $('excluded_locations_reset_link').show();\n            if (sourse == 'excluded_locations_popup_titles' && title == M2ePro.translator.translate('None')) {\n                $('excluded_locations_reset_link').hide()\n            }\n\n            $(sourse).innerHTML = title;\n        },\n\n        updateExcludedLocationsSelectedRegions: function()\n        {\n            $$('.shipping_excluded_location_region_link').each(function(el) {\n\n                var locations = EbayTemplateShippingObj.getLocationsByRegion(el.getAttribute('region'));\n\n                el.removeClassName('have_selected_locations');\n//            if (locations['total'] != locations['selected'] && locations['selected'] > 0) {\n                if (locations['selected'] > 0 && !el.children[0].checked) {\n                    el.addClassName('have_selected_locations');\n                    el.down('span', 1).innerHTML = '(' + locations['selected'] + ' ' + M2ePro.translator.translate('selected') + ')';\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        getLocationsByRegion: function(regionCode)\n        {\n            if (regionCode == null) {\n                return false;\n            }\n\n            var totalCount    = 0,\n                selectedLocations = [];\n\n            $$('div[id=\"shipping_excluded_location_international_region_' + regionCode + '\"] .shipping_excluded_location').each(function(el) {\n                totalCount ++;\n                el.checked && selectedLocations.push(el);\n            });\n\n            return {total: totalCount, selected: selectedLocations.length, locations: selectedLocations};\n        },\n\n        isAllLocationsOfRegionAreSelected: function(regionCode)\n        {\n            var locations = EbayTemplateShippingObj.getLocationsByRegion(regionCode);\n\n            if (!locations) {\n                return false;\n            }\n\n            return locations['total'] == locations['selected'];\n        },\n\n        isAllLocationsOfAsiaAreSelected: function()\n        {\n            var asiaLocations = EbayTemplateShippingObj.getLocationsByRegion('Asia'),\n                eastLocations = EbayTemplateShippingObj.getLocationsByRegion('Middle East'),\n                southLocations = EbayTemplateShippingObj.getLocationsByRegion('Southeast Asia');\n\n            if (!asiaLocations || !eastLocations || !southLocations) {\n                return false;\n            }\n\n            return asiaLocations['total'] == asiaLocations['selected'] &&\n                eastLocations['total'] == eastLocations['selected'] &&\n                southLocations['total'] == southLocations['selected'];\n        },\n\n        isRootLocation: function(location)\n        {\n            return !!(location['region'] == null);\n        },\n\n        isAsiaRegion: function(location)\n        {\n            return location == 'Asia';\n        },\n\n        isChildAsiaRegion: function(location)\n        {\n            return location == 'Middle East' || location == 'Southeast Asia';\n        },\n\n        // ---------------------------------------\n\n        addExcludedLocation: function(code, title, region, type, sourse)\n        {\n            sourse = sourse || 'excluded_locations_popup_hidden';\n\n            var excludedLocations = $(sourse).value.evalJSON();\n            var item = {\n                code: code,\n                title: title,\n                region: region,\n                type: type\n            };\n\n            excludedLocations.push(item);\n            $(sourse).value = Object.toJSON(excludedLocations);\n        },\n\n        deleteExcludedLocation: function(code, key, sourse)\n        {\n            key = key || 'code';\n            sourse = sourse || 'excluded_locations_popup_hidden';\n\n            var excludedLocations  = $(sourse).value.evalJSON(),\n                resultAfterDelete  = [];\n\n            for (var i = 0; i < excludedLocations.length; i++) {\n                if (excludedLocations[i][key] != code) {\n                    resultAfterDelete.push(excludedLocations[i]);\n                }\n            }\n            $(sourse).value = Object.toJSON(resultAfterDelete);\n        },\n\n        // ---------------------------------------\n\n        checkExcludeLocationsRegionsSelection: function()\n        {\n            $$('.shipping_excluded_location_region').invoke('hide');\n            $$('.shipping_excluded_location_region_link').invoke('removeClassName','selected_region');\n\n            $('shipping_excluded_location_international_region_' + this.getAttribute('region')).show();\n            this.addClassName('selected_region');\n        },\n\n        // ---------------------------------------\n\n        updatePackageBlockState: function()\n        {\n            if (this.isLocalShippingModeCalculated() || this.isInternationalShippingModeCalculated()) {\n                this.setCalculatedPackageBlockState();\n                return;\n            }\n\n            if (this.isClickAndCollectEnabled() &&\n                (this.isLocalShippingModeFlat() || this.isLocalShippingModeCalculated()) &&\n                $('dispatch_time').value <= 3\n            ) {\n                this.setClickAndCollectPackageBlockState();\n                return;\n            }\n\n            if (this.isRateTableEnabled()) {\n                this.setRateTablePackageBlockState();\n                return;\n            }\n\n            this.setNonePackageBlockState();\n        },\n\n        setCalculatedPackageBlockState: function()\n        {\n            $('magento_block_ebay_template_shipping_form_data_calculated-wrapper').show();\n\n            var dimensionsTr = $('dimensions_tr');\n            var dimensionSelect = $('dimension_mode');\n            if (dimensionsTr) {\n                dimensionsTr.show();\n                jQuery(dimensionSelect).trigger('change');\n            }\n\n            var packageSizeTr = $('package_size_tr');\n            var packageSizeSelect = $('package_size');\n            if (packageSizeTr) {\n                packageSizeTr.show();\n                jQuery(packageSizeSelect).trigger('change');\n            }\n\n            var weightTr = $('weight_tr');\n            var weightSelect = $('weight');\n            if (weightTr) {\n                if ($('weight').selectedIndex == 0) {\n                    $('weight').selectedIndex = 1;\n                }\n\n                weightTr.show();\n                $('weight_mode_none').hide();\n                jQuery(weightSelect).trigger('change');\n            }\n        },\n\n        setRateTablePackageBlockState: function()\n        {\n            $('magento_block_ebay_template_shipping_form_data_calculated-wrapper').show();\n\n            var dimensionsTr = $('dimensions_tr');\n            var dimensionSelect = $('dimension_mode');\n            if (dimensionsTr) {\n                dimensionsTr.hide();\n                dimensionSelect.selectedIndex = 0;\n                jQuery(dimensionSelect).trigger('change');\n            }\n\n            var packageSizeTr = $('package_size_tr');\n            var packageSizeSelect = $('package_size');\n            if (packageSizeTr) {\n                packageSizeTr.hide();\n                packageSizeSelect.selectedIndex = 0;\n                jQuery(packageSizeSelect).trigger('change');\n            }\n\n            var weightTr = $('weight_tr');\n            var weightSelect = $('weight');\n            if (weightTr) {\n                weightTr.show();\n                $('weight_mode_none').show();\n                jQuery(weightSelect).trigger('change');\n            }\n        },\n\n        setClickAndCollectPackageBlockState: function()\n        {\n            $('magento_block_ebay_template_shipping_form_data_calculated-wrapper').show();\n\n            var dimensionsTr = $('dimensions_tr');\n            var dimensionSelect = $('dimension_mode');\n            if (dimensionsTr) {\n                dimensionsTr.show();\n                jQuery(dimensionSelect).trigger('change');\n            }\n\n            var packageSizeTr = $('package_size_tr');\n            var packageSizeSelect = $('package_size');\n            if (packageSizeTr) {\n                packageSizeTr.hide();\n                packageSizeSelect.selectedIndex = 0;\n                jQuery(packageSizeSelect).trigger('change');\n            }\n\n            var weightTr = $('weight_tr');\n            var weightSelect = $('weight');\n            if (weightTr) {\n                weightTr.show();\n                $('weight_mode_none').show();\n                jQuery(weightSelect).trigger('change');\n            }\n        },\n\n        setNonePackageBlockState: function()\n        {\n            $('magento_block_ebay_template_shipping_form_data_calculated-wrapper').hide();\n\n            var dimensionsTr = $('dimensions_tr');\n            var dimensionSelect = $('dimension_mode');\n            if (dimensionsTr) {\n                dimensionSelect.selectedIndex = 0;\n                jQuery(dimensionSelect).trigger('change');\n            }\n\n            var weightTr = $('weight_tr');\n            var weightSelect = $('weight');\n            if (weightTr) {\n                weightSelect.selectedIndex = 0;\n                jQuery(weightSelect).trigger('change');\n            }\n        },\n\n        // ---------------------------------------\n\n        checkMessages: function(type)\n        {\n            if (typeof EbayListingTemplateSwitcherObj == 'undefined') {\n                // not inside template switcher\n                return;\n            }\n\n            var container, excludeTable, data, formElements = Form.getElements('template_shipping_data_container');\n\n            if (type == 'local') {\n                container = 'shipping_local_table_messages';\n                excludeTable = $('shipping_international_table');\n\n                formElements = formElements.map(function (element) {\n\n                    if (element.up('table') == excludeTable) {\n                        return false;\n                    }\n\n                    return element;\n                }).filter(function(el) { return el; });\n\n                data = Form.serializeElements(formElements);\n\n            } else if (type == 'international') {\n                container = 'shipping_international_table_messages';\n                excludeTable = $('shipping_local_table');\n\n                formElements = formElements.map(function (element) {\n\n                    if (element.up('table') == excludeTable) {\n                        return false;\n                    }\n\n                    return element;\n                }).filter(function(el) { return el; });\n\n                data = Form.serializeElements(formElements);\n\n            } else {\n                return;\n            }\n\n            var id = '',\n                nick = M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::TEMPLATE_SHIPPING'),\n                storeId = EbayListingTemplateSwitcherObj.storeId,\n                marketplaceId = EbayListingTemplateSwitcherObj.marketplaceId,\n                checkAttributesAvailability = false,\n                callback = function() {\n                    var refresh = $(container).down('a.refresh-messages');\n                    if (refresh) {\n                        refresh.observe('click', function() {\n                            this.checkMessages();\n                        }.bind(this))\n                    }\n                }.bind(this);\n\n            TemplateHandlerObj.checkMessages(\n                id,\n                nick,\n                data,\n                storeId,\n                marketplaceId,\n                checkAttributesAvailability,\n                container,\n                callback\n            );\n        },\n\n        clearMessages: function(type)\n        {\n            if (typeof EbayListingTemplateSwitcherObj == 'undefined') {\n                // not inside template switcher\n                return;\n            }\n\n            var container = type == 'local' ? 'shipping_local_table_messages' : 'shipping_international_table_messages';\n            $(container).innerHTML = '';\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Template/Description.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Common',\n    'mage/adminhtml/wysiwyg/tiny_mce/setup'\n], function () {\n\n    window.EbayTemplateDescription = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            jQuery.validator.addMethod('M2ePro-validate-description-template', function(value, el) {\n\n                if ($('description_mode').value != M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::DESCRIPTION_MODE_CUSTOM')) {\n                    return true;\n                }\n\n                return Validation.get('required-entry').test(value,el);\n            }, M2ePro.translator.translate('This is a required field.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-condition-note-length', function(value) {\n\n                if ($('condition_note_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::CONDITION_NOTE_MODE_NONE')) {\n                    return true;\n                }\n\n                return value.length <= 1000;\n            }, M2ePro.translator.translate('Seller Notes must be less then 1000 symbols.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-magento-product-id', function(value) {\n\n                var isValidMagentoProductId = false;\n\n                new Ajax.Request(M2ePro.url.get('ebay_template_description/checkMagentoProductId'), {\n                    method: 'post',\n                    asynchronous: false,\n                    parameters: {\n                        product_id: value\n                    },\n                    onSuccess: function (transport) {\n                        var response = transport.responseText.evalJSON();\n                        isValidMagentoProductId = response.result;\n                    }\n                });\n\n                return isValidMagentoProductId;\n            }, M2ePro.translator.translate('Please enter a valid Magento product ID.'));\n        },\n\n        initObservers: function()\n        {\n            $('title_mode')\n                .observe('change', EbayTemplateDescriptionObj.title_mode_change)\n                .simulate('change');\n\n            $('subtitle_mode')\n                .observe('change', EbayTemplateDescriptionObj.subtitle_mode_change)\n                .simulate('change');\n\n            $('item_condition')\n                .observe('change', EbayTemplateDescriptionObj.item_condition_change)\n                .simulate('change');\n\n            $('condition_note_mode')\n                .observe('change', EbayTemplateDescriptionObj.condition_note_mode_change)\n                .simulate('change');\n\n            $('watermark_scale')\n                .observe('change', EbayTemplateDescriptionObj.watermark_scale_mode_change)\n                .simulate('change');\n\n            $('watermark_mode')\n                .observe('change', EbayTemplateDescriptionObj.watermark_mode_change)\n                .simulate('change');\n\n            $('description_mode')\n                .observe('change', EbayTemplateDescriptionObj.description_mode_change)\n                .simulate('change');\n\n            $('description_template_show_hide_wysiwyg')\n                .observe('click', wysiwygdescription_template.toggle.bind(wysiwygdescription_template))\n                .observe('click', EbayTemplateDescriptionObj.showHideWYSIWYG);\n\n            $('image_main')\n                .observe('change', EbayTemplateDescriptionObj.image_main_change)\n                .simulate('change');\n\n            $('gallery_images')\n                .observe('change', EbayTemplateDescriptionObj.gallery_images_change)\n                .simulate('change');\n\n            $('variation_images')\n                .observe('change', EbayTemplateDescriptionObj.variation_images_change)\n                .simulate('change');\n\n            $('product_details_ean',\n                'product_details_upc',\n                'product_details_epid',\n                'product_details_isbn'\n            ).each(function(element) {\n                element.observe('change', EbayTemplateDescriptionObj.product_details_specification_visibility_change)\n                    .simulate('change');\n            });\n\n            $('product_details_brand')\n                .observe('change', EbayTemplateDescriptionObj.product_details_brand_change)\n                .simulate('change');\n\n            $('product_details_mpn')\n                .observe('change', EbayTemplateDescriptionObj.product_details_mpn_change);\n\n            $('custom_inserts_open_popup')\n                .observe('click', EbayTemplateDescriptionObj.customInsertsOpenPopup);\n\n            this.initCustomInsertsPopup();\n            this.initPreviewPopup();\n        },\n\n        initWYSIWYG: function ()\n        {\n            tinymce.dom.Event._pageInit();\n        },\n\n        // ---------------------------------------\n\n        duplicateClick: function(headId, chapter_when_duplicate_text, templateNick)\n        {\n            var watermarkImageContainer = $('watermark_uploaded_image_container');\n\n            if (watermarkImageContainer) {\n                watermarkImageContainer.remove();\n                $('watermark_image').addClassName('M2ePro-required-when-visible');\n                $('watermark_image_container').addClassName('_required');\n            }\n\n            EbayTemplateEditObj.duplicateClick(headId, chapter_when_duplicate_text, templateNick);\n        },\n\n        // ---------------------------------------\n\n        title_mode_change: function()\n        {\n            var self = EbayTemplateDescriptionObj;\n            self.setTextVisibilityMode(this, 'custom_title_tr');\n        },\n\n        subtitle_mode_change: function()\n        {\n            var self = EbayTemplateDescriptionObj;\n            self.setTextVisibilityMode(this, 'custom_subtitle_tr');\n        },\n\n        description_mode_change: function()\n        {\n            var self = EbayTemplateDescriptionObj;\n\n            var viewEditCustomDescription = $('view_edit_custom_description');\n\n            if (viewEditCustomDescription) {\n                viewEditCustomDescription.hide();\n            }\n\n            $$('.c-custom_description_tr').invoke('hide');\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::DESCRIPTION_MODE_CUSTOM')) {\n                if (viewEditCustomDescription) {\n                    viewEditCustomDescription.show();\n                    $$('.c-custom_description_tr').invoke('hide');\n                    return;\n                }\n\n                if (typeof wysiwygdescription_template !== 'undefined' && $('description_editor_type').value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::EDITOR_TYPE_SIMPLE')) {\n                    wysiwygdescription_template.turnOff();\n                }\n\n                $$('.c-custom_description_tr').invoke('show');\n            } else {\n                if (viewEditCustomDescription) {\n                    viewEditCustomDescription.remove();\n                }\n            }\n        },\n\n        view_edit_custom_change: function()\n        {\n            if (typeof wysiwygdescription_template !== 'undefined' && $('description_editor_type').value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::EDITOR_TYPE_SIMPLE')) {\n                wysiwygdescription_template.turnOff();\n            }\n\n            $$('.c-custom_description_tr').invoke('show');\n            $('view_edit_custom_description').hide();\n        },\n\n        item_condition_change: function()\n        {\n            $('condition_note_tr').show();\n            $('condition_note_mode').simulate('change');\n\n            var self = EbayTemplateDescriptionObj,\n                isConditionNoteNeeded = true,\n\n                conditionValue = $('condition_value'),\n                conditionAttribute = $('condition_attribute');\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::CONDITION_MODE_NONE')) {\n                isConditionNoteNeeded = false;\n            } else if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::CONDITION_MODE_EBAY')) {\n                self.updateHiddenValue(this, conditionValue);\n                conditionAttribute.value = '';\n                isConditionNoteNeeded = conditionValue.value != M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::CONDITION_EBAY_NEW');\n            } else {\n                self.updateHiddenValue(this, conditionAttribute);\n                conditionValue.value = '';\n            }\n\n            if (!isConditionNoteNeeded) {\n\n                $('condition_note_mode').value = M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::CONDITION_NOTE_MODE_NONE');\n                $('condition_note_mode').simulate('change');\n\n                $('condition_note_tr').hide();\n                $('custom_condition_note_tr').hide();\n            }\n        },\n\n        condition_note_mode_change: function()\n        {\n            var self = EbayTemplateDescriptionObj;\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::CONDITION_NOTE_MODE_NONE')) {\n                $('condition_note_template').update('');\n            }\n\n            self.setTextVisibilityMode(this, 'custom_condition_note_tr');\n            self.setTextVisibilityMode(this, 'custom_condition_note_attributes_tr');\n        },\n\n        watermark_mode_change: function()\n        {\n            var self = EbayTemplateDescriptionObj;\n            self.setTextVisibilityMode(this, 'watermark_image_container');\n            if ($('watermark_uploaded_image_container')) {\n                self.setTextVisibilityMode(this, 'watermark_uploaded_image_container');\n            }\n\n            if ($('watermark_scale').value != M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::WATERMARK_SCALE_MODE_STRETCH')) {\n                self.setTextVisibilityMode(this, 'watermark_position_container');\n            }\n\n            self.setTextVisibilityMode(this, 'watermark_scale_container');\n            self.setTextVisibilityMode(this, 'watermark_transparent_container');\n        },\n\n        watermark_scale_mode_change: function()\n        {\n            var self = EbayTemplateDescriptionObj;\n\n            $('watermark_position_container').show();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::WATERMARK_SCALE_MODE_STRETCH')) {\n                $('watermark_position_container').hide();\n            }\n        },\n\n        setTextVisibilityMode: function(obj, elementName)\n        {\n            var elementObj = $(elementName);\n\n            if (!elementObj) {\n                return;\n            }\n\n            elementObj.hide();\n\n            if (obj.value == 1) {\n                elementObj.show();\n            }\n        },\n\n        // ---------------------------------------\n\n        image_main_change: function()\n        {\n            var self = EbayTemplateDescriptionObj;\n\n            $('gallery_images_mode_tr', 'variation_images_mode_tr', 'use_supersize_images_tr',\n              'default_image_url_tr', 'watermark_block').invoke('show');\n\n            if ($$('#variation_configurable_images option').length > 1) {\n                $('variation_configurable_images_container').show();\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::IMAGE_MAIN_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('image_main_attribute'));\n            } else {\n                $('image_main_attribute').value = '';\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::IMAGE_MAIN_MODE_NONE')) {\n                $('gallery_images_mode_tr', 'variation_images_mode_tr', 'variation_configurable_images_container',\n                  'use_supersize_images_tr', 'default_image_url_tr').invoke('hide');\n\n                $('use_supersize_images').value = 0;\n\n                $('gallery_images').value = 0;\n                $('gallery_images').simulate('change');\n\n                $('variation_configurable_images').value = '';\n\n                $('variation_images').value = 1;\n                $('variation_images_limit').value = 1;\n                $('variation_images').simulate('change');\n\n                $('default_image_url').value = '';\n\n                $('watermark_block').hide();\n\n                var watermarkMode = $('watermark_mode');\n\n                if (watermarkMode.selectedIndex != 0) {\n                    watermarkMode.selectedIndex = 0;\n                    watermarkMode.simulate('change');\n                }\n            }\n        },\n\n        gallery_images_change: function()\n        {\n            var self = EbayTemplateDescriptionObj;\n\n            $('gallery_images_limit').value = '';\n            $('gallery_images_attribute').value = '';\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::GALLERY_IMAGES_MODE_PRODUCT')) {\n                self.updateHiddenValue(this, $('gallery_images_limit'));\n            } else if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::GALLERY_IMAGES_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('gallery_images_attribute'));\n            }\n        },\n\n        variation_images_change: function()\n        {\n            var self = EbayTemplateDescriptionObj;\n\n            $('variation_images_limit').value = '';\n            $('variation_images_attribute').value = '';\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::VARIATION_IMAGES_MODE_PRODUCT')) {\n                self.updateHiddenValue(this, $('variation_images_limit'));\n            } else if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::VARIATION_IMAGES_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('variation_images_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n\n        image_width_mode_change: function()\n        {\n            $('image_width_span')[this.value == 1 ? 'show' : 'hide']();\n        },\n\n        image_height_mode_change: function()\n        {\n            $('image_height_span')[this.value == 1 ? 'show' : 'hide']();\n        },\n\n        image_margin_mode_change: function()\n        {\n            $('image_margin_span')[this.value == 1 ? 'show' : 'hide']();\n        },\n\n        select_attributes_image_change: function()\n        {\n            $$('.all-products-images').invoke(this.value == 'media_gallery' ? 'show' : 'hide');\n            $$('.all-products-image').invoke(this.value == 'image' ? 'show' : 'hide');\n            if (this.value == 'image') {\n                $('display_products_images').value = 'custom_settings';\n            }\n            $('display_products_images').simulate('change');\n        },\n\n        display_products_images_change: function()\n        {\n            $$('.products-images-custom-settings').invoke('hide');\n            $$('.products-images-gallery-view').invoke('hide');\n\n            if (this.value == 'gallery_view') {\n                $$('.products-images-gallery-view').invoke('show');\n            } else {\n                $$('.products-images-custom-settings').invoke('show');\n            }\n\n            jQuery('.products-images-mode-change-label').each(function (index, elem) {\n                jQuery(elem).find('.label span').text(jQuery(elem).find('.' + this.value).text());\n            }.bind(this));\n        },\n\n        product_details_specification_visibility_change: function()\n        {\n            var self = EbayTemplateDescriptionObj,\n                modeNone = M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::PRODUCT_DETAILS_MODE_NONE'),\n                modeDoesNotApply = M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::PRODUCT_DETAILS_MODE_DOES_NOT_APPLY');\n\n            var isNotAttributeMode = function(element) {\n                return element.value == modeNone || element.value == modeDoesNotApply;\n            };\n\n            if ($('product_details_ean', 'product_details_upc', 'product_details_isbn', 'product_details_brand')\n                    .every(isNotAttributeMode) && $('product_details_epid').value == modeNone\n            ) {\n                $('product_details_specification_separator').hide();\n                $$('.product-details-specification').each(function(element) {\n                    element.hide();\n                    element.down('.select').down().selectedIndex = 1;\n                });\n            } else {\n                $('product_details_specification_separator').show();\n                var hiddenElement = $(this.id+'_attribute');\n                if (!hiddenElement) {\n                    return;\n                }\n                $$('.product-details-specification').invoke('show');\n                self.updateHiddenValue(this, hiddenElement);\n            }\n        },\n\n        product_details_brand_change: function()\n        {\n            var self = EbayTemplateDescriptionObj;\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::PRODUCT_DETAILS_MODE_NONE') ||\n                this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::PRODUCT_DETAILS_MODE_DOES_NOT_APPLY')) {\n                $('product_details_mpn_tr').hide();\n                $('product_details_mpn').selectedIndex = 0;\n            } else {\n                $('product_details_mpn_tr').show();\n                $$('.product-details-specification').invoke('show');\n                self.updateHiddenValue(this, $(this.id+'_attribute'));\n            }\n\n            self.product_details_specification_visibility_change();\n        },\n\n        product_details_mpn_change: function()\n        {\n            var self = EbayTemplateDescriptionObj;\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::PRODUCT_DETAILS_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $(this.id+'_attribute'));\n            }\n        },\n\n        showHideWYSIWYG: function ()\n        {\n            var label;\n            if ($('description_template').visible()) {\n                label = M2ePro.translator.translate('Show Editor');\n                $('description_editor_type').value = M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::EDITOR_TYPE_SIMPLE');\n            } else {\n                label = M2ePro.translator.translate('Hide Editor');\n                $('description_editor_type').value = M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::EDITOR_TYPE_TINYMCE');\n            }\n            this.select('span').first().update(label);\n        },\n\n        initCustomInsertsPopup: function ()\n        {\n            var popup = jQuery('#custom_inserts_popup');\n            if (!popup.find('form').length) {\n                popup.wrapInner('<form id=\"description_custom_inserts_form\"></form>');\n                CommonObj.initFormValidation('#description_custom_inserts_form');\n            }\n\n            popup.modal({\n                title: M2ePro.translator.translate('Custom Insertions'),\n                type: 'slide',\n                buttons: [],\n                closed: function () {\n                    EbayTemplateDescriptionObj.customInsertsOnClosePopup();\n                }\n            });\n        },\n\n        customInsertsOpenPopup: function ()\n        {\n            jQuery('#custom_inserts_popup').modal('openModal');\n\n            EbayTemplateDescriptionObj.observeImageAttributes();\n        },\n\n        customInsertsOnClosePopup: function ()\n        {\n            jQuery('#description_custom_inserts_form').trigger('reset').validate().resetForm();\n            EbayTemplateDescriptionObj.stopObservingImageAttributes();\n        },\n\n        customInsertsClosePopup: function (callback)\n        {\n            jQuery('#custom_inserts_popup').modal({\n                closed: function () {\n                    callback && callback();\n\n                    // prevent callback closure\n                    callback = undefined;\n\n                    EbayTemplateDescriptionObj.customInsertsOnClosePopup();\n                }\n            }).modal('closeModal');\n        },\n\n        insertProductAttribute: function ()\n        {\n            this.customInsertsClosePopup(function () {\n                AttributeObj.appendToTextarea('#' + $('custom_inserts_product_attribute').value + '#');\n            });\n        },\n\n        insertM2eProAttribute: function ()\n        {\n            this.customInsertsClosePopup(function () {\n                AttributeObj.appendToTextarea('#value[' + $('custom_inserts_m2epro_attribute').value + ']#');\n            });\n        },\n\n        insertGallery: function()\n        {\n            if (!jQuery('#description_custom_inserts_form').valid()) {\n                return;\n            }\n\n            var template = '#' + $('select_attributes_image').value;\n\n            if ($('image_width_mode').value == '1') {\n                template += '[' + $('image_width').value + ',';\n            } else {\n                template += '[,';\n            }\n\n            if ($('image_height_mode').value == '1') {\n                template += '' + $('image_height').value + ',';\n            } else {\n                template += ',';\n            }\n\n            if ($('image_margin_mode').value == '1') {\n                template += '' + $('image_margin').value + ',';\n            } else {\n                template += ',';\n            }\n\n            if ($('select_attributes_image').value == 'media_gallery' && $('display_products_images').value == 'gallery_view')  {\n                template += '2';\n            } else if ($('image_linked_mode').value == '1') {\n                template += '1';\n            } else {\n                template += \"0\";\n            }\n\n            if ($('select_attributes_image').value == 'media_gallery') {\n                template += ',' + $('select_attributes_image_layout').value + ',' + $('select_attributes_image_count').value;\n            }\n\n            if ($('select_attributes_image').value == 'media_gallery' && $('display_products_images').value == 'gallery_view') {\n                template += ',\"' + $('gallery_hint_text').value + '\"';\n            } else if ($('select_attributes_image').value == 'media_gallery') {\n                // media_gallery with empty gallery hint\n                template += ',\"\"';\n            }\n\n            if ($('image_insertion_watermark_mode').value == '1') {\n                template += ',1';\n            } else {\n                template += ',';\n            }\n\n            if ($('select_attributes_image').value == 'image') {\n                template += ',' + $('select_attributes_image_order_position').value;\n            }\n\n            template += ']#';\n\n            this.customInsertsClosePopup(function () {\n                AttributeObj.appendToTextarea(template);\n            });\n        },\n\n        // ---------------------------------------\n\n        observeImageAttributes: function()\n        {\n            $('image_width_mode').observe('change', EbayTemplateDescriptionObj.image_width_mode_change).simulate('change');\n            $('image_height_mode').observe('change', EbayTemplateDescriptionObj.image_height_mode_change).simulate('change');\n            $('image_margin_mode').observe('change', EbayTemplateDescriptionObj.image_margin_mode_change).simulate('change');\n\n            $('select_attributes_image')\n                    .observe('change', EbayTemplateDescriptionObj.select_attributes_image_change)\n                    .simulate('change');\n\n            $('display_products_images')\n                    .observe('change', EbayTemplateDescriptionObj.display_products_images_change)\n                    .simulate('change');\n\n            if($('watermark_mode').value == 1) {\n                this.setTextVisibilityMode($('watermark_mode'), 'products_images_watermark_mode');\n                $('image_insertion_watermark_mode').selectedIndex = 1;\n            } else {\n                this.setTextVisibilityMode($('watermark_mode'), 'products_images_watermark_mode');\n                $('image_insertion_watermark_mode').selectedIndex = 0;\n            }\n        },\n\n        stopObservingImageAttributes: function()\n        {\n            $('image_width_mode').stopObserving();\n            $('image_height_mode').stopObserving();\n            $('image_margin_mode').stopObserving();\n\n            $('select_attributes_image').stopObserving();\n        },\n\n        // ---------------------------------------\n\n        saveWatermarkImage: function(callback, params)\n        {\n            var form  = $('edit_form');\n\n            form.action = M2ePro.url.get('ebay_template_description/saveWatermarkImage');\n            form.target = 'watermark_image_frame';\n\n            if ($('watermark_image_frame') === null) {\n                document.body.appendChild(new Element('iframe', {\n                    id: 'watermark_image_frame',\n                    name: 'watermark_image_frame',\n                    style: 'display: none'\n                }));\n            }\n\n            $('watermark_image_frame').observe('load', function() {\n                if (typeof callback == 'function') {\n                    callback(params);\n                }\n            });\n\n            form.submit();\n        },\n\n        // ---------------------------------------\n\n        initPreviewPopup: function ()\n        {\n            var popup = jQuery('#description_preview_popup');\n            if (!popup.find('form').length) {\n                popup.wrapInner(new Element('form', {\n                    id: 'description_preview_form',\n                    method: 'post',\n                    target: '_blank',\n                    action: M2ePro.url.get('ebay_template_description/preview')\n                }));\n                this.initFormValidation('#description_preview_form');\n            }\n\n            popup.modal({\n                title: M2ePro.translator.translate('Description Preview'),\n                type: 'popup',\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    class: 'action-secondary action-dismiss',\n                    click: function (event) {\n                        this.closeModal(event);\n                    }\n                },{\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action-primary action-accept',\n                    click: function (event) {\n                        if (!jQuery('#description_preview_form').valid()) {\n                            return;\n                        }\n\n                        $('description_preview_description_mode').value = $('description_mode').value;\n                        $('description_preview_description_template').value = $('description_template').value;\n                        $('description_preview_watermark_mode').value = $('watermark_mode').value;\n\n                        $('description_preview_form').submit();\n\n                        this.closeModal(event);\n                    }\n                }],\n                closed: function () {\n                    jQuery('#description_preview_form').trigger('reset').validate().resetForm();\n                }\n            });\n        },\n\n        openPreviewPopup: function ()\n        {\n            if ($('description_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Description::DESCRIPTION_MODE_CUSTOM') && !$('description_template').value.length) {\n                this.alert(M2ePro.translator.translate('Please enter Description Value.'));\n                return;\n            }\n\n            jQuery('#description_preview_popup').modal('openModal');\n        },\n\n        selectProductIdRandomly: function ()\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_template_description/getRandomMagentoProductId'), {\n                method: 'post',\n                parameters: {\n                    store_id: $('description_preview_store_id').value\n                },\n                onSuccess: function (transport) {\n                    var response = transport.responseText.evalJSON();\n\n                    if (response.success) {\n                        $('description_preview_magento_product_id').value = response.product_id;\n                    } else {\n                        self.alert(response.message);\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Template/SellingFormat.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Common'\n], function (modal) {\n\n    window.EbayTemplateSellingFormat = Class.create(Common, {\n\n        charityIndex: 0,\n        charityTpl: '',\n\n        // ---------------------------------------\n\n        initialize: function ()\n        {\n            var self = this;\n            jQuery.validator.addMethod('M2ePro-validate-price-coefficient', function (value, el) {\n\n                var tempEl = el;\n\n                if (self.isElementHiddenFromPage(el)) {\n                    return true;\n                }\n\n                var coefficient = el.up().next().down('input');\n\n                coefficient.removeClassName('price_unvalidated');\n\n                if (!coefficient.up('div').visible()) {\n                    return true;\n                }\n\n                if (coefficient.value == '') {\n                    return false;\n                }\n\n                var floatValidator = Validation.get('M2ePro-validation-float');\n                if (floatValidator.test($F(coefficient), coefficient) && parseFloat(coefficient.value) <= 0) {\n                    coefficient.addClassName('price_unvalidated');\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('Price Change is not valid.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-qty', function (value, el) {\n\n                if (self.isElementHiddenFromPage(el)) {\n                    return true;\n                }\n\n                if (value.match(/[^\\d]+/g) || value <= 0) {\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('Wrong value. Only integer numbers.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-vat', function (value) {\n\n                if (!value) {\n                    return true;\n                }\n\n                if (value.length > 6) {\n                    return false;\n                }\n\n                if (value < 0) {\n                    return false;\n                }\n\n                value = Math.ceil(value);\n\n                return value >= 0 && value <= 30;\n            }, M2ePro.translator.translate('wrong_value_more_than_30'));\n\n            jQuery.validator.addMethod('M2ePro-validation-charity-percentage', function (value, element) {\n\n                if (value == 0) {\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('Please select a percentage of donation'));\n\n            if ($('charity_row_template')) {\n                this.charityTpl = $('charity_row_template').down('tbody').innerHTML;\n                $('charity_row_template').remove();\n            }\n        },\n\n        initObservers: function()\n        {\n            $('listing_type')\n                .observe('change', EbayTemplateSellingFormatObj.listing_type_change)\n                .simulate('change');\n\n            $('duration_mode')\n                .observe('change', EbayTemplateSellingFormatObj.duration_mode_change)\n                .simulate('change');\n\n            $('duration_attribute')\n                .observe('change', EbayTemplateSellingFormatObj.duration_attribute_change)\n                .simulate('change');\n\n            $('qty_mode')\n                .observe('change', EbayTemplateSellingFormatObj.qty_mode_change)\n                .simulate('change');\n\n            $('qty_modification_mode')\n                .observe('change', EbayTemplateSellingFormatObj.qtyPostedMode_change)\n                .simulate('change');\n\n            if ($('tax_category_mode')) {\n                $('tax_category_mode')\n                    .observe('change', EbayTemplateSellingFormatObj.taxCategoryChange)\n                    .simulate('change');\n            }\n\n            $('fixed_price_mode')\n                .observe('change', EbayTemplateSellingFormatObj.fixed_price_mode_change)\n                .simulate('change');\n\n            $('start_price_mode')\n                .observe('change', EbayTemplateSellingFormatObj.start_price_mode_change)\n                .simulate('change');\n\n            $('reserve_price_mode')\n                .observe('change', EbayTemplateSellingFormatObj.reserve_price_mode_change)\n                .simulate('change');\n\n            $('buyitnow_price_mode')\n                .observe('change', EbayTemplateSellingFormatObj.buyitnow_price_mode_change)\n                .simulate('change');\n\n            $('price_discount_stp_mode')\n                .observe('change', EbayTemplateSellingFormatObj.price_discount_stp_mode_change)\n                .simulate('change');\n\n            $('price_discount_map_mode')\n                .observe('change', EbayTemplateSellingFormatObj.price_discount_map_mode_change)\n                .simulate('change');\n\n            $$('.price_coefficient_mode').each(function(element){\n                element.observe('change', EbayTemplateSellingFormatObj.price_coefficient_mode_change)\n                    .simulate('change');\n            });\n\n            $('best_offer_mode')\n                .observe('change', EbayTemplateSellingFormatObj.best_offer_mode_change)\n                .simulate('change');\n\n            $('best_offer_accept_mode')\n                .observe('change', EbayTemplateSellingFormatObj.best_offer_accept_mode_change)\n                .simulate('change');\n\n            $('best_offer_reject_mode')\n                .observe('change', EbayTemplateSellingFormatObj.best_offer_reject_mode_change)\n                .simulate('change');\n\n            EbayTemplateSellingFormatObj.checkPriceMessages();\n            $(\n                'fixed_price_mode',\n                'start_price_mode',\n                'reserve_price_mode',\n                'buyitnow_price_mode',\n                'price_discount_stp_mode',\n                'price_discount_map_mode'\n            )\n                .invoke('observe', 'change', function() {\n                    EbayTemplateSellingFormatObj.checkPriceMessages();\n                }\n            );\n\n            EbayTemplateSellingFormatObj.checkBestOfferMessages();\n            $(\n                'best_offer_accept_mode',\n                'best_offer_reject_mode'\n            )\n                .invoke('observe', 'change', function () {\n                    EbayTemplateSellingFormatObj.checkBestOfferMessages();\n                }\n            );\n        },\n\n        // ---------------------------------------\n\n        isStpAvailable: function () {\n            return M2ePro.formData.isStpEnabled;\n        },\n\n        isMapAvailable: function () {\n            return M2ePro.formData.isMapEnabled;\n        },\n\n        isStpAdvancedAvailable: function () {\n            return M2ePro.formData.isStpAdvancedEnabled;\n        },\n\n        // ---------------------------------------\n\n        listing_type_change: function (event) {\n            var self = EbayTemplateSellingFormatObj,\n\n                bestOfferBlock = $('magento_block_ebay_template_selling_format_edit_form_best_offer-wrapper'),\n                bestOfferMode = $('best_offer_mode'),\n                attributeElement = $('listing_type_attribute');\n\n            $('fixed_price_tr', 'start_price_tr', 'reserve_price_tr', 'buyitnow_price_tr').invoke('show');\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_FIXED')) {\n                $('start_price_tr', 'reserve_price_tr', 'buyitnow_price_tr').invoke('hide');\n                $$('#variation_price_tr .value').invoke('show');\n            }\n\n            attributeElement.innerHTML = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_ATTRIBUTE')) {\n                self.selectMagentoAttribute(this, attributeElement);\n            }\n\n            bestOfferBlock.show();\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_AUCTION')) {\n                $('fixed_price_tr').hide();\n                bestOfferBlock.hide();\n                bestOfferMode.value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::BEST_OFFER_MODE_NO');\n                bestOfferMode.simulate('change');\n            }\n\n            self.updateQtyMode();\n            self.updateQtyPercentage();\n            self.updateIgnoreVariations();\n            self.updateListingDuration();\n            self.updateFixedPrice();\n            self.updatePriceDiscountStpVisibility();\n            self.updatePriceDiscountMapVisibility();\n            self.updateVariationPriceTrVisibility();\n        },\n\n        duration_mode_change: function () {\n            var outOfStockControlTr = $('out_of_stock_control_tr'),\n                outOfStockControlMode = $('out_of_stock_control_mode');\n\n            outOfStockControlTr.hide();\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay::LISTING_DURATION_GTC')) {\n                outOfStockControlTr.show();\n                outOfStockControlMode.value = M2ePro.formData.outOfStockControl;\n            } else {\n                outOfStockControlMode.value = 0;\n            }\n        },\n\n        duration_attribute_change: function () {\n            EbayTemplateSellingFormatObj.updateHiddenValue(this, $('listing_duration_attribute_value'));\n        },\n\n        updateQtyMode: function () {\n            var qtyMode = $('qty_mode'),\n                qtyModeTr = $('qty_mode_tr');\n\n            qtyModeTr.show();\n            if ($('listing_type').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_AUCTION')) {\n                qtyMode.value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::QTY_MODE_SINGLE');\n                qtyMode.simulate('change');\n                qtyModeTr.hide();\n            }\n        },\n\n        updateQtyPercentage: function () {\n            var qtyPercentageTr = $('qty_percentage_tr');\n\n            qtyPercentageTr.hide();\n\n            if ($('listing_type').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_AUCTION')) {\n                return;\n            }\n\n            var qtyMode = $('qty_mode').value;\n\n            if (qtyMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::QTY_MODE_SINGLE') ||\n                qtyMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::QTY_MODE_NUMBER')) {\n                return;\n            }\n\n            qtyPercentageTr.show();\n        },\n\n        updateIgnoreVariations: function () {\n            var ignoreVariationsValueTr = $('ignore_variations_value_tr'),\n                ignoreVariationsValue = $('ignore_variations_value');\n\n            ignoreVariationsValueTr.hide();\n\n            if ($('listing_type').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_AUCTION')) {\n                ignoreVariationsValue.value = 0;\n            } else {\n                ignoreVariationsValueTr.show();\n            }\n        },\n\n        updateListingDuration: function () {\n            var durationMode = $('duration_mode_container'),\n                durationModeValue = $('duration_mode'),\n                durationAttribute = $('duration_attribute_container'),\n                durationAttributeNote = $('duration_attribute_note');\n\n            var outOfStockControlTr = $('out_of_stock_control_tr'),\n                outOfStockControlMode = $('out_of_stock_control_mode');\n\n            $('durationId1', 'durationId30', 'durationId100').invoke('show');\n\n            durationMode.show();\n            durationAttribute.hide();\n            durationAttributeNote.hide();\n\n            if ($('listing_type').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_FIXED')) {\n\n                durationModeValue.value = 3;\n\n                $('durationId1').hide();\n                if (M2ePro.formData.duration_mode && M2ePro.formData.duration_mode != 1) {\n                    durationModeValue.value = M2ePro.formData.duration_mode;\n                }\n\n                durationModeValue.simulate('change');\n            }\n\n            if ($('listing_type').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_AUCTION')) {\n\n                durationModeValue.value = 3;\n\n                $('durationId30', 'durationId100').invoke('hide');\n                if (M2ePro.formData.duration_mode && M2ePro.formData.duration_mode != 30 && M2ePro.formData.duration_mode != 100) {\n                    durationModeValue.value = M2ePro.formData.duration_mode;\n                }\n\n                outOfStockControlTr.hide();\n                outOfStockControlMode.value = 0;\n            }\n\n            if ($('listing_type').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_ATTRIBUTE')) {\n                durationMode.hide();\n                durationAttribute.show();\n                durationAttributeNote.show();\n                outOfStockControlTr.hide();\n                outOfStockControlMode.value = 0;\n            }\n        },\n\n        updateVariationPriceTrVisibility: function () {\n            var removeBottomBorderTds = $$('#fixed_price_tr td.remove_bottom_border'),\n                addRowspanTds = $$('#fixed_price_tr td.add_rowspan'),\n                priceModeSelect = $('fixed_price_mode'),\n                variationPriceTr = $('variation_price_tr');\n\n            variationPriceTr.hide();\n            removeBottomBorderTds.invoke('removeClassName', 'bottom_border_disabled');\n            addRowspanTds.invoke('removeAttribute', 'rowspan');\n\n            if ($('listing_type').value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_AUCTION')) {\n                variationPriceTr.show();\n                addRowspanTds.invoke('setAttribute', 'rowspan', '2');\n                if (priceModeSelect.value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_NONE')) {\n                    removeBottomBorderTds.invoke('addClassName', 'bottom_border_disabled');\n                }\n            }\n        },\n\n        updateFixedPrice: function () {\n            var priceLabel = $('fixed_price_label'),\n                bestOfferAcceptPercentageOption = $('best_offer_accept_percentage_option'),\n                bestOfferRejectPercentageOption = $('best_offer_reject_percentage_option');\n\n            priceLabel.innerHTML = M2ePro.translator.translate('Fixed Price') + ': ';\n            bestOfferAcceptPercentageOption.innerHTML = M2ePro.translator.translate('% of Fixed Price');\n            bestOfferRejectPercentageOption.innerHTML = M2ePro.translator.translate('% of Fixed Price');\n\n            if ($('listing_type').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_FIXED')) {\n                priceLabel.innerHTML = M2ePro.translator.translate('Price') + ': ';\n                bestOfferAcceptPercentageOption.innerHTML = M2ePro.translator.translate('% of Price');\n                bestOfferRejectPercentageOption.innerHTML = M2ePro.translator.translate('% of Price');\n            }\n        },\n\n        updatePriceDiscountStpVisibility: function () {\n            var priceDiscTrStp = $('price_discount_stp_tr'),\n                priceDiscStpMode = $('price_discount_stp_mode');\n\n            priceDiscTrStp.hide();\n            if (EbayTemplateSellingFormatObj.isStpAvailable()) {\n                priceDiscTrStp.show();\n            }\n\n            if ($('listing_type').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_AUCTION')) {\n                priceDiscTrStp.hide();\n                priceDiscStpMode.value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_NONE');\n                priceDiscStpMode.simulate('change');\n            }\n        },\n\n        updatePriceDiscountMapVisibility: function () {\n            var priceDiscTrMap = $('price_discount_map_tr'),\n                priceDiscMapMode = $('price_discount_map_mode');\n\n            priceDiscTrMap.hide();\n            if (EbayTemplateSellingFormatObj.isMapAvailable()) {\n                priceDiscTrMap.show();\n            }\n\n            if ($('listing_type').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_AUCTION')) {\n                priceDiscTrMap.hide();\n                priceDiscMapMode.value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_NONE');\n                priceDiscMapMode.simulate('change');\n            }\n        },\n\n        // ---------------------------------------\n\n        qty_mode_change: function () {\n            var self = EbayTemplateSellingFormatObj,\n\n                customValueTr = $('qty_mode_cv_tr'),\n                attributeElement = $('qty_custom_attribute'),\n\n                maxPostedValueTr = $('qty_modification_mode_tr'),\n                maxPostedValueMode = $('qty_modification_mode');\n\n            customValueTr.hide();\n            attributeElement.value = '';\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::QTY_MODE_NUMBER')) {\n                customValueTr.show();\n            } else if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::QTY_MODE_ATTRIBUTE')) {\n                self.selectMagentoAttribute(this, attributeElement);\n            }\n\n            maxPostedValueTr.hide();\n            maxPostedValueMode.value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::QTY_MODIFICATION_MODE_OFF');\n\n            if (self.isMaxPostedQtyAvailable(this.value)) {\n\n                maxPostedValueTr.show();\n                maxPostedValueMode.value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::QTY_MODIFICATION_MODE_ON');\n\n                if (self.isMaxPostedQtyAvailable(M2ePro.formData.qty_mode)) {\n                    maxPostedValueMode.value = M2ePro.formData.qty_modification_mode;\n                }\n            }\n\n            maxPostedValueMode.simulate('change');\n\n            self.updateQtyPercentage();\n        },\n\n        isMaxPostedQtyAvailable: function (qtyMode) {\n            return qtyMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::QTY_MODE_PRODUCT') ||\n                qtyMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::QTY_MODE_ATTRIBUTE') ||\n                qtyMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::QTY_MODE_PRODUCT_FIXED');\n        },\n\n        qtyPostedMode_change: function () {\n            var minPosterValueTr = $('qty_min_posted_value_tr'),\n                maxPosterValueTr = $('qty_max_posted_value_tr');\n\n            minPosterValueTr.hide();\n            maxPosterValueTr.hide();\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::QTY_MODIFICATION_MODE_ON')) {\n                minPosterValueTr.show();\n                maxPosterValueTr.show();\n            }\n        },\n\n        // ---------------------------------------\n\n        taxCategoryChange: function () {\n            var self = EbayTemplateSellingFormatObj,\n                valueEl = $('tax_category_value'),\n                attributeEl = $('tax_category_attribute');\n\n            valueEl.value = '';\n            attributeEl.value = '';\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::TAX_CATEGORY_MODE_VALUE')) {\n                self.updateHiddenValue(this, valueEl);\n            }\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::TAX_CATEGORY_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, attributeEl);\n            }\n        },\n\n        // ---------------------------------------\n\n        fixed_price_mode_change: function () {\n            var self = EbayTemplateSellingFormatObj,\n                listingType = $('listing_type'),\n                currencyTd = $('fixed_price_currency_td'),\n                attributeElement = $('fixed_price_custom_attribute'),\n                priceChangeTd = $('fixed_price_change_td'),\n                priceChangeTds = $$('#fixed_price_tr td.remove_bottom_border'),\n                variationPriceSelect = $$('#variation_price_tr .value');\n\n            variationPriceSelect.invoke('hide');\n            priceChangeTds.invoke('removeClassName', 'bottom_border_disabled');\n            priceChangeTd.hide();\n            currencyTd && currencyTd.hide();\n\n            if (this.value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_NONE')) {\n                priceChangeTd.show();\n                currencyTd && currencyTd.show();\n                variationPriceSelect.invoke('show');\n                if (listingType.value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::LISTING_TYPE_AUCTION')) {\n                    priceChangeTds.invoke('addClassName', 'bottom_border_disabled');\n                }\n            }\n\n            attributeElement.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                self.selectMagentoAttribute(this, attributeElement);\n            }\n        },\n\n        start_price_mode_change: function () {\n            var self = EbayTemplateSellingFormatObj,\n                attributeElement = $('start_price_custom_attribute');\n\n            attributeElement.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                self.selectMagentoAttribute(this, attributeElement);\n            }\n        },\n\n        reserve_price_mode_change: function () {\n            var self = EbayTemplateSellingFormatObj,\n                attributeElement = $('reserve_price_custom_attribute'),\n                priceChangeTd = $('reserve_price_change_td'),\n                currencyTd = $('reserve_price_currency_td');\n\n            priceChangeTd.hide();\n            currencyTd && currencyTd.hide();\n\n            if (this.value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_NONE')) {\n                priceChangeTd.show();\n                currencyTd && currencyTd.show();\n            }\n\n            attributeElement.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                self.selectMagentoAttribute(this, attributeElement);\n            }\n        },\n\n        buyitnow_price_mode_change: function () {\n            var self = EbayTemplateSellingFormatObj,\n                attributeElement = $('buyitnow_price_custom_attribute'),\n                priceChangeTd = $('buyitnow_price_change_td'),\n                currencyTd = $('buyitnow_price_currency_td');\n\n            priceChangeTd.hide();\n            currencyTd && currencyTd.hide();\n\n            if (this.value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_NONE')) {\n                priceChangeTd.show();\n                currencyTd && currencyTd.show();\n            }\n\n            attributeElement.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                self.selectMagentoAttribute(this, attributeElement);\n            }\n        },\n\n        price_coefficient_mode_change: function () {\n            var coefficientInputDiv = $(this.id.replace('mode', '') + 'input_div'),\n                signSpan = $(this.id.replace('mode', '') + 'sign_span'),\n                percentSpan = $(this.id.replace('mode', '') + 'percent_span'),\n                examplesContainer = $(this.id.replace('coefficient_mode', '') + 'example_container');\n\n            // ---------------------------------------\n\n            coefficientInputDiv.show();\n            examplesContainer.show();\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::PRICE_COEFFICIENT_NONE')) {\n                coefficientInputDiv.hide();\n                examplesContainer.hide();\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            signSpan.innerHTML = '';\n            percentSpan.innerHTML = '';\n            $$('.' + this.id.replace('coefficient_mode', '') + 'example').invoke('hide');\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::PRICE_COEFFICIENT_ABSOLUTE_INCREASE')) {\n                signSpan.innerHTML = '+';\n\n                if (typeof M2ePro.formData.currency != 'undefined') {\n                    percentSpan.innerHTML = M2ePro.formData.currency;\n                }\n\n                $(this.id.replace('coefficient_mode', '') + 'example_absolute_increase').show();\n            }\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::PRICE_COEFFICIENT_ABSOLUTE_DECREASE')) {\n                signSpan.innerHTML = '-';\n\n                if (typeof M2ePro.formData.currency != 'undefined') {\n                    percentSpan.innerHTML = M2ePro.formData.currency;\n                }\n\n                $(this.id.replace('coefficient_mode', '') + 'example_absolute_decrease').show();\n            }\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::PRICE_COEFFICIENT_PERCENTAGE_INCREASE')) {\n                signSpan.innerHTML = '+';\n                percentSpan.innerHTML = '%';\n\n                $(this.id.replace('coefficient_mode', '') + 'example_percentage_increase').show();\n            }\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::PRICE_COEFFICIENT_PERCENTAGE_DECREASE')) {\n                signSpan.innerHTML = '-';\n                percentSpan.innerHTML = '%';\n\n                $(this.id.replace('coefficient_mode', '') + 'example_percentage_decrease').show();\n            }\n            // ---------------------------------------\n        },\n\n        price_discount_stp_mode_change: function () {\n            var attributeElement = $('price_discount_stp_attribute'),\n                priceDiscountStpTds = $$('#price_discount_stp_tr td.remove_bottom_border'),\n                priceDiscountStpReasonTr = $('price_discount_stp_reason_tr'),\n                currencyTd = $('price_discount_stp_currency_td');\n\n            priceDiscountStpReasonTr.hide();\n            currencyTd && currencyTd.hide();\n            priceDiscountStpTds.invoke('removeClassName', 'bottom_border_disabled');\n\n            if (this.value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_NONE')) {\n                currencyTd && currencyTd.show();\n\n                if (EbayTemplateSellingFormatObj.isStpAdvancedAvailable()) {\n                    priceDiscountStpReasonTr.show();\n                    priceDiscountStpTds.invoke('addClassName', 'bottom_border_disabled');\n                }\n            }\n\n            attributeElement.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                EbayTemplateSellingFormatObj.selectMagentoAttribute(this, attributeElement);\n            }\n        },\n\n        price_discount_map_mode_change: function () {\n            var attributeElement = $('price_discount_map_attribute'),\n                priceDiscountMapExposureTr = $('price_discount_map_exposure_tr'),\n                currencyTd = $('price_discount_map_currency_td');\n\n            priceDiscountMapExposureTr.hide();\n            currencyTd && currencyTd.hide();\n\n            if (this.value != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_NONE')) {\n                currencyTd && currencyTd.show();\n\n                if (EbayTemplateSellingFormatObj.isMapAvailable()) {\n                    priceDiscountMapExposureTr.show();\n                }\n            }\n\n            attributeElement.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Template\\\\SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                EbayTemplateSellingFormatObj.selectMagentoAttribute(this, attributeElement);\n            }\n        },\n\n        // ---------------------------------------\n\n        best_offer_mode_change: function () {\n            var bestOfferRespondTable = $$('.best_offer_respond_table_container');\n\n            bestOfferRespondTable.invoke('hide');\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::BEST_OFFER_MODE_YES')) {\n                bestOfferRespondTable.invoke('show');\n                $('best_offer_reject_mode', 'best_offer_accept_mode').invoke('simulate', 'change');\n            } else {\n                $('template_selling_format_messages_best_offer').innerHTML = '';\n            }\n        },\n\n        best_offer_accept_mode_change: function () {\n            var self = EbayTemplateSellingFormatObj,\n\n                bestOfferAcceptValueTr = $('best_offer_accept_value_tr'),\n                attributeElement = $('best_offer_accept_custom_attribute');\n\n            bestOfferAcceptValueTr.hide();\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::BEST_OFFER_ACCEPT_MODE_PERCENTAGE')) {\n                bestOfferAcceptValueTr.show();\n            }\n\n            attributeElement.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::BEST_OFFER_ACCEPT_MODE_ATTRIBUTE')) {\n                self.selectMagentoAttribute(this, attributeElement);\n            }\n        },\n\n        best_offer_reject_mode_change: function () {\n            var self = EbayTemplateSellingFormatObj,\n                bestOfferRejectValueTr = $('best_offer_reject_value_tr'),\n                attributeElement = $('best_offer_reject_custom_attribute');\n\n            bestOfferRejectValueTr.hide();\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::BEST_OFFER_REJECT_MODE_PERCENTAGE')) {\n                bestOfferRejectValueTr.show();\n            }\n\n            attributeElement.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\SellingFormat::BEST_OFFER_REJECT_MODE_ATTRIBUTE')) {\n                self.selectMagentoAttribute(this, attributeElement);\n            }\n        },\n\n        // ---------------------------------------\n\n        selectMagentoAttribute: function (elementSelect, elementAttribute) {\n            var attributeCode = elementSelect.options[elementSelect.selectedIndex].getAttribute('attribute_code');\n            elementAttribute.value = attributeCode;\n        },\n\n        // ---------------------------------------\n\n        checkBestOfferMessages: function ()\n        {\n            var formElements = $(\n                \"best_offer_mode\",\n                \"best_offer_accept_mode\",\n                \"best_offer_accept_custom_attribute\",\n                \"best_offer_reject_mode\",\n                \"best_offer_reject_custom_attribute\"\n            );\n\n            var isVisible = $$('.best_offer_respond_table_container').first().visible();\n            if (!isVisible) {\n                return false;\n            }\n\n            this.checkMessages(Form.serializeElements(formElements), 'template_selling_format_messages_best_offer')\n        },\n\n        checkPriceMessages: function ()\n        {\n\n            var formElements = Form.getElements('template_selling_format_data_container'),\n                excludedElements = $(\n                    \"best_offer_mode\",\n                    \"best_offer_accept_mode\",\n                    \"best_offer_accept_custom_attribute\",\n                    \"best_offer_reject_mode\",\n                    \"best_offer_reject_custom_attribute\"\n                );\n\n            formElements = formElements.filter(function (element) {\n                return excludedElements.indexOf(element) < 0;\n            });\n\n            if (formElements.length === 0) {\n                return false;\n            }\n\n            this.checkMessages(Form.serializeElements(formElements), 'template_selling_format_messages');\n        },\n\n        checkMessages: function (data, container)\n        {\n            if (typeof EbayListingTemplateSwitcherObj == 'undefined') {\n                // not inside template switcher\n                return;\n            }\n\n            var id = '',\n                nick = M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::TEMPLATE_SELLING_FORMAT'),\n                storeId = EbayListingTemplateSwitcherObj.storeId,\n                marketplaceId = EbayListingTemplateSwitcherObj.marketplaceId,\n                checkAttributesAvailability = EbayListingTemplateSwitcherObj.checkAttributesAvailability,\n                callback = function () {\n                    var refresh = $(container).down('a.refresh-messages');\n                    if (refresh) {\n                        refresh.observe('click', function () {\n                            this.checkMessages(data, container);\n                        }.bind(this))\n                    }\n                }.bind(this);\n\n            TemplateHandlerObj.checkMessages(\n                id,\n                nick,\n                data,\n                storeId,\n                marketplaceId,\n                checkAttributesAvailability,\n                container,\n                callback\n            );\n        },\n\n        // eBay Charity\n        // ---------------------------------------\n\n        renderCharities: function (data) {\n            var self = this;\n\n            $H(data).each(function (charity) {\n                self.addCharityRow(charity.value);\n            });\n        },\n\n        addCharityRow: function (charityData) {\n            var self = this;\n\n            $('charity_not_set_table').hide();\n            $('charity_table').show();\n\n            charityData = charityData || {};\n            this.charityIndex++;\n\n            var tpl = this.charityTpl;\n            tpl = tpl.replace(/%i%/g, this.charityIndex);\n            $('charity_table_tbody').insert(tpl);\n\n            var row = $('charity_row_' + this.charityIndex + '_tr');\n            row.show();\n\n            var marketplaceEl = row.down('.charity-marketplace_id');\n\n            if ($('charity_table_tbody').select('tr').length === (marketplaceEl.select('option').length - 1)) {\n                $$('.add_charity_button').each(function(el) {\n                    el.hide();\n                });\n            }\n\n            if (charityData.marketplace_id) {\n                marketplaceEl.value = charityData.marketplace_id;\n                self.charityMarketplaceChange.call(self, marketplaceEl, charityData);\n            } else {\n                self.hideSelectedMarketplaceOptions();\n            }\n        },\n\n        removeCharityRow: function (el) {\n            el.up('.charity-row').remove();\n\n            if ($('charity_table_tbody').select('tr').length == 0) {\n                $('charity_not_set_table').show();\n                $('charity_table').hide();\n            }\n\n            $$('.add_charity_button').each(function(el){\n                el.show();\n            });\n        },\n\n        // ---------------------------------------\n\n        charityMarketplaceChange: function(marketplaceEl, charityData) {\n            var self = this,\n                organizationEl = marketplaceEl.up('.charity-row').down('.charity-organization'),\n                percentageEl = organizationEl.up('.charity-row').down('.charity-percentage');\n\n            charityData = charityData || {};\n\n            self.hideSelectedMarketplaceOptions();\n\n            percentageEl.value = '';\n\n            if (marketplaceEl.value == '') {\n                organizationEl.value = '';\n                organizationEl.simulate('change');\n                organizationEl.disable().hide();\n\n                return;\n            }\n            organizationEl.update().enable().show();\n\n            var option = new Element('option', {\n                class: 'empty',\n                value: ''\n            });\n            organizationEl.insert({bottom: option});\n\n            option = new Element('option', {\n                class: 'searchNewCharity',\n                value: ''\n            });\n            option.innerHTML = M2ePro.translator.translate('Search for Charity Organization');\n            organizationEl.insert({bottom: option});\n\n            if (charityData.organization_id && charityData.organization_custom == 0) {\n\n                charityData.organization_custom = 1;\n\n                self.charityDictionary[marketplaceEl.value].charities.each(function (charity) {\n                    if (charityData.organization_id == charity.id) {\n                        charityData.organization_custom = 0;\n                    }\n                });\n            }\n\n            if (charityData.organization_custom) {\n                var customOptgroup = new Element('optgroup', {\n                    label: 'Custom',\n                    class: 'customCharity'\n                }).insert({\n                    bottom: new Element('option', {\n                        value: charityData.organization_id,\n                        class: 'newCharity'\n                    }).update(charityData.organization_name)\n                });\n\n                organizationEl.insert(customOptgroup);\n                organizationEl.up('.charity-row').select('input.organization_custom')[0].value = charityData.organization_custom;\n            }\n\n            if (self.charityDictionary[marketplaceEl.value].charities.length > 0) {\n                var optgroup = new Element('optgroup', {\n                    label: 'Featured',\n                    class: 'featuredCharity'\n                });\n\n                self.charityDictionary[marketplaceEl.value].charities.each(function (charity) {\n                    var option = new Element('option', {\n                        value: charity.id\n                    });\n\n                    option.innerHTML = charity.name;\n                    optgroup.insert(option);\n                });\n                organizationEl.insert(optgroup);\n            }\n\n            if (charityData.organization_id) {\n                organizationEl.value = charityData.organization_id;\n                self.charityOrganizationChange.call(self, organizationEl, charityData);\n            }\n        },\n\n        charityOrganizationChange: function (organizationEl, charityData) {\n            var self = this,\n                percentageEl = organizationEl.up('.charity-row').down('.charity-percentage'),\n                marketplaceEl = organizationEl.up('.charity-row').down('.charity-marketplace_id');\n\n            if (organizationEl[organizationEl.selectedIndex].hasClassName('searchNewCharity')) {\n                self.openPopUpCharity(organizationEl, marketplaceEl.value);\n\n                if (typeof self.charitySelectedHistory != 'undefined') {\n                    organizationEl.selectedIndex = self.charitySelectedHistory;\n                }\n\n                return;\n            }\n\n            var optgroup = organizationEl[organizationEl.selectedIndex].up('optgroup')\n\n            if (optgroup && optgroup.hasClassName('customCharity')) {\n                organizationEl.up('.charity-row').select('input.organization_custom')[0].value = 1;\n            } else {\n                organizationEl.up('.charity-row').select('input.organization_custom')[0].value = 0;\n            }\n\n            self.charitySelectedHistory = organizationEl.selectedIndex;\n\n            organizationEl.up('.charity-row').select('input.organization_name')[0].value = organizationEl[organizationEl.selectedIndex].innerHTML;\n\n            charityData = charityData || {};\n\n            if (organizationEl.value == '') {\n                percentageEl.value = '';\n                percentageEl.simulate('change');\n                percentageEl.disable().hide();\n\n                return;\n            }\n            percentageEl.update().enable().show();\n\n            var option = new Element('option', {\n                class: 'empty',\n                value: ''\n            });\n            percentageEl.insert({bottom: option});\n\n            if (marketplaceEl.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay::MARKETPLACE_MOTORS')) {\n                option = new Element('option', {\n                    value: 1\n                });\n                option.innerHTML = '1%';\n                percentageEl.insert({bottom: option});\n                option = new Element('option', {\n                    value: 5\n                });\n                option.innerHTML = '5%';\n                percentageEl.insert({bottom: option});\n            }\n\n            for (var i = 2; i < 21; i++) {\n                option = new Element('option', {\n                    value: i*5\n                });\n                option.innerHTML = i*5+'%';\n                percentageEl.insert({bottom: option});\n            }\n\n            if (charityData.percentage) {\n                percentageEl.value = charityData.percentage;\n            }\n        },\n\n        // ---------------------------------------\n\n        charityOrganizationCustomModeChange: function (organizationEl, charityData) {\n            var self = this,\n                percentageEl = organizationEl.up('.charity-row').down('.charity-percentage'),\n                marketplaceEl = organizationEl.up('.charity-row').down('.charity-marketplace_id');\n\n            if (organizationEl[organizationEl.selectedIndex].hasClassName('searchNewCharity')) {\n                self.openPopUpCharity(organizationEl, marketplaceEl.value);\n\n                if (typeof self.charitySelectedHistory != 'undefined') {\n                    organizationEl.selectedIndex = self.charitySelectedHistory;\n                }\n\n                return;\n            }\n\n            var optgroup = organizationEl[organizationEl.selectedIndex].up('optgroup')\n\n            if (optgroup && optgroup.hasClassName('customCharity')) {\n                organizationEl.up('.charity-row').select('input.organization_custom')[0].value = 1;\n            } else {\n                organizationEl.up('.charity-row').select('input.organization_custom')[0].value = 0;\n            }\n\n            self.charitySelectedHistory = organizationEl.selectedIndex;\n\n            organizationEl.up('.charity-row').select('input.organization_name')[0].value = organizationEl[organizationEl.selectedIndex].innerHTML;\n\n            if (organizationEl.value == '') {\n                $('charity_percentage').hide();\n            } else {\n                $('charity_percentage').show();\n            }\n            percentageEl.value = '';\n        },\n\n        // ---------------------------------------\n\n        hideSelectedMarketplaceOptions: function()\n        {\n            var charityTBody =  $('charity_table_tbody');\n\n            charityTBody.select('select.charity-marketplace_id option').each(function(option){\n                option.show();\n            });\n\n            charityTBody.select('select.charity-marketplace_id').each(function(select){\n                charityTBody.select('select.charity-marketplace_id option[value=\"' + select.value + '\"]').each(function(option){\n                    option.hide();\n                });\n\n                select[select.selectedIndex].show();\n            });\n        },\n\n        // ---------------------------------------\n\n        openPopUpCharity: function (organizationEl, marketplaceId) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_template_sellingFormat/getSearchCharityPopUpHtml'), {\n                method: 'post',\n                parameters: {\n                    marketplace_id: marketplaceId\n                },\n                onSuccess: function (transport) {\n\n                    var container = $('charitySearch_pop_up_content');\n\n                    if (container) {\n                        container.remove();\n                    }\n\n                    $('html-body').insert({\n                        bottom: transport.responseText\n                    });\n\n                    self.charitySearchPopup = jQuery('#charitySearch_pop_up_content');\n\n                    modal({\n                        title: M2ePro.translator.translate('Search For Charities'),\n                        type: 'slide',\n                        buttons: []\n                    }, self.charitySearchPopup);\n\n                    self.charitySearchPopup.modal('openModal');\n\n                    self.charitySearchPopup.organizationEl = organizationEl;\n\n                    $('query').observe('keypress', function (event) {\n                        event.keyCode == Event.KEY_RETURN && self.searchCharity();\n                    });\n\n                    $('searchCharity_reset').observe('click', function (event) {\n                        $('query').value = '';\n                        $('selectCharitySearch').selectedIndex = '';\n                        $('searchCharity_grid').hide();\n                        $('searchCharity_warning_block').hide();\n                    })\n                }\n            });\n\n        },\n\n        searchCharity: function () {\n            var query = $('query').value;\n            var destination = $('selectCharitySearch').value;\n            var marketplaceId = $('charitySearch_marketplace_id').value;\n\n            if (query == '') {\n                $('query').focus();\n                this.alert(M2ePro.translator.translate('Please, enter the organization name or ID.'));\n                return;\n            }\n\n            $('searchCharity_grid').hide();\n            $('searchCharity_error_block').hide();\n            $('searchCharity_warning_block').hide();\n\n            new Ajax.Request(M2ePro.url.get('ebay_template_sellingFormat/searchCharity'), {\n                method: 'post',\n                parameters: {\n                    query: query,\n                    destination: destination,\n                    marketplace_id: marketplaceId\n                },\n                onSuccess: function (transport) {\n                    transport = transport.responseText.evalJSON();\n\n                    if (transport.result == 'success') {\n                        $('searchCharity_grid')\n                            .update(transport.html)\n                            .show();\n\n                        if (transport.count) {\n                            $('searchCharity_warning_block').show();\n                        }\n                    } else {\n                        $('searchCharity_error_block').update(transport.html);\n                        $('searchCharity_error_block').show();\n                    }\n                }\n            })\n        },\n\n        selectNewCharity: function (id, name) {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        var customCharities = self.charitySearchPopup.organizationEl.select('option.newCharity');\n\n                        if (customCharities.length > 0) {\n                            customCharities[0].update(name);\n                            customCharities[0].value = id;\n                        } else {\n                            var optgroups = self.charitySearchPopup.organizationEl.select('optgroup.customCharity');\n\n                            if (optgroups.length > 0) {\n                                optgroups[0].insert({\n                                    bottom: new Element('option', {\n                                        value: id,\n                                        class: 'newCharity'\n                                    }).update(name)\n                                });\n                            } else {\n                                var optgroup = new Element('optgroup', {\n                                    label: 'Custom',\n                                    class: 'customCharity'\n                                }).insert({\n                                    bottom: new Element('option', {\n                                        value: id,\n                                        class: 'newCharity'\n                                    }).update(name)\n                                });\n\n                                var featuresGroups = self.charitySearchPopup.organizationEl.select('optgroup.featuredCharity');\n                                if (featuresGroups.length > 0) {\n                                    featuresGroups[0].insert({\n                                        before: optgroup\n                                    });\n                                } else {\n                                    self.charitySearchPopup.organizationEl.insert(optgroup);\n                                }\n                            }\n                        }\n\n                        self.charitySearchPopup.organizationEl.value = id;\n                        self.charitySearchPopup.organizationEl.up('.charity-row').select('input.organization_custom')[0].value = 1;\n                        self.charitySearchPopup.organizationEl.simulate('change');\n                        self.charitySearchPopup.modal('closeModal');\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Template/Payment.js":"define([\n    'jquery',\n    'M2ePro/Common'\n], function (jQuery) {\n    window.EbayTemplatePayment = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            jQuery.validator.addMethod('M2ePro-validate-payment-methods', function(value) {\n\n                if ($('pay_pal_mode').checked) {\n                    return true;\n                }\n\n                return $$('input[name=\"payment[services][]\"]').any(function(o) {\n                    return o.checked;\n                });\n            }, M2ePro.translator.translate('Payment method should be specified.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-ebay-payment-email', function(value, el) {\n\n                var advice = Validation.getAdvice('M2ePro-validate-ebay-payment-email',el);\n                advice && advice.remove();\n\n                if (!Validation.get('M2ePro-required-when-visible').test(value,el)) {\n                    this.error = Validation.get('M2ePro-required-when-visible').error;\n                    return false;\n                }\n\n                this.error = Validation.get('validate-email').error;\n                return Validation.get('validate-email').test(value,el);\n            }, M2ePro.translator.translate('Email is not valid.'));\n        },\n\n        // ---------------------------------------\n\n        initObservers: function()\n        {\n            jQuery('#pay_pal_mode')\n                .on('change', EbayTemplatePaymentObj.payPalModeChange)\n                .trigger('change');\n            jQuery('#pay_pal_immediate_payment')\n                .on('change', EbayTemplatePaymentObj.immediatePaymentChange)\n                .trigger('change');\n        },\n\n        // ---------------------------------------\n\n        payPalModeChange: function()\n        {\n            if (this.checked) {\n                $('pay_pal_email_address_container').show();\n                $('pay_pal_immediate_payment_container').show();\n            } else {\n                $('pay_pal_email_address').setValue('');\n                $('pay_pal_email_address_container').hide();\n                $('pay_pal_immediate_payment_container').hide();\n                $('pay_pal_immediate_payment').checked = false;\n                jQuery('#pay_pal_immediate_payment').trigger('change');\n            }\n        },\n\n        // ---------------------------------------\n\n        immediatePaymentChange: function()\n        {\n            var wrapper = $('magento_block_ebay_template_payment_form_data_additional_service');\n            if (this.checked) {\n                wrapper.hide();\n\n                $$('input.additional-payment-service').each(function(payment) {\n                    payment.checked = false;\n                });\n            } else {\n                wrapper && wrapper.show();\n            }\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Template/ReturnPolicy.js":"define([\n    'knockout',\n    'jquery',\n    'M2ePro/Common'\n], function (ko, jquery) {\n    window.EbayTemplateReturnPolicy = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function() {},\n\n        // ---------------------------------------\n\n        initObservers: function() {\n            jquery('#return_accepted').off('change');\n            jquery('#return_accepted').on('change', this.acceptedChange).change();\n        },\n\n        // ---------------------------------------\n\n        acceptedChange: function()\n        {\n            var columns = [\n                'return_option',\n                'return_within',\n                'return_shipping_cost',\n                'return_restocking_fee'\n            ];\n\n            if (this.value == 'ReturnsAccepted') {\n                columns.forEach(function(value) {\n                    var el = $$('.field-'+value).first();\n                    el && el[$(value).options.length ? 'show' : 'hide']();\n                });\n                $$('.field-return_description').invoke('show');\n\n                if ($$('.field-return_holiday_mode').length) {\n                    $$('.field-return_holiday_mode').invoke('show');\n                }\n            } else {\n                columns.forEach(function(value) {\n                    var el = $$('.field-'+value).first();\n                    el && el.hide();\n                });\n\n                $$('.field-return_description').invoke('hide');\n                $$('.field-return_holiday').invoke('hide');\n\n                //$('return_holiday_mode').selectedIndex = 0;\n                //jquery('#return_holiday_mode').trigger('change');\n                $$('.field-return_holiday_mode').invoke('hide');\n            }\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Template/Edit/Form.js":"define([\n    'jquery',\n    'M2ePro/Template/Edit'\n],\nfunction(jQuery) {\n\n    window.EbayTemplateEdit = Class.create(TemplateEdit, {\n\n        // ---------------------------------------\n\n        templateNick: null,\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            jQuery.validator.addMethod('validate-title-uniqueness', function(value) {\n\n                var unique = false;\n                var templateId = 0;\n\n                if ($(EbayTemplateEditObj.templateNick + '_id')) {\n                    templateId = $(EbayTemplateEditObj.templateNick + '_id').value;\n                }\n\n                new Ajax.Request(M2ePro.url.get('ebay_template/isTitleUnique'), {\n                    method: 'post',\n                    asynchronous: false,\n                    parameters: {\n                        id_value: templateId,\n                        title: value\n                    },\n                    onSuccess: function(transport)\n                    {\n                        unique = transport.responseText.evalJSON()['unique'];\n                    }\n                });\n\n                return unique;\n            }, M2ePro.translator.translate('Policy Title is not unique.'));\n        },\n\n        // ---------------------------------------\n\n        initObservers: function ()\n        {\n            var $marketplace = jQuery('#marketplace_id');\n            if ($marketplace.length) {\n                $marketplace.on('change', this.loadTemplateData)\n                    .trigger('change');\n            } else {\n                this.loadTemplateData(null);\n            }\n        },\n\n        // ---------------------------------------\n\n        getComponent: function()\n        {\n            return 'ebay';\n        },\n\n        // ---------------------------------------\n\n        loadTemplateData: function(marketplaceId, callback)\n        {\n            if (typeof this.value != 'undefined' && this.value === '') {\n                return;\n            }\n\n            var self = EbayTemplateEditObj;\n            marketplaceId = this.value || marketplaceId;\n\n            new Ajax.Request(M2ePro.url.get('ebay_template/getTemplateHtml'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    marketplace_id: marketplaceId\n                },\n                onSuccess: function(transport) {\n\n                    var editFormData = $('edit_form_data');\n                    if (!editFormData) {\n                        editFormData = document.createElement('div');\n                        editFormData.id = 'edit_form_data';\n\n                        $('edit_form').appendChild(editFormData);\n                    }\n\n                    editFormData.innerHTML = transport.responseText;\n                    editFormData.innerHTML.extractScripts()\n                        .map(function(script) {\n                            try {\n                                eval(script);\n                            } catch(e) {}\n                        });\n\n                    var titleInput = $$('input[name=\"'+self.templateNick+'[title]\"]')[0];\n                    var marketplaceIdInput = $$('input[name=\"'+self.templateNick+'[marketplace_id]\"]')[0];\n\n                    if ($('title').value.trim() == '') {\n                        $('title').value = titleInput.value;\n                    }\n\n                    if (marketplaceIdInput) {\n                        marketplaceIdInput.value = marketplaceId;\n                    }\n\n                    callback && callback();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        isValidForm: function()\n        {\n            var validationResult = true;\n\n            validationResult &= jQuery('#edit_form').valid();\n            validationResult &= Validation.validate($('title'));\n\n            if ($('marketplace_id')) {\n                validationResult &= Validation.validate($('marketplace_id'));\n            }\n\n            if ($('ebay_template_synchronization_edit_form_container')) {\n                //EbayTemplateSynchronizationHandlerObj.checkVirtualTabValidation();\n            }\n\n            var titleInput = $$('input[name=\"'+EbayTemplateEditObj.templateNick+'[title]\"]')[0];\n\n            if (titleInput) {\n                titleInput.value = $('title').value;\n            }\n\n            return validationResult;\n        },\n\n        // ---------------------------------------\n\n        duplicateClick: function($super, headId, chapter_when_duplicate_text, templateNick)\n        {\n            $$('input[name=\"'+templateNick+'[id]\"]')[0].value = '';\n\n            // we don't need it here, but parent method requires the formSubmitNew url to be defined\n            M2ePro.url.add({'formSubmitNew': ' '});\n\n            $super(headId, chapter_when_duplicate_text);\n        },\n\n        // ---------------------------------------\n\n        saveAndCloseClick: function(url, confirmText)\n        {\n            if (!this.isValidForm()) {\n                return;\n            }\n\n            var self = this;\n\n            if (confirmText && this.showConfirmMsg) {\n                this.confirm(this.templateNick, confirmText, function () {\n                    self.saveFormUsingAjax(url, self.templateNick);\n                });\n                return;\n            }\n\n            self.saveFormUsingAjax(url, self.templateNick);\n        },\n\n        saveFormUsingAjax: function (url, templateNick)\n        {\n            new Ajax.Request(url, {\n                method: 'post',\n                parameters: Form.serialize($('edit_form')),\n                onSuccess: function(transport) {\n                    var templates = transport.responseText.evalJSON();\n\n                    if (templates.length && templates[0].nick == templateNick) {\n                        window.close();\n                    } else {\n                        console.error('Policy Saving Error');\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Settings/Motors.js":"\ndefine([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Common'\n], function(modal){\n\n    window.EbaySettingsMotors = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function () {\n        },\n\n        // Manage Compatibility Dictionary\n        // ---------------------------------------\n\n        manageMotorsRecords: function (motorsType, title) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_settings_motors/getManagePopup'), {\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_settings_motors_manage_popup');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    self.managePupup = jQuery('#ebay_settings_motors_manage_popup');\n\n                    modal({\n                        title: title,\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.managePupup.modal('closeModal')\n                            }\n                        }]\n                    }, self.managePupup);\n\n                    self.managePupup.modal('openModal');\n\n                    $('motors_type').value = motorsType;\n\n                    var spanStatEpids = $('database-custom-count');\n\n                    if (motorsType == M2ePro.php.constant('Ess_M2ePro_Helper_Component_Ebay_Motors::TYPE_EPID_MOTOR')) {\n                        spanStatEpids.innerHTML = $('epids_motor_custom_count').innerHTML;\n                    } else if (motorsType == M2ePro.php.constant('Ess_M2ePro_Helper_Component_Ebay_Motors::TYPE_EPID_UK')) {\n                        spanStatEpids.innerHTML = $('epids_uk_custom_count').innerHTML;\n                    } else if (motorsType == M2ePro.php.constant('Ess_M2ePro_Helper_Component_Ebay_Motors::TYPE_EPID_DE')) {\n                        spanStatEpids.innerHTML = $('epids_de_custom_count').innerHTML;\n                    } else {\n                        spanStatEpids.innerHTML = $('ktypes_custom_count').innerHTML;\n                    }\n\n                    self.initFormValidation('#ebay_settings_motors_form');\n                }\n            });\n        },\n\n        importMotorsRecords: function () {\n            if (!jQuery('#ebay_settings_motors_form').valid()) {\n                return false;\n            }\n\n            $('ebay_settings_motors_form').submit();\n        },\n\n        clearAddedMotorsRecords: function () {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        var url = M2ePro.url.get('ebay_settings_motors/clearAddedMotorsData');\n                        self.postForm(url, {motors_type: $('motors_type').value});\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Ebay/Account/Grid.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Grid'\n], function (modal, MessageObj) {\n\n    window.EbayAccountGrid = Class.create(Grid, {\n\n        // ---------------------------------------\n\n        initialize: function($super,gridId) {\n            this.messageObj = Object.create(MessageObj);\n            this.messageObj.setContainer('#account_feedback_action_messages_container');\n\n            $super(gridId);\n        },\n\n        // ---------------------------------------\n\n        prepareActions: function()\n        {\n            jQuery.validator.addMethod('M2ePro-validate-feedback-response-max-length', function(value, el) {\n\n                if (jQuery.validator.methods['M2ePro-required-when-visible'](null, el)) {\n                    return true;\n                }\n\n                return value.length >= 2 && value.length <= 80;\n\n            }, M2ePro.translator.translate('Should be between 2 and 80 characters long.'));\n        },\n\n        // ---------------------------------------\n\n        openAccountFeedbackPopup: function(id)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_account_feedback/getPopup'), {\n                method: 'GET',\n                parameters: {\n                    id: id\n                },\n                onSuccess: function(transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    var container = $('edit_feedback_popup_container');\n\n                    if (container) {\n                        container.remove();\n                    }\n\n                    $('html-body').insert({\n                        bottom: '<div id=\"edit_feedback_popup_container\">' + response.html + '</div>'\n                    });\n\n                    self.feedbackPopup = jQuery('#edit_feedback_popup_container');\n\n                    modal({\n                        title: response.title,\n                        type: 'slide',\n                        buttons: []\n                    }, self.feedbackPopup);\n\n                    self.feedbackPopup.modal('openModal');\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        openSendResponsePopup: function(el, feedbackId, transactionId, itemId)\n        {\n            var self = this;\n\n            self.messageObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('ebay_account_feedback/getSendResponseForm'), {\n                method: 'GET',\n                parameters: {\n                    feedback_Id: feedbackId\n                },\n                onSuccess: function(transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    var container = $('send_response_popup_container');\n\n                    if (container) {\n                        container.remove();\n                    }\n\n                    $('html-body').insert({\n                        bottom: '<div id=\"send_response_popup_container\"></div>'\n                    });\n\n                    $('send_response_popup_container').update(response.html);\n\n                    self.initFormValidation('#send_response_form');\n\n                    self.sendResponsePopup = jQuery('#send_response_popup_container');\n\n                    modal({\n                        title: response.title,\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Cancel'),\n                            class: 'action-secondary action-dismiss',\n                            click: function () {\n                                self.sendResponsePopup.modal('closeModal');\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Send'),\n                            class: 'action-primary',\n                            click: function () {\n                                if (!jQuery('#send_response_form').valid()) {\n                                    return false;\n                                }\n\n                                var data = $('send_response_form').serialize(true);\n\n                                new Ajax.Request(M2ePro.url.get('ebay_account_feedback/sendResponse'), {\n                                    parameters: {\n                                        feedback_id: data.feedback_id,\n                                        feedback_text: (data.feedback_template_type == 'custom') ?\n                                            data.feedback_text :\n                                            data.feedback_template\n                                    },\n                                    onSuccess: function(transport) {\n                                        var response = transport.responseText.evalJSON();\n\n                                        self.messageObj['add' + response.type[0].toUpperCase() + response.type.slice(1) + 'Message'](response.text);\n\n                                        self.sendResponsePopup.modal('closeModal');\n                                        window['ebayFeedbackGridJsObject'].reload();\n                                    }\n                                });\n                            }\n                        }]\n                    }, self.sendResponsePopup);\n\n                    self.sendResponsePopup.modal('openModal');\n                }\n            });\n        },\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Ebay/Account/PickupStore.js":"define([\n    'jquery',\n    'mage/apply/main',\n    'M2ePro/Common'\n], function (jQuery, mage) {\n\n    window.EbayPickupStore = Class.create(Common, {\n\n        autogenerate: false,\n        geocodeObject: {},\n\n        defaultBusinessHours: {},\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            this.setValidationCheckRepetitionValue('M2ePro-pickup-store-location-id',\n                M2ePro.translator.translate('The specified Title is already used for another In-Store Pickup. In-Store Pickup Title must be unique.'),\n                'Ebay\\\\Account\\\\PickupStore', 'location_id', 'id',\n                M2ePro.formData.id\n            );\n\n            jQuery.validator.addMethod('M2ePro-pickup-store-location-id-length', function(value) {\n                return value.length <= 32;\n            }, M2ePro.translator.translate('Max length 32 character.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-must-arrive-date', function(value, el) {\n                if (el.up('#special_hours_grid') && !el.up('#special_hours_grid').visible()) {\n                    return true;\n                }\n\n                return value.match('^[0-9]{4}-[0-9]{2}-[0-9]{1,2}$');\n            }, M2ePro.translator.translate('Please enter a valid date.'));\n\n            jQuery.validator.addMethod('M2ePro-pickup-store-dropdown', function(value) {\n                return value != '';\n            }, M2ePro.translator.translate('Select value.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-schedule-week-days', function(value, el) {\n\n                var countOfCheckedDays = 0;\n\n                $$('.week_day_mode').each(function(el) {\n                    el.checked && countOfCheckedDays++;\n                });\n\n                return countOfCheckedDays > 0;\n            }, M2ePro.translator.translate('You need to choose at set at least one time.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-selected-schedule-time', function(value, el) {\n\n                var countUnselectedControls = 0;\n\n                if (el.up('#special_hours_grid')) {\n                    if (!el.up('#special_hours_grid').visible()) {\n                        return true;\n                    }\n                } else {\n                    if (!el.up('tr').select('.week_day_mode').shift().checked) {\n                        return true;\n                    }\n                }\n\n                el.up('td').select('select').each(function(el) {\n                    el.value == '' && countUnselectedControls++;\n                });\n\n                return countUnselectedControls == 0;\n            }, M2ePro.translator.translate('You should specify time.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-schedule-wrong-interval-time', function(value, el) {\n\n                if (el.up('#special_hours_grid')) {\n                    if (!el.up('#special_hours_grid').visible()) {\n                        return true;\n                    }\n                } else {\n                    if (!el.up('tr').select('.week_day_mode').shift().checked) {\n                        return true;\n                    }\n                }\n\n                var now      = new Date(),\n                    fromTime = new Date(now.toDateString() + ' ' + $(el.id.replace('validator_to','from')).value),\n                    toTime   = new Date(now.toDateString() + ' ' + $(el.id.replace('validator_to','to')).value);\n\n                return (toTime - fromTime) > 0;\n            }, M2ePro.translator.translate('Must be greater than \"Open Time\".'));\n\n            jQuery.validator.addMethod('M2ePro-validate-max-length-128', function(value) {\n                return value.length <= 128;\n            }, M2ePro.translator.translate('Max length 128 character.'));\n\n            this.validateLocation();\n        },\n\n        init: function()\n        {\n            this.observeFields();\n        },\n\n        // ---------------------------------------\n\n        observeFields: function()\n        {\n            var self = this;\n\n            if ($('google_map').href.indexOf('#empty') != -1) {\n                $('google_map').hide();\n            }\n\n            if ($('auto_generate_field').visible()) {\n                var autoGenerate = $('auto_generate');\n                autoGenerate.observe('click', function() {\n                    self.generateLocationId();\n                });\n                autoGenerate.observe('change', self.switchAutoGeneration)\n                    .simulate('change');\n            }\n\n            $('country').observe('change', self.countryChange)\n                .simulate('change');\n\n            $$('.get_geocord').shift().observe('click', self.calculateLatitudeLongitude);\n\n            $('utc_offset').observe('change', function(event) {\n                if (event.target.value != '' && this.down('option').value == '') {\n                    this.down('option').remove();\n                }\n            });\n\n            $$('.week_day_mode').each(function(el){\n                el.observe('change', self.scheduleDayModeChange)\n                    .simulate('change');\n            });\n\n            $$('.week_time_select').each(function(el){\n                el.observe('change', self.scheduleTimeSelectChange)\n                    .simulate('change');\n            });\n\n            $$('.date_time_select').each(function(el){\n                el.observe('change', self.scheduleTimeSelectChange)\n                    .simulate('change');\n            });\n\n            $$('.add_date').shift().observe('click', self.addDateColumn);\n            $$('.remove_date').each(function(el) {\n                el.observe('click', self.removeDateColumn);\n            });\n\n            self.hideSpecialHoursGrid();\n\n            $('default_mode')\n                .observe('change', self.changeDefaultMode)\n                .simulate('change');\n\n            $('qty_mode')\n                .observe('change', self.qtyModeChange)\n                .simulate('change');\n\n            $('qty_modification_mode')\n                .observe('change', self.qtyPostedModeChange)\n                .simulate('change');\n\n            setTimeout(function() {\n                self.initGeocodeAPI();\n            }, 0);\n        },\n\n        // ---------------------------------------\n\n        switchAutoGeneration: function(event)\n        {\n            var self = EbayPickupStoreObj,\n                nameField = $('name');\n\n            self.autogenerate = !self.autogenerate;\n\n            if (!self.autogenerate) {\n                nameField.stopObserving('keyup', self.generateLocationId);\n            } else {\n                nameField.observe('keyup', self.generateLocationId);\n            }\n        },\n\n        generateLocationId: function()\n        {\n            var nameField = $('name'),\n                locationIdFiled = $('location_id');\n\n            if (nameField.value) {\n                locationIdFiled.value = nameField.value.toLowerCase()\n                    .replace(/[^a-z0-9 _]+/g, '')\n                    .replace(/\\s/g, '_').slice(0, 32);\n            } else {\n                locationIdFiled.value = '';\n            }\n        },\n\n        // ---------------------------------------\n\n        countryChange: function(event) {\n            var self = EbayPickupStoreObj,\n                countryCode = '';\n\n            if (event.target.value != '' && this.down('option').value == '') {\n                this.down('option').remove();\n            }\n\n            if (event.target.selectedOptions.length) {\n                countryCode = event.target.value;\n            }\n\n            self.updateHiddenValue(this, $('marketplace_id'));\n\n            new Ajax.Request(M2ePro.url.get('getRegions'), {\n                method: 'post',\n                parameters: {\n                    country_code : countryCode\n                },\n                onSuccess: function(transport) {\n                    var regions = transport.responseText.evalJSON(),\n                        insertData,\n                        defaultValue = $('region_hidden').value;\n\n                    $('region') && $('region').remove();\n\n                    if (!regions.length) {\n                        insertData = {\n                            top: new Element('input', {\n                                type: 'text',\n                                id: 'region',\n                                name: 'region',\n                                class: 'input-text M2ePro-required-when-visible',\n                                value: defaultValue\n                            })\n                        };\n                    } else {\n                        insertData = {\n                            top: self.renderRegions(regions, defaultValue)\n                        };\n                    }\n\n                    $('region_container').up().insert(insertData)\n                }\n            });\n        },\n\n        renderRegions: function(regionsData, defaultValue)\n        {\n            var select = new Element('select', {\n                id: 'region',\n                name: 'region',\n                class: 'M2ePro-pickup-store-dropdown'\n            });\n\n            select.observe('change', function(event) {\n                if (event.target.value != '' && this.down('option').value == '') {\n                    this.down('option').remove();\n                }\n            });\n\n            var emptyOption = new Element('option', {value: ''});\n            select.appendChild(emptyOption);\n\n            regionsData.each(function(region) {\n                var option = new Element('option', {\n                    value: region.name\n                });\n\n                if (defaultValue == region.name) {\n                    option.selected = true;\n                }\n\n                option.innerHTML = region.name;\n                select.appendChild(option);\n            });\n\n            return select;\n        },\n\n        // ---------------------------------------\n\n        initGeocodeAPI: function()\n        {\n            var src = '//maps.googleapis.com/maps/api/js?' +\n                      'key=AIzaSyC2t7txYJJe10PryITwaIL8FmjdjxR9xeQ&signed_in=true&' +\n                      'callback=EbayPickupStoreObj.getGeocodeObject';\n\n            require([src]);\n        },\n\n        getGeocodeObject: function()\n        {\n            EbayPickupStoreObj.geocodeObject = new google.maps.Geocoder();\n        },\n\n        calculateLatitudeLongitude: function(event)\n        {\n            event.preventDefault();\n\n            var self = EbayPickupStoreObj,\n                address = '';\n\n            if ($('country').selectedOptions.length) {\n                address += $('country').selectedOptions[0].innerHTML;\n            }\n\n            var region = $('region').value;\n            region && (address += ', ' + region);\n\n            var city = $('city').value;\n            city && (address += ', ' + city);\n\n            var address1 = $('address_1').value;\n            address1 && (address += ', ' + address1);\n\n            self.geocodeObject.geocode({'address': address}, function(results, status) {\n                if (status === google.maps.GeocoderStatus.OK) {\n                    if (results.length) {\n                        var geometry = results[0].geometry;\n                        window.test_geo = geometry;\n\n                        var lat = +geometry.location.lat().toFixed(3),\n                            lng = +geometry.location.lng().toFixed(3);\n\n                        $('latitude').value = lat;\n                        $('longitude').value = lng;\n\n                        $('google_map').href = 'https://www.google.com/maps/place/'+lat+','+lng;\n                        $('google_map').show();\n                    }\n                } else {\n                    self.alert('Location not found.');\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        scheduleDayModeChange: function(event)\n        {\n            var self = EbayPickupStoreObj,\n                topElement = event.target.up('tr'),\n                containerFrom = topElement.down('#' + this.id.replace('mode','') + 'container_from'),\n                containerTo   = topElement.down('#' + this.id.replace('mode','') + 'container_to');\n\n            containerFrom.hide();\n            containerTo.hide();\n\n            if (this.checked) {\n                if (self.defaultBusinessHours.from && self.defaultBusinessHours.to) {\n                    var timeFrom = self.defaultBusinessHours.from || [],\n                        timeTo = self.defaultBusinessHours.to || [];\n\n                    topElement.down('#' + this.id.replace('mode','') + 'from_hours').value = timeFrom[0] || '';\n                    topElement.down('#' + this.id.replace('mode','') + 'from_minutes').value = timeFrom[1] || '';\n                    topElement.down('#' + this.id.replace('mode','') + 'from')\n                        .value = (timeFrom[0] || '00')+':'+(timeFrom[1] || '00')+':00';\n\n                    topElement.down('#' + this.id.replace('mode','') + 'to_hours').value = timeTo[0] || '';\n                    topElement.down('#' + this.id.replace('mode','') + 'to_minutes').value = timeTo[1] || '';\n                    topElement.down('#' + this.id.replace('mode','') + 'to')\n                        .value = (timeTo[0] || '00')+':'+(timeTo[1] || '00')+':00';\n                }\n\n                containerFrom.show();\n                containerTo.show();\n            }\n        },\n\n        scheduleTimeSelectChange: function(event)\n        {\n            var topElement = event.target.up('td'),\n                inputId = this.id.match('(.)*(?=_)')[0];\n\n            var hours   = topElement.down('#' + inputId + '_hours').value,\n                minutes = topElement.down('#' + inputId + '_minutes').value;\n\n            if (hours == '' || minutes == '') {\n                return;\n            }\n\n            if ((event.target.id.indexOf('week_day') != -1) && (event.target.id.indexOf('from') != -1)) {\n                EbayPickupStoreObj.defaultBusinessHours.from = [hours, minutes];\n            } else if((event.target.id.indexOf('week_day') != -1) && (event.target.id.indexOf('to') != -1)) {\n                EbayPickupStoreObj.defaultBusinessHours.to = [hours, minutes];\n            }\n\n            topElement.up('tr').down('#'+inputId).value =  hours + ':' + minutes + ':00';\n        },\n\n        addDateColumn: function(event)\n        {\n            event.preventDefault();\n\n            var self = EbayPickupStoreObj,\n                template = $('special_hours_template'),\n                specialHoursFieldsCount = ++($$('.date-field').length);\n\n            if (!$('special_hours_grid').visible()) {\n                self.showSpecialHoursGrid();\n            }\n\n            var newColumn = jQuery('<div>').html(template.innerHTML)[0];\n            newColumn = newColumn.down('tr');\n\n            newColumn.down('input[name^=\"date_validator_to_\"]').name = 'date_validator_to_'\n                                                                        +specialHoursFieldsCount;\n            newColumn.down('input[name^=\"date_validator_from_\"]').name = 'date_validator_from_'\n                                                                         +specialHoursFieldsCount;\n\n            $('special_hours_grid_rows').down('tbody').appendChild(newColumn);\n\n            newColumn.down('.remove_date').observe('click', self.removeDateColumn);\n            newColumn.getElementsBySelector('.date_time_select').each(function(el) {\n                el.observe('change', self.scheduleTimeSelectChange)\n                .simulate('change');\n            });\n\n            var parent = newColumn.down('#date').up();\n            parent.innerHTML = '';\n            var newElementKey = 'date-' + specialHoursFieldsCount;\n\n            parent.insert({\n                top: new Element('input', {\n                    type: 'text',\n                    id: newElementKey,\n                    value: '',\n                    name: newElementKey,\n                    class: 'input-text date-field M2ePro-required-when-visible M2ePro-validate-must-arrive-date',\n                    'data-mage-init': '{\"calendar\": ' +\n                                        '{\"showTime\": false, \"dateFormat\": \"yy-mm-dd\", \"showButtonPanel\": false}' +\n                                      '}',\n                    onchange: 'EbayPickupStoreObj.dateOnChange(this)'\n                })\n            });\n\n            mage.apply();\n        },\n\n        dateOnChange: function(el) {\n            var dateContainer = el,\n                dateStr = dateContainer.value,\n                dateFrom = dateContainer.up('tr').down('#date_from'),\n                dateTo = dateContainer.up('tr').down('#date_to');\n\n            dateFrom.name = 'special_hours[date_settings][' + dateStr + '][open]';\n            dateTo.name = 'special_hours[date_settings][' + dateStr + '][close]';\n        },\n\n        removeDateColumn: function(event)\n        {\n            var self = EbayPickupStoreObj;\n\n            event.preventDefault();\n            event.target.up('tr').remove();\n            self.hideSpecialHoursGrid();\n        },\n\n        // ---------------------------------------\n\n        changeDefaultMode: function()\n        {\n            var self = EbayPickupStoreObj;\n\n            if (+this.value) {\n                $('magento_block_ebay_account_pickup_store_form_data_quantity_custom_settings').show();\n\n                var mode = M2ePro.formData.qty_mode;\n                if (mode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Account_PickupStore::QTY_MODE_SELLING_FORMAT_TEMPLATE')) {\n                    M2ePro.formData.qty_mode = M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Account_PickupStore::QTY_MODE_PRODUCT');\n                }\n            } else {\n                $('magento_block_ebay_account_pickup_store_form_data_quantity_custom_settings').hide();\n            }\n        },\n\n        qtyModeChange: function()\n        {\n            var self               = EbayPickupStoreObj,\n\n                customValueTr      = $('qty_mode_cv_tr'),\n                attributeElement   = $('qty_custom_attribute'),\n\n                maxPostedValueTr   = $('qty_modification_mode_tr'),\n                maxPostedValueMode = $('qty_modification_mode');\n\n            customValueTr.hide();\n            attributeElement.value = '';\n\n            if (isNaN(+this.value) || $('default_mode').value == '0') {\n                return;\n            }\n\n             if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Account_PickupStore::QTY_MODE_NUMBER')) {\n                customValueTr.show();\n            } else if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Account_PickupStore::QTY_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, attributeElement);\n            }\n\n            maxPostedValueTr.hide();\n            maxPostedValueMode.value = 0;\n\n            if (self.isMaxPostedQtyAvailable(this.value)) {\n\n                maxPostedValueTr.show();\n                maxPostedValueMode.value = 1;\n\n                if (self.isMaxPostedQtyAvailable(M2ePro.formData.qty_mode)) {\n                    maxPostedValueMode.value = M2ePro.formData.qty_modification_mode;\n                }\n            }\n\n            maxPostedValueMode.simulate('change');\n\n            self.updateQtyPercentage();\n        },\n\n        isMaxPostedQtyAvailable: function(qtyMode)\n        {\n            return qtyMode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Account_PickupStore::QTY_MODE_PRODUCT') ||\n                   qtyMode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Account_PickupStore::QTY_MODE_ATTRIBUTE') ||\n                   qtyMode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Account_PickupStore::QTY_MODE_PRODUCT_FIXED');\n        },\n\n        qtyPostedModeChange: function()\n        {\n            var minPosterValueTr = $('qty_min_posted_value_tr'),\n                maxPosterValueTr = $('qty_max_posted_value_tr');\n\n            minPosterValueTr.hide();\n            maxPosterValueTr.hide();\n\n            if (this.value == 1) {\n                minPosterValueTr.show();\n                maxPosterValueTr.show();\n            }\n        },\n\n        updateQtyPercentage: function()\n        {\n            var qtyPercentageTr = $('qty_percentage_tr');\n\n            qtyPercentageTr.hide();\n\n            var qtyMode = $('qty_mode').value;\n\n            if (qtyMode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Account_PickupStore::QTY_MODE_SINGLE') ||\n                qtyMode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Account_PickupStore::QTY_MODE_NUMBER')) {\n                return;\n            }\n\n            qtyPercentageTr.show();\n        },\n\n        // ---------------------------------------\n\n        hideSpecialHoursGrid: function()\n        {\n            if ($$('.date-field').length > 0) {\n                return;\n            }\n\n            $('special_hours_grid').hide();\n\n            var addDateBtn = $$('.add_date').shift();\n            addDateBtn.removeClassName('right');\n            addDateBtn.style.width = '';\n            addDateBtn.up('div')\n                      .removeClassName('add_btn_wrapper')\n                      .addClassName('add_btn_wrapper_center');\n        },\n\n        showSpecialHoursGrid: function()\n        {\n            $('special_hours_grid').show();\n\n            var addDateBtn = $$('.add_date').shift();\n            addDateBtn.addClassName('right');\n            addDateBtn.style.width = '12.5%';\n            addDateBtn.up('div')\n                      .removeClassName('add_btn_wrapper_center')\n                      .addClassName('add_btn_wrapper');\n        },\n\n        // ---------------------------------------\n\n        duplicateClick: function($headId, chapter_when_duplicate_text)\n        {\n            $$('.loading-mask').invoke('show');\n\n            this.setValidationCheckRepetitionValue('M2ePro-pickup-store-location-id',\n                M2ePro.translator.translate('The specified Title is already used for another In-Store Pickup. In-Store Pickup Title must be unique.'),\n                'Ebay\\\\Account\\\\PickupStore', 'location_id', 'id',0\n            );\n\n            M2ePro.formData.id = 0;\n\n            $('name').value = $('location_id').value = $('pickup_store_id').value =  '';\n            $('location_id').disabled = false;\n\n            if (!$('auto_generate_field').visible()) {\n                $('auto_generate_field').show();\n                $('auto_generate').observe('change', EbayPickupStoreObj.switchAutoGeneration)\n                    .simulate('change');\n            }\n\n            $$('.page-title').each(function(o) { o.innerHTML = chapter_when_duplicate_text; });\n            $$('.M2ePro_duplicate_button').each(function(o) { o.hide(); });\n            $$('.M2ePro_delete_button').each(function(o) { o.hide(); });\n\n            window.setTimeout(function() {\n                $$('.loading-mask').invoke('hide')\n            }, 1200);\n        },\n\n        // ---------------------------------------\n\n        isValidForm: function()\n        {\n            var result = jQuery('#edit_form').valid();\n\n            if (result) {\n                $('location_id').disabled = false;\n            }\n\n            return result;\n        },\n\n        validateLocation: function()\n        {\n            jQuery.validator.addMethod('M2ePro-check-location', function(value) {\n                var preValidation = true;\n                ['country', 'region', 'city', 'address_1',\n                'postal_code', 'latitude', 'longitude'].each(function(el) {\n                    if (!$(el) || $(el).value == '') {\n                        preValidation = false;\n                    }\n                });\n\n                if (!preValidation) {\n                    return true;\n                }\n\n                var checkResult = false;\n                new Ajax.Request(M2ePro.url.get('validateLocation'), {\n                    method: 'post',\n                    asynchronous: false,\n                    parameters: {\n                        id: M2ePro.formData.id,\n                        country: $('country').value,\n                        region: $('region').value,\n                        city: $('city').value,\n                        address_1: $('address_1').value,\n                        address_2: $('address_2').value,\n                        postal_code: $('postal_code').value,\n                        latitude: $('latitude').value,\n                        longitude: $('longitude').value,\n                        utc_offset: $('utc_offset').value\n                    },\n                    onSuccess: function(transport) {\n                        checkResult = transport.responseText.evalJSON()['result'];\n                    }\n                });\n\n                return checkResult;\n            }, M2ePro.translator.translate('Same Location is already exists.'));\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/AutoAction.js":"define([\n    'jquery',\n    'M2ePro/Listing/AutoAction',\n    'prototype'\n], function (jQuery) {\n\n    window.EbayListingAutoAction = Class.create(ListingAutoAction, {\n\n        // ---------------------------------------\n\n        controller: 'ebay_listing_autoAction',\n\n        // ---------------------------------------\n\n        addingModeChange: function()\n        {\n            var mode = ListingAutoActionObj.getPopupMode();\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Listing::ADDING_MODE_ADD_AND_ASSIGN_CATEGORY')) {\n                $(mode+'confirm_button').hide();\n                $(mode+'continue_button').show();\n                $(mode+'breadcrumb_container').show();\n            } else {\n                $(mode+'continue_button').hide();\n                $(mode+'breadcrumb_container').hide();\n                $(mode+'confirm_button').show();\n            }\n\n            if (this.value != M2ePro.php.constant('Ess_M2ePro_Model_Listing::ADDING_MODE_NONE')) {\n                $$('[id$=\"adding_add_not_visible_field\"]')[0].show();\n            } else {\n                $$('[id$=\"adding_add_not_visible\"]')[0].value = M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_ADDING_ADD_NOT_VISIBLE_YES');\n                $$('[id$=\"adding_add_not_visible_field\"]')[0].hide();\n            }\n        },\n\n        categoryAddingMode: function ()\n        {\n            var popupMode = ListingAutoActionObj.getPopupMode();\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Listing::ADDING_MODE_ADD_AND_ASSIGN_CATEGORY')) {\n                $(popupMode+'confirm_button').hide();\n                $(popupMode+'continue_button').show();\n                $(popupMode+'breadcrumb_container').show();\n            } else {\n                $(popupMode+'continue_button').hide();\n                $(popupMode+'breadcrumb_container').hide();\n                $(popupMode+'confirm_button').show();\n            }\n\n            if (this.value != M2ePro.php.constant('Ess_M2ePro_Model_Listing::ADDING_MODE_NONE')) {\n                $$('[id$=\"adding_add_not_visible_field\"]')[0].show();\n            } else {\n                $$('[id$=\"adding_add_not_visible\"]')[0].value = M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_ADDING_ADD_NOT_VISIBLE_YES');\n                $$('[id$=\"adding_add_not_visible_field\"]')[0].hide();\n            }\n        },\n\n        // ---------------------------------------\n\n        loadCategoryChooser: function(callback)\n        {\n            var mode = $('auto_mode').value;\n            new Ajax.Request(M2ePro.url.get(ListingAutoActionObj.controller + '/getCategoryChooserHtml'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    auto_mode: mode,\n                    group_id: this.internalData.id,\n                    // this parameter only for auto_mode=category\n                    magento_category_id: typeof categories_selected_items != 'undefined' ? categories_selected_items[0] : null\n                },\n                onSuccess: function(transport) {\n\n                    if (mode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Listing::AUTO_MODE_CATEGORY')) {\n                        $('category_child_data_container').update(transport.responseText);\n                    } else {\n                        $('data_container').update(transport.responseText);\n                    }\n\n                    if (typeof callback == 'function') {\n                        callback();\n                    }\n                }.bind(this)\n            });\n        },\n\n        loadSpecific: function(callback)\n        {\n            var category = EbayListingProductCategorySettingsChooserObj.getSelectedCategory(0);\n\n            if (!category.mode) {\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get(ListingAutoActionObj.controller + '/getCategorySpecificHtml'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    auto_mode: this.internalData.auto_mode,\n                    category_mode: category.mode,\n                    category_value: category.value,\n                    group_id: this.internalData.id,\n                    // this parameter only for auto_mode=category\n                    magento_category_id: typeof categories_selected_items != 'undefined' ? categories_selected_items[0] : null\n                },\n                onSuccess: function(transport) {\n\n                    var dataContainer;\n                    if (this.internalData.auto_mode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Listing::AUTO_MODE_CATEGORY')) {\n                        dataContainer = $('category_child_data_container');\n                    } else {\n                        dataContainer = $('data_container');\n                    }\n\n                    jQuery(dataContainer).parent().parent().find('[id^=\"block_notice\"]').eq(0).remove();\n\n                    dataContainer.innerHTML = transport.responseText;\n                    try {\n                        dataContainer.innerHTML.evalScripts();\n                    } catch (ignored) {}\n\n                    if (typeof callback == 'function') {\n                        callback();\n                    }\n\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        globalStepTwo: function()\n        {\n            ListingAutoActionObj.collectData();\n\n            var callback = function() {\n                jQuery('#'+ListingAutoActionObj.getPopupMode() + 'modal_auto_action > .block_notices:first')\n                    .remove();\n\n                jQuery('#'+ListingAutoActionObj.getPopupMode() + 'continue_button')\n                    .off('click')\n                    .on('click', ListingAutoActionObj.globalStepThree);\n\n                ListingAutoActionObj.highlightBreadcrumbStep(2);\n            };\n\n            ListingAutoActionObj.loadCategoryChooser(callback);\n        },\n\n        globalStepThree: function()\n        {\n            if (!EbayListingProductCategorySettingsChooserObj.validate()) {\n                return;\n            }\n\n            ListingAutoActionObj.collectData();\n\n            var callback = function() {\n                ListingAutoActionObj.highlightBreadcrumbStep(3);\n\n                $(ListingAutoActionObj.getPopupMode() + 'confirm_button').show();\n                $(ListingAutoActionObj.getPopupMode() + 'reset_button').show();\n                $(ListingAutoActionObj.getPopupMode() + 'continue_button').hide();\n            };\n\n            ListingAutoActionObj.loadSpecific(callback);\n        },\n\n        // ---------------------------------------\n\n        websiteStepTwo: function()\n        {\n            ListingAutoActionObj.collectData();\n\n            var callback = function() {\n\n                jQuery('#'+ListingAutoActionObj.getPopupMode() + 'modal_auto_action > .block_notices:first')\n                    .remove();\n\n                jQuery('#'+ListingAutoActionObj.getPopupMode() + 'continue_button')\n                    .off('click')\n                    .on('click', ListingAutoActionObj.websiteStepThree);\n\n                ListingAutoActionObj.highlightBreadcrumbStep(2);\n            };\n\n            ListingAutoActionObj.loadCategoryChooser(callback);\n        },\n\n        websiteStepThree: function()\n        {\n            if (!EbayListingProductCategorySettingsChooserObj.validate()) {\n                return;\n            }\n\n            ListingAutoActionObj.collectData();\n\n            var callback = function() {\n                ListingAutoActionObj.highlightBreadcrumbStep(3);\n\n                $(ListingAutoActionObj.getPopupMode() + 'confirm_button').show();\n                $(ListingAutoActionObj.getPopupMode() + 'reset_button').show();\n                $(ListingAutoActionObj.getPopupMode() + 'continue_button').hide();\n            };\n\n            ListingAutoActionObj.loadSpecific(callback);\n        },\n\n        // ---------------------------------------\n\n        categoryStepOne: function(groupId)\n        {\n            var mode = ListingAutoActionObj.getPopupMode();\n            this.loadAutoCategoryForm(groupId, function() {\n                $(mode+'close_button').hide();\n            });\n        },\n\n        categoryStepTwo: function()\n        {\n            if (!ListingAutoActionObj.validate()) {\n                return;\n            }\n\n            ListingAutoActionObj.collectData();\n\n            var mode = ListingAutoActionObj.getPopupMode();\n            var callback = function() {\n                jQuery('#' + mode + 'continue_button')\n                    .off('click')\n                    .on('click', ListingAutoActionObj.categoryStepThree);\n\n                ListingAutoActionObj.highlightBreadcrumbStep(2);\n            };\n\n            ListingAutoActionObj.loadCategoryChooser(callback);\n        },\n\n        categoryStepThree: function()\n        {\n            if (!EbayListingProductCategorySettingsChooserObj.validate()) {\n                return;\n            }\n\n            ListingAutoActionObj.collectData();\n\n            var mode = ListingAutoActionObj.getPopupMode();\n            var callback = function() {\n                ListingAutoActionObj.highlightBreadcrumbStep(3);\n\n                $(mode+'confirm_button').show();\n                $(mode+'reset_button').show();\n                $(mode+'continue_button').hide();\n            };\n\n            ListingAutoActionObj.loadSpecific(callback);\n        },\n\n        // ---------------------------------------\n\n        collectData: function()\n        {\n            if ($('auto_mode')) {\n                switch (parseInt($('auto_mode').value)) {\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_MODE_GLOBAL'):\n                        ListingAutoActionObj.internalData = {\n                            auto_mode: $('auto_mode').value,\n                            auto_global_adding_mode: $('auto_global_adding_mode').value,\n                            auto_global_adding_add_not_visible: $('auto_global_adding_add_not_visible').value,\n                            auto_global_adding_template_category_id: null\n                        };\n                        break;\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_MODE_WEBSITE'):\n                        ListingAutoActionObj.internalData = {\n                            auto_mode: $('auto_mode').value,\n                            auto_website_adding_mode: $('auto_website_adding_mode').value,\n                            auto_website_adding_add_not_visible: $('auto_website_adding_add_not_visible').value,\n                            auto_website_adding_template_category_id: null,\n                            auto_website_deleting_mode: $('auto_website_deleting_mode').value\n                        };\n                        break;\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_MODE_CATEGORY'):\n                        ListingAutoActionObj.internalData = {\n                            id: $('group_id').value,\n                            title: $('group_title').value,\n                            auto_mode: $('auto_mode').value,\n                            adding_mode: $('adding_mode').value,\n                            adding_add_not_visible: $('adding_add_not_visible').value,\n                            deleting_mode: $('deleting_mode').value,\n                            categories: categories_selected_items\n                        };\n                        break;\n                }\n            }\n\n            if ($('ebay_category_chooser')) {\n                ListingAutoActionObj.internalData.template_category_data = EbayListingProductCategorySettingsChooserObj.getInternalData();\n            }\n\n            if ($('category_specific_form')) {\n                ListingAutoActionObj.internalData.template_category_specifics_data = EbayListingProductCategorySettingsSpecificObj.getInternalData();\n            }\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Ebay/Listing/VariationProductManageVariationsGrid.js":"define([\n    'jquery',\n    'M2ePro/Grid'\n], function (jQuery) {\n    window.EbayListingVariationProductManageVariationsGrid = Class.create(Grid, {\n\n        // ---------------------------------------\n\n        initialize: function($super, gridId)\n        {\n            $super(gridId);\n\n            jQuery.validator.addMethod('M2ePro-upc', function(value, el) {\n\n                if (value.length == 0) {\n                    return true;\n                }\n\n                if (value.length != 12) {\n                    return false;\n                }\n\n                var barcode = value.substr(0, value.length-1);\n\n                var sum = 0;\n                var length  = barcode.length-1;\n\n                for (var i = 0; i <= length; i++) {\n                    if ((i % 2) === 0) {\n                        sum += parseInt(barcode.charAt(length - i) * 3);\n                    } else {\n                        sum += parseInt(barcode.charAt(length - i));\n                    }\n                }\n\n                var calc  = sum % 10;\n                var checksum = (calc === 0) ? 0 : (10 - calc);\n\n                return value.charAt(length+1) == checksum;\n            }, M2ePro.translator.translate('Please enter valid UPC'));\n\n            jQuery.validator.addMethod('M2ePro-ean', function(value, el) {\n\n                if (value.length == 0) {\n                    return true;\n                }\n\n                if (value.length != 13) {\n                    return false;\n                }\n\n                var barcode = value.substr(0, value.length-1);\n\n                var sum = 0;\n                var length  = barcode.length-1;\n\n                for (var i = 0; i <= length; i++) {\n                    if ((i % 2) === 0) {\n                        sum += parseInt(barcode.charAt(length - i) * 3);\n                    } else {\n                        sum += parseInt(barcode.charAt(length - i));\n                    }\n                }\n\n                var calc  = sum % 10;\n                var checksum = (calc === 0) ? 0 : (10 - calc);\n\n                return value.charAt(length+1) == checksum;\n\n            }, M2ePro.translator.translate('Please enter valid EAN'));\n\n            jQuery.validator.addMethod('M2ePro-isbn', function(value, el) {\n\n                if (value.length == 0) {\n                    return true;\n                }\n\n                if (value.length == 10) {\n\n                    var a = 0;\n                    for (var i = 0; i < 10; i++) {\n                        if (value.charAt(i) == \"X\" || value.charAt(i) == \"x\") {\n                            a += 10 * parseInt(10 - i);\n                        } else {\n                            a += parseInt(value.charAt(i)) * parseInt(10 - i);\n                        }\n                    }\n                    return (a % 11 == 0);\n\n                } else if (value.length == 13) {\n\n                    if (value.substr(0,3) != '978') {\n                        return false;\n                    }\n\n                    var check = 0;\n                    for (var i = 0; i < 13; i += 2) {\n                        check += parseInt(value.substr(i,1));\n                    }\n                    for (var i = 1; i < 12; i += 2) {\n                        check += 3 * parseInt(value.substr(i,1));\n                    }\n\n                    return check % 10 == 0;\n                }\n\n                return false;\n            }, M2ePro.translator.translate('Please enter valid ISBN'));\n\n            this.initFormValidation('form[id^=\"variation_identifiers_edit_\"]');\n        },\n\n        // ---------------------------------------\n\n        getComponent: function()\n        {\n            return 'ebay';\n        },\n\n        // ---------------------------------------\n\n        getMaxProductsInPart: function()\n        {\n            return 1000;\n        },\n\n        // ---------------------------------------\n\n        prepareActions: function()\n        {\n            return false;\n        },\n\n        // ---------------------------------------\n\n        afterInitPage: function($super)\n        {\n            $super();\n\n            $$('.attributes-options-filter').each(this.initAttributesOptionsFilter, this);\n        },\n\n        // ---------------------------------------\n\n        parseResponse: function(response)\n        {\n            if (!response.responseText.isJSON()) {\n                return;\n            }\n\n            return response.responseText.evalJSON();\n        },\n\n        // ---------------------------------------\n\n        initAttributesOptionsFilter: function(filterEl)\n        {\n            var srcElement = Element.down(filterEl, 'select');\n\n            srcElement.observe('change', this.onAttributesOptionsFilterChange.bind(this));\n\n            var valuesDiv = Element.down(filterEl, '.attributes-options-filter-values');\n            valuesDiv.optionsCount = valuesDiv.childElementCount;\n\n            if(valuesDiv.optionsCount == srcElement.childElementCount - 1) {\n                srcElement.hide();\n            }\n\n            valuesDiv.optionsIterator = 0;\n            valuesDiv.childElements().each(function(attrValue) {\n\n                var removeImg = Element.down(attrValue, '.filter-param-remove'),\n                    attrName = Element.down(attrValue, 'input[type=\"hidden\"]'),\n                    selectedOption = Element.down(filterEl, 'select option[value=\"' + attrName.value + '\"]');\n\n                selectedOption.hide();\n\n                valuesDiv.optionsIterator++;\n\n                removeImg.show();\n                removeImg.observe('click', function() {\n                    valuesDiv.optionsCount--;\n                    selectedOption.show();\n                    srcElement.show();\n                    Element.remove(attrValue);\n                });\n            }, this);\n        },\n\n        onAttributesOptionsFilterChange: function(e)\n        {\n            var srcElement = e.target || e.srcElement,\n                parentDiv = Element.up(srcElement, '.attributes-options-filter'),\n                valuesDiv = Element.down(parentDiv, '.attributes-options-filter-values'),\n                selectedOption = Element.down(srcElement, '[value=\"' + srcElement.value + '\"]');\n\n            selectedOption.hide();\n\n            valuesDiv.optionsCount++;\n            valuesDiv.optionsIterator++;\n\n            srcElement.enable();\n            if(valuesDiv.optionsCount == srcElement.childElementCount - 1) {\n                srcElement.hide();\n            }\n\n            var filterName = parentDiv.id.replace('attributes-options-filter_', '');\n\n            var newOptionContainer = new Element('div'),\n                newOptionLabel = new Element('div'),\n                newOptionValue = new Element('input', {\n                    type: 'text',\n                    class: 'input-text admin__control-text',\n                    name: filterName + '[' + valuesDiv.optionsIterator + '][value]'\n                }),\n                newOptionAttr = new Element('input', {\n                    type: 'hidden',\n                    name: filterName + '[' + valuesDiv.optionsIterator + '][attr]',\n                    value: srcElement.value\n                }),\n                removeImg = Element.clone(Element.down(parentDiv, '.attributes-options-filter-selector .filter-param-remove'));\n\n            newOptionLabel.innerHTML = srcElement.value + ': ';\n            removeImg.show();\n\n            Event.observe(newOptionValue, 'keypress', this.getGridObj().filterKeyPress.bind(this.getGridObj()));\n\n            newOptionContainer.insert({ bottom: newOptionLabel });\n            newOptionContainer.insert({ bottom: newOptionValue });\n            newOptionContainer.insert({ bottom: newOptionAttr });\n            newOptionContainer.insert({ bottom: removeImg });\n\n            valuesDiv.insert({ bottom: newOptionContainer });\n\n            removeImg.observe('click', function() {\n                valuesDiv.optionsCount--;\n                selectedOption.show();\n                srcElement.show();\n                newOptionContainer.remove();\n            }, this);\n\n            srcElement.value = '';\n        },\n\n        // ---------------------------------------\n\n        editVariationIdentifiers: function(editBtn, variationId)\n        {\n            $('variation_identifiers_edit_'+variationId).show();\n            $('variation_identifiers_'+variationId).hide();\n            editBtn.hide();\n        },\n\n        confirmVariationIdentifiers: function(editBtn, variationId)\n        {\n            var self = this,\n                form = $('variation_identifiers_edit_'+variationId)\n\n            if (!self.isValid(form)) {\n                return;\n            }\n\n            var data = form.serialize(true);\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_variation_product_manage/setIdentifiers'), {\n                method: 'post',\n                parameters: data,\n                onSuccess: function(transport) {\n\n                    var response = self.parseResponse(transport);\n                    if(response.success) {\n                        VariationsGridObj.getGridObj().reload();\n                    }\n                }\n            });\n        },\n\n        cancelVariationIdentifiers: function(variationId)\n        {\n            var form = $('variation_identifiers_edit_'+variationId);\n            form.reset();\n            this.isValid(form);\n            form.hide();\n            $('variation_identifiers_'+variationId).show();\n            $('edit_variations_'+variationId).show();\n        },\n\n        isValid: function (form)\n        {\n            var upc = form.down('.M2ePro-upc'),\n                ean = form.down('.M2ePro-ean'),\n                isbn = form.down('.M2ePro-isbn'),\n                mpn = form.down('.M2ePro-mpn');\n\n            upc.value = trim(upc.value);\n            ean.value = trim(ean.value);\n            isbn.value = trim(isbn.value.replace('-',''));\n            mpn.value = trim(mpn.value);\n\n            return jQuery(form).valid();\n        }\n\n    });\n});","Ess_M2ePro/js/Ebay/Listing/EditCompatibilityMode.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Confirm',\n    'M2ePro/Common'\n], function (jQuery, modal, confirm) {\n\n    window.EditCompatibilityMode = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function (gridId) {\n            this.gridId = gridId;\n        },\n\n        // ---------------------------------------\n\n        openPopup: function(listingId)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing/getChangePartsCompatibilityModePopupHtml'), {\n                method: 'GET',\n                parameters: {\n                    listing_id: listingId\n                },\n                onSuccess: (function(transport) {\n\n                    if ($('edit_mode_form')) {\n                        $('edit_mode_form').remove();\n                    }\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    var form = jQuery('#edit_mode_form');\n\n                    modal({\n                        title: M2ePro.translator.translate('Edit Parts Compatibility Mode'),\n                        type: 'popup',\n                        modalClass: 'width-50',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Cancel'),\n                            class: 'action-secondary action-dismiss',\n                            click: function () {\n                                self.closePopup();\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Save'),\n                            class: 'action-primary action-accept',\n                            click: function () {\n                                self.saveListingMode();\n                            }\n                        }]\n                    }, form);\n\n                    this.oldMode = trim($('listing_compatibility_mode_' + listingId).innerHTML);\n                    this.listingId = listingId;\n\n                    jQuery('#edit_mode_form').modal('openModal');\n                }).bind(this)\n            });\n        },\n\n        saveListingMode: function()\n        {\n            var self = this,\n                newMode = $('edit_mode_form').select('#parts_compatibility_mode')[0].value;\n\n            if (self.oldMode == newMode) {\n\n                this.closePopup();\n                return;\n            }\n\n            if (!jQuery('#edit_mode_form').valid()) {\n                return false;\n            }\n\n            confirm({\n                actions: {\n                    confirm: function () {\n                        new Ajax.Request(M2ePro.url.get('ebay_listing/savePartsCompatibilityMode'), {\n                            method: 'post',\n                            asynchronous: true,\n                            parameters: {\n                                listing_id: self.listingId,\n                                mode:       newMode\n                            },\n                            onSuccess: function(transport) {\n                                self.closePopup();\n                            }.bind(this)\n                        });\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        closePopup: function()\n        {\n            jQuery('#edit_mode_form').modal('closeModal');\n            window[this.gridId + 'JsObject'].reload();\n\n            return true;\n        }\n\n    })\n        // ---------------------------------------\n});","Ess_M2ePro/js/Ebay/Listing/Preview.js":"define(function () {\n\n    window.EbayListingPreviewItems = Class.create(Common, {\n\n        initialize: function () {\n            var self = this;\n\n            jQuery('.price_container button').click(function () {\n                self.alert(M2ePro.translator.translate('This is Item Preview Mode'));\n            });\n\n            self.onTabClick(jQuery('.tabs-horiz li:first'));\n        },\n\n        getVariation: function(chosenOptions) {\n            var returnVariation = {};\n\n            M2ePro.formData.variations.variations.forEach(function (variation) {\n\n                var countOfOptions = 0;\n\n                for (var variationSpecific in variation.specifics) {\n                    chosenOptions.forEach(function (option) {\n                        if (variationSpecific === option.attribute) {\n                            if (variation.specifics[variationSpecific] === option.value) {\n                                countOfOptions++;\n                            } else {\n                                return false;\n                            }\n                        }\n                    });\n                }\n\n                if (countOfOptions === chosenOptions.length) {\n                    returnVariation = variation;\n                    return false;\n                }\n\n            });\n\n            return returnVariation;\n        },\n\n        onChangeVariationSelect: function (currentSelect) {\n            $$('option').each(function (option) {\n                option.show();\n            });\n\n            choseSelects = $$(\"select[value!=]\").length;\n\n            if (choseSelects < $$('select').length - 1) {\n                return;\n            }\n\n            if (choseSelects === $$('select').length - 1) {\n                var otherSelectsValues = [];\n\n                $$('select[value!=]').each(function (select) {\n                    otherSelectsValues.push({\n                        attribute: select.name,\n                        value: select.value\n                    });\n                });\n\n                $$(\"select[value=]\")[0].select('option[value!=]').each(function (option) {\n                    otherSelectsValues.push({\n                        attribute: option.up().name,\n                        value: option.value\n                    });\n\n                    variation = EbayListingPreviewItemsObj.getVariation(otherSelectsValues);\n\n                    if (variation.data === undefined) {\n                        option.hide();\n                    }\n\n                    otherSelectsValues.pop();\n                });\n            } else {\n                $$('select').each(function (select) {\n                    var otherSelectsValues = [];\n\n                    $$('select').each(function (otherSelects) {\n                        if (otherSelects !== select) {\n                            otherSelectsValues.push({\n                                attribute: otherSelects.name,\n                                value: otherSelects.value\n                            });\n                        }\n                    });\n\n                    select.select('option[value!=]').each(function (option) {\n\n                        otherSelectsValues.push({\n                            attribute: option.up().name,\n                            value: option.value\n                        });\n\n                        variation = EbayListingPreviewItemsObj.getVariation(otherSelectsValues);\n\n                        if (variation.data === undefined) {\n                            if (select.value === option.value) {\n                                select.value = \"\";\n                            }\n                            option.hide();\n\n                        }\n\n                        otherSelectsValues.pop();\n                    });\n                });\n\n                var otherSelectsValues = [];\n\n                $$('select').each(function (otherSelects) {\n                    otherSelectsValues.push({\n                        attribute: otherSelects.name,\n                        value: otherSelects.value\n                    });\n                });\n\n                variation = EbayListingPreviewItemsObj.getVariation(otherSelectsValues);\n\n                if($('product_discount_stp')) {\n                    $('product_discount_stp').hide();\n                    $('product_price_stp').hide();\n                }\n                if($('product_discount_map')) {\n                    $('product_discount_map').hide();\n                    $('product_price_map').hide();\n                }\n\n                if (variation.data.price_stp !== null) {\n                    $('product_discount_stp').show();\n                    $('product_price_stp').show().update(variation.data.price_stp);\n                } else {\n                    if (variation.data.price_map !== null) {\n                        $('product_discount_map').show();\n                        $('product_price_map').show().update(variation.data.price_map);\n                    }\n                }\n\n                $('product_price').update(variation.data.price);\n                $('product_qty').update(variation.data.qty);\n\n            }\n\n            if (M2ePro.formData.images.variations &&\n                M2ePro.formData.images.variations.specific === currentSelect.name && currentSelect.value) {\n                $('product_image').src = M2ePro.formData.images.variations.images[currentSelect.value][0];\n            }\n        },\n\n        onClickGalleryImage: function (image) {\n            $('product_image').src = image.src;\n        },\n\n        onTabClick: function (tab){\n            jQuery('.' + jQuery('li.active').attr('data-tab') + '_container').hide();\n            jQuery('li.active').removeClass('active');\n\n            jQuery(tab).addClass('active');\n            jQuery('.' + jQuery(tab).attr('data-tab') + '_container').show();\n        },\n\n        initVariations: function () {\n            $$('select').each(function(currentSelect){\n                if(currentSelect.select('option[value!=]').length === 1){\n                    currentSelect.select('option[value!=]')[0].selected = true;\n                    EbayListingPreviewItemsObj.onChangeVariationSelect(currentSelect);\n                }\n            });\n        }\n    });\n});","Ess_M2ePro/js/Ebay/Listing/Grid.js":"define([\n    'M2ePro/Grid',\n    'prototype'\n], function () {\n\n    window.EbayListingGrid = Class.create(Grid, {\n\n        // ---------------------------------------\n\n        backParam: base64_encode('*/ebay_listing/index'),\n\n        // ---------------------------------------\n\n        prepareActions: function()\n        {\n            return false;\n        },\n\n        // ---------------------------------------\n\n        addProductsSourceProductsAction: function(id)\n        {\n            setLocation(M2ePro.url.get('ebay_listing_product_add/index', {\n                id: id,\n                source: 'product',\n                clear: true,\n                back: this.backParam\n            }));\n        },\n\n        // ---------------------------------------\n\n        addProductsSourceCategoriesAction: function(id)\n        {\n            setLocation(M2ePro.url.get('ebay_listing_product_add/index', {\n                id: id,\n                source: 'category',\n                clear: true,\n                back: this.backParam\n            }));\n        }\n\n        // ---------------------------------------\n    });\n\n});\n","Ess_M2ePro/js/Ebay/Listing/VariationProductManage.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Action'\n], function (jQuery, modal, messageObj) {\n    window.EbayListingVariationProductManage = Class.create(Action,{\n\n        // ---------------------------------------\n\n        initialize: function($super,gridHandler)\n        {\n            var self = this;\n\n            $super(gridHandler);\n\n        },\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function(options)\n        {\n            this.options = Object.extend(this.options,options);\n            return this;\n        },\n\n        // ---------------------------------------\n\n        parseResponse: function(response)\n        {\n            if (!response.responseText.isJSON()) {\n                return;\n            }\n\n            return response.responseText.evalJSON();\n        },\n\n        // ---------------------------------------\n\n        openPopUp: function(productId, title, filter)\n        {\n            var self = this;\n\n            messageObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('variationProductManage'), {\n                method: 'post',\n                parameters: {\n                    product_id : productId,\n                    filter: filter\n                },\n                onSuccess: function (transport) {\n\n                    var modalDialog = $('modal_variation_product_manage');\n                    if (!modalDialog) {\n                        modalDialog = new Element('div', {\n                            id: 'modal_variation_product_manage'\n                        });\n                    } else {\n                        modalDialog.innerHTML = '';\n                    }\n\n                    window.variationProductManagePopup = jQuery(modalDialog).modal({\n                        title: title.escapeHTML(),\n                        type: 'slide',\n                        buttons: []\n                    });\n                    variationProductManagePopup.modal('openModal');\n\n                    modalDialog.insert(transport.responseText);\n                    modalDialog.innerHTML.evalScripts();\n\n                    variationProductManagePopup.productId = productId;\n                }\n            });\n        },\n\n        closeManageVariationsPopup: function()\n        {\n            variationProductManagePopup.modal('closeModal');\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Ebay/Listing/PickupStore/Grid.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Listing/View/Grid',\n    'M2ePro/Listing/View/Action'\n], function (jQuery, Modal, MessageObj) {\n\n    window.EbayListingPickupStoreGrid = Class.create(ListingViewGrid, {\n\n        // ---------------------------------------\n\n        popup: null,\n        variationPopup: null,\n        logPopup: null,\n\n        // ---------------------------------------\n\n        pickupStoreStepProducts: function(listingId, callback)\n        {\n            var self = this;\n            this.getGridMassActionObj().unselectAll();\n\n            new Ajax.Request(M2ePro.url.get('*/productsStep'), {\n                method: 'post',\n                parameters: {\n                    id: listingId\n                },\n                onSuccess: function(transport) {\n\n                    self.openPopUp(\n                        M2ePro.translator.translate('Assign Products to Stores'),\n                        transport.responseText\n                    );\n\n                    var closeBtn = $('assign_close_button');\n                    closeBtn.removeClassName('back');\n                    self.updateButtonText(closeBtn, 'Cancel');\n                    closeBtn.stopObserving().observe('click', function() {\n                        self.popup.modal('closeModal');\n                    });\n\n                    var continueBtn = $('assign_done_button');\n                    continueBtn.addClassName('forward');\n                    self.updateButtonText(continueBtn, 'Continue');\n                    continueBtn.stopObserving().observe('click', function() {\n                        var checkedIds = EbayListingPickupStoreStepProductsGridObj.getCheckedValues();\n                        if (checkedIds == '') {\n                            self.alert('Please select Items.');\n                            return;\n                        }\n\n                        self.pickupStoreStepStores(listingId);\n                    });\n\n                    callback && callback();\n                }\n            });\n        },\n\n        pickupStoreStepStores: function(listingId)\n        {\n            var self = this;\n            new Ajax.Request(M2ePro.url.get('*/storesStep'), {\n                method: 'post',\n                parameters: {\n                    id: listingId\n                },\n                onSuccess: function(transport) {\n\n                    self.openPopUp(\n                        M2ePro.translator.translate('Assign Products to Stores'),\n                        transport.responseText\n                    );\n\n                    var backBtn = $('assign_close_button');\n                    backBtn.addClassName('back');\n                    self.updateButtonText(backBtn, 'Back');\n                    backBtn.stopObserving().observe('click', function(e) {\n                        e.preventDefault();\n                        var checked = EbayListingPickupStoreStepProductsGridObj.getCheckedValues();\n                        self.pickupStoreStepProducts(listingId, function() {\n                            var gridMassAcction = EbayListingPickupStoreStepProductsGridObj.getGridMassActionObj();\n\n                            gridMassAcction.setCheckedValues(checked);\n                            gridMassAcction.checkCheckboxes();\n                        });\n                    });\n\n                    var completeBtn = $('assign_done_button');\n                    completeBtn.removeClassName('forward');\n                    self.updateButtonText(completeBtn, 'Complete');\n                    completeBtn.stopObserving().observe('click', function(e) {\n                        e.preventDefault();\n                        var productsIds = EbayListingPickupStoreStepProductsGridObj.getCheckedValues(),\n                            storesIds = EbayListingPickupStoreStepStoresGridObj.getCheckedValues();\n\n                        if (productsIds == '' || storesIds == '') {\n                            self.alert('Please select Stores.');\n                            return;\n                        }\n\n                        self.completeStep(productsIds, storesIds);\n                    });\n                }\n            });\n        },\n\n        completeStep: function (productsIds, storesIds)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('*/assign'), {\n                method: 'post',\n                parameters: {\n                    products_ids: productsIds,\n                    stores_ids: storesIds\n                },\n                onSuccess: function(transport) {\n\n                    if (!transport.responseText.isJSON()) {\n                        self.alert(transport.responseText);\n                        return;\n                    }\n\n                    self.getGridMassActionObj().unselectAll();\n                    self.getGridObj().doFilter();\n\n                    var response = transport.responseText.evalJSON();\n\n                    MessageObj.clear();\n                    response.messages.each(function(msg) {\n                        MessageObj['add' + msg.type[0].toUpperCase() + msg.type.slice(1)+'Message'](msg.text);\n                    });\n\n                    self.popup.modal('closeModal');\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        openPopUp: function(title, content)\n        {\n            var self = this;\n\n            var modalDialogMessage = $('pickup_store_popup');\n            if (!modalDialogMessage) {\n                modalDialogMessage = new Element('div', {\n                    id: 'pickup_store_popup'\n                });\n\n                this.popup = jQuery(modalDialogMessage).modal({\n                    title: title,\n                    type: 'slide',\n                    buttons: [{\n                        text: M2ePro.translator.translate('Cancel'),\n                        attr: {id: 'assign_close_button'},\n                        class: 'action-default action-dismiss',\n                        click: function () {}\n                    },{\n                        text: M2ePro.translator.translate('Continue'),\n                        attr: {id: 'assign_done_button'},\n                        class: 'action-primary action-accept forward',\n                        click: function () {}\n                    }],\n                    closed: function() {\n                        self.selectedProductsIds = [];\n                        self.selectedCategoriesData = {};\n                    }\n                });\n            }\n\n            this.popup.modal('openModal');\n\n            modalDialogMessage.innerHTML = '';\n            modalDialogMessage.insert(content);\n            modalDialogMessage.innerHTML.evalScripts();\n        },\n\n        // ---------------------------------------\n\n        openVariationPopUp: function(productId, title, pickupStoreId, filter)\n        {\n            var self = this;\n\n            MessageObj.clear();\n            M2ePro.customData.variationPopup = {\n                product_id: productId,\n                title: title,\n                pickup_store_id: pickupStoreId,\n                filter: filter\n            };\n\n            new Ajax.Request(M2ePro.url.get('variationProduct'), {\n                method: 'post',\n                parameters: {\n                    product_id: productId,\n                    pickup_store_id: pickupStoreId,\n                    filter: filter\n                },\n                onSuccess: function (transport) {\n\n                    var modalDialogMessage = $('pickup_store_variation_product_popup');\n                    if (!modalDialogMessage) {\n                        modalDialogMessage = new Element('div', {\n                            id: 'pickup_store_variation_product_popup'\n                        });\n\n                        this.variationPopup = jQuery(modalDialogMessage).modal({\n                            title: title,\n                            type: 'slide',\n                            buttons: []\n                        });\n                    }\n\n                    this.variationPopup.modal('openModal');\n\n                    modalDialogMessage.innerHTML = '';\n                    modalDialogMessage.insert(transport.responseText);\n                    modalDialogMessage.innerHTML.evalScripts();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        viewItemHelp: function(rowId, data, hideViewLog)\n        {\n            $('grid_help_icon_open_'+rowId).hide();\n            $('grid_help_icon_close_'+rowId).show();\n\n            if ($('grid_help_content_'+rowId) != null) {\n                $('grid_help_content_'+rowId).show();\n                return;\n            }\n\n            var html = this.createHelpTitleHtml(rowId);\n\n            var synchNote = $('synch_template_list_rules_note_'+rowId);\n            if (synchNote) {\n                html += this.createSynchNoteHtml(synchNote.innerHTML)\n            }\n\n            data = eval(base64_decode(data));\n            for (var i=0;i<data.length;i++) {\n                html += this.createHelpActionHtml(data[i]);\n            }\n\n            if (!hideViewLog) {\n                html += this.createHelpViewAllLogHtml(rowId);\n            }\n\n            var rows = this.getGridObj().rows;\n            for(var i=0;i<rows.length;i++) {\n                var row = rows[i];\n                var cels = $(row).childElements();\n\n                var checkbox = $(cels[0]).childElements();\n                checkbox = checkbox[0];\n\n                if (checkbox.value == rowId) {\n                    row.insert({\n                        after: '<tr id=\"grid_help_content_'+rowId+'\"><td class=\"help_line\" colspan=\"'+($(row).childElements().length)+'\">'+html+'</td></tr>'\n                    });\n                } else {\n                    var lastCell = cels[cels.length-1],\n                        hiddenElement = $(lastCell).down('#product_row_order_'+rowId);\n\n                    if (hiddenElement && hiddenElement.value == rowId) {\n                        row.insert({\n                            after: '<tr id=\"grid_help_content_'+rowId+'\"><td class=\"help_line\" colspan=\"'+($(row).childElements().length)+'\">'+html+'</td></tr>'\n                        });\n                    }\n                }\n            }\n            var self = this;\n            $('hide_item_help_' + rowId).observe('click', function() {\n                self.hideItemHelp(rowId);\n            });\n        },\n\n        createHelpTitleHtml: function(rowId)\n        {\n            var closeHtml = '<a href=\"javascript:void(0);\" id=\"hide_item_help_' + rowId + '\" title=\"'+M2ePro.translator.translate('Close')+\n                            '\"><span class=\"hl_close icon-close\"></span></a>';\n            return '<div class=\"hl_header\"><span class=\"hl_title\">&nbsp;</span>'+closeHtml+'</div>';\n        },\n\n        createHelpViewAllLogHtml: function(rowId)\n        {\n            var id = $('product_row_order_'+rowId).getAttribute('listing-product-pickup-store-state');\n            return '<div class=\"hl_footer\">' +\n                '<a href=\"#\" onclick=\"EbayListingPickupStoreGridObj.getLogGrid('+id+');\">'+\n                M2ePro.translator.translate('View Full Product Log')+\n                '</a></div>';\n        },\n\n        // ---------------------------------------\n\n        getLogGrid: function(rowId)\n        {\n            new Ajax.Request(M2ePro.url.get('*/logGrid'), {\n                method: 'post',\n                parameters: {\n                    listing_product_pickup_store_state: rowId\n                },\n                onSuccess: function(transport) {\n\n                    var modalDialogMessage = $('pickup_store_variation_log_popup');\n                    if (!modalDialogMessage) {\n                        modalDialogMessage = new Element('div', {\n                            id: 'pickup_store_variation_log_popup'\n                        });\n\n                        this.logPopup = jQuery(modalDialogMessage).modal({\n                            title: M2ePro.translator.translate('Log For SKU ' + rowId),\n                            type: 'slide',\n                            buttons: []\n                        });\n                    }\n\n                    modalDialogMessage.up('.modal-inner-wrap')\n                                      .down('.modal-title')\n                                      .innerHTML = M2ePro.translator.translate('Log For SKU ' + rowId);\n                    this.logPopup.modal('openModal');\n\n                    modalDialogMessage.innerHTML = '';\n                    modalDialogMessage.insert(transport.responseText);\n                    modalDialogMessage.innerHTML.evalScripts();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        updateButtonText: function(element, text)\n        {\n            jQuery(element).find('span').text(M2ePro.translator.translate(text));\n        },\n\n        // ---------------------------------------\n\n        prepareActions: function()\n        {\n            var self = this;\n\n            var actionHandler = new ListingViewAction(this);\n            actionHandler.setProgressBar('pickup_store_view_progress_bar');\n            actionHandler.setGridWrapper('pickup_store_view_content_container');\n            actionHandler.setErrorsSummaryContainer('pickup_store_container_errors_summary');\n\n            this.actions = {\n                unassignAction: function() {\n                    var selectedProductsParts = self.getSelectedItemsParts();\n                    if (selectedProductsParts.length == 0) {\n                        return;\n                    }\n\n                    actionHandler.startActions(\n                        M2ePro.translator.translate('Unassign Product(s) from Stores'),\n                        M2ePro.url.get('*/unassign'),\n                        selectedProductsParts\n                    );\n                }\n            };\n        },\n\n        getMaxProductsInPart: function ()\n        {\n            return 100;\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/PickupStore/Step/Stores/Grid.js":"define([\n    'M2ePro/Listing/View/Grid'\n], function () {\n\n    window.EbayListingPickupStoreStepStoresGrid = Class.create(ListingViewGrid, {\n\n        // ---------------------------------------\n\n        getCheckedValues: function()\n        {\n            return this.getGridMassActionObj().getCheckedValues();\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/PickupStore/Step/Products/Grid.js":"define([\n    'M2ePro/Listing/View/Grid'\n], function () {\n\n    window.EbayListingPickupStoreStepProductsGrid = Class.create(ListingViewGrid, {\n\n        // ---------------------------------------\n\n        getCheckedValues: function()\n        {\n            return this.getGridMassActionObj().getCheckedValues();\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/Template/Switcher.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Common'\n], function(jQuery, modal) {\n\n    window.EbayListingTemplateSwitcher = Class.create(Common, {\n\n        // ---------------------------------------\n\n        storeId: null,\n        marketplaceId: null,\n        checkAttributesAvailability: false,\n        listingProductIds: '',\n\n        // ---------------------------------------\n\n        initialize: function() {\n            jQuery.validator.addMethod('M2ePro-validate-ebay-template-title', function(value, el) {\n\n                var mode = base64_decode(value).evalJSON().mode;\n\n                return mode !== null;\n            }, M2ePro.translator.translate('This is a required field.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-ebay-template-title', function(value, el) {\n\n                var templateNick = el.name.substr(0, el.name.indexOf('['));\n\n                return EbayListingTemplateSwitcherObj.isTemplateTitleUnique(templateNick, value);\n            }, M2ePro.translator.translate('Policy with the same Title already exists.'));\n        },\n\n        // ---------------------------------------\n\n        getSwitcherNickByElementId: function(id)\n        {\n            return id.replace('template_', '');\n        },\n\n        getSwitcherElementId: function(templateNick)\n        {\n            return 'template_' + templateNick;\n        },\n\n        getSwitcher: function(templateNick)\n        {\n            return $(this.getSwitcherElementId(templateNick));\n        },\n\n        getSwitcherValueId: function(templateNick)\n        {\n            var switcher = this.getSwitcher(templateNick);\n            var switcherValue = base64_decode(switcher.value).evalJSON();\n\n            return switcherValue.id;\n        },\n\n        getSwitcherValueMode: function(templateNick)\n        {\n            var switcher = this.getSwitcher(templateNick);\n            var switcherValue = base64_decode(switcher.value).evalJSON();\n\n            return switcherValue.mode;\n        },\n\n        isSwitcherValueModeEmpty: function(templateNick)\n        {\n            return this.getSwitcherValueMode(templateNick) === null;\n        },\n\n        isSwitcherValueModeParent: function(templateNick)\n        {\n            return this.getSwitcherValueMode(templateNick) == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::MODE_PARENT');\n        },\n\n        isSwitcherValueModeCustom: function(templateNick)\n        {\n            return this.getSwitcherValueMode(templateNick) == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::MODE_CUSTOM');\n        },\n\n        isSwitcherValueModeTemplate: function(templateNick)\n        {\n            return this.getSwitcherValueMode(templateNick) == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::MODE_TEMPLATE');\n        },\n\n        isExistSynchronizationTab: function()\n        {\n            return typeof EbayTemplateSynchronizationHandlerObj != 'undefined';\n        },\n\n        isNeededSaveWatermarkImage: function(ajaxResponse)\n        {\n            var isDescriptionTemplate = false;\n\n            ajaxResponse.each(function(template) {\n                if (template.nick == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::TEMPLATE_DESCRIPTION')) {\n                    isDescriptionTemplate = true;\n                }\n            });\n\n            return isDescriptionTemplate && $('watermark_image').value != '';\n        },\n\n        getTemplateDataContainer: function(templateNick)\n        {\n            return $('template_' + templateNick + '_data_container');\n        },\n\n        // ---------------------------------------\n\n        change: function()\n        {\n            var templateNick = EbayListingTemplateSwitcherObj.getSwitcherNickByElementId(this.id);\n            var templateMode = EbayListingTemplateSwitcherObj.getSwitcherValueMode(templateNick);\n\n            EbayListingTemplateSwitcherObj.clearMessages(templateNick);\n\n            switch (templateMode) {\n                case M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::MODE_PARENT'):\n                    EbayListingTemplateSwitcherObj.clearContent(templateNick);\n                    break;\n\n                case M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::MODE_CUSTOM'):\n                    EbayListingTemplateSwitcherObj.reloadContent(templateNick);\n                    break;\n\n                case M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::MODE_TEMPLATE'):\n                    EbayListingTemplateSwitcherObj.clearContent(templateNick);\n                    EbayListingTemplateSwitcherObj.checkMessages(templateNick);\n                    break;\n            }\n\n            EbayListingTemplateSwitcherObj.hideEmptyOption(EbayListingTemplateSwitcherObj.getSwitcher(templateNick));\n\n            if (!EbayListingTemplateSwitcherObj.isSwitcherValueModeCustom(templateNick)) {\n                EbayListingTemplateSwitcherObj.updateButtonsVisibility(templateNick);\n                EbayListingTemplateSwitcherObj.updateEditVisibility(templateNick);\n                EbayListingTemplateSwitcherObj.updateTemplateLabelVisibility(templateNick);\n            }\n        },\n\n        // ---------------------------------------\n\n        clearMessages: function(templateNick)\n        {\n            $('template_switcher_' + templateNick + '_messages').innerHTML = '';\n        },\n\n        checkMessages: function(templateNick)\n        {\n            if (!this.checkAttributesAvailability &&\n                templateNick != M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::TEMPLATE_SELLING_FORMAT') &&\n                templateNick != M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::TEMPLATE_SHIPPING')\n            ) {\n                return;\n            }\n\n            var // template ID\n                id = this.getSwitcherValueId(templateNick),\n            // template nick\n                nick = templateNick,\n            // template data (for custom settings only) and listing product ids (only when we edit product settings)\n                data = Form.serialize(this.getTemplateDataContainer(templateNick).id)\n                    + '&listing_product_ids=' + this.listingProductIds,\n            // store ID of the listing\n                storeId = this.storeId,\n            // marketplace ID of the listing\n                marketplaceId = this.marketplaceId,\n            // do we need to check attributes availability (only when we edit product settings)\n                checkAttributesAvailability = this.checkAttributesAvailability,\n            // container, where messages should be displayed\n                container = 'template_switcher_' + templateNick + '_messages',\n            // callback function, which should be called, when messages are displayed\n                callback = function() {\n                    var refresh = $(container).down('a.refresh-messages');\n                    if (refresh) {\n                        refresh.observe('click', function() {\n                            this.checkMessages(templateNick);\n                        }.bind(this))\n                    }\n                }.bind(this);\n\n            TemplateHandlerObj.checkMessages(\n                id,\n                nick,\n                data,\n                storeId,\n                marketplaceId,\n                checkAttributesAvailability,\n                container,\n                callback\n            );\n        },\n\n        // ---------------------------------------\n\n        updateEditVisibility: function(templateNick)\n        {\n            var tdEdit = $('template_' + templateNick + '_edit');\n\n            if (!tdEdit) {\n                return;\n            }\n\n            if (this.isSwitcherValueModeTemplate(templateNick)) {\n                tdEdit.show();\n            } else {\n                tdEdit.hide();\n            }\n        },\n\n        updateButtonsVisibility: function(templateNick)\n        {\n            var divButtonsContainer = $('template_' + templateNick + '_buttons_container');\n\n            if (!divButtonsContainer) {\n                return;\n            }\n\n            if (this.isSwitcherValueModeCustom(templateNick)) {\n                divButtonsContainer.show();\n            } else {\n                divButtonsContainer.hide();\n            }\n        },\n\n        updateTemplateLabelVisibility: function(templateNick)\n        {\n            var labelContainer = $('template_' + templateNick + '_nick_label');\n            var templateLabel = labelContainer.down('span.template');\n\n            labelContainer.hide();\n            templateLabel && templateLabel.hide();\n\n            if (this.isSwitcherValueModeTemplate(templateNick)) {\n                labelContainer.show();\n                templateLabel && templateLabel.show();\n            }\n\n            if (this.isSwitcherValueModeEmpty(templateNick)) {\n                labelContainer.hide();\n            }\n        },\n\n        // ---------------------------------------\n\n        scrollToFirstFailedElement: function()\n        {\n            var errors = $$('label.mage-error');\n\n            // if (errors.length > 0) {\n            //     $('#ebayListingTemplateEditTabs').showTabContent(errors[0]);\n            // }\n\n            // errors[0].up('table').scrollIntoView();\n        },\n\n        // ---------------------------------------\n\n        saveSwitchers: function(callback)\n        {\n            var validationResult = jQuery('#edit_form').valid();\n\n            if (EbayListingTemplateSwitcherObj.isExistSynchronizationTab()) {\n                EbayTemplateSynchronizationHandlerObj.checkVirtualTabValidation();\n            }\n\n            if (!validationResult) {\n                EbayListingTemplateSwitcherObj.scrollToFirstFailedElement();\n                return;\n            }\n\n            $('edit_form').request({\n                method: 'post',\n                asynchronous: true,\n                parameters: {},\n                onSuccess: function(transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    response.each(function(template) {\n                        EbayListingTemplateSwitcherObj.afterCustomSaveAsTemplate(template.nick, template.id, template.title);\n                    });\n\n                    var params = {};\n\n                    $$('.template-switcher').each(function(switcher) {\n                        params[switcher.name] = switcher.value;\n                    });\n\n                    if ($('ebayListingTemplateEditTabs')) {\n                        params['tab'] = jQuery('#ebayListingTemplateEditTabs').data().tabs.active.find('a')[0].id.split('_').pop();\n                    }\n\n                    if (EbayListingTemplateSwitcherObj.isNeededSaveWatermarkImage(response)) {\n                        EbayTemplateDescriptionObj.saveWatermarkImage(callback, params);\n                    } else if (typeof callback == 'function') {\n                        callback(params);\n                    }\n\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        isTemplateTitleUnique: function(templateNick, templateTitle)\n        {\n            var unique = true;\n\n            new Ajax.Request(M2ePro.url.get('ebay_template/isTitleUnique'), {\n                method: 'get',\n                asynchronous: false,\n                parameters: {\n                    nick: templateNick,\n                    title: templateTitle\n                },\n                onSuccess: function(transport) {\n                    unique = transport.responseText.evalJSON()['unique'];\n                }\n            });\n\n            return unique;\n        },\n\n        // ---------------------------------------\n\n        validateCustomTemplate: function(templateNick)\n        {\n            var validationResult = $('template_' + templateNick + '_data_container').select('select, input').collect(\n                function (el) {\n                    return jQuery('#edit_form').form().validate().element(el);\n                }\n            );\n\n            if (validationResult.indexOf(false) != -1) {\n                EbayListingTemplateSwitcherObj.scrollToFirstFailedElement();\n                return false;\n            }\n\n            return true;\n        },\n\n        // ---------------------------------------\n\n        customSaveAsTemplate: function(templateNick)\n        {\n            if (!this.validateCustomTemplate(templateNick)) {\n                return;\n            }\n\n            // jQuery('#edit_form').valid()\n\n            new Ajax.Request(M2ePro.url.get('ebay_template/newTemplateHtml'), {\n                method: 'GET',\n                parameters: {\n                    nick: templateNick\n                },\n                onSuccess: (function(transport) {\n                    if ($('new_template_form_' + templateNick)) {\n                        $('new_template_form_' + templateNick).remove();\n                    }\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    var form = jQuery('#new_template_form_' + templateNick);\n\n                    form.form().validation();\n\n                    modal({\n                        title: M2ePro.translator.translate('Save as New Policy'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Cancel'),\n                            class: 'action-secondary action-dismiss',\n                            click: function () {\n                                form.modal('closeModal');\n                                $('new_template_form_' + templateNick).remove()\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Save'),\n                            class: 'action-primary action-accept',\n                            click: function () {\n                                if (!form.form().valid()) {\n                                    return false;\n                                }\n\n                                $$('input[name=\"' + templateNick + '[id]\"]')[0].value = '';\n                                $$('input[name=\"' + templateNick + '[is_custom_template]\"]')[0].value = 0;\n                                $$('input[name=\"' + templateNick + '[title]\"]')[0].value = $('template_title_' + templateNick).value;\n\n                                $('edit_form').request({\n                                    method: 'post',\n                                    asynchronous: true,\n                                    parameters: {\n                                        nick: templateNick\n                                    },\n                                    onSuccess: function(transport) {\n\n                                        var response = transport.responseText.evalJSON();\n\n                                        response.each(function(template) {\n                                            EbayListingTemplateSwitcherObj.addToSwitcher(template.nick, template.id, template.title);\n                                            EbayListingTemplateSwitcherObj.clearContent(template.nick);\n                                            EbayListingTemplateSwitcherObj.updateButtonsVisibility(template.nick);\n                                            EbayListingTemplateSwitcherObj.updateEditVisibility(template.nick);\n                                            EbayListingTemplateSwitcherObj.updateTemplateLabelVisibility(template.nick);\n                                            EbayListingTemplateSwitcherHandlerObj.checkMessages(template.nick);\n                                        });\n                                    }.bind(this)\n                                });\n\n                                form.modal('closeModal');\n                            }\n                        }]\n                    }, form);\n\n                    form.modal('openModal');\n                }).bind(this)\n            });\n        },\n\n        afterCustomSaveAsTemplate: function(templateNick, templateId, templateTitle)\n        {\n            $$('input[name=\"' + templateNick + '[id]\"]')[0].value = templateId;\n            $$('input[name=\"' + templateNick + '[title]\"]')[0].value = templateTitle;\n\n            var switcher = EbayListingTemplateSwitcherObj.getSwitcher(templateNick);\n\n            switcher.down('.template-switcher-custom-option').value = base64_encode(\n                Object.toJSON({\n                    mode: M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::MODE_CUSTOM'),\n                    nick: templateNick,\n                    id: templateId\n                })\n            );\n        },\n\n        // ---------------------------------------\n\n        editTemplate: function(templateNick)\n        {\n            var templateId = this.getSwitcherValueId(templateNick);\n\n            window.open(\n                M2ePro.url.get('ebay_template/edit', {id: templateId, nick: templateNick, close_on_save: 1}), '_blank'\n            );\n        },\n\n        // ---------------------------------------\n\n        customizeTemplate: function(templateNick)\n        {\n            this.clearMessages(templateNick);\n            this.reloadContent(templateNick, function()\n            {\n                $$('input[name=\"' + templateNick + '[id]\"]')[0].value = EbayListingTemplateSwitcherObj.getSwitcherValueId(templateNick);\n                $$('input[name=\"' + templateNick + '[is_custom_template]\"]')[0].value = 1;\n                $$('input[name=\"' + templateNick + '[title]\"]')[0].value += ' [' + M2ePro.translator.translate('Customized') + ']';\n            });\n            this.getSwitcher(templateNick).selectedIndex = 0;\n        },\n\n        // ---------------------------------------\n\n        clearContent: function(templateNick)\n        {\n            this.getTemplateDataContainer(templateNick).innerHTML = '';\n            this.getTemplateDataContainer(templateNick).hide();\n        },\n\n        // ---------------------------------------\n\n        reloadContent: function(templateNick, callback)\n        {\n            var id = this.getSwitcherValueId(templateNick);\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_template/getTemplateHtml'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    id: id,\n                    nick: templateNick\n                },\n                onSuccess: function(transport) {\n\n                    BlockNoticeObj.initializedBlocks = [];\n\n                    self.getTemplateDataContainer(templateNick).replace(transport.responseText);\n                    self.getTemplateDataContainer(templateNick).show();\n\n                    self.updateButtonsVisibility(templateNick);\n                    self.updateEditVisibility(templateNick);\n                    self.updateTemplateLabelVisibility(templateNick);\n\n                    if (typeof callback == 'function') {\n                        callback();\n                    }\n\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        addToSwitcher: function(templateNick, templateId, templateTitle)\n        {\n            var switcher = this.getSwitcher(templateNick);\n            var optionGroup = this.getTemplatesGroup(templateNick);\n\n            var optionValue = {\n                mode: M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Manager::MODE_TEMPLATE'),\n                nick: templateNick,\n                id: templateId\n            };\n            var option = document.createElement('option');\n\n            option.value = base64_encode(Object.toJSON(optionValue));\n            option.innerHTML = templateTitle;\n\n            $(optionGroup).appendChild(option);\n\n            switcher.up('td').show();\n            switcher.value = option.value;\n        },\n\n        getTemplatesGroup: function(templateNick)\n        {\n            var switcher = this.getSwitcher(templateNick);\n            var optionGroup = switcher.down('optgroup.templates-group');\n\n            if (typeof optionGroup != 'undefined') {\n                return optionGroup;\n            }\n\n            optionGroup = document.createElement('optgroup');\n            optionGroup.className = 'templates-group';\n            optionGroup.label = M2ePro.translator.translate('Policies');\n\n            switcher.appendChild(optionGroup);\n\n            return optionGroup;\n        }\n\n        // ---------------------------------------\n    });\n\n});\n","Ess_M2ePro/js/Ebay/Listing/Other/Grid.js":"define([\n    'M2ePro/Listing/Other/Grid'\n], function () {\n    window.EbayListingOtherGrid = Class.create(ListingOtherGrid, {\n\n        // ---------------------------------------\n\n        getComponent: function()\n        {\n            return 'ebay';\n        },\n\n        // ---------------------------------------\n\n        getLogViewUrl: function(rowId)\n        {\n            var idField = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Block\\\\Adminhtml\\\\Log\\\\Listing\\\\Other\\\\AbstractGrid::LISTING_ID_FIELD');\n\n            var params = {};\n            params[idField] = rowId;\n\n            return M2ePro.url.get('ebay_log_listing_other/index', params);\n        },\n\n        // ---------------------------------------\n\n        getSelectedItemsParts: function()\n        {\n            var selectedProductsArray = this.getSelectedProductsArray();\n\n            if (this.getSelectedProductsString() == '' || selectedProductsArray.length == 0) {\n                return [];\n            }\n\n            var maxProductsInPart = this.getMaxProductsInPart();\n\n            var result = [];\n            for (var i=0;i<selectedProductsArray.length;i++) {\n                if (result.length == 0 || result[result.length-1].length == maxProductsInPart) {\n                    result[result.length] = [];\n                }\n                result[result.length-1][result[result.length-1].length] = selectedProductsArray[i];\n            }\n\n            return result;\n        },\n\n        // ---------------------------------------\n\n        getMaxProductsInPart: function()\n        {\n            return 10;\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/View/Action.js":"define([\n    'M2ePro/Listing/View/Action'\n], function () {\n\n    window.EbayListingViewAction = Class.create(ListingViewAction, {\n\n        // ---------------------------------------\n\n        startActions: function($super,title,url,selectedProductsParts,requestParams)\n        {\n            if (typeof requestParams == 'undefined') {\n                requestParams = {};\n            }\n\n            if (typeof requestParams['is_realtime'] == 'undefined') {\n                requestParams['is_realtime'] = (this.gridHandler.getSelectedProductsArray().length <= 10);\n            }\n\n            $super(title,url,selectedProductsParts,requestParams);\n        },\n\n        stopAction: function()\n        {\n            var selectedProductsParts = this.gridHandler.getSelectedItemsParts(100);\n            if (selectedProductsParts.length == 0) {\n                return;\n            }\n\n            var requestParams = {'is_realtime': (this.gridHandler.getSelectedProductsArray().length <= 100)};\n\n            this.startActions(\n                M2ePro.translator.translate('stopping_selected_items_message'),\n                M2ePro.url.get('ebay_listing/runStopProducts'),\n                selectedProductsParts,\n                requestParams\n            );\n        },\n\n        stopAndRemoveAction: function()\n        {\n            var selectedProductsParts = this.gridHandler.getSelectedItemsParts(100);\n            if (selectedProductsParts.length == 0) {\n                return;\n            }\n\n            var requestParams = {'is_realtime': (this.gridHandler.getSelectedProductsArray().length <= 100)};\n\n            this.startActions(\n                M2ePro.translator.translate('stopping_and_removing_selected_items_message'),\n                M2ePro.url.get('ebay_listing/runStopAndRemoveProducts'),\n                selectedProductsParts,\n                requestParams\n            );\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/View/Grid.js":"define([\n    'M2ePro/Listing/View/Grid',\n    'M2ePro/Ebay/Listing/VariationProductManage',\n    'M2ePro/Ebay/Listing/View/Action',\n    'M2ePro/Ebay/Listing/View/Ebay/Bids'\n], function () {\n\n    window.EbayListingViewGrid = Class.create(ListingViewGrid, {\n\n        // ---------------------------------------\n\n        selectedProductsIds: [],\n        selectedCategoriesData: {},\n\n        // ---------------------------------------\n\n        prepareActions: function($super)\n        {\n            this.actionHandler = new EbayListingViewAction(this);\n\n            this.actions = {\n                listAction: this.actionHandler.listAction.bind(this.actionHandler),\n                relistAction: this.actionHandler.relistAction.bind(this.actionHandler),\n                reviseAction: this.actionHandler.reviseAction.bind(this.actionHandler),\n                stopAction: this.actionHandler.stopAction.bind(this.actionHandler),\n                stopAndRemoveAction: this.actionHandler.stopAndRemoveAction.bind(this.actionHandler),\n                previewItemsAction: this.actionHandler.previewItemsAction.bind(this.actionHandler),\n                startTranslateAction: this.actionHandler.startTranslateAction.bind(this.actionHandler),\n                stopTranslateAction: this.actionHandler.stopTranslateAction.bind(this.actionHandler)\n            };\n\n            this.variationProductManageHandler = new EbayListingVariationProductManage(this);\n            this.listingProductBidsHandler = new EbayListingViewEbayBids(this);\n\n            this.actions = Object.extend(this.actions, {\n\n                editCategorySettingsAction: function(id) {\n                    this.editCategorySettings(id);\n                }.bind(this)\n\n            });\n\n        },\n\n        massActionSubmitClick: function($super)\n        {\n            if (this.getSelectedProductsString() == '' || this.getSelectedProductsArray().length == 0) {\n                this.alert(M2ePro.translator.translate('Please select the Products you want to perform the Action on.'));\n                return;\n            }\n            $super();\n        },\n\n        // ---------------------------------------\n\n        editCategorySettings: function(id)\n        {\n            this.selectedProductsIds = id ? [id] : this.getSelectedProductsArray();\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing/getCategoryChooserHtml'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: {\n                    product_ids: this.selectedProductsIds.join(',')\n                },\n                onSuccess: function(transport) {\n\n                    this.unselectAll();\n\n                    var title = M2ePro.translator.translate('eBay Categories');\n\n                    if (this.selectedProductsIds.length == 1) {\n                        var productName = this.getProductNameByRowId(this.selectedProductsIds[0]);\n                        title += '&nbsp;' + M2ePro.translator.translate('of Product') + '&nbsp;\"' + productName + '\"';\n                    }\n\n                    this.openPopUp(title, transport.responseText);\n\n                    $('cancel_button').stopObserving('click').observe('click', function() {\n                        this.popUp.modal('closeModal');\n                    }.bind(this));\n\n                    $('done_button').stopObserving('click').observe('click', function() {\n                        if (!EbayListingProductCategorySettingsChooserObj.validate()) {\n                            return;\n                        }\n\n                        this.selectedCategoriesData = EbayListingProductCategorySettingsChooserObj.getInternalData();\n                        this.editSpecificSettings();\n                    }.bind(this));\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        editSpecificSettings: function()\n        {\n            var typeEbayMain = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_EBAY_MAIN');\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing/getCategorySpecificHtml'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: {\n                    ids: this.selectedProductsIds.join(','),\n                    category_mode: EbayListingProductCategorySettingsChooserObj.getSelectedCategory(typeEbayMain)['mode'],\n                    category_value: EbayListingProductCategorySettingsChooserObj.getSelectedCategory(typeEbayMain)['value']\n                },\n                onSuccess: function(transport) {\n\n                    var title = M2ePro.translator.translate('Specifics');\n\n                    this.openPopUp(title, transport.responseText);\n\n                    $('cancel_button').stopObserving('click').observe('click', function() { this.popUp.modal('closeModal'); }.bind(this));\n                    $('done_button').stopObserving('click').observe('click', this.saveCategoryTemplate.bind(this));\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        saveCategoryTemplate: function()\n        {\n            if (!EbayListingProductCategorySettingsSpecificObj.validate()) {\n                return;\n            }\n\n            var categoryTemplateData = {};\n            categoryTemplateData = Object.extend(categoryTemplateData, this.selectedCategoriesData);\n            categoryTemplateData = Object.extend(categoryTemplateData, EbayListingProductCategorySettingsSpecificObj.getInternalData());\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing/saveCategoryTemplate'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: {\n                    ids: this.selectedProductsIds.join(','),\n                    template_category_data: Object.toJSON(categoryTemplateData)\n                },\n                onSuccess: function(transport) {\n                    this.popUp.modal('closeModal');\n                    this.getGridObj().doFilter();\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        getComponent: function()\n        {\n            return 'ebay';\n        },\n\n        // ---------------------------------------\n\n        openPopUp: function(title, content, params, popupId)\n        {\n            var self = this;\n            params = params || {};\n            popupId = popupId || 'modal_view_action_dialog';\n\n            var modalDialogMessage = $(popupId);\n\n            if (!modalDialogMessage) {\n                modalDialogMessage = new Element('div', {\n                    id: popupId\n                });\n            }\n\n            modalDialogMessage.innerHTML = '';\n\n            this.popUp = jQuery(modalDialogMessage).modal(Object.extend({\n                title: title,\n                type: 'slide',\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    attr: {id: 'cancel_button'},\n                    class: 'action-dismiss',\n                    click: function () {}\n                }, {\n                    text: M2ePro.translator.translate('Confirm'),\n                    attr: {id: 'done_button'},\n                    class: 'action-primary action-accept forward',\n                    click: function () {}\n                }],\n                closed: function() {\n                    self.selectedProductsIds = [];\n                    self.selectedCategoriesData = {};\n\n                    self.getGridObj().reload();\n\n                    return true;\n                }\n            }, params));\n\n            this.popUp.modal('openModal');\n\n            try {\n                modalDialogMessage.innerHTML = content;\n                modalDialogMessage.innerHTML.evalScripts();\n            } catch (ignored) {}\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Ebay/Listing/View/Settings/Motors.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Common'\n], function(modal){\n\n    window.EbayListingViewSettingsMotors  = Class.create(Common, {\n\n        listingId: null,\n        motorsType: null,\n        saveAsGroupPopupHtml: '',\n        setNotePopupHtml: '',\n\n        selectedData: {\n            items: [],\n            filters: [],\n            groups: []\n        },\n\n        // ---------------------------------------\n\n        initialize: function (listingId, motorsType) {\n            this.listingId = listingId;\n            this.motorsType = motorsType;\n        },\n\n        // ---------------------------------------\n\n        openAddPopUp: function (listingProductsIds) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/addView'), {\n                method: 'get',\n                parameters: {\n                    motors_type: self.motorsType\n                },\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_settings_motors_manage_popup');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"ebay_settings_motors_manage_popup\"></div>'});\n                    $('ebay_settings_motors_manage_popup').update(transport.responseText);\n\n                    self.addPopUp = jQuery('#ebay_settings_motors_manage_popup');\n\n                    var instructions = $('add_custom_motors_record_instruction_container'),\n                        popupType = 'slide',\n                        closedAction = function () {\n                            EbayListingViewSettingsGridObj.unselectAllAndReload();\n\n                            self.selectedData = {\n                                items: [],\n                                filters: [],\n                                groups: []\n                            };\n                        },\n                        buttons = [];\n\n                    if (instructions) {\n                        popupType = 'popup';\n                        closedAction = '';\n                        buttons.push({\n                            text: M2ePro.translator.translate('Confirm'),\n                            class: 'action-primary',\n                            click: function () {\n                                self.closeInstruction(listingProductsIds);\n                            }\n                        })\n                    }\n\n                    modal({\n                        title: M2ePro.translator.translate('Add Compatible Vehicles'),\n                        type: popupType,\n                        buttons: buttons,\n                        closed: closedAction\n                    }, self.addPopUp);\n\n                    self.addPopUp.modal('openModal');\n\n                    self.addPopUp.listingProductsIds = listingProductsIds;\n                }\n            });\n        },\n\n        //----------------------------------\n\n        openViewItemPopup: function (entityId, grid) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/viewItem'), {\n                method: 'get',\n                parameters: {\n                    entity_id: entityId,\n                    motors_type: self.motorsType\n                },\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_settings_motors_view_item');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"ebay_settings_motors_view_item\"></div>'});\n                    $('ebay_settings_motors_view_item').update(transport.responseText);\n\n                    self.viewItemPopup = jQuery('#ebay_settings_motors_view_item');\n\n                    modal({\n                        title: M2ePro.translator.translate('View Items'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.viewItemPopup.modal('closeModal')\n                            }\n                        }],\n                        closed: function () {\n                            grid.unselectAllAndReload();\n                        }\n                    }, self.viewItemPopup);\n\n                    self.viewItemPopup.modal('openModal');\n                }\n            });\n        },\n\n        openViewFilterPopup: function (entityId, grid) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/viewFilter'), {\n                method: 'get',\n                parameters: {\n                    entity_id: entityId,\n                    motors_type: self.motorsType\n                },\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_settings_motors_view_filter');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"ebay_settings_motors_view_filter\"></div>'});\n                    $('ebay_settings_motors_view_filter').update(transport.responseText);\n\n                    self.viewFilterPopup = jQuery('#ebay_settings_motors_view_filter');\n\n                    modal({\n                        title: M2ePro.translator.translate('View Filters'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.viewFilterPopup.modal('closeModal')\n                            }\n                        }],\n                        closed: function () {\n                            grid.unselectAllAndReload();\n                        }\n                    }, self.viewFilterPopup);\n\n                    self.viewFilterPopup.modal('openModal');\n                }\n            });\n        },\n\n        openViewGroupPopup: function (entityId, grid) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/viewGroup'), {\n                method: 'get',\n                parameters: {\n                    entity_id: entityId,\n                    motors_type: self.motorsType\n                },\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_settings_motors_view_group');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"ebay_settings_motors_view_group\"></div>'});\n                    $('ebay_settings_motors_view_group').update(transport.responseText);\n\n                    self.viewGroupPopup = jQuery('#ebay_settings_motors_view_group');\n\n                    modal({\n                        title: M2ePro.translator.translate('View Groups'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.viewGroupPopup.modal('closeModal')\n                            }\n                        }],\n                        closed: function () {\n                            grid.unselectAllAndReload();\n                        }\n                    }, self.viewGroupPopup);\n\n                    self.viewGroupPopup.modal('openModal');\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        updateSelectedData: function () {\n            var self = this,\n                emptyText = $('motors_empty_text'),\n                addbtn = $('motors_add'),\n                overrideBtn = $('motors_override'),\n                dataEl = $('selected_motors_data');\n\n            addbtn.addClassName('disabled');\n            overrideBtn.addClassName('disabled');\n            emptyText.show();\n\n            dataEl.down('.items').hide();\n            if (self.selectedData.items.length > 0) {\n                emptyText.hide();\n                addbtn.removeClassName('disabled');\n                overrideBtn.removeClassName('disabled');\n\n                dataEl.down('.items').show();\n                dataEl.down('.items .count').innerHTML = self.selectedData.items.length;\n            }\n\n            dataEl.down('.filters').hide();\n            if (self.selectedData.filters.length > 0) {\n                emptyText.hide();\n                addbtn.removeClassName('disabled');\n                overrideBtn.removeClassName('disabled');\n\n                dataEl.down('.filters').show();\n                dataEl.down('.filters .count').innerHTML = self.selectedData.filters.length;\n            }\n\n            dataEl.down('.groups').hide();\n            if (self.selectedData.groups.length > 0) {\n                emptyText.hide();\n                addbtn.removeClassName('disabled');\n                overrideBtn.removeClassName('disabled');\n\n                dataEl.down('.groups').show();\n                dataEl.down('.groups .count').innerHTML = self.selectedData.groups.length;\n            }\n        },\n\n        //----------------------------------\n\n        viewSelectedItemPopup: function () {\n            var self = this;\n\n            var containerEl = $('selected_items_popup');\n\n            if (containerEl) {\n                containerEl.remove();\n            }\n\n            $('html-body').insert({\n                bottom: '<div id=\"selected_items_popup\"></div>'\n            });\n\n            self.viewSelectedItemsPopup = jQuery('#selected_items_popup');\n\n            modal({\n                title: M2ePro.translator.translate('Selected Items'),\n                type: 'popup',\n                buttons: [{\n                    text: M2ePro.translator.translate('Close'),\n                    class: 'action-secondary',\n                    click: function () {\n                        self.viewSelectedItemsPopup.modal('closeModal');\n                    }\n                }]\n            }, self.viewSelectedItemsPopup);\n\n            self.viewSelectedItemsPopup.modal('openModal');\n\n            var table = new Element('table', {\n                cellspacing: '0',\n                cellpadding: '0',\n                class: 'data-grid data-grid-not-hovered'\n            });\n\n            table.update(\n                '<thead> ' +\n                    '<tr class=\"headings\">' +\n                        '<th class=\"data-grid-th\" style=\"width: 75px; font-weight: bold;\">' +\n                            M2ePro.translator.translate('Motor Item') +\n                        '</th>' +\n                        '<th class=\"data-grid-th\" style=\"font-weight: bold;\">' +\n                            M2ePro.translator.translate('Note') +\n                        '</th>' +\n                        '<th class=\"data-grid-th type-butt last\" style=\"width: 20px;\"></th>' +\n                    '</tr>' +\n                '</thead>' +\n                '<tbody></tbody>'\n            );\n\n            var tbody = table.down('tbody');\n\n            self.selectedData.items.each(function (item) {\n                var tr = new Element('tr'),\n                    tdItem = new Element('td', {\n                        style: 'text-align: center'\n                    }),\n                    tdNote = new Element('td', {}),\n                    tdRemove = new Element('td', {});\n\n                tdItem.innerHTML = item;\n                if (EbayListingViewSettingsMotorsAddItemGridObj.savedNotes[item]) {\n                    tdNote.innerHTML = EbayListingViewSettingsMotorsAddItemGridObj.savedNotes[item];\n                }\n\n                var removeLink = new Element('a', {\n                    title: M2ePro.translator.translate('Remove'),\n                    href: 'javascript:void(0)',\n                    class: 'ebay-listing-view-icon ebay-listing-view-remove'\n                });\n\n                removeLink.observe('click', function () {\n                    tr.remove();\n\n                    var index = self.selectedData.items.indexOf(item);\n                    self.selectedData.items.splice(index, 1);\n\n                    EbayListingViewSettingsMotorsObj.updateSelectedData();\n\n                    if (self.selectedData.items.length == 0) {\n                        self.viewSelectedItemsPopup.modal('closeModal');\n                    }\n                }, self);\n\n                tdRemove.insert({bottom: removeLink});\n\n                tr.insert({bottom: tdItem});\n                tr.insert({bottom: tdNote});\n                tr.insert({bottom: tdRemove});\n\n                tbody.insert({bottom: tr});\n            });\n\n            var dialogContent = $('selected_items_popup');\n\n            dialogContent.insert({\n                bottom: new Element('div', {\n                    class: 'admin__data-grid-wrap admin__data-grid-wrap-static'\n                }).insert({bottom: table})\n            });\n        },\n\n        viewSelectedFilterPopup: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('general/modelGetAll'), {\n                method: 'get',\n                parameters: {\n                    model: 'Ebay_Motor_Filter',\n                    id_field: 'id',\n                    data_field: 'title'\n                },\n                onSuccess: function (transport) {\n                    if (!transport.responseText.isJSON()) {\n                        alert(transport.responseText);\n                        return;\n                    }\n\n                    var filters = transport.responseText.evalJSON();\n\n                    var containerEl = $('selected_filters_popup');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({\n                        bottom: '<div id=\"selected_filters_popup\"></div>'\n                    });\n\n                    self.viewSelectedFiltersPopup = jQuery('#selected_filters_popup');\n\n                    modal({\n                        title: M2ePro.translator.translate('Selected Filters'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.viewSelectedFiltersPopup.modal('closeModal')\n                            }\n                        }]\n                    }, self.viewSelectedFiltersPopup);\n\n                    self.viewSelectedFiltersPopup.modal('openModal');\n\n                    var table = new Element('table', {\n                        cellspacing: '0',\n                        cellpadding: '0',\n                        class: 'data-grid data-grid-not-hovered'\n                    });\n\n                    table.update(\n                        '<thead> ' +\n                            '<tr class=\"headings\">' +\n                                '<th class=\"data-grid-th\" style=\"font-weight: bold;\">' +\n                                    M2ePro.translator.translate('Filter') +\n                                '</th>' +\n                                '<th class=\"data-grid-th type-butt last\" style=\"width: 20px;\"></th>' +\n                            '</tr>' +\n                        '</thead>' +\n                        '<tbody></tbody>'\n                    );\n\n                    var tbody = table.down('tbody');\n\n                    filters.each(function (filter) {\n                        if (self.selectedData.filters.indexOf(filter.id) == -1) {\n                            return;\n                        }\n\n                        var tr = new Element('tr'),\n                            tdTitle = new Element('td', {}),\n                            tdRemove = new Element('td', {});\n\n                        tdTitle.innerHTML = filter.title;\n\n                        var removeLink = new Element('a', {\n                            title: M2ePro.translator.translate('Remove'),\n                            href: 'javascript:void(0)',\n                            class: 'ebay-listing-view-icon ebay-listing-view-remove'\n                        });\n\n                        removeLink.observe('click', function () {\n                            tr.remove();\n\n                            var index = self.selectedData.filters.indexOf(filter.id);\n                            self.selectedData.filters.splice(index, 1);\n\n                            EbayListingViewSettingsMotorsObj.updateSelectedData();\n\n                            if (self.selectedData.filters.length == 0) {\n                                self.viewSelectedFiltersPopup.modal('closeModal');\n                            }\n                        }, self);\n\n                        tdRemove.insert({bottom: removeLink});\n\n                        tr.insert({bottom: tdTitle});\n                        tr.insert({bottom: tdRemove});\n\n                        tbody.insert({bottom: tr});\n                    });\n\n                    var dialogContent = $('selected_filters_popup');\n\n                    dialogContent.insert({\n                        bottom: new Element('div', {\n                            class: 'admin__data-grid-wrap admin__data-grid-wrap-static'\n                        }).insert({bottom: table})\n                    });\n                }\n            });\n        },\n\n        viewSelectedGroupPopup: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('general/modelGetAll'), {\n                method: 'get',\n                parameters: {\n                    model: 'Ebay_Motor_Group',\n                    id_field: 'id',\n                    data_field: 'title'\n                },\n                onSuccess: function (transport) {\n                    if (!transport.responseText.isJSON()) {\n                        alert(transport.responseText);\n                        return;\n                    }\n\n                    var groups = transport.responseText.evalJSON();\n\n                    var containerEl = $('selected_groups_popup');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({\n                        bottom: '<div id=\"selected_groups_popup\"></div>'\n                    });\n\n                    self.viewSelectedGroupsPopup = jQuery('#selected_groups_popup');\n\n                    modal({\n                        title: M2ePro.translator.translate('Selected Groups'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.viewSelectedGroupsPopup.modal('closeModal')\n                            }\n                        }]\n                    }, self.viewSelectedGroupsPopup);\n\n                    self.viewSelectedGroupsPopup.modal('openModal');\n\n                    var table = new Element('table', {\n                        cellspacing: '0',\n                        cellpadding: '0',\n                        class: 'data-grid data-grid-not-hovered'\n                    });\n\n                    table.update(\n                        '<thead> ' +\n                            '<tr class=\"headings\">' +\n                                '<th class=\"data-grid-th\" style=\"font-weight: bold;\">' +\n                                    M2ePro.translator.translate('Filter') +\n                                '</th>' +\n                                '<th class=\"data-grid-th type-butt last\" style=\"width: 20px;\"></th>' +\n                            '</tr>' +\n                        '</thead>' +\n                        '<tbody></tbody>'\n                    );\n\n                    var tbody = table.down('tbody');\n\n                    groups.each(function (group) {\n                        if (self.selectedData.groups.indexOf(group.id) == -1) {\n                            return;\n                        }\n\n                        var tr = new Element('tr'),\n                            tdTitle = new Element('td', {}),\n                            tdRemove = new Element('td', {});\n\n                        tdTitle.innerHTML = group.title;\n\n                        var removeLink = new Element('a', {\n                            title: M2ePro.translator.translate('Remove'),\n                            href: 'javascript:void(0)',\n                            class: 'ebay-listing-view-icon ebay-listing-view-remove'\n                        });\n\n                        removeLink.observe('click', function () {\n                            tr.remove();\n\n                            var index = self.selectedData.groups.indexOf(group.id);\n                            self.selectedData.groups.splice(index, 1);\n\n                            EbayListingViewSettingsMotorsObj.updateSelectedData();\n\n                            if (self.selectedData.groups.length == 0) {\n                                self.viewSelectedGroupsPopup.modal('closeModal');\n                            }\n                        }, self);\n\n                        tdRemove.insert({bottom: removeLink});\n\n                        tr.insert({bottom: tdTitle});\n                        tr.insert({bottom: tdRemove});\n\n                        tbody.insert({bottom: tr});\n                    });\n\n                    var dialogContent = $('selected_groups_popup');\n\n                    dialogContent.insert({\n                        bottom: new Element('div', {\n                            class: 'admin__data-grid-wrap admin__data-grid-wrap-static'\n                        }).insert({bottom: table})\n                    });\n                }\n            });\n        },\n\n        //----------------------------------\n\n        updateMotorsData: function (override) {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        var items = {};\n                        self.selectedData.items.each(function (item) {\n                            items[item] = EbayListingViewSettingsMotorsAddItemGridObj.savedNotes[item];\n                        });\n\n                        new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/updateMotorsData'), {\n                            method: 'post',\n                            parameters: {\n                                listing_id: self.listingId,\n                                'listing_products_ids[]': self.addPopUp.listingProductsIds,\n                                motors_type: self.motorsType,\n                                overwrite: override,\n                                items: Object.toQueryString(items),\n                                filters_ids: implode(',', self.selectedData.filters),\n                                groups_ids: implode(',', self.selectedData.groups)\n                            },\n                            onSuccess: function (transport) {\n\n                                if (transport.responseText == '0') {\n                                    self.addPopUp.modal('closeModal');\n                                }\n                            }\n                        });\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        //----------------------------------\n\n        openAddRecordPopup: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/getAddCustomItemForm'), {\n                method: 'get',\n                parameters: {\n                    motors_type: self.motorsType\n                },\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_settings_motors_custom_item_form');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"ebay_settings_motors_custom_item_form\"></div>'});\n                    $('ebay_settings_motors_custom_item_form').update(transport.responseText);\n\n                    self.addRecordPopUp = jQuery('#ebay_settings_motors_custom_item_form');\n\n                    modal({\n                        title: M2ePro.translator.translate('Add Custom Compatible Vehicle'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.addRecordPopUp.modal('closeModal');\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Confirm'),\n                            class: 'action-primary',\n                            click: function () {\n                                if (!jQuery('#motors_custom_item').valid()) {\n                                    return;\n                                }\n\n                                new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/saveCustomItem'), {\n                                    method: 'post',\n                                    parameters: $$('#ebay_settings_motors_custom_item_form form').first().serialize(true),\n                                    onSuccess: function (transport) {\n\n                                        var result = transport.responseText.evalJSON();\n\n                                        if (!result.result) {\n                                            return self.alert(result.message);\n                                        }\n\n                                        self.addRecordPopUp.modal('closeModal');\n                                        EbayListingViewSettingsMotorsAddItemGridObj.unselectAllAndReload();\n                                    }\n                                });\n                            }\n                        }]\n                    }, self.addRecordPopUp);\n\n                    self.addRecordPopUp.modal('openModal');\n\n                    self.initFormValidation('#motors_custom_item');\n                }\n            });\n        },\n\n        removeCustomMotorsRecord: function (motorsType, keyId) {\n            var self = this;\n\n            var index = self.selectedData.items.indexOf('' + keyId);\n\n            if (index > -1) {\n                self.selectedData.items.splice(index, 1);\n            }\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/removeCustomItem'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: {\n                    motors_type: motorsType,\n                    key_id: keyId\n                },\n                onSuccess: function (transport) {\n\n                    var result = transport.responseText.evalJSON();\n\n                    if (!result.result) {\n                        return alert(result.message);\n                    }\n\n                    self.updateSelectedData();\n                    EbayListingViewSettingsMotorsAddItemGridObj.unselectAllAndReload();\n                    EbayListingViewSettingsMotorsAddGroupGridObj.unselectAllAndReload();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        closeInstruction: function (listingProductsIds) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/closeInstruction'), {\n                method: 'post',\n                onSuccess: function (transport) {\n                    self.addPopUp.modal('closeModal');\n                    self.openAddPopUp(listingProductsIds);\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Ebay/Listing/View/Settings/Grid.js":"define([\n    'jquery',\n    'M2ePro/Ebay/Listing/View/Grid',\n    'M2ePro/Listing/Moving',\n    'Magento_Ui/js/modal/modal'\n], function (jQuery) {\n\n    window.EbayListingViewSettingsGrid = Class.create(EbayListingViewGrid, {\n\n        // ---------------------------------------\n\n        initialize: function($super,gridId,listingId)\n        {\n            jQuery.validator.addMethod('M2ePro-validate-ebay-template-switcher', function(value, $element) {\n\n               var mode = base64_decode(value).evalJSON().mode;\n\n               return mode !== null;\n            }, M2ePro.translator.translate('This is a required field.'));\n\n            $super(gridId);\n        },\n\n        // ---------------------------------------\n\n        prepareActions: function($super)\n        {\n            $super();\n\n            this.movingHandler = new ListingMoving(this);\n\n            this.actions = Object.extend(this.actions, {\n\n                editPrimaryCategorySettingsAction: function(id) {\n                    this.editCategorySettings(id);\n                }.bind(this),\n                editStorePrimaryCategorySettingsAction: function(id) {\n                    this.editCategorySettings(id);\n                }.bind(this),\n\n                editPriceQuantityFormatSettingsAction: function(id) {\n                    this.editSettings(id,\n                        M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Manager::TEMPLATE_SELLING_FORMAT')\n                    );\n                }.bind(this),\n                editDescriptionSettingsAction: function(id) {\n                    this.editSettings(id,\n                        M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Manager::TEMPLATE_DESCRIPTION')\n                    );\n                }.bind(this),\n                editSynchSettingsAction: function(id) {\n                    this.editSettings(id,\n                        M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Manager::TEMPLATE_SYNCHRONIZATION')\n                    );\n                }.bind(this),\n                editPaymentSettingsAction: function(id) {\n                    this.editSettings(id,\n                        M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Manager::TEMPLATE_PAYMENT')\n                    );\n                }.bind(this),\n                editShippingSettingsAction: function(id) {\n                    this.editSettings(id,\n                        M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Manager::TEMPLATE_SHIPPING')\n                    );\n                }.bind(this),\n                editReturnSettingsAction: function(id) {\n                    this.editSettings(id,\n                        M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Manager::TEMPLATE_RETURN_POLICY')\n                    );\n                }.bind(this),\n\n                editMotorsAction: function(id) {\n                    this.openMotorsPopup(id);\n                }.bind(this),\n\n                movingAction: this.movingHandler.run.bind(this.movingHandler),\n\n                transferringAction: function(id) {\n                    this.transferring(id);\n                }.bind(this)\n\n            });\n        },\n\n        // ---------------------------------------\n\n        editSettings: function(id, templateNick)\n        {\n            this.selectedProductsIds = id ? [id] : this.getSelectedProductsArray();\n\n            new Ajax.Request(M2ePro.url.get('ebay_template/editListingProductsPolicy'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: {\n                    ids: this.selectedProductsIds.join(','),\n                    templateNick: templateNick\n                },\n                onSuccess: function(transport) {\n\n                    var result = transport.responseText;\n\n                    if (+result === 0) {\n                        return;\n                    }\n\n                    this.unselectAll();\n\n                    var title = this.getPopUpTitle(templateNick, this.getSelectedProductsTitles());\n\n                    if (typeof this.popUp != 'undefined') {\n                        var $title = this.popUp.data('modal').modal.find('.modal-title');\n                        $title.text(title);\n                    }\n\n                    this.openPopUp(\n                        title,\n                        transport.responseText,\n                        {\n                            buttons: [{\n                                text: M2ePro.translator.translate('Cancel'),\n                                class: 'action-dismiss',\n                                click: function () {\n                                    this.closeModal();\n                                }\n                            }, {\n                                text: M2ePro.translator.translate('Save'),\n                                class: 'action-primary action-accept',\n                                click: function () {\n                                    var switcher = jQuery('.template-switcher');\n\n                                    if (!switcher.length ||\n                                        !jQuery.validator.validateElement(switcher)) {\n                                        return;\n                                    }\n\n                                    EbayListingTemplateSwitcherObj.saveSwitchers(function (params) {\n                                        EbayListingViewSettingsGridObj.saveSettings(params);\n                                    });\n                                }\n                            }],\n                            closed: function() {\n                                self.selectedProductsIds = [];\n                                self.selectedCategoriesData = {};\n\n                                return true;\n                            }\n\n                        },\n                        'modal_setting_policy_action_dialog'\n                    );\n\n                    this.insertHelpLink('modal_setting_policy_action_dialog');\n\n                }.bind(this)\n            });\n        },\n\n        openMotorsPopup: function(id)\n        {\n            EbayListingViewSettingsMotorsObj.savedNotes = {};\n\n            this.selectedProductsIds = id ? [id] : this.getSelectedProductsArray();\n            EbayListingViewSettingsMotorsObj.openAddPopUp(this.selectedProductsIds);\n        },\n\n        // ---------------------------------------\n\n        saveSettings: function(savedTemplates)\n        {\n            var requestParams = {};\n\n            // push information about saved templates into the request params\n            // ---------------------------------------\n            $H(savedTemplates).each(function(i) {\n                requestParams[i.key] = i.value;\n            });\n            // ---------------------------------------\n\n            // ---------------------------------------\n            requestParams['ids'] = this.selectedProductsIds.join(',');\n            // ---------------------------------------\n\n            new Ajax.Request(M2ePro.url.get('ebay_template/saveListingProductsPolicy'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: requestParams,\n                onSuccess: function(transport) {\n                    this.popUp.modal('closeModal');\n                    this.getGridObj().doFilter();\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        getSelectedProductsTitles: function()\n        {\n            if (this.selectedProductsIds.length > 3) {\n                return '';\n            }\n\n            var title = '';\n\n            // use the names of only first three products for pop up title\n            for (var i = 0; i < 3; i++) {\n                if (typeof this.selectedProductsIds[i] == 'undefined') {\n                    break;\n                }\n\n                if (title != '') {\n                    title += ', ';\n                }\n\n                title += this.getProductNameByRowId(this.selectedProductsIds[i]);\n            }\n\n            return title;\n        },\n\n        // ---------------------------------------\n\n        getPopUpTitle: function(templateNick, productTitles)\n        {\n            var title = '',\n                templatesNames = {};\n\n            templatesNames[\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Manager::TEMPLATE_RETURN_POLICY')\n            ] = M2ePro.translator.translate('Edit Return Policy Setting');\n            templatesNames[\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Manager::TEMPLATE_PAYMENT')\n            ] = M2ePro.translator.translate('Edit Payment Policy Setting');\n            templatesNames[\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Manager::TEMPLATE_SHIPPING')\n            ] = M2ePro.translator.translate('Edit Shipping Policy Setting');\n            templatesNames[\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Manager::TEMPLATE_DESCRIPTION')\n            ] = M2ePro.translator.translate('Edit Description Policy Setting');\n            templatesNames[\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Manager::TEMPLATE_SELLING_FORMAT')\n            ] = M2ePro.translator.translate('Edit Price, Quantity and Format Policy Setting');\n            templatesNames[\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Manager::TEMPLATE_SYNCHRONIZATION')\n            ] = M2ePro.translator.translate('Edit Synchronization Policy Setting');\n\n            if (templatesNames[templateNick]) {\n                title = templatesNames[templateNick];\n            }\n\n            var productTitlesArray = productTitles.split(',');\n            if (productTitlesArray.length > 1) {\n                productTitles = productTitlesArray.map(function(el) { return el.trim(); }).join('\", \"');\n            }\n\n            if (productTitles) {\n                title += ' ' + M2ePro.translator.translate('for') + ' \"' + productTitles + '\"';\n            }\n\n            return title;\n        },\n\n        // ---------------------------------------\n\n        transferring: function(id)\n        {\n            this.selectedProductsIds = id ? [id] : this.getSelectedProductsArray();\n            if (this.selectedProductsIds.length) {\n                this.unselectAll();\n\n                var productName = this.selectedProductsIds.length == 1 ?\n                    this.getProductNameByRowId(this.selectedProductsIds[0]) : null;\n\n                EbayListingTransferringHandlerObj.loadActionHtml(this.selectedProductsIds, null, productName);\n            }\n        },\n\n        // ---------------------------------------\n\n        confirm: function (config) {\n            if (config.actions && config.actions.confirm) {\n                config.actions.confirm();\n            }\n        },\n\n        insertHelpLink: function (popUpElementId)\n        {\n            var modalHeader = jQuery('#'+popUpElementId)\n                    .closest('.modal-inner-wrap')\n                    .find('h1.modal-title');\n\n            if (modalHeader.has('#popup_template_help_link')) {\n                modalHeader.find('#popup_template_help_link').remove();\n            }\n\n            var tips = jQuery('#popup_template_help_link');\n            modalHeader.append(tips);\n            tips.show();\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/View/Settings/Motors/View/Group/Grid.js":"define([\n    'M2ePro/Grid'\n], function () {\n\n    window.EbayListingViewSettingsMotorsViewGroupGrid = Class.create(Grid, {\n\n        //----------------------------------\n\n        initialize: function ($super, gridId, entityId) {\n            $super(gridId);\n\n            this.entityId = entityId;\n        },\n\n        //##################################\n\n        prepareActions: function () {\n            this.actions = {\n                removeGroupAction: this.removeGroup.bind(this)\n            };\n        },\n\n        //##################################\n\n        removeGroup: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/removeGroupFromListingProduct'), {\n                method: 'post',\n                parameters: {\n                    groups_ids: self.getGridMassActionObj().checkedString,\n                    entity_id: self.entityId,\n                    motors_type: EbayListingViewSettingsMotorsObj.motorsType\n                },\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == '0') {\n                        self.unselectAllAndReload();\n                    }\n                }\n            });\n        },\n\n        //##################################\n\n    });\n});","Ess_M2ePro/js/Ebay/Listing/View/Settings/Motors/View/Filter/Grid.js":"define([\n    'M2ePro/Grid'\n], function () {\n\n    window.EbayListingViewSettingsMotorsViewFilterGrid = Class.create(Grid, {\n\n        entityId: '',\n        //----------------------------------\n\n        initialize: function ($super, gridId, entityId) {\n            $super(gridId);\n\n            this.entityId = entityId;\n        },\n\n        //##################################\n\n        prepareActions: function () {\n            this.actions = {\n                removeFilterAction: this.removeFilter.bind(this)\n            };\n        },\n\n        //##################################\n\n        removeFilter: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/removeFilterFromProduct'), {\n                method: 'post',\n                parameters: {\n                    filters_ids: self.getGridMassActionObj().checkedString,\n                    entity_id: self.entityId,\n                    motors_type: EbayListingViewSettingsMotorsObj.motorsType\n                },\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == '0') {\n                        self.unselectAllAndReload();\n                    }\n                }\n            });\n        },\n\n        //##################################\n\n    });\n\n});","Ess_M2ePro/js/Ebay/Listing/View/Settings/Motors/View/Item/Grid.js":"define([\n    'M2ePro/Grid'\n], function () {\n\n    window.EbayListingViewSettingsMotorsViewItemGrid = Class.create(Grid, {\n\n        entityId: '',\n        //----------------------------------\n\n        initialize: function ($super, gridId, entityId) {\n            $super(gridId);\n\n            this.entityId = entityId;\n        },\n\n        //##################################\n\n        prepareActions: function () {\n            this.actions = {\n                removeItemAction: this.removeItem.bind(this)\n            };\n        },\n\n        //##################################\n\n        removeItem: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/removeItemFromProduct'), {\n                method: 'post',\n                parameters: {\n                    items_ids: self.getGridMassActionObj().checkedString,\n                    entity_id: self.entityId,\n                    motors_type: EbayListingViewSettingsMotorsObj.motorsType\n                },\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == '0') {\n                        self.unselectAllAndReload();\n                    }\n                }\n            });\n        },\n\n        //##################################\n\n    });\n\n});","Ess_M2ePro/js/Ebay/Listing/View/Settings/Motors/Add/Group/Grid.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Grid'\n], function (modal) {\n\n    window.EbayListingViewSettingsMotorsAddGroupGrid = Class.create(Grid, {\n\n        //----------------------------------\n\n        initialize: function ($super, gridId) {\n            $super(gridId);\n        },\n\n        //##################################\n\n        prepareActions: function () {\n            this.actions = {\n                selectAction: this.selectGroups.bind(this),\n                removeGroupAction: this.removeGroup.bind(this)\n            };\n        },\n\n        //##################################\n\n        selectGroups: function () {\n            var self = this,\n                groups = self.getGridMassActionObj().checkedString.split(',');\n\n            groups.each(function (group) {\n\n                for (var i = 0; i < EbayListingViewSettingsMotorsObj.selectedData.groups.length; i++) {\n                    if (EbayListingViewSettingsMotorsObj.selectedData.groups[i] == group) {\n                        return;\n                    }\n                }\n\n                EbayListingViewSettingsMotorsObj.selectedData.groups.push(group);\n            });\n\n            self.unselectAll();\n            EbayListingViewSettingsMotorsObj.updateSelectedData();\n        },\n\n        //----------------------------------\n\n        removeGroup: function () {\n            var self = this,\n                groups = self.getGridMassActionObj().checkedString.split(',');\n\n            groups.each(function (group) {\n                var index = EbayListingViewSettingsMotorsObj.selectedData.groups.indexOf(group);\n\n                if (index > -1) {\n                    EbayListingViewSettingsMotorsObj.selectedData.groups.splice(index, 1);\n                }\n            });\n\n            EbayListingViewSettingsMotorsObj.updateSelectedData();\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/removeGroup'), {\n                method: 'post',\n                parameters: {\n                    groups_ids: self.getGridMassActionObj().checkedString\n                },\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == '0') {\n                        self.unselectAllAndReload();\n                    }\n                }\n            });\n        },\n\n        //##################################\n\n        viewGroupContentPopup: function (groupId, title) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/getGroupContentView'), {\n                method: 'get',\n                parameters: {\n                    group_id: groupId\n                },\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_settings_motors_group_content');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"ebay_settings_motors_group_content\"></div>'});\n                    $('ebay_settings_motors_group_content').insert({bottom: transport.responseText});\n\n                    self.goupContentPopup = jQuery('#ebay_settings_motors_group_content');\n\n                    modal({\n                        title: title,\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.goupContentPopup.modal('closeModal');\n                            }\n                        }],\n                        closed: function() {\n                            EbayListingViewSettingsMotorsAddGroupGridObj.unselectAllAndReload();\n                        }\n                    }, self.goupContentPopup);\n\n                    self.goupContentPopup.modal('openModal');\n                }\n            });\n        },\n\n        removeItemFromGroup: function (el, itemId, groupId) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/removeItemFromGroup'), {\n                method: 'post',\n                parameters: {\n                    items_ids: itemId,\n                    group_id: groupId\n                },\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == '0') {\n                        if ($(el).up('tbody').select('tr').length == 1) {\n                            var index = EbayListingViewSettingsMotorsObj.selectedData.groups.indexOf('' + groupId);\n\n                            if (index > -1) {\n                                EbayListingViewSettingsMotorsObj.selectedData.groups.splice(index, 1);\n                                EbayListingViewSettingsMotorsObj.updateSelectedData();\n                            }\n\n                            self.goupContentPopup.modal('closeModal');\n                            return;\n                        }\n\n                        $(el).up('tr').remove();\n                    }\n                }\n            });\n        },\n\n        removeFilterFromGroup: function (el, filterId, groupId) {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/removeFilterFromGroup'), {\n                method: 'post',\n                parameters: {\n                    filters_ids: filterId,\n                    group_id: groupId\n                },\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == '0') {\n                        if ($(el).up('tbody').select('tr').length == 1) {\n                            var index = EbayListingViewSettingsMotorsObj.selectedData.groups.indexOf('' + groupId);\n\n                            if (index > -1) {\n                                EbayListingViewSettingsMotorsObj.selectedData.groups.splice(index, 1);\n                                EbayListingViewSettingsMotorsObj.updateSelectedData();\n                            }\n\n                            self.goupContentPopup.modal('closeModal');\n                            return;\n                        }\n\n                        $(el).up('tr').remove();\n                    }\n                }\n            });\n        }\n\n        //##################################\n\n    });\n\n});","Ess_M2ePro/js/Ebay/Listing/View/Settings/Motors/Add/Filter/Grid.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Grid'\n], function (modal) {\n\n    window.EbayListingViewSettingsMotorsAddFilterGrid = Class.create(Grid, {\n\n        filtersConditions: {},\n\n        //----------------------------------\n\n        initialize: function ($super, gridId) {\n            $super(gridId);\n        },\n\n        //##################################\n\n        prepareActions: function () {\n            this.actions = {\n                selectAction: this.selectFilters.bind(this),\n                setNoteAction: this.setNote.bind(this),\n                resetNoteAction: this.resetNote.bind(this),\n                saveAsGroupAction: this.saveAsGroup.bind(this),\n                removeFilterAction: this.removeFilter.bind(this)\n            };\n        },\n\n        //##################################\n\n        selectFilters: function () {\n            var self = this,\n                filters = self.getGridMassActionObj().checkedString.split(',');\n\n            filters.each(function (filter) {\n\n                for (var i = 0; i < EbayListingViewSettingsMotorsObj.selectedData.filters.length; i++) {\n                    if (EbayListingViewSettingsMotorsObj.selectedData.filters[i] == filter) {\n                        return;\n                    }\n                }\n\n                EbayListingViewSettingsMotorsObj.selectedData.filters.push(filter);\n            });\n\n            self.unselectAll();\n            EbayListingViewSettingsMotorsObj.updateSelectedData();\n        },\n\n        //----------------------------------\n\n        setNote: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/getNoteForm'), {\n                method: 'get',\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_settings_motors_note_form');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"ebay_settings_motors_note_form\"></div>'});\n                    $('ebay_settings_motors_note_form').insert({bottom: transport.responseText});\n\n                    self.notePopup = jQuery('#ebay_settings_motors_note_form');\n\n                    modal({\n                        title: M2ePro.translator.translate('Set Note'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.notePopup.modal('closeModal');\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Save'),\n                            class: 'action-primary',\n                            click: function () {\n                                if (!self.validatePopupForm('motors_note')) {\n                                    return;\n                                }\n\n                                var data = $('motors_note').serialize(true);\n                                data['filters_ids'] = self.getGridMassActionObj().checkedString;\n\n                                new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/setNoteToFilters'), {\n                                    method: 'post',\n                                    parameters: data,\n                                    onSuccess: function (transport) {\n\n                                        if (transport.responseText == '0') {\n                                            self.unselectAllAndReload();\n                                        }\n\n                                        self.notePopup.modal('closeModal');\n                                    }\n                                });\n                            }\n                        }]\n                    }, self.notePopup);\n\n                    self.notePopup.modal('openModal');\n\n                    self.initFormValidation('#motors_note');\n                }\n            });\n        },\n\n        resetNote: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/setNoteToFilters'), {\n                method: 'post',\n                parameters: {\n                    filters_ids: self.getGridMassActionObj().checkedString,\n                    note: ''\n                },\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == '0') {\n                        self.unselectAllAndReload();\n                    }\n\n                    self.notePopup.modal('closeModal');\n                }\n            });\n        },\n\n        //----------------------------------\n\n        saveAsGroup: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/getSaveAsGroupForm'), {\n                method: 'get',\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_settings_motors_save_group');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"ebay_settings_motors_save_group\"></div>'});\n                    $('ebay_settings_motors_save_group').insert({bottom: transport.responseText});\n\n                    self.groupPopup = jQuery('#ebay_settings_motors_save_group');\n\n                    modal({\n                        title: M2ePro.translator.translate('Save as Group'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.groupPopup.modal('closeModal');\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Save'),\n                            class: 'action-primary',\n                            click: function () {\n                                if (!self.validatePopupForm('motors_group')) {\n                                    return;\n                                }\n\n                                var data = $('motors_group').serialize(true);\n                                data.items = self.getGridMassActionObj().checkedString;\n                                data.type = EbayListingViewSettingsMotorsObj.motorsType;\n                                data.mode = M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Motor_Group::MODE_FILTER');\n\n                                new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/saveAsGroup'), {\n                                    method: 'post',\n                                    parameters: data,\n                                    onSuccess: function (transport) {\n\n                                        if (transport.responseText == '0') {\n                                            self.unselectAll();\n                                            $(self.getGridMassActionObj().select).value = '';\n\n                                            EbayListingViewSettingsMotorsAddGroupGridObj.unselectAllAndReload();\n                                        }\n\n                                        self.groupPopup.modal('closeModal');\n                                    }\n                                });\n                            }\n                        }]\n                    }, self.groupPopup);\n\n                    self.groupPopup.modal('openModal');\n\n                    self.initFormValidation('#motors_group');\n                }\n            });\n        },\n\n        //----------------------------------\n\n        removeFilter: function () {\n            var self = this,\n                filters = self.getGridMassActionObj().checkedString.split(',');\n\n            filters.each(function (filter) {\n\n                var index = EbayListingViewSettingsMotorsObj.selectedData.filters.indexOf(filter);\n\n                if (index > -1) {\n                    EbayListingViewSettingsMotorsObj.selectedData.filters.splice(index, 1);\n                }\n            });\n\n            EbayListingViewSettingsMotorsObj.updateSelectedData();\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/removeFilter'), {\n                method: 'post',\n                parameters: {\n                    filters_ids: self.getGridMassActionObj().checkedString\n                },\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == '0') {\n                        self.unselectAllAndReload();\n                        EbayListingViewSettingsMotorsAddGroupGridObj.unselectAllAndReload();\n                    }\n                }\n            });\n        },\n\n        //##################################\n\n        showFilterResult: function (filterId) {\n            jQuery('#ebayMotorAddTabs').tabs({\n                active: 0\n            });\n            EbayListingViewSettingsMotorsAddItemGridObj.showFilterResult(this.filtersConditions[filterId]);\n        },\n\n        //##################################\n\n        validatePopupForm: function (formId) {\n\n            return jQuery('#' + formId).valid();\n\n        },\n\n        //##################################\n\n    });\n\n});","Ess_M2ePro/js/Ebay/Listing/View/Settings/Motors/Add/Item/Grid.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Grid'\n], function (modal) {\n\n    window.EbayListingViewSettingsMotorsAddItemGrid = Class.create(Grid, {\n\n        savedNotes: {},\n\n        //----------------------------------\n\n        initialize: function ($super, gridId) {\n            $super(gridId);\n\n            this.savedNotes = {};\n        },\n\n        //##################################\n\n        prepareActions: function () {\n            this.actions = {\n                selectAction: this.selectItems.bind(this),\n                setNoteAction: this.setNote.bind(this),\n                resetNoteAction: this.resetNote.bind(this),\n                saveAsGroupAction: this.saveAsGroup.bind(this)\n            };\n        },\n\n        afterInitPage: function () {\n            var self = this;\n\n            Grid.prototype.afterInitPage.call(this);\n\n            $(self.gridId).down('.data-grid-filters').on('change', function (e) {\n\n                self.checkFilterValues();\n\n            });\n\n            $(self.gridId).down('.data-grid-filters').on('keyup', function (e) {\n\n                self.checkFilterValues();\n\n            });\n\n            self.checkFilterValues();\n\n            $H(self.savedNotes).each(function (note) {\n\n                var noteEl = $('note_' + note.key);\n\n                if (noteEl && note.value != '') {\n                    noteEl.show();\n                    noteEl.down('.note-view').innerHTML = note.value;\n                }\n            });\n\n            var select = $(self.getGridMassActionObj().containerId + '-mass-select');\n            self.bindEventAtFirstPosition(select, 'change',  self.massactionOnChange.bind(self));\n        },\n\n        checkFilterValues: function () {\n            var self = this;\n\n            $('save_filter_btn').addClassName('disabled');\n\n            $(self.gridId).down('.data-grid-filters').select('select', 'input').each(function (el) {\n                if (el.name == 'massaction') {\n                    return;\n                }\n\n                if (el.value != '') {\n                    $('save_filter_btn').removeClassName('disabled');\n                    throw $break;\n                }\n            });\n        },\n\n        //##################################\n\n        selectItems: function () {\n            var self = this,\n                items = self.getGridMassActionObj().checkedString.split(',');\n\n            items.each(function (item) {\n\n                for (var i = 0; i < EbayListingViewSettingsMotorsObj.selectedData.items.length; i++) {\n                    if (EbayListingViewSettingsMotorsObj.selectedData.items[i] == item) {\n                        return;\n                    }\n                }\n\n                EbayListingViewSettingsMotorsObj.selectedData.items.push(item);\n            });\n\n            self.unselectAll();\n            EbayListingViewSettingsMotorsObj.updateSelectedData();\n        },\n\n        //----------------------------------\n\n        setNote: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/getNoteForm'), {\n                method: 'get',\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_settings_motors_note_form');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"ebay_settings_motors_note_form\"></div>'});\n                    $('ebay_settings_motors_note_form').insert({bottom: transport.responseText});\n\n                    self.notePopup = jQuery('#ebay_settings_motors_note_form');\n\n                    modal({\n                        title: M2ePro.translator.translate('Set Note'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.notePopup.modal('closeModal');\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Save'),\n                            class: 'action-primary',\n                            click: function () {\n                                if (!self.validatePopupForm('motors_note')) {\n                                    return;\n                                }\n\n                                var note = $('motors_note').down('[name=note]').value;\n\n                                note = note.trim();\n\n                                self.getGridMassActionObj().getCheckedValues().split(',').each(function (id) {\n\n                                    self.savedNotes[id] = note;\n\n                                    var noteEl = $('note_' + id);\n\n                                    if (noteEl) {\n                                        noteEl.hide();\n\n                                        if (note != '') {\n                                            noteEl.show();\n                                            noteEl.down('.note-view').innerHTML = note;\n                                        }\n                                    }\n                                });\n\n                                $(self.getGridMassActionObj().select).value = '';\n                                self.notePopup.modal('closeModal');\n                            }\n                        }]\n                    }, self.notePopup);\n\n                    self.notePopup.modal('openModal');\n\n                    self.initFormValidation('#motors_note');\n                }\n            });\n        },\n\n        resetNote: function () {\n            var self = this;\n\n            self.getGridMassActionObj().getCheckedValues().split(',').each(function (id) {\n\n                self.savedNotes[id] = '';\n\n                var noteEl = $('note_' + id);\n\n                if (noteEl) {\n                    noteEl.hide();\n                    noteEl.down('.note-view').innerHTML = '';\n                }\n            });\n\n            $(self.getGridMassActionObj().select).value = '';\n            self.unselectAll();\n        },\n\n        //----------------------------------\n\n        saveAsGroup: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/getSaveAsGroupForm'), {\n                method: 'get',\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_settings_motors_save_group');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"ebay_settings_motors_save_group\"></div>'});\n                    $('ebay_settings_motors_save_group').insert({bottom: transport.responseText});\n\n                    self.groupPopup = jQuery('#ebay_settings_motors_save_group');\n\n                    modal({\n                        title: M2ePro.translator.translate('Save as Group'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.groupPopup.modal('closeModal');\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Save'),\n                            class: 'action-primary',\n                            click: function () {\n                                if (!self.validatePopupForm('motors_group')) {\n                                    return;\n                                }\n\n                                var data = $('motors_group').serialize(true);\n                                data.items = self.getGridMassActionObj().checkedString.split(',');\n                                data.type = EbayListingViewSettingsMotorsObj.motorsType;\n                                data.mode = M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Motor_Group::MODE_ITEM');\n\n                                var items = {};\n                                data.items.each(function (item) {\n                                    items[item] = self.savedNotes[item];\n                                });\n\n                                data.items = Object.toQueryString(items);\n\n                                new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/saveAsGroup'), {\n                                    method: 'post',\n                                    parameters: data,\n                                    onSuccess: function (transport) {\n\n                                        if (transport.responseText == '0') {\n                                            self.unselectAll();\n                                            $(self.getGridMassActionObj().select).value = '';\n\n                                            EbayListingViewSettingsMotorsAddGroupGridObj.unselectAllAndReload();\n                                        }\n\n                                        self.groupPopup.modal('closeModal');\n                                    }\n                                });\n                            }\n                        }]\n                    }, self.groupPopup);\n\n                    self.groupPopup.modal('openModal');\n\n                    self.initFormValidation('#motors_group');\n                }\n            });\n        },\n\n        //##################################\n\n        saveFilter: function () {\n            var self = this;\n\n            if ($('save_filter_btn').hasClassName('disabled')) {\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/getSaveFilterForm'), {\n                method: 'get',\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_settings_motors_save_filter');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"ebay_settings_motors_save_filter\"></div>'});\n                    $('ebay_settings_motors_save_filter').insert({bottom: transport.responseText});\n\n                    self.filterPopup = jQuery('#ebay_settings_motors_save_filter');\n\n                    modal({\n                        title: M2ePro.translator.translate('Save Filter'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.filterPopup.modal('closeModal');\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Save'),\n                            class: 'action-primary',\n                            click: function () {\n                                if (!self.validatePopupForm('motors_filter')) {\n                                    return;\n                                }\n\n                                var data = $('motors_filter').serialize(true);\n                                data.conditions = Form.serialize($(self.gridId).down('.data-grid-filters'));\n                                data.type = EbayListingViewSettingsMotorsObj.motorsType;\n\n                                new Ajax.Request(M2ePro.url.get('ebay_listing_settings_motors/saveFilter'), {\n                                    method: 'post',\n                                    parameters: data,\n                                    onSuccess: function (transport) {\n\n                                        if (transport.responseText == '0') {\n                                            $(self.getGridMassActionObj().select).value = '';\n\n                                            EbayListingViewSettingsMotorsAddFilterGridObj.unselectAllAndReload();\n                                        }\n\n                                        self.filterPopup.modal('closeModal');\n                                    }\n                                });\n                            }\n                        }]\n                    }, self.filterPopup);\n\n                    self.filterPopup.modal('openModal');\n\n                    var conditionsEl = $('ebay_settings_motors_save_filter').down('.filter_conditions');\n                    var conditionsData = {};\n                    $(self.gridId).down('.data-grid-filters').select('select', 'input').each(function (el) {\n\n                        if (el.name == 'massaction') {\n                            return;\n                        }\n\n                        if (el.value != '') {\n                            var li = new Element('li'),\n                                valueText = '',\n                                valueName = el.name.capitalize().replace('_', ' ');\n\n                            if (el.name == 'product_type') {\n                                valueText = el[el.selectedIndex].text;\n                                valueName = M2ePro.translator.translate('Type');\n                            } else {\n                                valueText = el.value;\n                            }\n\n                            if (el.name == 'epid') {\n                                valueName = M2ePro.translator.translate('ePID');\n                            }\n\n                            if (el.name == 'ktype') {\n                                valueName = M2ePro.translator.translate('kType');\n                            }\n\n                            if (el.name == 'body_style') {\n                                valueName = M2ePro.translator.translate('Body Style');\n                            }\n\n                            if (el.name == 'year[from]') {\n                                valueName = M2ePro.translator.translate('Year From');\n                            }\n\n                            if (el.name == 'year[to]') {\n                                valueName = M2ePro.translator.translate('Year To');\n                            }\n\n                            li.update('<b>' + valueName + '</b>: ' + valueText);\n\n                            conditionsData[el.name] = el.value;\n\n                            conditionsEl.insert({bottom: li});\n                        }\n                    });\n\n                    self.initFormValidation('#motors_filter');\n                }\n            });\n        },\n\n        validatePopupForm: function (formId) {\n\n            return jQuery('#' + formId).valid();\n\n        },\n\n        //##################################\n\n        showFilterResult: function (comnditions) {\n            var self = this;\n\n            $(self.gridId).down('.data-grid-filters').select('input', 'select').each(function (el) {\n                el.value = '';\n            });\n\n            $H(comnditions).each(function (item) {\n                $(self.gridId).down('.data-grid-filters').select('[name^=' + item.key + ']').each(function (el) {\n                    if (item.key != 'year') {\n                        el.value = item.value;\n                        return null;\n                    }\n\n                    if (typeof item.value == 'string') {\n                        el.value = item.value;\n                        return null;\n                    }\n\n                    $(self.gridId).down('.data-grid-filters').down('[name=year[from]]').value = item.value.from;\n                    $(self.gridId).down('.data-grid-filters').down('[name=year[to]]').value = item.value.to;\n\n                });\n            });\n\n            self.getGridObj().doFilter();\n        },\n\n        //##################################\n\n        massactionOnChange: function(event)\n        {\n            if (event.target.value != 'selectAll'){\n                return true;\n            }\n\n            var gridIds = this.getGridMassActionObj().getGridIds().split(',');\n            if (gridIds.length < M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Motors::MAX_ITEMS_COUNT_FOR_ATTRIBUTE')) {\n                return true;\n            }\n\n            this.alert(M2ePro.translator.translate('It is impossible to select all the items.'));\n\n            event.stopImmediatePropagation();\n            event.target.value = '';\n        }\n\n        //##################################\n    });\n});","Ess_M2ePro/js/Ebay/Listing/View/Ebay/Bids.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Action'\n], function(modal, MessageObj) {\n\n    window.EbayListingViewEbayBids = Class.create(Action, {\n\n        // ---------------------------------------\n\n        initialize: function ($super, gridHandler) {\n            var self = this;\n\n            $super(gridHandler);\n\n        },\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function (options) {\n            this.options = Object.extend(this.options, options);\n            return this;\n        },\n\n        // ---------------------------------------\n\n        parseResponse: function (response) {\n            if (!response.responseText.isJSON()) {\n                return;\n            }\n\n            return response.responseText.evalJSON();\n        },\n\n        // ---------------------------------------\n\n        openPopUp: function (productId, title) {\n            var self = this;\n\n            MessageObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing/getListingProductBids'), {\n                method: 'post',\n                parameters: {\n                    product_id: productId\n                },\n                onSuccess: function (transport) {\n\n                    var containerEl = $('ebay_listing_product_bids');\n\n                    if (containerEl) {\n                        containerEl.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"ebay_listing_product_bids\"></div>'});\n                    $('ebay_listing_product_bids').update(transport.responseText);\n\n                    self.listingProductBidsPopup = jQuery('#ebay_listing_product_bids');\n\n                    modal({\n                        title: title,\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                self.listingProductBidsPopup.modal('closeModal')\n                            }\n                        }]\n                    }, self.listingProductBidsPopup);\n\n                    self.listingProductBidsPopup.modal('openModal');\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/View/Ebay/Grid.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Ebay/Listing/View/Grid'\n], function (modal, MessageObj) {\n\n    window.EbayListingViewEbayGrid = Class.create(EbayListingViewGrid, {\n\n        // ---------------------------------------\n\n        afterInitPage: function($super)\n        {\n            $super();\n\n            $(this.gridId+'_massaction-select').observe('change', function() {\n                if (!$('get-estimated-fee')) {\n                    return;\n                }\n\n                if (this.value == 'list') {\n                    $('get-estimated-fee').show();\n                } else {\n                    $('get-estimated-fee').hide();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        getMaxProductsInPart: function()\n        {\n            return 10;\n        },\n\n        // ---------------------------------------\n\n        getLogViewUrl: function(rowId)\n        {\n            var idField = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Block\\\\Adminhtml\\\\Log\\\\Listing\\\\Product\\\\AbstractGrid::LISTING_PRODUCT_ID_FIELD');\n\n            var params = {};\n            params[idField] = rowId;\n\n            return M2ePro.url.get('ebay_log_listing_product/index', params);\n        },\n\n        // ---------------------------------------\n\n        openFeePopUp: function(content, title)\n        {\n            var feePopup = $('fee_popup');\n\n            if (feePopup) {\n                feePopup.remove();\n            }\n\n            $('html-body').insert({bottom: '<div id=\"fee_popup\"></div>'});\n\n            $('fee_popup').update(content);\n\n            var popup = jQuery('#fee_popup');\n\n            modal({\n                title: title,\n                type: 'popup',\n                buttons: [{\n                    text: M2ePro.translator.translate('Close'),\n                    class: 'action-secondary',\n                    click: function () {\n                        popup.modal('closeModal');\n                    }\n                }]\n            }, popup);\n\n            popup.modal('openModal');\n        },\n\n        getEstimatedFees: function(listingProductId)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing/getEstimatedFees'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    listing_product_id: listingProductId\n                },\n                onSuccess: function(transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (response.error) {\n                        self.alert('Unable to receive estimated fee.');\n                        return;\n                    }\n\n                    self.openFeePopUp(response.html, response.title);\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        openItemDuplicatePopUp: function(listingProductId)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_product_duplicate/getPopup'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    listing_product_id: listingProductId\n                },\n                onSuccess: function(transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (response.error) {\n                        self.alert(response.error);\n                        return;\n                    }\n\n                    var duplicatePopup = $('duplicate_popup');\n\n                    if (duplicatePopup) {\n                        duplicatePopup.remove();\n                    }\n\n                    $('html-body').insert({bottom: '<div id=\"duplicate_popup\"></div>'});\n\n                    $('duplicate_popup').update(response.html);\n\n                    var popup = jQuery('#duplicate_popup');\n\n                    modal({\n                        title: M2ePro.translator.translate('Ebay Item Duplicate'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Close'),\n                            class: 'action-secondary',\n                            click: function () {\n                                popup.modal('closeModal');\n                            }\n                        }]\n                    }, popup);\n\n                    popup.modal('openModal');\n                }\n            });\n        },\n\n        closeItemDuplicatePopUp: function(reloadGrid)\n        {\n            reloadGrid = reloadGrid || false;\n            reloadGrid && this.getGridObj().reload();\n\n            jQuery('#duplicate_popup').modal('closeModal')\n        },\n\n        solveItemDuplicateAction: function(listingProductId, isNeedStop, isNeedList)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_product_duplicate/solve'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    listing_product_id:   listingProductId,\n                    stop_duplicated_item: Number(isNeedStop),\n                    list_current_item:    Number(isNeedList)\n                },\n                onSuccess: function(transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    MessageObj.setContainer('#ebay_listing_item_duplicate_fieldset');\n                    MessageObj.clear();\n\n                    if (response.message) {\n                        MessageObj.addErrorMessage(response.message);\n                    }\n\n                    if (response.result) {\n                        self.closeItemDuplicatePopUp(true);\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        showMotorsNotificationPopUp: function(message)\n        {\n            var content = '<div style=\"padding: 10px 0;\">'+message+'</div>' +\n                          '<div style=\"float: right;\">' +\n                            '<button onclick=\"Windows.getFocusedWindow().close()\">' +\n                              '<span>OK</span>' +\n                            '</button>' +\n                          '</div> ';\n            var config = {\n                draggable: true,\n                resizable: true,\n                closable: true,\n                className: \"magento\",\n                windowClassName: \"popup-window\",\n                title: M2ePro.translator.translate('Compatibility Attribute'),\n                top: 250,\n                height: 85,\n                width: 420,\n                zIndex: 100,\n                recenterAuto: true,\n                hideEffect: Element.hide,\n                showEffect: Element.show\n            };\n\n            Dialog.info(content, config);\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/Product/Add.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Common'\n], function (jQuery, modal) {\n    window.EbayListingProductAdd = Class.create(Common, {\n\n        // ---------------------------------------\n\n        options: {\n            show_autoaction_popup: false,\n\n            get_selected_products: function (callback) {}\n        },\n\n        // ---------------------------------------\n\n        initialize: function (options) {\n            this.options = Object.extend(this.options, options);\n        },\n\n        // ---------------------------------------\n\n        continue: function () {\n            var self = this;\n\n            self.options.get_selected_products(function (selectedProducts) {\n\n                if (!selectedProducts) {\n                    self.alert(M2ePro.translator.translate('Please select the Products you want to perform the Action on.'));\n                    return;\n                }\n\n                if (self.options.show_autoaction_popup) {\n                    return self.showAutoactionPopup();\n                }\n\n                self.add(selectedProducts);\n\n            });\n        },\n\n        // ---------------------------------------\n\n        add: function (products) {\n            var self = this;\n\n            self.products = products;\n\n            var parts = self.makeProductsParts();\n\n            ProgressBarObj.reset();\n            ProgressBarObj.setTitle('Adding Products to Listing');\n            ProgressBarObj.setStatus('Adding in process. Please wait...');\n            ProgressBarObj.show();\n            self.scrollPageToTop();\n\n            WrapperObj.lock();\n\n            self.sendPartsProducts(parts, parts.length);\n        },\n\n        makeProductsParts: function () {\n            var self = this;\n\n            var productsInPart = 50;\n            var productsArray = explode(',', self.products);\n            var parts = new Array();\n\n            if (productsArray.length < productsInPart) {\n                return parts[0] = productsArray;\n            }\n\n            var result = new Array();\n            for (var i = 0; i < productsArray.length; i++) {\n                if (result.length == 0 || result[result.length - 1].length == productsInPart) {\n                    result[result.length] = new Array();\n                }\n                result[result.length - 1][result[result.length - 1].length] = productsArray[i];\n            }\n\n            return result;\n        },\n\n        sendPartsProducts: function (parts, partsCount) {\n            var self = this;\n\n            if (parts.length == 0) {\n                return;\n            }\n\n            var part = parts.splice(0, 1);\n            part = part[0];\n            var partString = implode(',', part);\n\n            var isLastPart = '';\n            if (parts.length <= 0) {\n                isLastPart = 'yes';\n            }\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_product_add/add'), {\n                method: 'post',\n                parameters: {\n                    is_last_part: isLastPart,\n                    products: partString\n                },\n                onSuccess: function (transport) {\n\n                    var percents = (100 / partsCount) * (partsCount - parts.length);\n\n                    if (percents <= 0) {\n                        ProgressBarObj.setPercents(0, 0);\n                    } else if (percents >= 100) {\n                        ProgressBarObj.setPercents(100, 0);\n                        ProgressBarObj.setStatus('Adding has been completed.');\n\n                        setLocation(M2ePro.url.get('ebay_listing_product_category_settings', {step: 1}));\n                    } else {\n                        ProgressBarObj.setPercents(percents, 1);\n                    }\n\n                    setTimeout(function () {\n                        self.sendPartsProducts(parts, partsCount);\n                    }, 500);\n                }\n            });\n\n            $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n        },\n\n        // ---------------------------------------\n\n        showAutoactionPopup: function () {\n            new Ajax.Request(M2ePro.url.get('ebay_listing_product_add/setAutoActionPopupShown'), {\n                method: 'get',\n                onSuccess: function () {\n\n                    this.options.show_autoaction_popup = false;\n\n                    var modalDialogMessage = $('modal_auto_action_dialog_message');\n\n                    if (!modalDialogMessage) {\n                        modalDialogMessage = new Element('div', {\n                            id: 'modal_auto_action_dialog_message'\n                        });\n\n                        this.autoactionPopup = jQuery(modalDialogMessage).modal({\n                            title: M2ePro.translator.translate('Auto Add/Remove Rules'),\n                            type: 'popup',\n                            buttons: [\n                                {\n                                    text: M2ePro.translator.translate('Cancel'),\n                                    class: 'action-secondary action-dismiss',\n                                    click: ListingProductAddObj.cancelAutoActionPopup\n                                },\n                                {\n                                    text: M2ePro.translator.translate('Start Configure'),\n                                    class: 'action-primary action-accept',\n                                    click: function () {\n                                        ListingProductAddObj.autoactionPopup.modal('closeModal');\n                                        ListingAutoActionObj.loadAutoActionHtml();\n                                    }\n                                }\n                            ]\n                        });\n                        modalDialogMessage.insert($('autoaction_popup_content').show());\n                    }\n\n                    this.autoactionPopup.modal('openModal');\n\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        cancelAutoActionPopup: function () {\n            ListingProductAddObj.autoactionPopup.modal('closeModal');\n            ListingProductAddObj.continue();\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/Product/Category/Settings/Specific.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    window.EbayListingProductCategorySettingsSpecific = Class.create();\n    EbayListingProductCategorySettingsSpecific.prototype = Object.extend(new Common(), {\n\n        // ---------------------------------------\n\n        initialize: function (marketplaceId, categoryMode, categoryValue, uniqId) {\n            this.marketplaceId = marketplaceId;\n            this.categoryMode = categoryMode;\n            this.categoryValue = categoryValue;\n\n            this.maxSelectedSpecifics = 25;\n\n            this.valuesCounter = 0;\n            this.counter = 0;\n            this.uniqId = uniqId || '';\n\n            this.attributes = [];\n            this.attributeOptions = '';\n\n            this.dictionarySpecifics = [];\n            this.ebaySelectedSpecifics = [];\n            this.customSelectedSpecifics = [];\n\n            this.specificsJson = [];\n        },\n\n        // ---------------------------------------\n\n        setAttributes: function (attributes) {\n            this.attributes = attributes;\n            return this;\n        },\n\n        // ---------------------------------------\n\n        setDictionarySpecifics: function (specifics) {\n            this.dictionarySpecifics = specifics;\n            return this;\n        },\n\n        setEbaySelectedSpecifics: function (specifics) {\n            this.ebaySelectedSpecifics = specifics;\n            return this;\n        },\n\n        setCustomSelectedSpecifics: function (specifics) {\n            this.customSelectedSpecifics = specifics;\n            return this;\n        },\n\n        // ---------------------------------------\n\n        getItemSpecifics: function () {\n            var self = this;\n\n            var parameters = $(self.uniqId + 'category_specific_form').serialize(true);\n\n            new Ajax.Request(M2ePro.url.get('ebay_category/getJsonSpecificsFromPost'), {\n                method: 'post',\n                asynchronous: false,\n                parameters: parameters,\n                onSuccess: function (transport) {\n                    if (transport.responseText.length != 0) {\n                        self.specificsJson = transport.responseText.evalJSON();\n                    }\n                }\n            });\n\n            return self.specificsJson;\n        },\n\n        getInternalData: function () {\n            var self = this;\n\n            var internalData = $(self.uniqId + 'category_specific_form').serialize(true);\n            internalData['specifics'] = self.getItemSpecifics();\n\n            return internalData;\n        },\n\n        // ---------------------------------------\n\n        prepareAttributes: function () {\n            var cachedOptions = '';\n            this.attributes.each(function (v) {\n                cachedOptions += '<option value=\"' + v.code + '\">' + v.label + '</option>\\n';\n            });\n\n            this.attributeOptions = cachedOptions;\n        },\n\n        // ---------------------------------------\n\n        prepareBeforeRenderSpecifics: function () {\n            if (this.categoryMode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category::CATEGORY_MODE_EBAY')) {\n                $(this.uniqId + 'item_specifics_tbody').innerHTML = '';\n\n                if ($$('#' + this.uniqId + 'item_specifics_tbody .not-custom').length > 0) {\n                    $$('#' + this.uniqId + 'item_specifics_tbody .not-custom').invoke('show');\n                }\n            } else {\n                $$('#' + this.uniqId + 'item_specifics_tbody .not-custom').invoke('hide');\n            }\n\n            $(this.uniqId + 'add_custom_container').show();\n\n            this.prepareAttributes();\n            this.clearSpecifics();\n\n            if ((this.dictionarySpecifics.length == 0) &&\n                (this.customSelectedSpecifics.length == 0)) {\n                $(this.uniqId + 'item_specifics_tbody').hide();\n                return false;\n            }\n\n            return true;\n        },\n\n        renderSpecifics: function () {\n            if (!this.prepareBeforeRenderSpecifics()) {\n                return;\n            }\n\n            this.renderDictionarySpecific();\n            this.renderCustomSelectedSpecifics();\n\n            $(this.uniqId + 'item_specifics_tbody').show();\n        },\n\n        renderDictionarySpecific: function () {\n            var self = this;\n\n            self.dictionarySpecifics.each(function (specific) {\n\n                var counter = self.counter;\n                var recommendedOptionsHtml = '';\n\n                self.addDictionarySpecificRow(specific);\n\n                if (typeof specific.min_values != 'undefined') {\n                    for (var i = 1; i < specific.min_values; i++) {\n                        self.addSpecificCustomValueRow(counter);\n                    }\n                }\n\n                for (var i = 0; i < specific.values.length; i++) {\n                    var recommended = specific.values[i];\n                    recommendedOptionsHtml += '<option value=\"%value%\">%label%</option>'\n                        .replace(/%value%/, base64_encode(recommended.value))\n                        .replace(/%label%/, recommended.value);\n                }\n\n                $(self.uniqId + 'item_specifics_value_ebay_recommended_' + counter).insert(recommendedOptionsHtml);\n                $(self.uniqId + 'item_specifics_value_ebay_recommended_' + counter).selectedIndex = -1;\n\n                $(self.uniqId + 'item_specifics_value_custom_attribute_' + counter).insert(self.attributeOptions);\n\n                var handlerObj = new AttributeCreator(self.uniqId + 'item_specifics_value_custom_attribute_' + counter);\n                handlerObj.setSelectObj($(self.uniqId + 'item_specifics_value_custom_attribute_' + counter));\n                handlerObj.injectAddOption();\n\n                var specificValueMode = $(self.uniqId + 'item_specifics_value_mode_' + counter);\n\n                if (specific.required) {\n                    if (specificValueMode.select('option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_NONE') + '\"]').length > 0) {\n                        specificValueMode.select('option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_NONE') + '\"]')[0].remove();\n                    }\n\n                    specificValueMode.select('option')[0].selected = 1;\n                }\n\n                if (specific.type == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::RENDER_TYPE_TEXT')) {\n                    specificValueMode.select('option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_EBAY_RECOMMENDED') + '\"]')[0].remove();\n                }\n\n                if (specific.type == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::RENDER_TYPE_SELECT_ONE') ||\n                    specific.type == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::RENDER_TYPE_SELECT_MULTIPLE')) {\n                    specificValueMode.select('option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_VALUE') + '\"]')[0].remove();\n                }\n\n                if (specific.type == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::RENDER_TYPE_SELECT_MULTIPLE') ||\n                    specific.type == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::RENDER_TYPE_SELECT_MULTIPLE_OR_TEXT')) {\n                    $(self.uniqId + 'item_specifics_value_ebay_recommended_' + counter).writeAttribute('multiple', 'true');\n                    $(self.uniqId + 'item_specifics_value_ebay_recommended_' + counter).addClassName('select multiselect admin__control-multiselect');\n                    $(self.uniqId + 'item_specifics_value_ebay_recommended_' + counter).removeClassName('admin__control-select');\n\n                    var tempOldName = $(self.uniqId + 'item_specifics_value_ebay_recommended_' + counter).readAttribute('name');\n                    $(self.uniqId + 'item_specifics_value_ebay_recommended_' + counter).writeAttribute('name', tempOldName + '[]');\n                }\n\n                if (specific.values.length < 1) {\n                    if (specific.type == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::RENDER_TYPE_SELECT_ONE_OR_TEXT') ||\n                        specific.type == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::RENDER_TYPE_SELECT_MULTIPLE_OR_TEXT')) {\n                        specificValueMode.select('option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_EBAY_RECOMMENDED') + '\"]')[0].remove();\n                    }\n                }\n\n                self.chooseEbaySelectedSpecifics(specific, counter);\n\n                self.dictionarySpecificModeChange($(self.uniqId + 'item_specifics_value_mode_' + counter));\n\n                var length = $$('#' + self.uniqId + 'item_specifics_custom_value_tbody_' + counter + ' tr').length;\n\n                if (typeof specific.min_values != 'undefined' && typeof specific.max_values != 'undefined') {\n                    if (specific.max_values > length) {\n                        $(self.uniqId + 'add_item_specifics_custom_value_button_' + counter).show();\n                    } else {\n                        $(self.uniqId + 'add_item_specifics_custom_value_button_' + counter).hide();\n                    }\n\n                    if (length == 1 || specific.min_values >= length) {\n                        $$('#' + self.uniqId + 'item_specifics_custom_value_tbody_' + counter + ' tr td.btn_value_remove').invoke('hide');\n                    } else {\n                        $$('#' + self.uniqId + 'item_specifics_custom_value_tbody_' + counter + ' tr td.btn_value_remove').invoke('show');\n                    }\n\n                } else {\n                    if (specific.type == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::RENDER_TYPE_SELECT_MULTIPLE') ||\n                        specific.type == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::RENDER_TYPE_SELECT_MULTIPLE_OR_TEXT')) {\n                        $(self.uniqId + 'add_item_specifics_custom_value_button_' + counter).show();\n                    }\n\n                    if (length == 1) {\n                        $$('#' + self.uniqId + 'item_specifics_custom_value_tbody_' + counter + ' tr td.btn_value_remove').invoke('hide');\n                    } else {\n                        $$('#' + self.uniqId + 'item_specifics_custom_value_tbody_' + counter + ' tr td.btn_value_remove').invoke('show');\n                    }\n                }\n            });\n\n        },\n\n        renderCustomSelectedSpecifics: function () {\n            var self = this;\n\n            this.customSelectedSpecifics.each(function (specific) {\n\n                var counter = self.counter;\n\n                self.addCustomSpecificRow();\n\n                $$('#' + self.uniqId + 'custom_item_specifics_value_mode_' + counter + ' option[value=\"' + specific.value_mode + '\"]')[0].selected = true;\n                self.customSelectedSpecificChange($(self.uniqId + 'custom_item_specifics_value_mode_' + counter));\n\n                if (specific.value_mode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_VALUE')) {\n                    $(self.uniqId + 'custom_item_specifics_label_custom_value_' + counter).value = specific.attribute_title;\n\n                    if (typeof $$('#' + self.uniqId + 'item_specifics_custom_value_tbody_' + counter + ' input.item-specific')[0] == 'undefined') {\n                        self.addSpecificCustomValueRow(counter);\n                    }\n\n                    $$('#' + self.uniqId + 'item_specifics_custom_value_tbody_' + counter + ' input.item-specific')[0]\n                        .setValue(specific.value_custom_value[0]);\n                }\n\n                if (specific.value_mode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_ATTRIBUTE')) {\n                    if ($$('#' + self.uniqId + 'item_specifics_value_custom_attribute_' + counter + ' option[value=\"' + specific.value_custom_attribute + '\"]').length > 0) {\n                        $$('#' + self.uniqId + 'item_specifics_value_custom_attribute_' + counter + ' option[value=\"' + specific.value_custom_attribute + '\"]')[0].selected = true;\n                    } else {\n                        $(self.uniqId + 'item_specifics_value_custom_attribute_' + counter).selectedIndex = -1;\n                    }\n                }\n\n                if (specific.value_mode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_LABEL_ATTRIBUTE')) {\n                    $(self.uniqId + 'custom_item_specifics_label_custom_label_attribute_' + counter).value = specific.attribute_title;\n                    if ($$('#' + self.uniqId + 'item_specifics_value_custom_attribute_' + counter + ' option[value=\"' + specific.value_custom_attribute + '\"]').length > 0) {\n                        $$('#' + self.uniqId + 'item_specifics_value_custom_attribute_' + counter + ' option[value=\"' + specific.value_custom_attribute + '\"]')[0].selected = true;\n                    } else {\n                        $(self.uniqId + 'item_specifics_value_custom_attribute_' + counter).selectedIndex = -1;\n                    }\n                }\n\n                self.customSelectedSpecificChange($(self.uniqId + 'custom_item_specifics_value_mode_' + counter));\n            });\n        },\n\n        renderAttributesWithEmptyOption: function (id, insertTo, value, notRequiried) {\n            var self = this;\n\n            var className = notRequiried ? '' : ' class=\"M2ePro-required-when-visible\"';\n            var txt = '<select name=\"' + id + '\" id=\"' + id + '\" ' + className + '>\\n';\n\n            txt += '<option class=\"empty\"></option>\\n';\n            txt += self.attributeOptions;\n\n            if ($(insertTo + '_note') != null && $$('#' + insertTo + '_note').length != 0) {\n                $(insertTo).innerHTML = txt + $(insertTo + '_note').innerHTML;\n            } else {\n                $(insertTo).innerHTML = txt;\n            }\n\n            self.checkAttributesSelect(id, value);\n        },\n\n        // ---------------------------------------\n\n        addDictionarySpecificRow: function (specific) {\n            var template = $(this.uniqId + 'specific_template').innerHTML;\n\n            template = template.replace(/%i%/g, this.counter);\n            template = template.replace(/%attribute_title%/g, specific.title);\n            template = template.replace(/%required%/g, specific.required ? '&nbsp;<span class=\"required\">*</span>' : '');\n            template = template.replace(/%relation_mode%/, M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::MODE_ITEM_SPECIFICS'));\n\n            if (typeof specific.min_values != 'undefined' && typeof specific.max_values != 'undefined') {\n                template = template.replace(/%min_values%/g, specific.min_values);\n                template = template.replace(/%max_values%/g, specific.max_values);\n            } else {\n                template = template.replace(/%min_values%/g, specific.required ? 1 : 0);\n                if (specific.type == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::RENDER_TYPE_SELECT_MULTIPLE') ||\n                    specific.type == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::RENDER_TYPE_SELECT_MULTIPLE_OR_TEXT')) {\n                    template = template.replace(/%max_values%/g, 30);\n                } else {\n                    template = template.replace(/%max_values%/g, 1);\n                }\n            }\n\n            $(this.uniqId + 'item_specifics_tbody').insert(template);\n\n            this.addSpecificCustomValueRow(this.counter);\n\n            ++this.counter;\n        },\n\n        addCustomSpecificRow: function () {\n            var template = $(this.uniqId + 'specific_template').innerHTML;\n\n            template = template.replace(/%i%/g, this.counter);\n            template = template.replace(/%attribute_title%%required%/g, '');\n            template = template.replace(/%relation_mode%/g, M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::MODE_CUSTOM_ITEM_SPECIFICS'));\n\n            template = template.replace(/%min_values%/g, 1);\n            template = template.replace(/%max_values%/g, 1);\n\n            $(this.uniqId + 'item_specifics_tbody').show();\n            $(this.uniqId + 'item_specifics_tbody').insert(template);\n\n            this.addSpecificCustomValueRow(this.counter);\n\n            var selectId = this.uniqId + 'item_specifics_value_custom_attribute_' + this.counter;\n            $(selectId).insert(this.attributeOptions);\n\n            var handlerObj = new AttributeCreator(selectId);\n            handlerObj.setSelectObj($(selectId));\n            handlerObj.injectAddOption();\n\n            $(selectId).show();\n\n            $(this.uniqId + 'item_specifics_value_mode_' + this.counter).hide();\n            $(this.uniqId + 'attribute_title_' + this.counter).hide();\n            $(this.uniqId + 'custom_item_specifics_value_mode_' + this.counter).show();\n            $(this.uniqId + 'custom_item_specific_remove_button_' + this.counter).show();\n            $(this.uniqId + 'specific_' + this.counter + '_row').removeClassName('not-custom');\n\n            this.checkSpecificsCounter($(this.uniqId + 'custom_item_specifics_value_mode_' + this.counter));\n\n            ++this.counter;\n        },\n\n        addSpecificCustomValueRow: function (generalCounter) {\n            var template = $(this.uniqId + 'specific_custom_value_template').innerHTML;\n            template = template.replace(/%i%/g, generalCounter);\n            template = template.replace(/%position%/g, this.valuesCounter);\n\n            $(this.uniqId + 'item_specifics_custom_value_tbody_' + generalCounter).insert(template);\n\n            ++this.valuesCounter;\n        },\n\n        addItemSpecificsCustomValueRow: function (button) {\n            var generalCounter = parseInt(button.getAttribute('data-counter'));\n            var tbody = $(this.uniqId + 'item_specifics_custom_value_tbody_' + generalCounter);\n\n            this.addSpecificCustomValueRow(generalCounter);\n\n            var valuesCounter = tbody.childElements().length;\n\n            if (parseInt(tbody.getAttribute('data-max_values')) > valuesCounter) {\n                button.show();\n            } else {\n                button.hide();\n            }\n\n            if (parseInt(tbody.getAttribute('data-min_values')) >= valuesCounter) {\n                $$('#' + this.uniqId + 'item_specifics_custom_value_tbody_' + generalCounter + ' tr td.btn_value_remove').invoke('hide');\n            } else {\n                $$('#' + this.uniqId + 'item_specifics_custom_value_tbody_' + generalCounter + ' tr td.btn_value_remove').invoke('show');\n            }\n        },\n\n        // ---------------------------------------\n\n        chooseEbaySelectedSpecifics: function (specific, counter) {\n            var self = this;\n\n            self.ebaySelectedSpecifics.each(function (selectedSpecific) {\n\n                if (selectedSpecific.attribute_title != specific.title || !selectedSpecific.value_data) {\n                    return;\n                }\n\n                if (selectedSpecific.value_mode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_NONE')) {\n                    $$('#' + self.uniqId + 'item_specifics_value_mode_' + counter + ' option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_NONE') + '\"]')[0].selected = true;\n                }\n\n                if (selectedSpecific.value_mode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_EBAY_RECOMMENDED')) {\n                    $$('#' + self.uniqId + 'item_specifics_value_mode_' + counter + ' option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_EBAY_RECOMMENDED') + '\"]')[0].selected = true;\n                    $$('#' + self.uniqId + 'item_specifics_value_ebay_recommended_' + counter + ' option').each(function (tempOption) {\n\n                        for (var i = 0; i < selectedSpecific.value_data.length; i++) {\n                            var tempSearchValue = base64_encode(selectedSpecific.value_data[i]);\n                            if (tempOption.value == tempSearchValue) {\n                                tempOption.selected = true;\n                            }\n                        }\n                    });\n                }\n\n                if (selectedSpecific.value_mode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_VALUE')) {\n                    $$('#' + self.uniqId + 'item_specifics_value_mode_' + counter + ' option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_VALUE') + '\"]')[0].selected = true;\n\n                    var length = selectedSpecific.value_data.length;\n                    for (var i = 0; i < length; i++) {\n\n                        if (typeof $$('#' + self.uniqId + 'item_specifics_custom_value_tbody_' + counter + ' input.item-specific')[i] == 'undefined') {\n                            self.addSpecificCustomValueRow(counter);\n                        }\n\n                        $$('#' + self.uniqId + 'item_specifics_custom_value_tbody_' + counter + ' input.item-specific')[i]\n                            .setValue(selectedSpecific.value_data[i]);\n                    }\n                }\n\n                if (selectedSpecific.value_mode == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_ATTRIBUTE')) {\n                    if ($$('#' + self.uniqId + 'item_specifics_value_custom_attribute_' + counter + ' option[value=\"' + selectedSpecific.value_data + '\"]').length != 0) {\n                        $$('#' + self.uniqId + 'item_specifics_value_mode_' + counter + ' option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_ATTRIBUTE') + '\"]')[0].selected = true;\n                        $$('#' + self.uniqId + 'item_specifics_value_custom_attribute_' + counter + ' option[value=\"' + selectedSpecific.value_data + '\"]')[0].selected = true;\n                    } else if ($$('#' + self.uniqId + 'item_specifics_value_mode_' + counter + ' option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_NONE') + '\"]').length > 0) {\n                        $$('#' + self.uniqId + 'item_specifics_value_mode_' + counter + ' option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_NONE') + '\"]')[0].selected = true;\n                    } else if ($$('#' + self.uniqId + 'item_specifics_value_mode_' + counter + ' option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_EBAY_RECOMMENDED') + '\"]').length > 0) {\n                        $$('#' + self.uniqId + 'item_specifics_value_mode_' + counter + ' option[value=\"' + M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_EBAY_RECOMMENDED') + '\"]')[0].selected = true;\n                    }\n                }\n            });\n        },\n\n        dictionarySpecificModeChange: function (select) {\n            var self = this;\n            var number = select.id.replace(self.uniqId + 'item_specifics_value_mode_', '');\n\n            $(self.uniqId + 'item_specifics_value_ebay_recommended_' + number,\n                self.uniqId + 'item_specifics_custom_value_' + number,\n                self.uniqId + 'item_specifics_value_custom_attribute_' + number,\n                self.uniqId + 'custom_item_specifics_label_custom_attribute_' + number\n            ).invoke('hide');\n\n            $(self.uniqId + 'attribute_title_' + number).show();\n\n            if (select.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_EBAY_RECOMMENDED')) {\n                $(self.uniqId + 'item_specifics_value_ebay_recommended_' + number).show();\n            }\n            if (select.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_VALUE')) {\n                $(self.uniqId + 'item_specifics_custom_value_' + number).show();\n            }\n            if (select.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_ATTRIBUTE')) {\n                $(self.uniqId + 'attribute_title_' + number).show();\n                $(self.uniqId + 'custom_item_specifics_label_custom_attribute_' + number).hide();\n                $(self.uniqId + 'item_specifics_value_custom_attribute_' + number).show();\n            }\n\n            this.checkSpecificsCounter(select);\n            select.up('td').next('td').select('.validation-advice').each(Element.hide);\n        },\n\n        customSelectedSpecificChange: function (select) {\n            var self = this;\n            var number = select.id.replace(self.uniqId + 'custom_item_specifics_value_mode_', '');\n\n            $(self.uniqId + 'item_specifics_custom_value_' + number,\n                self.uniqId + 'item_specifics_value_custom_attribute_' + number,\n                self.uniqId + 'item_specifics_value_ebay_recommended_' + number).invoke('hide');\n\n            $(self.uniqId + 'custom_item_specifics_label_custom_value_' + number,\n                self.uniqId + 'custom_item_specifics_label_custom_label_attribute_' + number,\n                self.uniqId + 'custom_item_specifics_label_custom_attribute_' + number).invoke('hide');\n\n            if (select.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_VALUE')) {\n                $(self.uniqId + 'item_specifics_custom_value_' + number).show();\n                $(self.uniqId + 'custom_item_specifics_label_custom_value_' + number).show();\n            }\n            if (select.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_ATTRIBUTE')) {\n                $(self.uniqId + 'custom_item_specifics_label_custom_attribute_' + number).show();\n                $(self.uniqId + 'item_specifics_value_custom_attribute_' + number).show();\n            }\n            if (select.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_CUSTOM_LABEL_ATTRIBUTE')) {\n                $(self.uniqId + 'custom_item_specifics_label_custom_label_attribute_' + number).show();\n                $(self.uniqId + 'item_specifics_value_custom_attribute_' + number).show();\n            }\n\n            this.checkSpecificsCounter(select);\n            select.up('td').next('td').select('.validation-advice').each(Element.hide);\n        },\n\n        // ---------------------------------------\n\n        validate: function () {\n            if ($$('.' + this.uniqId + 'not-none').length > this.maxSelectedSpecifics) {\n                $(this.uniqId + 'maximum_specifics_error').show();\n                return false;\n            }\n            var form = jQuery('#' + this.uniqId + 'category_specific_form');\n            this.initFormValidation(form);\n\n            return form.valid();\n        },\n\n        checkAttributesSelect: function (id, value) {\n            if ($(id)) {\n                if (typeof M2ePro.formData[id] != 'undefined') {\n                    $(id).value = M2ePro.formData[id];\n                }\n                if (value) {\n                    $(id).value = value;\n                }\n            }\n        },\n\n        checkSpecificsCounter: function (select) {\n            $(this.uniqId + 'maximum_specifics_error').hide();\n\n            if (select != null) {\n                if (select.value == M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category_Specific::VALUE_MODE_NONE')) {\n                    select.removeClassName(this.uniqId + 'not-none');\n                } else {\n                    select.addClassName(this.uniqId + 'not-none');\n                }\n            }\n\n            if ($$('.' + this.uniqId + 'not-none').length >= this.maxSelectedSpecifics) {\n                $(this.uniqId + 'add_custom_container').hide();\n            } else {\n                $(this.uniqId + 'add_custom_container').show();\n            }\n        },\n\n        // ---------------------------------------\n\n        reload: function () {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_category/getSpecificHtml'), {\n                method: 'post',\n                parameters: {\n                    marketplace_id: self.marketplaceId,\n                    category_mode: self.categoryMode,\n                    category_value: self.categoryValue,\n                    unique_id: self.uniqId,\n                    attributes: self.attributes.join(','),\n                    internal_data: $(self.uniqId + 'category_specific_form').serialize(true)\n                },\n                onSuccess: function (transport) {\n                    $('category_specific_box' + self.uniqId).innerHTML = transport.responseText;\n                }\n            });\n        },\n\n        submitData: function (url) {\n            var self = this;\n\n            if (!self.validate()) {\n                return;\n            }\n\n            var specificData = self.getInternalData();\n\n            self.postForm(url, {specific_data: Object.toJSON(specificData)});\n        },\n\n        // ---------------------------------------\n\n        clearSpecifics: function () {\n            $$('#' + self.uniqId + 'item_specifics_tbody tr').each(Element.remove);\n        },\n\n        removeSpecific: function (button) {\n            $(button).up('tr').remove();\n            this.checkSpecificsCounter(null);\n        },\n\n        removeItemSpecificsCustomValue: function (button) {\n            var tbody = $(button).up('tbody'),\n                addBtn = $(button).up('table').next('a');\n\n            $(button).up('tr').remove();\n\n            var length = tbody.childElements().length;\n\n            if (parseInt(tbody.getAttribute('data-max_values')) > length) {\n                addBtn.show();\n            } else {\n                addBtn.hide();\n            }\n\n            if (length == 1 || parseInt(tbody.getAttribute('data-min_values')) >= length) {\n                var btnRemove = tbody.getElementsByClassName('btn_value_remove');\n                for (var i = 0; i < btnRemove.length; i++) {\n                    btnRemove[i].hide();\n                }\n            }\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Ebay/Listing/Product/Category/Settings/Mode.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal'\n], function (jQuery, modal) {\n\n    window.EbayListingProductCategorySettingsMode = Class.create();\n    EbayListingProductCategorySettingsMode.prototype = {\n\n        // ---------------------------------------\n\n        initialize: function (lastModeValue) {\n\n            $$('input[name=\"mode\"]').each(function(element) {\n                element.observe('change', function() {\n                    var modeSameRememberCheckbox = $('mode_same_remember_checkbox');\n                    modeSameRememberCheckbox.checked = false;\n                    modeSameRememberCheckbox.disabled = true;\n                    this.value == 'same' && (modeSameRememberCheckbox.disabled = false);\n                })\n            });\n\n            var modeElement = $$('input[value=\"'+lastModeValue+'\"]').shift();\n\n            modeElement.checked = true;\n            modeElement.simulate('change');\n\n            $('mode_same_remember_checkbox').observe('click', function(event) {\n\n                if (!this.checked) {\n                    return;\n                }\n\n                event.preventDefault();\n\n                var content = jQuery('#mode_same_remember_pop_up_content');\n\n                modal({\n                    title: M2ePro.translator.translate('Apply Settings'),\n                    type: 'popup',\n                    buttons: [{\n                        text: M2ePro.translator.translate('Cancel'),\n                        class: 'action-secondary action-dismiss',\n                        click: function () {\n                            content.modal('closeModal');\n                        }\n                    },{\n                        text: M2ePro.translator.translate('Continue'),\n                        class: 'action-primary action-accept',\n                        click: function () {\n                            $('categories_mode_form').submit();\n                        }\n                    }]\n                }, content);\n\n                content.modal('openModal');\n            });\n\n        },\n\n        // ---------------------------------------\n    };\n});","Ess_M2ePro/js/Ebay/Listing/Product/Category/Settings/Chooser.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Common',\n    'M2ePro/Plugin/Magento/AttributeCreator'\n], function (jQuery, modal) {\n\n    window.EbayListingProductCategorySettingsChooser = Class.create();\n    EbayListingProductCategorySettingsChooser.prototype = Object.extend(new Common(), {\n\n        // ---------------------------------------\n\n        marketplaceId: null,\n        accountId: null,\n        divId: null,\n\n        selectedCategories: {},\n        categoryTitles: {},\n        attributes: [],\n\n        selectCallback: null,\n        unselectCallback: null,\n        doneCallback: null,\n        cancelCallback: null,\n\n        isShowEditLinks: true,\n        categoriesRequiringValidation: {},\n\n        isSingleCategoryMode: false,\n        singleCategoryType: null,\n\n        tempUnselectedCategory: {},\n        tempSelectedCategory: {},\n\n        isWizardMode: false,\n\n        // ---------------------------------------\n\n        initialize: function (div, marketplace, account) {\n            this.marketplaceId = marketplace;\n            this.accountId = account;\n            this.divId = div;\n        },\n\n        // ---------------------------------------\n\n        setSelectCallback: function (callback) {\n            this.selectCallback = callback;\n        },\n\n        setUnselectCallback: function (callback) {\n            this.unselectCallback = callback;\n        },\n\n        getMarketplaceId: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            return self.marketplaceId;\n        },\n\n        getAccountId: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            return self.accountId;\n        },\n\n        setAttributes: function (attributes) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            self.attributes = attributes;\n        },\n\n        getAttributes: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            return self.attributes;\n        },\n\n        setSingleCategoryMode: function (mode) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            self.isSingleCategoryMode = mode;\n        },\n\n        setSingleCategoryType: function (type) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            self.singleCategoryType = type;\n        },\n\n        setShowEditLinks: function (mode) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            self.isShowEditLinks = mode;\n        },\n\n        setSelectedCategory: function (type, mode, value) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            self.selectedCategories[type] = {\n                mode: mode,\n                value: value\n            };\n        },\n\n        setSelectedCategories: function (categories) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            self.selectedCategories = categories;\n        },\n\n        getSelectedCategory: function (type) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            if (typeof type == 'undefined') {\n                return self.selectedCategories;\n            }\n\n            if (typeof self.selectedCategories[type] == 'undefined') {\n\n                return {mode: 0, value: ''};\n            }\n\n            return self.selectedCategories[type];\n        },\n\n        getInternalData: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            if (self.isSingleCategoryMode) {\n                return self.selectedCategories[self.singleCategoryType];\n            }\n\n            var internalData = {};\n\n            self.setCategoryToInternalData(\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_EBAY_MAIN'),\n                'category_main_',\n                internalData\n            );\n            self.setCategoryToInternalData(\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_EBAY_SECONDARY'),\n                'category_secondary_',\n                internalData\n            );\n            self.setCategoryToInternalData(\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_STORE_MAIN'),\n                'store_category_main_',\n                internalData\n            );\n            self.setCategoryToInternalData(\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_STORE_SECONDARY'),\n                'store_category_secondary_',\n                internalData\n            );\n\n            return internalData;\n        },\n\n        getInternalDataByType: function (type) {\n            var prefixByType = {};\n\n            prefixByType[M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_EBAY_MAIN')] = 'category_main_';\n            prefixByType[M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_EBAY_SECONDARY')] = 'category_secondary_';\n            prefixByType[M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_STORE_MAIN')] = 'store_category_main_';\n            prefixByType[M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_STORE_SECONDARY')] = 'store_category_secondary_';\n\n            var data = {};\n\n            this.setCategoryToInternalData(\n                type,\n                prefixByType[type],\n                data\n            );\n\n            return data;\n        },\n\n        getConvertedInternalData: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            return self.selectedCategories;\n        },\n\n        setCategoryToInternalData: function (type, prefix, data) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            data[prefix + 'mode'] = 0;\n            data[prefix + 'id'] = null;\n            data[prefix + 'attribute'] = null;\n\n            if (typeof self.selectedCategories[type] != 'undefined' &&\n                typeof self.selectedCategories[type]['mode'] != 'undefined') {\n\n                data[prefix + 'mode'] = self.selectedCategories[type].mode;\n\n                if (data[prefix + 'mode'] == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Category::CATEGORY_MODE_EBAY')) {\n                    data[prefix + 'id'] = self.selectedCategories[type].value;\n                } else if (data[prefix + 'mode'] == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Category::CATEGORY_MODE_ATTRIBUTE')) {\n                    data[prefix + 'attribute'] = self.selectedCategories[type].value;\n                }\n            }\n\n            return data;\n        },\n\n        getCategoryTitle: function (type) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            if (typeof self.categoryTitles[type] == 'undefined') {\n                return '';\n            }\n\n            return self.categoryTitles[type];\n        },\n\n        setCategoryTitles: function (titles) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            self.categoryTitles = titles;\n        },\n\n        setIsWizardMode: function (mode) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            self.isWizardMode = mode;\n        },\n\n        // ---------------------------------------\n\n        showEditPopUp: function (type) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n            var selected = self.getSelectedCategory(type);\n\n            new Ajax.Request(M2ePro.url.get('ebay_category/getChooserEditHtml'), {\n                method: 'post',\n                parameters: {\n                    marketplace_id: self.marketplaceId,\n                    account_id: self.accountId,\n                    category_type: type,\n                    selected_mode: selected.mode,\n                    selected_value: selected.value,\n                    selected_path: selected.path\n                },\n                onSuccess: function (transport) {\n                    var title = M2ePro.translator.translate('Edit') + ' ' + self.getCategoryTitle(type);\n\n                    self.openPopUp(title, transport.responseText);\n                    self.renderRecent();\n                    self.renderAttributes();\n                }\n            });\n        },\n\n        openPopUp: function (title, html) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            if ($('chooser_container')) {\n                $('chooser_container').remove();\n            }\n\n            $('html-body').insert({bottom: html});\n\n            var content = jQuery('#chooser_container');\n\n            modal({\n                title: title,\n                type: 'slide',\n                closed: function(){\n                    var type = $('category_type').value;\n\n                    delete self.tempSelectedCategory[type];\n                    delete self.tempUnselectedCategory[type];\n                },\n                buttons: [{\n                    text : M2ePro.translator.translate('Cancel'),\n                    click : function () {\n                        EbayListingProductCategorySettingsChooserObj.cancelPopUp();\n                    }\n                },{\n                    class : 'action primary',\n                    text : M2ePro.translator.translate('Confirm'),\n                    click : function () {\n                        EbayListingProductCategorySettingsChooserObj.confirmCategory();\n                    }\n                }]\n            }, content);\n\n            content.modal('openModal');\n        },\n\n        // ---------------------------------------\n\n        cancelPopUp: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            jQuery('#chooser_container').modal('closeModal');\n\n            if (typeof self.cancelCallback == 'function') {\n                self.cancelCallback();\n            }\n        },\n\n        // ---------------------------------------\n\n        selectCategory: function (mode, value) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            var type = $('category_type').value;\n\n            self.tempSelectedCategory[type] = {\n                mode: mode,\n                value: value\n            };\n            delete self.tempUnselectedCategory[type];\n\n            new Ajax.Request(M2ePro.url.get('ebay_category/getPath'), {\n                method: 'post',\n                parameters: {\n                    marketplace_id: self.marketplaceId,\n                    account_id: self.accountId,\n                    value: value,\n                    mode: mode,\n                    category_type: type\n                },\n                onSuccess: function (transport) {\n                    $('selected_category_path').innerHTML = transport.responseText;\n                    $('category_reset_link').show();\n                }\n            });\n        },\n\n        unSelectCategory: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            var type = $('category_type').value;\n            self.tempUnselectedCategory[type] = true;\n            delete self.tempSelectedCategory[type];\n\n            $('selected_category_path').innerHTML = '';\n            $('category_reset_link').hide();\n            $('selected_category_path').innerHTML = '<span style=\"color: grey; font-style: italic\">' + M2ePro.translator.translate('Not Selected') + '</span>';\n        },\n\n        isCategoryTemporarySelected: function (type) {\n            return typeof this.tempSelectedCategory[type] != 'undefined'\n                && typeof this.tempSelectedCategory[type].mode != 'undefined'\n                && this.tempSelectedCategory[type].mode != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Category::CATEGORY_MODE_NONE');\n        },\n\n        isCategoryTemporaryUnselected: function (type) {\n            return typeof this.tempUnselectedCategory[type] != 'undefined';\n        },\n\n        isCategorySelected: function (type) {\n            return typeof this.selectedCategories[type] != 'undefined'\n                && typeof this.selectedCategories[type].mode != 'undefined'\n                && this.selectedCategories[type].mode != M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Category::CATEGORY_MODE_NONE');\n        },\n\n        isCategoryValidationRequired: function (type) {\n            return typeof this.categoriesRequiringValidation[type] != 'undefined' && this.categoriesRequiringValidation[type];\n        },\n\n        confirmCategory: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n            var type = $('category_type').value;\n\n            $('category_validation').value = this.isCategoryTemporarySelected(type) ? 1 :\n                (this.isCategorySelected(type) && !this.isCategoryTemporaryUnselected(type)) ? 1 : '';\n\n            if (this.isCategoryValidationRequired(type) && !Validation.validate($('category_validation'))) {\n                return;\n            }\n\n            if (typeof self.tempSelectedCategory[type] != 'undefined') {\n                self.selectedCategories[type] = self.tempSelectedCategory[type];\n\n                if (type == 0 && this.selectCallback != null) {\n                    (this.selectCallback)(self.selectedCategories[type].mode, self.selectedCategories[type].value);\n                }\n            }\n\n            if (typeof self.tempUnselectedCategory[type] != 'undefined') {\n                delete self.selectedCategories[type];\n\n                if (this.unselectCallback != null) {\n                    (this.unselectCallback)();\n                }\n            }\n\n            delete self.tempSelectedCategory[type];\n            delete self.tempUnselectedCategory[type];\n\n            jQuery('#chooser_container').modal('closeModal');\n\n            self.reload();\n\n            if (typeof self.doneCallback == 'function') {\n                self.doneCallback();\n            }\n        },\n\n        reload: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            var selectedCategories = {};\n            var types = [\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_EBAY_MAIN'),\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_EBAY_SECONDARY'),\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_STORE_MAIN'),\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_STORE_SECONDARY')\n            ];\n\n            types.each(function (type) {\n                if (typeof self.selectedCategories[type] == 'undefined') {\n                    selectedCategories[type] = null;\n                } else {\n                    selectedCategories[type] = self.selectedCategories[type];\n                }\n            });\n\n            new Ajax.Request(M2ePro.url.get('ebay_category/getChooserHtml'), {\n                method: 'post',\n                asynchronous: false,\n                parameters: {\n                    marketplace_id: self.marketplaceId,\n                    account_id: self.accountId,\n                    div_id: self.divId,\n                    selected_categories: Object.toJSON(selectedCategories),\n                    is_single_category_mode: self.isSingleCategoryMode,\n                    single_category_type: self.singleCategoryType,\n                    is_show_edit_links: self.isShowEditLinks,\n                    select_callback: self.selectCallback,\n                    unselect_callback: self.unselectCallback\n                },\n                onSuccess: function (transport) {\n                    if ($(self.divId)) {\n                        $(self.divId).innerHTML = transport.responseText;\n                    }\n                }\n            });\n        },\n\n        reloadPopUp: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            var type = $('category_type').value;\n            self.showEditPopUp(type);\n        },\n\n        // ---------------------------------------\n\n        renderAttributes: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            if (!$('chooser_attributes_table')) {\n                return;\n            }\n\n            var handlerObj = new AttributeCreator('category_chooser_' + this.marketplaceId +'_'+ this.accountId +'_'+ this.divId);\n            handlerObj.setOnSuccessCallback(function(attributeParams, result) {\n\n                $$('#chooser_attributes_table tbody').first().update();\n\n                self.attributes.push({\n                    code:  attributeParams.code,\n                    label: attributeParams.store_label\n                });\n                self.renderAttributes();\n                self.selectCategory(M2ePro.php.constant('Ess_M2ePro_Model_Ebay_Template_Category::CATEGORY_MODE_ATTRIBUTE'), attributeParams.code);\n            });\n\n            handlerObj.setOnFailedCallback(function(attributeParams, result) {\n                self.alert(result['error']);\n            });\n\n            var totalHtml = '',\n                rowHtml   = '',\n                newAttrHtml = '<td style=\"color: brown\">'+M2ePro.translator.translate('Create a New One...')+'</td>' +\n                    '<td style=\"padding-left: 55px\"><a href=\"javascript:void(0)\" ' +\n                    'onclick=\"' + handlerObj.id + '.showPopup({\\'allowed_attribute_types\\':\\'text,select\\'});\">' +\n                    M2ePro.translator.translate('Select') + '</a></td>';\n\n            self.attributes.each(function (attribute, index) {\n\n                rowHtml += '<td>' + attribute.label + '</td>' +\n                    '<td style=\"padding-left: 55px\"><a href=\"javascript:void(0)\" ' +\n                    'onclick=\"EbayListingProductCategorySettingsChooserObj.selectCategory(' + M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Category::CATEGORY_MODE_ATTRIBUTE') + ', \\'' + attribute.code + '\\')\">' +\n                    M2ePro.translator.translate('Select') + '</a></td>';\n\n                if ((index + 1) == self.attributes.length && (index + 1) % 2 != 0) {\n                    rowHtml += newAttrHtml;\n                }\n\n                if (((index + 1) % 2 == 0) ||\n                    (index + 1) == self.attributes.length) {\n\n                    totalHtml += '<tr>' + rowHtml + '</tr>';\n                    rowHtml = '';\n                }\n\n                if ((index + 1) == self.attributes.length && (index + 1) % 2 == 0) {\n                    totalHtml += '<tr>' + newAttrHtml + '</tr>';\n                }\n            });\n\n            $$('#chooser_attributes_table tbody').first().insert(totalHtml);\n        },\n\n        renderRecent: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            if (!$('chooser_recent_table')) {\n                return;\n            }\n\n            var type = $('category_type').value;\n\n            var selected = null;\n            if (typeof self.selectedCategories[type] != \"undefined\" &&\n                self.selectedCategories[type].mode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Category::CATEGORY_MODE_EBAY')) {\n\n                selected = self.selectedCategories[type].value;\n            }\n\n            new Ajax.Request(M2ePro.url.get('ebay_category/getRecent'), {\n                method: 'post',\n                parameters: {\n                    marketplace: self.marketplaceId,\n                    account: self.accountId,\n                    selected_category: selected,\n                    category_type: type\n                },\n                onSuccess: function (transport) {\n\n                    var categories = transport.responseText.evalJSON();\n                    var html = '';\n\n                    if (transport.responseText.length > 2) {\n                        categories.each(function (category) {\n                            html += '<tr><td>' + category.path + '</td>' +\n                                '<td><a href=\"javascript:void(0)\" ' +\n                                'onclick=\"EbayListingProductCategorySettingsChooserObj.selectCategory(' + M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Category::CATEGORY_MODE_EBAY') + ', \\'' + category.id + '\\')\">' +\n                                M2ePro.translator.translate('Select') + '</a></td></tr>';\n                        });\n                    } else {\n                        html += '<tr><td colspan=\"2\" style=\"padding-left: 200px\"><strong>' + M2ePro.translator.translate('No recently used Categories') + '</strong></td></tr>';\n                    }\n\n                    $('chooser_recent_table').innerHTML = html;\n                }\n            });\n        },\n\n        search: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            var query = $('query').value;\n            if (query.length < 3) {\n                return;\n            }\n\n            var type = $('category_type').value;\n            $('chooser_search_results').innerHTML = '';\n\n            new Ajax.Request(M2ePro.url.get('ebay_category/search'), {\n                method: 'post',\n                parameters: {\n                    marketplace_id: self.marketplaceId,\n                    account_id: self.accountId,\n                    query: query,\n                    category_type: type\n                },\n                onSuccess: function (transport) {\n\n                    var html = '<table id=\"search_results_table\">';\n\n                    if (transport.responseText.length > 2) {\n                        var result = transport.responseText.evalJSON();\n                        result.each(function (category) {\n                            html += '<tr><td style=\"padding: 2px;\">';\n                            html += category.titles + ' (' + category.id + ')';\n                            html += '</td><td style=\"padding: 2px;\">';\n                            html += '<a href=\"javascript:void(0)\" ' +\n                                'onclick=\"EbayListingProductCategorySettingsChooserObj.selectCategory(' + M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Category::CATEGORY_MODE_EBAY') + ', ' + category.id + ')\">' +\n                                M2ePro.translator.translate('Select') + '</a>';\n                            html += '</td>';\n                        });\n                    } else {\n                        html += '<tr><td colspan=\"2\" style=\"text-align: center;\"><strong>' + M2ePro.translator.translate('No results') + '</strong></td></tr>';\n\n                        var refreshMessage = '';\n\n                        if (!self.isWizardMode) {\n\n                            if ($('category_type').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_EBAY_MAIN') ||\n                                $('category_type').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_EBAY_SECONDARY')\n                            ) {\n                                refreshMessage = M2ePro.translator.translate('Try to <a href=\"javascript:void(0)\" onclick=\"EbayListingProductCategorySettingsChooserObj.refreshEbayCategories()\">update Marketplaces Data</a> and repeate the Search.');\n                            } else {\n                                refreshMessage = M2ePro.translator.translate('Try to <a href=\"javascript:void(0)\" onclick=\"EbayListingProductCategorySettingsChooserObj.refreshStoreCategories()\">refresh eBay Store Data</a> and repeate the Search.');\n                            }\n                        }\n\n                        html += '<tr><td colspan=\"2\" style=\"text-align: center;\">' + refreshMessage + '</td></tr>';\n                    }\n\n                    html += '</table>';\n\n                    $('chooser_search_results').innerHTML = html;\n                }\n            });\n        },\n\n        searchReset: function () {\n            $('chooser_search_results').update();\n            $('query').value = '';\n            $('query').focus();\n        },\n\n        refreshStoreCategories: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            if (self.accountId == null) {\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('ebay_category/refreshStoreCategories'), {\n                method: 'post',\n                parameters: {\n                    account_id: self.accountId\n                },\n                onSuccess: function (transport) {\n\n                    EbayListingProductCategorySettingsChooserTabsBrowseObj.renderTopLevelCategories('chooser_browser');\n\n                    if ($('query').value.length != 0) {\n                        self.search();\n                    }\n                }\n            });\n        },\n\n        refreshEbayCategories: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n            var win = window.open(M2ePro.url.get('ebay_marketplace/index'));\n\n            var intervalId = setInterval(function () {\n                if (!win.closed) {\n                    return;\n                }\n\n                clearInterval(intervalId);\n\n                EbayListingProductCategorySettingsChooserTabsBrowseObj.renderTopLevelCategories('chooser_browser');\n\n                if ($('query').value.length != 0) {\n                    self.search();\n                }\n            }, 1000);\n        },\n\n        // ---------------------------------------\n\n        validate: function () {\n            var self = EbayListingProductCategorySettingsChooserObj;\n            var mainStore = false;\n\n            if ($$('#' + self.divId + ' .main-empty-advice').length <= 0) {\n                return true;\n            }\n\n            if ($$('.main-store-empty-advice').length > 0) {\n                mainStore = true;\n            }\n\n            $$('#' + self.divId + ' .main-empty-advice')[0].hide();\n            if (mainStore) {\n                $$('.main-store-empty-advice')[0].hide();\n            }\n\n            var typeEbayMain = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_EBAY_MAIN');\n            if (typeof self.selectedCategories[typeEbayMain] == 'undefined' ||\n                typeof self.selectedCategories[typeEbayMain]['mode'] == 'undefined' ||\n                self.selectedCategories[typeEbayMain]['mode'] == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Ebay\\\\Template\\\\Category::CATEGORY_MODE_NONE')) {\n\n                $$('#' + self.divId + ' .main-empty-advice')[0].show();\n                return false;\n            }\n\n            if (!mainStore) {\n                return true;\n            }\n\n            var primary = $('magento_block_ebay_listing_category_chooser_store_primary_not_selected') == null;\n            var secondary = $('magento_block_ebay_listing_category_chooser_store_secondary_not_selected') == null;\n\n            if (primary == false && secondary == true) {\n                $$('.main-store-empty-advice')[0].show();\n                return false;\n            }\n\n            return true;\n        },\n\n        // ---------------------------------------\n\n        keyPressQuery: function (event) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            if (event.keyCode == 13) {\n                self.search();\n            }\n        },\n\n        // ---------------------------------------\n\n        submitData: function (url) {\n            var self = EbayListingProductCategorySettingsChooserObj;\n\n            if (!self.validate()) {\n                return;\n            }\n\n            var categoryData = self.getInternalData();\n\n            self.postForm(url, {category_data: Object.toJSON(categoryData)});\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/Product/Category/Settings/Grid.js":"define([\n    'M2ePro/Grid'\n], function () {\n\n    window.EbayListingProductCategorySettingsGrid = Class.create(Grid, {\n\n        // ---------------------------------------\n\n        prepareActions: function () {\n            this.actions = {\n\n                editCategoriesAction: function (id) {\n\n                    id && this.selectByRowId(id);\n                    this.editCategories();\n\n                }.bind(this),\n\n                editPrimaryCategoriesAction: function (id) {\n\n                    id && this.selectByRowId(id);\n                    this.editPrimaryCategories();\n\n                }.bind(this),\n\n                editStorePrimaryCategoriesAction: function (id) {\n\n                    id && this.selectByRowId(id);\n                    this.editStorePrimaryCategories();\n\n                }.bind(this)\n\n            };\n        },\n\n        // ---------------------------------------\n\n        editPrimaryCategories: function () {\n            alert('abstract editPrimaryCategories');\n        },\n\n        editStorePrimaryCategories: function () {\n            alert('abstract editPrimaryCategories');\n        },\n\n        editCategoriesByType: function (type, validationRequired) {\n            validationRequired = validationRequired || false;\n\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_product_category_settings/getChooserBlockHtml'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    products_ids: this.getSelectedProductsString()\n                },\n                onSuccess: function (transport) {\n\n                    var temp = document.createElement('div');\n                    temp.innerHTML = transport.responseText;\n                    temp.innerHTML.evalScripts();\n\n                    setTimeout(function go() {\n                        if (typeof EbayListingProductCategorySettingsChooserObj == 'undefined') {\n                            setTimeout(go, 50);\n                        } else {\n                            EbayListingProductCategorySettingsChooserObj.showEditPopUp(type);\n\n                            validationRequired && (EbayListingProductCategorySettingsChooserObj.categoriesRequiringValidation[type] = true);\n\n                            EbayListingProductCategorySettingsChooserObj.doneCallback = function () {\n                                self.saveCategoriesData(EbayListingProductCategorySettingsChooserObj.getInternalDataByType(type));\n\n                                EbayListingProductCategorySettingsChooserObj.doneCallback = null;\n                                EbayListingProductCategorySettingsChooserObj.cancelCallback = null;\n\n                                validationRequired && (delete EbayListingProductCategorySettingsChooserObj.categoriesRequiringValidation[type]);\n                            };\n\n                            EbayListingProductCategorySettingsChooserObj.cancelCallback = function () {\n                                self.unselectAll();\n\n                                EbayListingProductCategorySettingsChooserObj.doneCallback = null;\n                                EbayListingProductCategorySettingsChooserObj.cancelCallback = null;\n\n                                validationRequired && (delete EbayListingProductCategorySettingsChooserObj.categoriesRequiringValidation[type]);\n                            };\n                        }\n                    }, 50);\n\n                }.bind(this)\n            });\n        },\n\n        saveCategoriesData: function (templateData) {\n            new Ajax.Request(M2ePro.url.get('ebay_listing_product_category_settings/stepTwoSaveToSession'), {\n                method: 'post',\n                parameters: {\n                    products_ids: this.getSelectedProductsString(),\n                    template_data: Object.toJSON(templateData)\n                },\n                onSuccess: function (transport) {\n\n                    this.unselectAll();\n                    this.getGridObj().doFilter();\n\n                    jQuery('#m2epro-popup').modal('closeModal');\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        editCategories: function () {\n            alert('abstract editCategories');\n        },\n\n        // ---------------------------------------\n\n        getComponent: function () {\n            return 'ebay';\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Ebay/Listing/Product/Category/Settings/Mode/Category/Grid.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Ebay/Listing/Product/Category/Settings/Grid'\n], function (modal, MagentoMessageObj) {\n\n    window.EbayListingProductCategorySettingsModeCategoryGrid = Class.create(EbayListingProductCategorySettingsGrid, {\n\n        // ---------------------------------------\n\n        editCategories: function () {\n            var url = M2ePro.url.get(\n                'ebay_listing_product_category_settings/getChooserBlockHtml'\n            );\n\n            new Ajax.Request(url, {\n                method: 'get',\n                parameters: {\n                    ids: this.getSelectedProductsString()\n                },\n                onSuccess: function (transport) {\n                    this.openPopUp(M2ePro.translator.translate('Set eBay Categories'), transport.responseText);\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        editPrimaryCategories: function () {\n            this.editCategoriesByType(\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_EBAY_MAIN'),\n                true\n            )\n        },\n\n        editStorePrimaryCategories: function () {\n            this.editCategoriesByType(\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Ebay\\\\Category::TYPE_STORE_MAIN'),\n                false\n            )\n        },\n\n        // ---------------------------------------\n\n        openPopUp: function (title, content) {\n            var self = this;\n\n            if (!$('m2epro-popup')) {\n                $('html-body').insert({bottom: '<div id=\"m2epro-popup\"></div>'});\n            }\n\n            $('m2epro-popup').update();\n            $('m2epro-popup').insert(content);\n\n            var popup = jQuery('#m2epro-popup');\n\n            modal({\n                title: title,\n                type: 'slide',\n                closed: function(){\n                    $('m2epro-popup').update();\n                },\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    click: function () {\n                        popup.modal('closeModal');\n                        self.unselectAll();\n                    }\n                },{\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action primary',\n                    click: function () {\n                        if (!EbayListingProductCategorySettingsChooserObj.validate()) {\n                            return;\n                        }\n\n                        self.saveCategoriesData(EbayListingProductCategorySettingsChooserObj.getInternalData());\n                        popup.modal('closeModal');\n                    }\n                }]\n            }, popup);\n\n            popup.modal('openModal');\n        },\n\n        // ---------------------------------------\n\n        validate: function () {\n            MagentoMessageObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_product_category_settings/stepTwoModeCategoryValidate'), {\n                method: 'post',\n                onSuccess: function (transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (response.validation == true) {\n                        setLocation(M2ePro.url.get('ebay_listing_product_category_settings'));\n                    } else {\n                        MagentoMessageObj.addErrorMessage(response.message);\n                    }\n\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        confirm: function (config) {\n            if (config.actions && config.actions.confirm) {\n                config.actions.confirm();\n            }\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/Product/Category/Settings/Mode/Product/SuggestedSearch.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    window.EbayListingProductCategorySettingsModeProductSuggestedSearch = Class.create(Common, {\n\n        // ---------------------------------------\n\n        searchResult: {\n            failed: 0,\n            succeeded: 0\n        },\n\n        // ---------------------------------------\n\n        initialize: function () {\n        },\n\n        // ---------------------------------------\n\n        resetSearchResult: function () {\n            this.searchResult = {\n                failed: 0,\n                succeeded: 0\n            };\n        },\n\n        // ---------------------------------------\n\n        search: function (products, onComplete) {\n            var parts = this.makeProductsParts(products);\n\n            ProgressBarObj.reset();\n            ProgressBarObj.setTitle('Getting Suggested Categories');\n            ProgressBarObj.setStatus('Getting Suggested Categories in process. Please wait...');\n            ProgressBarObj.show();\n\n            this.scrollPageToTop();\n\n            WrapperObj.lock();\n\n            this.resetSearchResult();\n            this.sendPartsProducts(parts, parts.length, onComplete);\n        },\n\n        makeProductsParts: function (products) {\n            var productsInPart = 5;\n            var productsArray = explode(',', products);\n            var parts = [];\n\n            if (productsArray.length < productsInPart) {\n                return parts[0] = productsArray;\n            }\n\n            var result = [];\n            for (var i = 0; i < productsArray.length; i++) {\n                if (result.length == 0 || result[result.length - 1].length == productsInPart) {\n                    result[result.length] = [];\n                }\n                result[result.length - 1][result[result.length - 1].length] = productsArray[i];\n            }\n\n            return result;\n        },\n\n        sendPartsProducts: function (parts, partsCount, onComplete) {\n            if (parts.length == 0) {\n                if (typeof onComplete == 'function') {\n                    onComplete(this.searchResult);\n                }\n\n                $$('.loading-mask').invoke('setStyle', {visibility: 'visible'});\n\n                this.resetSearchResult();\n                return;\n            }\n\n            var part = parts.splice(0, 1)[0];\n            var partString = implode(',', part);\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_product_category_settings/stepTwoGetSuggestedCategory'), {\n                method: 'get',\n                parameters: {\n                    products_ids: partString\n                },\n                onSuccess: function (transport) {\n\n                    var percents = (100 / partsCount) * (partsCount - parts.length);\n                    var response = transport.responseText.evalJSON();\n\n                    this.searchResult.failed += response['failed'];\n                    this.searchResult.succeeded += response['succeeded'];\n\n                    if (percents <= 0) {\n                        ProgressBarObj.setPercents(0, 0);\n                    } else if (percents >= 100) {\n                        ProgressBarObj.setPercents(100, 0);\n                        ProgressBarObj.setStatus('Suggested Categories has been received.');\n                        ProgressBarObj.hide();\n                        ProgressBarObj.reset();\n\n                        WrapperObj.unlock();\n                    } else {\n                        ProgressBarObj.setPercents(percents, 1);\n                    }\n\n                    setTimeout(function () {\n                        this.sendPartsProducts(parts, partsCount, onComplete);\n                    }.bind(this), 500);\n                }.bind(this)\n            });\n\n            $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Ebay/Listing/Product/Category/Settings/Mode/Product/Grid.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Ebay/Listing/Product/Category/Settings/Grid'\n], function (jQuery, modal, MagentoMessageObj) {\n\n    window.EbayListingProductCategorySettingsModeProductGrid = Class.create(EbayListingProductCategorySettingsGrid, {\n\n        // ---------------------------------------\n\n        productIdCellIndex: 1,\n        productTitleCellIndex: 2,\n\n        // ---------------------------------------\n\n        prepareActions: function ($super) {\n            $super();\n\n            this.actions = Object.extend(this.actions, {\n\n                getSuggestedCategoriesAction: function (id) {\n                    this.getSuggestedCategories(id);\n                }.bind(this),\n                resetCategoriesAction: function (id) {\n                    this.resetCategories(id);\n                }.bind(this),\n                removeItemAction: function (id) {\n                    this.removeItems(id);\n                }.bind(this)\n\n            });\n        },\n\n        // ---------------------------------------\n\n        getSuggestedCategories: function (id) {\n            var self = this,\n                confirmAction;\n\n            self.selectedProductsIds = id ? [id] : self.getSelectedProductsArray();\n            self.unselectAll();\n\n            confirmAction = function() {\n                EbayListingProductCategorySettingsModeProductSuggestedSearchObj.search(\n                    self.selectedProductsIds.join(','), function (searchResult) {\n                        self.getGridObj().doFilter();\n                        self.selectedProductsIds = [];\n\n                        MagentoMessageObj.clear();\n\n                        if (searchResult.failed > 0) {\n                            MagentoMessageObj.addErrorMessage(\n                                M2ePro.translator.translate('eBay could not assign Categories for %product_title% Products.')\n                                    .replace('%product_title%', searchResult.failed)\n                            );\n                        } else if (searchResult.succeeded > 0) {\n                            MagentoMessageObj.addSuccessMessage(\n                                M2ePro.translator.translate('Suggested Categories were successfully Received for %product_title% Product(s).')\n                                    .replace('%product_title%', searchResult.succeeded)\n                            );\n                        }\n                    }\n                );\n            };\n\n            if (id) {\n                self.confirm({\n                    actions: {\n                        confirm: function () {\n                            confirmAction();\n                        },\n                        cancel: function () {\n                            return false;\n                        }\n                    }\n                });\n            } else {\n                confirmAction();\n            }\n        },\n\n        getSuggestedCategoriesForAll: function () {\n            var self = this,\n                confirmAction,\n                gridIds = self.getGridMassActionObj().getGridIds().split(',');\n\n            confirmAction = function() {\n                self.getGridMassActionObj().selectAll();\n                self.getSuggestedCategories();\n            };\n\n            if (gridIds.length > 100) {\n                self.confirm({\n                    actions: {\n                        confirm: function () {\n                            confirmAction();\n                        },\n                        cancel: function () {\n                            return false;\n                        }\n                    }\n                });\n            } else {\n                confirmAction();\n            }\n        },\n\n        // ---------------------------------------\n\n        editPrimaryCategories: function () {\n            this.editCategoriesByType(M2ePro.php.constant('Ess_M2ePro_Helper_Component_Ebay_Category::TYPE_EBAY_MAIN'))\n        },\n\n        editStorePrimaryCategories: function () {\n            this.editCategoriesByType(M2ePro.php.constant('Ess_M2ePro_Helper_Component_Ebay_Category::TYPE_STORE_MAIN'))\n        },\n\n        // ---------------------------------------\n\n        editCategories: function (id) {\n            this.selectedProductsIds = id ? [id] : this.getSelectedProductsArray();\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_product_category_settings/getChooserBlockHtml'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: {\n                    ids: this.selectedProductsIds.join(',')\n                },\n                onSuccess: function (transport) {\n\n                    var title = M2ePro.translator.translate('Set eBay Category for Product(s)');\n\n                    if (this.selectedProductsIds.length == 1) {\n                        var productName = this.getProductNameByRowId(this.selectedProductsIds[0]);\n                        title += '&nbsp;\"' + productName + '\"';\n                    }\n\n                    this.showChooserPopup(title, transport.responseText);\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        resetCategories: function (id) {\n            var self = this,\n                confirmAction;\n\n            confirmAction = function() {\n                self.selectedProductsIds = id ? [id] : self.getSelectedProductsArray();\n\n                new Ajax.Request(M2ePro.url.get('ebay_listing_product_category_settings/stepTwoSuggestedReset'), {\n                    method: 'post',\n                    asynchronous: true,\n                    parameters: {\n                        products_ids: self.selectedProductsIds.join(',')\n                    },\n                    onSuccess: function (transport) {\n                        MagentoMessageObj.clear();\n\n                        self.getGridObj().doFilter();\n                        self.unselectAll();\n                    }\n                });\n            };\n\n            if (id) {\n                self.confirm({\n                    actions: {\n                        confirm: function () {\n                            confirmAction();\n                        },\n                        cancel: function () {\n                            return false;\n                        }\n                    }\n                });\n            } else {\n                confirmAction();\n            }\n        },\n\n        // ---------------------------------------\n\n        showChooserPopup: function (title, content) {\n            var self = this;\n\n            if (!$('m2epro-popup')) {\n                $('html-body').insert({bottom: '<div id=\"m2epro-popup\"></div>'});\n            }\n\n            $('m2epro-popup').update();\n            $('m2epro-popup').insert(content);\n\n            var popup = jQuery('#m2epro-popup');\n\n            modal({\n                title: title,\n                type: 'slide',\n                closed: function(){\n                    self.selectedProductsIds = [];\n\n                    return true;\n                },\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    click: function () {\n                        popup.modal('closeModal');\n                        self.unselectAll();\n                    }\n                },{\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action primary',\n                    click: function () {\n                        if (!self.validate()) {\n                            return;\n                        }\n\n                        self.saveCategoriesData(EbayListingProductCategorySettingsChooserObj.getInternalData());\n                    }\n                }]\n            }, popup);\n\n            popup.modal('openModal');\n        },\n\n        // ---------------------------------------\n\n        nextStep: function () {\n            var self = this;\n\n            MagentoMessageObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('ebay_listing_product_category_settings/stepTwoModeProductValidate'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {},\n                onSuccess: function (transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (response['validation']) {\n                        return setLocation(M2ePro.url.get('ebay_listing_product_category_settings'));\n                    }\n\n                    if (response['message']) {\n                        return MagentoMessageObj.addErrorMessage(response['message']);\n                    }\n\n                    var popup = jQuery('#next_step_warning_popup_content');\n\n                    modal({\n                        title: M2ePro.translator.translate('Set eBay Category'),\n                        type: 'popup',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Cancel'),\n                            class: 'action-secondary action-dismiss',\n                            click: function () {\n                                this.closeModal();\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Continue'),\n                            class: 'action-primary action-accept forward',\n                            id: 'save_popup_button',\n                            click: function () {\n                                this.closeModal();\n                                setLocation(M2ePro.url.get('ebay_listing_product_category_settings'));\n                            }\n                        }]\n                    }, popup);\n\n                    popup.modal('openModal');\n\n                    // $('total_count').update(response['total_count']);\n                    // $('failed_count').update(response['failed_count']);\n\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        removeItems: function (id) {\n            var self = this,\n                confirmAction;\n\n            confirmAction = function() {\n                self.selectedProductsIds = id ? [id] : self.getSelectedProductsArray();\n\n                var url = M2ePro.url.get('ebay_listing_product_category_settings/stepTwoDeleteProductsModeProduct');\n                new Ajax.Request(url, {\n                    method: 'post',\n                    parameters: {\n                        products_ids: self.selectedProductsIds.join(',')\n                    },\n                    onSuccess: function () {\n                        self.unselectAllAndReload();\n                    }\n                });\n            };\n\n            if (id) {\n                self.confirm({\n                    actions: {\n                        confirm: function () {\n                            confirmAction();\n                        },\n                        cancel: function () {\n                            return false;\n                        }\n                    }\n                });\n            } else {\n                confirmAction();\n            }\n        },\n\n        // ---------------------------------------\n\n        confirm: function ($super, config) {\n            var action = '';\n\n            $$('select#' + this.gridId + '_massaction-select option').each(function (o) {\n                if (o.selected && o.value != '') {\n                    action = o.value;\n                }\n            });\n\n            $super(config);\n        },\n\n        // ---------------------------------------\n\n        validate: function () {\n            if ($$('.main-store-empty-advice').length <= 0) {\n                return true;\n            }\n\n            $$('.main-store-empty-advice')[0].hide();\n\n            var primary = $('magento_block_ebay_listing_category_chooser_store_primary_not_selected') == null;\n            var secondary = $('magento_block_ebay_listing_category_chooser_store_secondary_not_selected') == null;\n\n            if (primary == false && secondary == true) {\n                $$('.main-store-empty-advice')[0].show();\n                return false;\n            }\n\n            return true;\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Ebay/Listing/Product/Category/Settings/Chooser/Tabs/Browse.js":"define([\n    'M2ePro/Common'\n\n], function () {\n    window.EbayListingProductCategorySettingsChooserTabsBrowse = Class.create();\n    EbayListingProductCategorySettingsChooserTabsBrowse.prototype = Object.extend(new Common(), {\n\n        // ---------------------------------------\n\n        initialize: function () {\n            this.marketplaceId = null;\n            this.observers = {\n                \"leaf_selected\": [],\n                \"not_leaf_selected\": [],\n                \"any_selected\": []\n            };\n        },\n\n        // ---------------------------------------\n\n        setMarketplaceId: function (marketplaceId) {\n            var self = EbayListingProductCategorySettingsChooserTabsBrowseObj;\n            self.marketplaceId = marketplaceId;\n        },\n\n        getMarketplaceId: function () {\n            var self = EbayListingProductCategorySettingsChooserTabsBrowseObj;\n\n            if (self.marketplaceId === null) {\n                self.alert('You must set Site');\n            }\n\n            return self.marketplaceId;\n        },\n\n        getCategoriesSelectElementId: function (categoryId) {\n            if (categoryId === null) categoryId = 0;\n            return 'category_chooser_select_' + categoryId;\n        },\n\n        getCategoryChildrenElementId: function (categoryId) {\n            if (categoryId === null) categoryId = 0;\n            return 'category_chooser_children_' + categoryId;\n        },\n\n        getSelectedCategories: function () {\n            var self = EbayListingProductCategorySettingsChooserTabsBrowseObj;\n\n            var categoryId = 0;\n            var selectedCategories = [];\n            var isLastCategory = false;\n\n            while (!isLastCategory) {\n                var categorySelect = $(self.getCategoriesSelectElementId(categoryId));\n                if (!categorySelect || categorySelect.selectedIndex == -1) {\n                    break;\n                }\n\n                categoryId = selectedCategories[selectedCategories.length]\n                    = categorySelect.options[categorySelect.selectedIndex].value;\n\n                if (categorySelect.options[categorySelect.selectedIndex].getAttribute('is_leaf') == 1) {\n                    isLastCategory = true;\n                }\n            }\n\n            return selectedCategories;\n        },\n\n        // ---------------------------------------\n\n        renderTopLevelCategories: function (containerId) {\n            this.prepareDomStructure(null, $(containerId));\n            this.renderChildCategories(null);\n        },\n\n        renderChildCategories: function (parentCategoryId) {\n            var self = EbayListingProductCategorySettingsChooserTabsBrowseObj;\n\n            new Ajax.Request(M2ePro.url.get('ebay_category/getChildCategories'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: {\n                    \"parent_category_id\": parentCategoryId,\n                    \"marketplace_id\": self.getMarketplaceId(),\n                    \"account_id\": EbayListingProductCategorySettingsChooserObj.getAccountId(),\n                    \"category_type\": $('category_type').value\n                },\n                onSuccess: function (transport) {\n\n                    if (transport.responseText.length <= 2) {\n                        self.simulate('leaf_selected', self.getSelectedCategories());\n                        return;\n                    }\n\n                    var categories = JSON.parse(transport.responseText);\n                    var optionsHtml = '';\n                    var arrowString = '';\n                    categories.each(function (category) {\n                        if (parseInt(category.is_leaf) == 0) {\n                            arrowString = ' > ';\n                        } else {\n                            arrowString = '';\n                        }\n\n                        optionsHtml += '<option is_leaf=\"' + category.is_leaf + '\" value=\"' + category.category_id + '\">' +\n                            category.title + arrowString +\n                            '</option>';\n                    });\n\n                    $(self.getCategoriesSelectElementId(parentCategoryId)).innerHTML = optionsHtml;\n                    $(self.getCategoriesSelectElementId(parentCategoryId)).style.display = 'inline-block';\n                    $('chooser_browser').scrollLeft = $('chooser_browser').scrollWidth;\n                }\n            });\n        },\n\n        onSelectCategory: function (select) {\n            var self = EbayListingProductCategorySettingsChooserTabsBrowseObj;\n\n            var parentCategoryId = select.id.replace(self.getCategoriesSelectElementId(\"\"), \"\");\n            var categoryId = select.options[select.selectedIndex].value;\n            var is_leaf = select.options[select.selectedIndex].getAttribute('is_leaf');\n\n            var selectedCategories = self.getSelectedCategories();\n\n            var parentDiv = $(self.getCategoryChildrenElementId(parentCategoryId));\n            parentDiv.innerHTML = '';\n\n            self.simulate('any_selected', selectedCategories);\n\n            if (is_leaf == 1) {\n                self.simulate('leaf_selected', selectedCategories);\n                return;\n            }\n\n            self.simulate('not_leaf_selected', selectedCategories);\n\n            self.prepareDomStructure(categoryId, parentDiv);\n            self.renderChildCategories(categoryId);\n        },\n\n        prepareDomStructure: function (categoryId, parentDiv) {\n            var self = EbayListingProductCategorySettingsChooserTabsBrowseObj;\n\n            var childrenSelect = document.createElement('select');\n            childrenSelect.id = self.getCategoriesSelectElementId(categoryId);\n            childrenSelect.style.minWidth = '200px';\n            childrenSelect.style.maxHeight = 'none';\n            childrenSelect.size = 10;\n            childrenSelect.className = 'multiselect admin__control-multiselect';\n            childrenSelect.onchange = function () {\n                EbayListingProductCategorySettingsChooserTabsBrowseObj.onSelectCategory(this);\n            };\n            childrenSelect.style.display = 'none';\n            parentDiv.appendChild(childrenSelect);\n\n            var childrenDiv = document.createElement('div');\n            childrenDiv.id = self.getCategoryChildrenElementId(categoryId);\n            childrenDiv.className = 'category-children-block';\n            parentDiv.appendChild(childrenDiv);\n        },\n\n        // ---------------------------------------\n\n        observe: function (event, observer) {\n            var self = EbayListingProductCategorySettingsChooserTabsBrowseObj;\n\n            if (typeof observer != 'function') {\n                self.alert('Observer must be a function!');\n                return;\n            }\n\n            if (typeof self.observers[event] == 'undefined') {\n                self.alert('Event does not supported!');\n                return;\n            }\n\n            self.observers[event][self.observers[event].length] = observer;\n        },\n\n        simulate: function (event, parameters) {\n            var self = EbayListingProductCategorySettingsChooserTabsBrowseObj;\n\n            parameters = parameters || null;\n\n            if (typeof self.observers[event] == 'undefined') {\n                self.alert('Event does not supported!');\n                return;\n            }\n\n            if (self.observers[event].length == 0) {\n                return;\n            }\n\n            self.observers[event].each(function (observer) {\n                if (parameters == null) {\n                    (observer)();\n                } else {\n                    (observer)(parameters);\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/Product/Category/Settings/Specific/Wrapper.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Common'\n], function (jQuery, modal) {\n\n    window.EbayListingProductCategorySettingsSpecificWrapper = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function (currentCategory, wrapperObj) {\n            this.wrapperObj = wrapperObj;\n\n            this.setCurrentCategory(currentCategory);\n        },\n\n        // ---------------------------------------\n\n        refreshButtons: function () {\n            $$('button.specifics_buttons').invoke('hide');\n\n            if (this.getNextCategory()) {\n\n                $$('button.next_category_button').invoke('show');\n\n            } else {\n\n                $$('button.continue').invoke('show');\n\n            }\n        },\n\n        // ---------------------------------------\n\n        setCurrentCategory: function (category) {\n            $('categories_list').select('li').each(function (li) {\n                li.removeClassName('selected');\n            });\n\n            this.currentCategory = category;\n            $(category).addClassName('selected');\n\n            this.refreshButtons();\n        },\n\n        getCurrentCategory: function () {\n            return this.currentCategory;\n        },\n\n        getNextCategory: function () {\n            var nextLi = $(this.currentCategory).next('li');\n\n            if (!nextLi) {\n                return false;\n            }\n\n            return nextLi.id;\n        },\n\n        getPrevCategory: function () {\n            var prevLi = $(this.currentCategory).previous('li');\n\n            if (!prevLi) {\n                return false;\n            }\n\n            return prevLi.id;\n        },\n\n        // ---------------------------------------\n\n        renderPrevCategory: function () {\n            if (!this.getPrevCategory()) {\n                var url = M2ePro.url.get('ebay_listing_product_category_settings');\n                setLocation(url);\n                return;\n            }\n\n            this.getSpecificsData(this.getPrevCategory(), function (transport) {\n\n                var response = transport.responseText.evalJSON();\n\n                try {\n                    $('specifics_main_container').innerHTML = response.html;\n                    $('specifics_main_container').innerHTML.evalScripts();\n                } catch (e) {\n                }\n\n            });\n        },\n\n        renderNextCategory: function () {\n            if (!EbayListingProductCategorySettingsSpecificObj.validate()) {\n                return;\n            }\n\n            if (!!$('skip_optional_specifics').checked) {\n                this.lock();\n            }\n\n            if (!this.getNextCategory()) {\n                this.unlock();\n                return this.showPopup();\n            }\n\n            this.saveCategory(function () {\n                this.getSpecificsData(this.getNextCategory(), function (transport) {\n                    var response = transport.responseText.evalJSON();\n\n                    try {\n                        $('specifics_main_container').innerHTML = response.html;\n                        $('specifics_main_container').innerHTML.evalScripts();\n                    } catch (e) {\n                    }\n\n                    if (!response.hasRequiredSpecifics && !!$('skip_optional_specifics').checked) {\n                        this.renderNextCategory();\n                    } else {\n                        this.unlock();\n                    }\n\n                })\n            }.bind(this));\n        },\n\n        // ---------------------------------------\n\n        getSpecificsData: function (category, callback) {\n            var url = M2ePro.url.get('ebay_listing_product_category_settings/stepThreeGetCategorySpecifics');\n            new Ajax.Request(url, {\n                method: 'get',\n                parameters: {\n                    category: category\n                },\n                onSuccess: function (transport) {\n                    this.setCurrentCategory(category);\n                    callback && callback.call(this, transport);\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        saveCategory: function (callback) {\n            if (!EbayListingProductCategorySettingsSpecificObj.validate()) {\n                return;\n            }\n\n            var url = M2ePro.url.get('ebay_listing_product_category_settings/stepThreeSaveCategorySpecificsToSession');\n            new Ajax.Request(url, {\n                method: 'post',\n                parameters: {\n                    category: this.getCurrentCategory(),\n                    data: Object.toJSON(EbayListingProductCategorySettingsSpecificObj.getInternalData())\n                },\n                onSuccess: function (transport) {\n                    callback.call(this);\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        save: function () {\n            if (this.getNextCategory()) {\n                return;\n            }\n\n            this.saveCategory(function () {\n\n                var url = M2ePro.url.get('ebay_listing_product_category_settings/save');\n\n                new Ajax.Request(url, {\n                    method: 'post',\n                    onSuccess: function (transport) {\n                        setLocation(M2ePro.url.get('ebay_listing/review'))\n                    }\n                });\n            });\n        },\n\n        // ---------------------------------------\n\n        showPopup: function () {\n            var self = this;\n\n            this.popup = jQuery('#popup_content').modal({\n                title: M2ePro.translator.translate('Set Item Specifics'),\n                type: 'popup',\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    class: 'action-secondary action-dismiss',\n                    click: function (event) {\n                        this.closeModal(event, true);\n                    }\n                }, {\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action-primary action-accept forward',\n                    click: function () {\n                        self.save();\n                    }\n                }]\n            });\n\n            this.popup.modal('openModal');\n        },\n\n        // ---------------------------------------\n\n        lock: function () {\n            $(this.wrapperObj.wrapperId).visible() || this.wrapperObj.lock();\n\n            $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n            $(this.wrapperObj.wrapperId).update(\n                '<div style=\"height: 46%\"></div>' +\n                '<div>' + M2ePro.translator.translate('Loading. Please wait') + ' ...</div>'\n            );\n        },\n\n        unlock: function () {\n            this.wrapperObj.unlock();\n            $$('.loading-mask').invoke('setStyle', {visibility: 'visible'});\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/Product/Add/Category/Summary/Grid.js":"define([\n    'M2ePro/Grid'\n], function () {\n\n    window.EbayListingProductAddCategorySummaryGrid = Class.create(Grid, {\n\n        // ---------------------------------------\n\n        prepareActions: function () {\n            this.actions = {\n                removeAction: this.remove.bind(this)\n            };\n        },\n\n        // ---------------------------------------\n\n        remove: function () {\n            var self = this;\n\n            Grid.prototype.confirm({\n                actions: {\n                    confirm: function () {\n                        var url = M2ePro.url.get('ebay_listing_product_add/removeSessionProductsByCategory');\n                        new Ajax.Request(url, {\n                            parameters: {\n                                ids: self.getSelectedProductsString()\n                            },\n                            onSuccess: self.unselectAllAndReload.bind(self)\n                        });\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        confirm: function (config) {\n            if (config.actions && config.actions.confirm) {\n                config.actions.confirm();\n            }\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Ebay/Listing/Create/General.js":"define([\n    'underscore',\n    'Magento_Ui/js/modal/alert',\n    'M2ePro/Ebay/Listing/Create/General/MarketplaceSynchProgress',\n    'M2ePro/Plugin/ProgressBar',\n    'M2ePro/Plugin/AreaWrapper'\n], function (_, alert) {\n\n    window.EbayListingCreateGeneral = Class.create();\n    EbayListingCreateGeneral.prototype = {\n\n        marketplaceSynchProgressObj: null,\n        accounts: null,\n        selectedAccountId: null,\n\n        // ---------------------------------------\n\n        initialize: function (marketplaces) {\n\n            var self = this;\n\n            self.marketplaceSynchProgressObj = new EbayListingCreateGeneralMarketplaceSynchProgress(\n                new ProgressBar('progress_bar'),\n                new AreaWrapper('content_container')\n            );\n\n            CommonObj.setValidationCheckRepetitionValue(\n                'M2ePro-listing-title',\n                M2ePro.translator.translate('The specified Title is already used for other Listing. Listing Title must be unique.'),\n                'Listing', 'title', 'id', null, M2ePro.php.constant('Ess_M2ePro_Helper_Component_Ebay::NICK')\n            );\n\n            self.initAccount();\n            self.initMarketplace(marketplaces);\n        },\n\n        initAccount: function () {\n\n            var self = this;\n\n            $('add_account_button').observe('click', function() {\n                var win = window.open(M2ePro.url.get('ebay_account/newAction'));\n\n                var intervalId = setInterval(function() {\n\n                    if (!win.closed) {\n                        return;\n                    }\n\n                    clearInterval(intervalId);\n\n                    self.renderAccounts();\n\n                }, 1000);\n            });\n\n            $('account_id').observe('change', function () {\n                self.selectedAccountId = this.value;\n            });\n\n            self.renderAccounts();\n        },\n\n        renderAccounts: function (callback) {\n\n            var self = this;\n\n            var account_add_btn = $('add_account_button');\n            var account_label_el = $('account_label');\n            var account_select_el = $('account_id');\n\n            new Ajax.Request(M2ePro.url.get('general/getAccounts'), {\n                method: 'get',\n                onSuccess: function(transport) {\n                    var accounts = transport.responseText.evalJSON();\n\n                    if (_.isNull(self.accounts)) {\n                        self.accounts = accounts;\n                    }\n\n                    if (_.isNull(self.selectedAccountId)) {\n                        self.selectedAccountId = $('account_id').value;\n                    }\n\n                    var isAccountsChanged = !self.isAccountsEqual(accounts);\n\n                    if (isAccountsChanged) {\n                        self.accounts = accounts;\n                    }\n\n                    if (accounts.length === 0) {\n                        account_add_btn.down('span').update(M2ePro.translator.translate('Add'));\n                        account_label_el.update(M2ePro.translator.translate('Account not found, please create it.'));\n                        account_label_el.show();\n                        account_select_el.hide();\n                        return;\n                    }\n\n                    account_select_el.update();\n                    account_select_el.appendChild(new Element('option', {style: 'display: none'}));\n                    accounts.each(function(account) {\n                        account_select_el.appendChild(new Element('option', {value: account.id})).insert(account.title);\n                    });\n\n                    account_add_btn.down('span').update(M2ePro.translator.translate('Add Another'));\n\n                    if (accounts.length === 1) {\n                        var account = _.first(accounts);\n\n                        self.selectedAccountId = account.id;\n\n                        var accountElement;\n\n                        if (M2ePro.formData.wizard) {\n                            accountElement = new Element('span').update(account.title);\n                        } else {\n                            var accountLink = M2ePro.url.get('ebay_account/edit', {'id': account.id, close_on_save: 1});\n                            accountElement = new Element('a', {\n                                'href': accountLink,\n                                'target': '_blank'\n                            }).update(account.title);\n                        }\n\n                        account_label_el.update(accountElement);\n\n                        account_label_el.show();\n                        account_select_el.hide();\n                    } else if (isAccountsChanged) {\n                        self.selectedAccountId = _.last(accounts).id;\n\n                        account_label_el.hide();\n                        account_select_el.show();\n                    }\n\n                    account_select_el.setValue(self.selectedAccountId);\n\n                    callback && callback();\n                }\n            });\n        },\n\n        initMarketplace: function (marketplaces) {\n\n            var self = this;\n\n            $$('.next_step_button').each(function(btn) { btn.observe('click',function() {\n                if (self.marketplaceSynchProgressObj.runningNow) {\n                    alert({\n                        content: M2ePro.translator.translate('Please wait while Synchronization is finished.')\n                    });\n                    return;\n                }\n                jQuery('#edit_form').valid() && self.synchronizeMarketplace($('marketplace_id').value);\n            }) });\n\n            $('marketplace_id')\n                .observe('click', function() {\n                    if (!this.value) {\n                        return;\n                    }\n                    var marketplace = _.findWhere(marketplaces, {value: this.value});\n                    $('marketplace_url_note').update(marketplace.url).show();\n                })\n                .simulate('click')\n            ;\n        },\n\n        synchronizeMarketplace: function (marketplaceId) {\n\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('general/isMarketplaceEnabled'), {\n                method: 'get',\n                parameters: { marketplace_id: marketplaceId },\n                onSuccess: function(transport) {\n\n                    var result = transport.responseText.evalJSON();\n                    if (result.status) {\n                        return self.marketplaceSynchProgressObj.end();\n                    }\n\n                    var params = {};\n                    params['status_' + marketplaceId] = 1;\n\n                    new Ajax.Request(M2ePro.url.get('ebay_marketplace/save'), {\n                        method: 'post',\n                        parameters: params,\n                        onSuccess: function() {\n\n                            var title = 'eBay ' + $('marketplace_id').down('option[value='+$('marketplace_id').value+']').innerHTML;\n\n                            $('next').disable();\n\n                            self.marketplaceSynchProgressObj.runTask(\n                                title,\n                                M2ePro.url.get('ebay_marketplace/runSynchNow', {marketplace_id: marketplaceId})\n                            );\n\n                        }\n                    });\n                }\n            });\n        },\n\n        isAccountsEqual: function (newAccounts) {\n            if (!newAccounts.length && !this.accounts.length) {\n                return true;\n            }\n\n            if (newAccounts.length !== this.accounts.length) {\n                return false;\n            }\n\n            return _.every(this.accounts, function (account) {\n                return _.where(newAccounts, account).length > 0;\n            });\n        }\n\n        // ---------------------------------------\n    };\n});","Ess_M2ePro/js/Ebay/Listing/Create/General/MarketplaceSynchProgress.js":"define([\n    'M2ePro/SynchProgress'\n], function () {\n    EbayListingCreateGeneralMarketplaceSynchProgress = Class.create(SynchProgress, {\n\n        // ---------------------------------------\n\n        runningNow: false,\n\n        // ---------------------------------------\n\n        start: function ($super, title, status) {\n            $super(title, status);\n            this.runningNow = true;\n        },\n\n        end: function ($super) {\n            $super();\n            this.runningNow = false;\n            this.saveClick(M2ePro.url.get('ebay_listing_create/index'), true)\n        },\n\n        runTask: function (title, url, callBackWhenEnd) {\n            title = title || '';\n            url = url || '';\n            callBackWhenEnd = callBackWhenEnd || '';\n\n            if (url == '') {\n                return;\n            }\n\n            var self = this;\n            new Ajax.Request(M2ePro.url.get('general/synchCheckState'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == self.stateExecuting) {\n\n                        self.start(\n                            M2ePro.translator.translate('Another Synchronization Is Already Running.'),\n                            M2ePro.translator.translate('Getting information. Please wait ...')\n                        );\n\n                        setTimeout(function () {\n                            self.startGetExecutingInfo('self.runTask(\\'' + title + '\\',\\'' + url + '\\',\"' + callBackWhenEnd + '\");');\n                        }, 2000);\n\n                    } else {\n\n                        self.start(title, M2ePro.translator.translate('Preparing to start. Please wait ...'));\n\n                        new Ajax.Request(url, {\n                            method: 'get', asynchronous: true\n                        });\n\n                        setTimeout(function () {\n                            self.startGetExecutingInfo(callBackWhenEnd);\n                        }, 2000);\n                    }\n                }\n            });\n        },\n\n        startGetExecutingInfo: function (callBackWhenEnd) {\n            callBackWhenEnd = callBackWhenEnd || '';\n\n            var self = this;\n            new Ajax.Request(M2ePro.url.get('general/synchGetExecutingInfo'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function (transport) {\n\n                    var data = transport.responseText.evalJSON(true);\n\n                    if (data.mode == self.stateExecuting) {\n\n                        self.progressBarObj.setTitle(data.title);\n                        if (data.percents <= 0) {\n                            self.progressBarObj.setPercents(0, 0);\n                        } else if (data.percents >= 100) {\n                            self.progressBarObj.setPercents(100, 0);\n                        } else {\n                            self.progressBarObj.setPercents(data.percents, 1);\n                        }\n                        self.progressBarObj.setStatus(data.status);\n\n                        self.wrapperObj.lock();\n                        $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n\n                        setTimeout(function () {\n                            self.startGetExecutingInfo(callBackWhenEnd);\n                        }, 3000);\n\n                    } else {\n\n                        self.progressBarObj.setPercents(100, 0);\n\n                        // ---------------------------------------\n                        setTimeout(function () {\n\n                            if (callBackWhenEnd != '') {\n                                eval(callBackWhenEnd);\n                            } else {\n                                self.end();\n                            }\n\n                        }, 1500);\n                        // ---------------------------------------\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Listing/AutoAction.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'underscore',\n    'jquery/validate',\n    'M2ePro/Common',\n    'prototype'\n], function (jQuery, modal, _) {\n\n    window.ListingAutoAction = Class.create(Common, {\n\n        // ---------------------------------------\n\n        controller: 'adminhtml_common_listing_autoAction',\n\n        internalData: {},\n\n        popupMode: '',\n        currentPopup: {},\n\n        magentoCategoryIdsFromOtherGroups: {},\n        magentoCategoryTreeChangeEventInProgress: false,\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            jQuery.validator.addMethod('M2ePro-validate-mode', function() {\n                return $$('input[name=\"auto_mode\"]').any(function(el) {\n                    return el.checked;\n                })\n            }, jQuery.mage.__('Please select one of the options.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-category-selection', function() {\n                return categories_selected_items.length > 0\n            }, M2ePro.translator.translate('You must select at least 1 Category.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-category-group-title', function(value, element) {\n\n                var unique = true;\n\n                new Ajax.Request(M2ePro.url.get(ListingAutoActionObj.controller + '/isCategoryGroupTitleUnique'), {\n                    method: 'get',\n                    asynchronous: false,\n                    parameters: {\n                        group_id: $('group_id').value,\n                        title: $('group_title').value\n                    },\n                    onSuccess: function(transport) {\n                        unique = transport.responseText.evalJSON()['unique'];\n                    }\n                });\n\n                return unique;\n            }, M2ePro.translator.translate('Rule with the same Title already exists.'));\n        },\n\n        clear: function()\n        {\n            this.internalData = {};\n            this.magentoCategoryTreeChangeEventInProgress = false;\n        },\n\n        // ---------------------------------------\n\n        setPopupMode: function(mode)\n        {\n            if (mode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Listing::AUTO_MODE_GLOBAL')) {\n                this.popupMode = 'global';\n            } else if (mode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Listing::AUTO_MODE_WEBSITE')) {\n                this.popupMode = 'website';\n            } else if (mode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Listing::AUTO_MODE_CATEGORY')) {\n                this.popupMode = 'category';\n            } else {\n                this.popupMode = '';\n            }\n\n            return this;\n        },\n\n        getPopupMode: function()\n        {\n            return this.popupMode != '' ? this.popupMode + '_' : '';\n        },\n\n        // ---------------------------------------\n\n        loadAutoActionHtml: function(mode, callback)\n        {\n            mode = mode || null;\n\n            new Ajax.Request(M2ePro.url.get(ListingAutoActionObj.controller + '/index'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    auto_mode: mode\n                },\n                onSuccess: function(transport) {\n\n                    var responseData = JSON.parse(transport.responseText);\n                    var title = M2ePro.translator.translate('Auto Add/Remove Rules');\n\n                    this.clear();\n                    if (mode) {\n                        this.setPopupMode(mode);\n                    } else {\n                        this.setPopupMode(responseData.mode);\n                    }\n                    this.openPopUp(title, responseData.html);\n\n                    if (typeof callback == 'function') {\n                        callback();\n                    }\n                }.bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        openPopUp: function(title, content)\n        {\n            var popupMode = this.getPopupMode(),\n                popupData = {};\n\n            if (popupMode.indexOf('global') != -1) {\n                popupData = [\n                    {\n                        label: M2ePro.translator.translate('Continue'),\n                        class: 'next continue_button primary forward',\n                        attr: {style: 'display: none', id: popupMode+'continue_button'},\n                        callback: ListingAutoActionObj.globalStepTwo\n                    },\n                    {\n                        label: M2ePro.translator.translate('Reset Auto Rules'),\n                        attr: {style: 'display: none', id: popupMode+'reset_button'},\n                        callback: function() {\n                            ListingAutoActionObj.reset(false, function() {\n                                ListingAutoActionObj.global_popup.modal('closeModal');\n                            });\n                        }\n                    },\n                    {\n                        label: M2ePro.translator.translate('Complete'),\n                        class: 'confirm_button primary',\n                        attr: {id: popupMode+'confirm_button'},\n                        callback: function() {\n                            ListingAutoActionObj.confirm();\n                        }\n                    }\n                ];\n            } else if (popupMode.indexOf('website') != -1) {\n                popupData = [\n                    {\n                        label: M2ePro.translator.translate('Continue'),\n                        class: 'next continue_button primary forward',\n                        attr: {style: 'display: none', id: popupMode+'continue_button'},\n                        callback: ListingAutoActionObj.websiteStepTwo\n                    },\n                    {\n                        label: M2ePro.translator.translate('Reset Auto Rules'),\n                        attr: {style: 'display: none', id: popupMode+'reset_button'},\n                        callback: function() {\n                            ListingAutoActionObj.reset(false, function() {\n                                ListingAutoActionObj.website_popup.modal('closeModal');\n                            });\n                        }\n                    },\n                    {\n                        label: M2ePro.translator.translate('Complete'),\n                        class: 'confirm_button primary',\n                        attr: {id: popupMode+'confirm_button'},\n                        callback: function() {\n                            ListingAutoActionObj.confirm();\n                        }\n                    }\n                ];\n            } else if (popupMode.indexOf('category') != -1) {\n                popupData = [\n                    {\n                        label: M2ePro.translator.translate('Close'),\n                        class: 'next close_button',\n                        attr: {style: 'display:none', id: popupMode+'close_button'},\n                        closeModal: true\n                    },\n                    {\n                        label: M2ePro.translator.translate('Back'),\n                        attr: {style: 'display:none', id: popupMode+'cancel_button'},\n                        class: 'back',\n                        callback: function() {\n                            ListingAutoActionObj.reset(true);\n                        },\n                        closeModal: true\n                    },\n                    {\n                        label: M2ePro.translator.translate('Reset Auto Rules'),\n                        attr: {style: 'display: none', id: popupMode+'reset_button'},\n                        callback: function() {\n                            ListingAutoActionObj.reset(false, function() {\n                                ListingAutoActionObj.category_popup.modal('closeModal');\n                            });\n                        }\n                    },\n                    {\n                        label: M2ePro.translator.translate('Add New Group'),\n                        class: 'add_button add primary',\n                        attr: {id: 'add_button'},\n                        callback: function() {\n                            ListingAutoActionObj.categoryStepOne();\n                        }\n                    }\n                ];\n            } else {\n                popupData = [\n                    {\n                        label: M2ePro.translator.translate('Cancel'),\n                        closeModal: true\n                    },\n                    {\n                        label: M2ePro.translator.translate('Continue'),\n                        class: 'next continue_button primary forward',\n                        attr: {id: 'continue_button'},\n                        callback: function() {\n                            var contentWrapper = jQuery('#block-content-wrapper');\n                            contentWrapper.wrap('<form></form>');\n\n                            if (!contentWrapper.parent().validation().valid()) {\n                                return;\n                            }\n                            contentWrapper.unwrap();\n\n                            ListingAutoActionObj.loadAutoActionHtml(\n                                $$('input[name=\"auto_mode\"]:checked')[0].value\n                            );\n\n                            this.closeModal();\n                        }\n                    }\n                ];\n            }\n\n            this._createPopup(popupMode, title, content, popupData);\n        },\n\n        _createPopup: function(mode, title, content, popupData)\n        {\n            var self = this,\n                modalDialogMessage = $(mode+'modal_auto_action'),\n                buttonsConfig = [];\n\n            if (!modalDialogMessage) {\n                modalDialogMessage = new Element('div', {\n                    id: mode+'modal_auto_action'\n                });\n            }\n\n            modalDialogMessage.innerHTML = '';\n\n            if (typeof self[mode+'popup'] == 'undefined') {\n                _.each(popupData, function(buttonConfig) {\n                    var tmpConfig = {\n                        text: buttonConfig.label || '',\n                        class: buttonConfig.class || '',\n                        attr: buttonConfig.attr || {},\n                        click: function () {\n                            buttonConfig.callback && buttonConfig.callback.call(this);\n                            buttonConfig.closeModal && self[mode+'popup'].modal('closeModal');\n                        }\n                    };\n\n                    buttonsConfig.push(tmpConfig);\n                });\n\n                self[mode+'popup'] = jQuery(modalDialogMessage).modal({\n                    title: title + ' <span id=\"additional_autoaction_title\" style=\"font-size: inherit;\"></span>',\n                    type: 'slide',\n                    buttons: buttonsConfig,\n                    closed: function() {\n                        ListingAutoActionObj.clear();\n\n                        var node = this.up('.modal-slide').previousSibling.previousSibling;\n                        if (node.nodeType == node.COMMENT_NODE) {\n                            node.remove();\n                        }\n\n                        this.up('.modal-slide').remove();\n                        delete self[mode+'popup'];\n\n                        return true;\n                    }\n                });\n            }\n\n            self[mode+'popup'].modal('openModal');\n            self.currentPopup = self[mode+'popup'];\n\n            try {\n                modalDialogMessage.innerHTML = content;\n                modalDialogMessage.innerHTML.evalScripts();\n            } catch (ignored) {}\n\n            var additionalTitleEl = $('additional_autoaction_title_text');\n\n            $('additional_autoaction_title').innerHTML = additionalTitleEl ? '(' + additionalTitleEl.innerHTML + ')': '';\n        },\n\n        // ---------------------------------------\n\n        addingModeChange: function()\n        {\n            $('continue_button').hide();\n            $('confirm_button').show();\n\n            if (this.value != M2ePro.php.constant('Ess_M2ePro_Model_Listing::ADDING_MODE_NONE')) {\n                $$('[id$=\"adding_add_not_visible_field\"]')[0].show();\n            } else {\n                $$('[id$=\"adding_add_not_visible\"]')[0].value = M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_ADDING_ADD_NOT_VISIBLE_YES');\n                $$('[id$=\"adding_add_not_visible_field\"]')[0].hide();\n            }\n        },\n\n        // ---------------------------------------\n\n        loadAutoCategoryForm: function(groupId, callback)\n        {\n            var popupMode = this.getPopupMode();\n\n            new Ajax.Request(M2ePro.url.get(ListingAutoActionObj.controller + '/getAutoCategoryFormHtml'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    group_id: groupId || null\n                },\n                onSuccess: function(transport) {\n\n                    this._createPopup(\n                        'category_child_',\n                        M2ePro.translator.translate('Add/Edit Categories Rule'),\n                        transport.responseText,\n                        [{\n                            label: M2ePro.translator.translate('Back'),\n                            attr: {id: popupMode+'cancel_button'},\n                            class: 'back',\n                            callback: function() {\n                                listingAutoActionModeCategoryGroupGridJsObject.doFilter();\n                            },\n                            closeModal: true\n                        },\n                        {\n                            label: M2ePro.translator.translate('Continue'),\n                            class: 'next continue_button primary forward',\n                            attr: {style: 'display: none',id: popupMode+'continue_button'}\n                        },\n                        {\n                            label: M2ePro.translator.translate('Complete'),\n                            class: 'confirm_button primary',\n                            attr: {id: popupMode+'confirm_button'},\n                            callback: function() {\n                                ListingAutoActionObj.confirm();\n                                $(popupMode+'close_button').hide();\n                                $(popupMode+'cancel_button').hide();\n                                $(popupMode+'reset_button').show();\n                            }\n                        }]\n                    );\n\n                    this.magentoCategoryTreeChangeEventInProgress = false;\n\n                    if (typeof callback == 'function') {\n                        callback();\n                    }\n                }.bind(this)\n            });\n        },\n\n        magentoCategorySelectCallback: function(selectedCategories)\n        {\n            if (this.magentoCategoryTreeChangeEventInProgress) {\n                return;\n            }\n\n            this.magentoCategoryTreeChangeEventInProgress = true;\n\n            var latestCategory = selectedCategories[selectedCategories.length - 1];\n\n            if (!latestCategory || typeof this.magentoCategoryIdsFromOtherGroups[latestCategory] == 'undefined') {\n                this.magentoCategoryTreeChangeEventInProgress = false;\n                return;\n            }\n\n            var template = $('dialog_confirm_container');\n\n            if (!template) {\n                template = new Element('div', {\n                    id: 'dialog_confirm_container'\n                });\n            }\n\n            template.innerHTML = $('dialog_confirm_content').innerHTML\n                .replace('%s', this.magentoCategoryIdsFromOtherGroups[latestCategory].title);\n\n            jQuery(template).confirm({\n                title: M2ePro.translator.translate('Remove Category'),\n                actions: {\n                    confirm: function() {\n                        new Ajax.Request(M2ePro.url.get(ListingAutoActionObj.controller + '/deleteCategory'), {\n                            method: 'post',\n                            asynchronous: true,\n                            parameters: {\n                                group_id: ListingAutoActionObj.magentoCategoryIdsFromOtherGroups[latestCategory].id,\n                                category_id: latestCategory\n                            },\n                            onSuccess: function(transport) {\n                                delete ListingAutoActionObj.magentoCategoryIdsFromOtherGroups[latestCategory];\n                            }\n                        });\n\n                        return true;\n                    },\n                    cancel: function() {\n                        tree.getNodeById(latestCategory).ui.check(false);\n                    }\n                },\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    class: 'action-secondary action-dismiss',\n                    click: function (event) {\n                        this.closeModal(event);\n                    }\n                }, {\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action-primary action-accept',\n                    click: function (event) {\n                        this.closeModal(event, true);\n                    }\n                }],\n                closed: function() {\n                    ListingAutoActionObj.magentoCategoryTreeChangeEventInProgress = false;\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        highlightBreadcrumbStep: function(step)\n        {\n            $$('[id$=\"breadcrumb_container\"] .breadcrumb').each(function(element) { element.removeClassName('selected'); });\n\n            $('step_' + step).addClassName('selected');\n        },\n\n        // ---------------------------------------\n\n        globalStepTwo: function()\n        {\n            ListingAutoActionObj.collectData();\n\n            var callback = function() {\n                jQuery('#continue_button')\n                    .off('click')\n                    .on('click', ListingAutoActionObj.globalStepThree);\n\n                ListingAutoActionObj.highlightBreadcrumbStep(2);\n            };\n\n            ListingAutoActionObj.loadCategoryChooser(callback);\n        },\n\n        globalStepThree: function()\n        {\n            if (!ListingCategoryChooserHandlerObj.validate()) {\n                return;\n            }\n\n            ListingAutoActionObj.collectData();\n\n            var callback = function() {\n                ListingAutoActionObj.highlightBreadcrumbStep(3);\n\n                $('confirm_button').show();\n                $('continue_button').hide();\n            };\n\n            ListingAutoActionObj.loadSpecific(callback);\n        },\n\n        // ---------------------------------------\n\n        websiteStepTwo: function()\n        {\n            ListingAutoActionObj.collectData();\n\n            var callback = function() {\n                jQuery('#'+ListingAutoActionObj.getPopupMode() + 'continue_button')\n                    .off('click')\n                    .on('click', ListingAutoActionObj.websiteStepThree);\n\n                ListingAutoActionObj.highlightBreadcrumbStep(2);\n            };\n\n            ListingAutoActionObj.loadCategoryChooser(callback);\n        },\n\n        websiteStepThree: function()\n        {\n            if (!ListingCategoryChooserHandlerObj.validate()) {\n                return;\n            }\n\n            ListingAutoActionObj.collectData();\n\n            var callback = function() {\n                ListingAutoActionObj.highlightBreadcrumbStep(3);\n\n                $(ListingAutoActionObj.getPopupMode() + 'confirm_button').show();\n                $(ListingAutoActionObj.getPopupMode() + 'continue_button').hide();\n            };\n\n            ListingAutoActionObj.loadSpecific(callback);\n        },\n\n        // ---------------------------------------\n\n        isCategoryAlreadyUsed: function(categoryId)\n        {\n            return this.magentoCategoryUsedIds.indexOf(categoryId) != -1;\n        },\n\n        categoryCancel: function()\n        {\n            ListingAutoActionObj.loadAutoActionHtml(\n                M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_MODE_CATEGORY')\n            );\n        },\n\n        categoryStepOne: function(groupId)\n        {\n            var mode = ListingAutoActionObj.getPopupMode();\n            this.loadAutoCategoryForm(groupId, function() {\n                $(mode+'reset_button').hide();\n                $(mode+'close_button').hide();\n                $(mode+'cancel_button').show();\n            });\n        },\n\n        categoryStepTwo: function()\n        {\n            if (!ListingAutoActionObj.validate()) {\n                return;\n            }\n\n            ListingAutoActionObj.collectData();\n\n            var mode = ListingAutoActionObj.getPopupMode();\n            var callback = function() {\n                jQuery('#' + mode+ 'continue_button')\n                    .off('click')\n                    .on('click', ListingAutoActionObj.categoryStepThree);\n\n                ListingAutoActionObj.highlightBreadcrumbStep(2);\n            };\n\n            ListingAutoActionObj.loadCategoryChooser(callback);\n        },\n\n        categoryStepThree: function()\n        {\n            ListingAutoActionObj.collectData();\n\n            var mode = ListingAutoActionObj.getPopupMode();\n            var callback = function() {\n                ListingAutoActionObj.highlightBreadcrumbStep(3);\n\n                $(mode+'confirm_button').show();\n                $(mode+'continue_button').hide();\n            };\n        },\n\n        // ---------------------------------------\n\n        categoryDeleteGroup: function(groupId)\n        {\n            this.confirmPopup(M2ePro.translator.translate('Are you sure?'), {\n                confirmCallback: function() {\n                    new Ajax.Request(M2ePro.url.get(ListingAutoActionObj.controller + '/deleteCategoryGroup'), {\n                        method: 'post',\n                        asynchronous: true,\n                        parameters: {\n                            group_id: groupId\n                        },\n                        onSuccess: function(transport) {\n                            listingAutoActionModeCategoryGroupGridJsObject.doFilter();\n                        }\n                    });\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        validate: function()\n        {\n            var validationResult = true;\n\n            this.currentPopup.find('form').each(function () {\n                validationResult = validationResult && jQuery(this).validation().valid();\n            });\n\n            return validationResult;\n        },\n\n        confirm: function()\n        {\n            if (!ListingAutoActionObj.validate()) {\n                return;\n            }\n\n            ListingAutoActionObj.collectData();\n\n            var callback;\n            if (ListingAutoActionObj.internalData.auto_mode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Listing::AUTO_MODE_CATEGORY')) {\n                callback = function() {\n                    this.category_child_popup.modal('closeModal');\n\n                    listingAutoActionModeCategoryGroupGridJsObject.doFilter();\n                }.bind(this);\n            } else {\n                callback = function() {\n                    this.currentPopup.modal('closeModal');\n                }.bind(this);\n            }\n\n            ListingAutoActionObj.submitData(callback);\n        },\n\n        collectData: function()\n        {\n            if ($('auto_mode')) {\n                switch (parseInt($('auto_mode').value)) {\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_MODE_GLOBAL'):\n                        ListingAutoActionObj.internalData = {\n                            auto_mode: $('auto_mode').value,\n                            auto_global_adding_mode: $('auto_global_adding_mode').value,\n                            auto_global_adding_add_not_visible: $('auto_global_adding_add_not_visible').value,\n                        };\n                        break;\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_MODE_WEBSITE'):\n                        ListingAutoActionObj.internalData = {\n                            auto_mode: $('auto_mode').value,\n                            auto_website_adding_mode: $('auto_website_adding_mode').value,\n                            auto_website_adding_add_not_visible: $('auto_website_adding_add_not_visible').value,\n                            auto_website_deleting_mode: $('auto_website_deleting_mode').value\n                        };\n                        break;\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Listing::AUTO_MODE_CATEGORY'):\n                        ListingAutoActionObj.internalData = {\n                            id: $('group_id').value,\n                            title: $('group_title').value,\n                            auto_mode: $('auto_mode').value,\n                            adding_mode: $('adding_mode').value,\n                            adding_add_not_visible: $('adding_add_not_visible').value,\n                            deleting_mode: $('deleting_mode').value,\n                            categories: categories_selected_items\n                        };\n                        break;\n                }\n            }\n        },\n\n        submitData: function(callback)\n        {\n            var data = this.internalData;\n\n            new Ajax.Request(M2ePro.url.get(ListingAutoActionObj.controller + '/save'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: {\n                    auto_action_data: Object.toJSON(data)\n                },\n                onSuccess: function(transport) {\n                    if (typeof callback == 'function') {\n                        callback();\n                    }\n                }\n            });\n        },\n\n        reset: function(skipConfirmation, callback, closeCallback)\n        {\n            skipConfirmation = skipConfirmation || false;\n\n            var confirmCallback = function() {\n                new Ajax.Request(M2ePro.url.get(ListingAutoActionObj.controller + '/reset'), {\n                    method: 'post',\n                    asynchronous: true,\n                    parameters: {},\n                    onSuccess: function(transport) {\n                        callback && callback();\n                        ListingAutoActionObj.loadAutoActionHtml();\n                    }\n                });\n            };\n\n            if (skipConfirmation) {\n                confirmCallback();\n                return\n            }\n\n            ListingAutoActionObj.confirmPopup(M2ePro.translator.translate('Are you sure?'), {\n                confirmCallback: confirmCallback,\n                closeCallback: closeCallback\n            });\n        },\n\n        // ---------------------------------------\n\n        confirmPopup: function(message, configData)\n        {\n            jQuery('<div>').confirm({\n                title: message,\n                actions: {\n                    always: function() {\n                        configData.closeCallback && configData.closeCallback();\n                    },\n                    confirm: function() {\n                        configData.confirmCallback && configData.confirmCallback();\n                        return true;\n                    },\n                    buttons: [\n                        {text: M2ePro.translator.translate('Cancel')},\n                        {text: M2ePro.translator.translate('Confirm'), class: 'primary'}\n                    ]\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Listing/Moving.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Action'\n], function (jQuery, modal, MessagesObj) {\n    window.ListingMoving = Class.create(Action, {\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function (options) {\n            this.options = Object.extend(this.options, options);\n            return this;\n        },\n\n        // ---------------------------------------\n\n        run: function () {\n            this.getGridHtml(\n                this.gridHandler.getSelectedProductsArray()\n            );\n        },\n\n        // ---------------------------------------\n\n        openPopUp: function (gridHtml, popup_title, buttons)\n        {\n            var self = this;\n\n            if (typeof buttons === 'undefined') {\n                buttons = [{\n                    class: 'action-default action-dismiss',\n                    text: M2ePro.translator.translate('Cancel'),\n                    click: function (event) {\n                        this.closeModal(event);\n                    }\n                }, {\n                    text: M2ePro.translator.translate('Add New Listing'),\n                    class: 'action-primary action-accept',\n                    click: function () {\n                        self.startListingCreation(M2ePro.url.get('add_new_listing_url'));\n                    }\n                }];\n            }\n\n            var modalDialogMessage = $('move_modal_dialog_message');\n\n            if (modalDialogMessage) {\n                modalDialogMessage.remove();\n            }\n\n            modalDialogMessage = new Element('div', {\n                id: 'move_modal_dialog_message'\n            });\n\n            modalDialogMessage.update(gridHtml);\n\n            this.popUp = jQuery(modalDialogMessage).modal({\n                title: popup_title,\n                type: 'slide',\n                buttons: buttons\n            });\n\n            this.popUp.modal('openModal');\n        },\n\n        // ---------------------------------------\n\n        getGridHtml: function (selectedProducts) {\n            var self = this;\n\n            MessagesObj.clear();\n\n            self.selectedProducts = selectedProducts;\n            self.gridHandler.unselectAll();\n\n            var callback = function (response) {\n                new Ajax.Request(self.options.url.get('moveToListingGridHtml'), {\n                    method: 'get',\n                    parameters: {\n                        componentMode: self.options.customData.componentMode,\n                        accountId: response.accountId,\n                        marketplaceId: response.marketplaceId,\n                        ignoreListings: self.options.customData.ignoreListings\n                    },\n                    onSuccess: function (transport) {\n                        var title = selectedProducts.length == 1 ?\n                        self.options.translator.translate('popup_title_single', self.gridHandler.getProductNameByRowId(selectedProducts[0])) :\n                            self.options.translator.translate('popup_title');\n                        self.openPopUp(transport.responseText, title);\n                    }\n                });\n            };\n\n            new Ajax.Request(self.options.url.get('prepareData'), {\n                method: 'post',\n                parameters: {\n                    componentMode: self.options.customData.componentMode,\n                    selectedProducts: Object.toJSON(self.selectedProducts)\n                },\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == 1) {\n                        self.alert(self.options.translator.translate('select_only_mapped_products'));\n                    } else if (transport.responseText == 2) {\n                        self.alert(self.options.translator.translate('select_the_same_type_products'));\n                    } else {\n                        var response = transport.responseText.evalJSON();\n\n                        if (response.offerListingCreation) {\n                            return self.offerListingCreation(\n                                response.accountId,\n                                response.marketplaceId,\n                                function () {\n                                    callback.call(self, response);\n                                }\n                            );\n                        }\n\n                        callback.call(self, response);\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        tryToSubmit: function (listingId) {\n            var self = this;\n\n            new Ajax.Request(this.options.url.get('tryToMoveToListing'), {\n                method: 'post',\n                parameters: {\n                    componentMode: this.options.customData.componentMode,\n                    selectedProducts: Object.toJSON(this.selectedProducts),\n                    listingId: listingId\n                },\n                onSuccess: (function (transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (response.result == 'success') {\n                        return this.submit(listingId);\n                    }\n\n                    new Ajax.Request(this.options.url.get('getFailedProductsHtml'), {\n                        method: 'get',\n                        parameters: {\n                            componentMode: this.options.customData.componentMode,\n                            failed_products: Object.toJSON(response.failed_products)\n                        },\n                        onSuccess: (function (transport) {\n\n                            this.popUp.modal('closeModal');\n                            this.openPopUp(\n                                transport.responseText,\n                                this.options.translator.translate('failed_products_popup_title'),\n                                [{\n                                    class: 'back',\n                                    text: M2ePro.translator.translate('Back'),\n                                    click: function (event) {\n                                        this.closeModal(event);\n                                        self.getGridHtml(self.selectedProducts);\n                                    }\n                                }, {\n                                    text: M2ePro.translator.translate('Continue'),\n                                    class: 'action-primary',\n                                    click: function () {\n                                        self.submit(listingId);\n                                    }\n                                }]\n                            );\n\n                        }).bind(this)\n                    });\n\n                }).bind(this)\n            });\n        },\n\n        // ---------------------------------------\n\n        submit: function (listingId) {\n            var self = this;\n            new Ajax.Request(self.options.url.get('moveToListing'), {\n                method: 'post',\n                parameters: {\n                    componentMode: self.options.customData.componentMode,\n                    selectedProducts: Object.toJSON(self.selectedProducts),\n                    listingId: listingId\n                },\n                onSuccess: function (transport) {\n\n                    self.popUp.modal('closeModal');\n                    self.scrollPageToTop();\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (response.result == 'success') {\n                        self.gridHandler.unselectAllAndReload();\n                        MessagesObj.addSuccessMessage(self.options.translator.translate('successfully_moved'));\n                        return;\n                    }\n\n                    var message = '';\n                    if (response.errors == self.selectedProducts.length) { // all items failed\n                        message = self.options.translator.translate('products_were_not_moved');\n                    } else {\n                        message = self.options.translator.translate('some_products_were_not_moved');\n                        self.gridHandler.unselectAllAndReload();\n                    }\n\n                    MessagesObj.addErrorMessage(str_replace('%url%', self.options.url.get('logViewUrl'), message));\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        offerListingCreation: function (accountId, marketplaceId, callback) {\n\n            var self = this;\n\n            self.confirm({\n                content: self.options.translator.translate('create_listing'),\n                actions: {\n                    confirm: function () {\n                        new Ajax.Request(self.options.url.get('createDefaultListing'), {\n                            method: 'post',\n                            parameters: {\n                                componentMode: self.options.customData.componentMode,\n                                accountId: accountId,\n                                marketplaceId: marketplaceId\n                            },\n                            onSuccess: function (transport) {\n                                callback.call(self);\n                            }\n                        });\n                    },\n                    cancel: function () {\n                        return callback.call(self);\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        startListingCreation: function (url, response) {\n            var self = this;\n            var win = window.open(url);\n\n            var intervalId = setInterval(function () {\n                if (!win.closed) {\n                    return;\n                }\n\n                clearInterval(intervalId);\n\n                listingMovingGridJsObject.reload();\n            }, 1000);\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Listing/EditTitle.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/confirm',\n    'Magento_Ui/js/modal/modal'\n], function (jQuery, confirm, modal) {\n\n    window.ListingEditListingTitle = Class.create();\n    ListingEditListingTitle.prototype = {\n\n        // ---------------------------------------\n\n        initialize: function(gridId, component) {\n            this.gridId = gridId;\n\n            CommonObj.setValidationCheckRepetitionValue(\n                'M2ePro-listing-title',\n                M2ePro.translator.translate('The specified Title is already used for other Listing. Listing Title must be unique.'),\n                'Listing', 'title', 'id', null, component\n            );\n        },\n\n        openPopup: function(id)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('listing/edit'), {\n                method: 'GET',\n                parameters: {\n                    id: id\n                },\n                onSuccess: (function(transport) {\n                    if ($('edit_form')) {\n                        $('edit_form').remove();\n                    }\n\n                    $('html-body').insert({bottom: transport.responseText});\n\n                    var form = jQuery('#edit_form');\n\n                    modal({\n                        title: M2ePro.translator.translate('Edit Listing Title'),\n                        type: 'popup',\n                        modalClass: 'width-50',\n                        buttons: [{\n                            text: M2ePro.translator.translate('Cancel'),\n                            class: 'action-secondary action-dismiss',\n                            click: function () {\n                                form.modal('closeModal');\n                            }\n                        },{\n                            text: M2ePro.translator.translate('Save'),\n                            class: 'action-primary action-accept',\n                            click: function () {\n                                EditListingTitleObj.saveListingTitle(id);\n                            }\n                        }]\n                    }, form);\n\n                    self.oldTitle = form.find('#title').val();\n                    jQuery('#edit_form').modal('openModal');\n                }).bind(this)\n            });\n        },\n\n        saveListingTitle: function()\n        {\n            var self = this,\n                form = $('edit_form'),\n                newTitle = form.select('#title')[0].value;\n\n            if (self.oldTitle == newTitle) {\n                jQuery('#edit_form').modal('closeModal');\n                return;\n            }\n\n            if (!jQuery('#edit_form').valid()) {\n                return false;\n            }\n\n            confirm({\n                content: M2ePro.translator.translate('Are you sure?'),\n                actions: {\n                    confirm: function () {\n                        new Ajax.Request(M2ePro.url.get('listing/edit'), {\n                            parameters: $('edit_form').serialize(true),\n                            onSuccess: (function(transport) {\n                                jQuery('#edit_form').modal('closeModal');\n                                window[self.gridId + 'JsObject'].reload();\n                            })\n                        });\n                    },\n                    cancel: function () {\n                        jQuery('#edit_form').modal('closeModal');\n                        return false;\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    };\n});","Ess_M2ePro/js/Listing/Other/Unmapping.js":"define([\n    'jquery',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Action'\n], function (jQuery, MessagesObj) {\n\n    window.ListingOtherUnmapping = Class.create(Action, {\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function(options)\n        {\n            this.options = Object.extend(this.options, options);\n            return this;\n        },\n\n        // ---------------------------------------\n\n        run: function()\n        {\n            this.unmappingProducts(\n                this.gridHandler.getSelectedProductsString()\n            );\n        },\n\n        unmappingProducts: function(productsString)\n        {\n            new Ajax.Request(this.options.url.get('unmappingProducts'), {\n                method: 'post',\n                parameters: {\n                    componentMode: this.options.customData.componentMode,\n                    product_ids: productsString\n                },\n                onSuccess: (function(transport) {\n\n                    MessagesObj.clear();\n\n                    if (transport.responseText == '1') {\n                        MessagesObj.addSuccessMessage(\n                            this.options.translator.translate('successfully_unmapped')\n                        );\n                    } else {\n                        MessagesObj.addErrorMessage(\n                            this.options.translator.translate('not_enough_data')\n                        );\n                    }\n\n                    this.gridHandler.unselectAllAndReload();\n                }).bind(this)\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Listing/Other/AutoMapping.js":"define([\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Action'\n], function (MessagesObj) {\n    window.ListingOtherAutoMapping = Class.create(Action, {\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function(options)\n        {\n            this.options = Object.extend(this.options,options);\n            return this;\n        },\n\n        // ---------------------------------------\n\n        run: function()\n        {\n            this.mapProductsAuto(\n                this.gridHandler.getSelectedProductsString()\n            );\n        },\n\n        // ---------------------------------------\n\n        mapProductsAuto: function(product_ids)\n        {\n            var self = this;\n            var selectedProductsString = product_ids;\n            var selectedProductsArray = selectedProductsString.split(\",\");\n\n            if (selectedProductsString == '' || selectedProductsArray.length == 0) {\n                return;\n            }\n\n            var maxProductsInPart = 10;\n\n            var result = [];\n            for (var i=0;i<selectedProductsArray.length;i++) {\n                if (result.length == 0 || result[result.length-1].length == maxProductsInPart) {\n                    result[result.length] = [];\n                }\n                result[result.length-1][result[result.length-1].length] = selectedProductsArray[i];\n            }\n\n            var selectedProductsParts = result;\n\n            ListingProgressBarObj.reset();\n            ListingProgressBarObj.show(self.options.translator.translate('automap_progress_title'));\n            GridWrapperObj.lock();\n            $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n\n            self.sendPartsOfProducts(selectedProductsParts,selectedProductsParts.length,0);\n        },\n\n        sendPartsOfProducts: function(parts,totalPartsCount,isFailed)\n        {\n            var self = this;\n\n            if (parts.length == 0) {\n                MessagesObj.clear();\n\n                if (isFailed == 1) {\n                    MessagesObj.addErrorMessage(self.options.translator.translate('failed_mapped'));\n                } else {\n                    MessagesObj.addSuccessMessage(self.options.translator.translate('successfully_mapped'));\n                }\n\n                ListingProgressBarObj.setStatus(self.options.translator.translate('task_completed_message'));\n                ListingProgressBarObj.hide();\n                ListingProgressBarObj.reset();\n                GridWrapperObj.unlock();\n                $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n\n                self.gridHandler.unselectAllAndReload();\n\n                return;\n            }\n\n            var part = parts.splice(0,1);\n            part = part[0];\n            var partString = implode(',',part);\n\n            var partExecuteString = part.length;\n            partExecuteString += '';\n\n            ListingProgressBarObj.setStatus(str_replace('%product_title%', partExecuteString, self.options.translator.translate('processing_data_message')));\n\n            new Ajax.Request(self.options.url.get('mapAutoToProduct'), {\n                method: 'post',\n                parameters: {\n                    componentMode: self.options.customData.componentMode,\n                    product_ids: partString\n                },\n                onSuccess: function(transport) {\n\n                    var percents = (100/totalPartsCount)*(totalPartsCount-parts.length);\n\n                    if (percents <= 0) {\n                        ListingProgressBarObj.setPercents(0,0);\n                    } else if (percents >= 100) {\n                        ListingProgressBarObj.setPercents(100,0);\n                    } else {\n                        ListingProgressBarObj.setPercents(percents,1);\n                    }\n\n                    if (transport.responseText == 1) {\n                        isFailed = 1;\n                    }\n\n                    setTimeout(function() {\n                        self.sendPartsOfProducts(parts,totalPartsCount,isFailed);\n                    },500);\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Listing/Other/Removing.js":"define([\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Action'\n], function (MessagesObj) {\n    window.ListingOtherRemoving = Class.create(Action, {\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function(options)\n        {\n            this.options = Object.extend(this.options, options);\n            return this;\n        },\n\n        // ---------------------------------------\n\n        run: function()\n        {\n            this.removingProducts(\n                this.gridHandler.getSelectedProductsString()\n            );\n        },\n\n        removingProducts: function(productsString)\n        {\n            new Ajax.Request(this.options.url.get('removingProducts'), {\n                method: 'post',\n                parameters: {\n                    componentMode: this.options.customData.componentMode,\n                    product_ids: productsString\n                },\n                onSuccess: (function(transport) {\n\n                    MessagesObj.clear();\n\n                    if (transport.responseText == '1') {\n                        MessagesObj.addSuccessMessage(this.options.translator.translate('successfully_removed'));\n                    } else {\n                        MessagesObj.addErrorMessage(this.options.translator.translate('not_enough_data'));\n                    }\n\n                    this.gridHandler.unselectAllAndReload();\n                }).bind(this)\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Listing/Other/Mapping.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Common'\n], function (jQuery, modal, MessagesObj) {\n    window.ListingOtherMapping = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function(gridHandler,component)\n        {\n            this.gridHandler = gridHandler;\n            this.component = component;\n\n            this.attachEvents();\n        },\n\n        // ---------------------------------------\n\n        openPopUp: function(productTitle, otherProductId)\n        {\n            this.attachEvents();\n            this.gridHandler.unselectAll();\n\n            var modalDialogMessage = $('map_modal_dialog_message');\n\n            if (!modalDialogMessage) {\n                modalDialogMessage = new Element('div', {\n                    id: 'map_modal_dialog_message'\n                });\n            }\n\n            this.popUp = jQuery(modalDialogMessage).modal({\n                title: M2ePro.translator.translate('Map Item \"%product_title%\" with Magento Product', productTitle),\n                type: 'slide',\n                buttons: []\n            });\n            this.popUp.modal('openModal');\n\n            var content = $('pop_up_content');\n            modalDialogMessage.insert(content.show());\n\n            $('other_product_id').value = otherProductId;\n        },\n\n        // ---------------------------------------\n\n        attachEvents: function()\n        {\n            var self = this;\n\n            $('mapping_submit_button').stopObserving('click').observe('click',function(event) {\n                self.map();\n            });\n            $('product_id').stopObserving('keypress').observe('keypress',function(event) {\n                event.keyCode == Event.KEY_RETURN && self.map();\n            });\n            $('sku').stopObserving('keypress').observe('keypress',function(event) {\n                event.keyCode == Event.KEY_RETURN && self.map();\n            });\n        },\n\n        // ---------------------------------------\n\n        map: function()\n        {\n            var self = this;\n            var productId = $('product_id').value;\n            var sku = $('sku').value;\n            var otherProductId = $('other_product_id').value;\n\n            MessagesObj.clear();\n\n            if (otherProductId == '' || (/^\\s*(\\d)*\\s*$/i).test(otherProductId) == false) {\n                return;\n            }\n\n            if ((sku == '' && productId == '')) {\n                $('product_id').focus();\n                self.alert(M2ePro.translator.translate('Please enter correct Product ID or SKU'));\n                return;\n            }\n            if (((/^\\s*(\\d)*\\s*$/i).test(productId) == false)) {\n                self.alert(M2ePro.translator.translate('Please enter correct Product ID.'));\n                $('product_id').focus();\n                $('product_id').value = '';\n                $('sku').value = '';\n                return;\n            }\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        new Ajax.Request(M2ePro.url.get('listing_other_mapping/map', {}), {\n                            method: 'post',\n                            parameters: {\n                                componentMode: self.component,\n                                productId: productId,\n                                sku: sku,\n                                otherProductId: otherProductId\n                            },\n                            onSuccess: function(transport) {\n\n                                if (transport.responseText == 0) {\n                                    self.gridHandler.unselectAllAndReload();\n                                    self.popUp.modal('closeModal');\n                                    self.scrollPageToTop();\n                                    MessagesObj.addSuccessMessage(\n                                        M2ePro.translator.translate('Product(s) was successfully Mapped.')\n                                    );\n                                } else if (transport.responseText == 1) {\n                                    self.alert(M2ePro.translator.translate('Product does not exist.'));\n                                } else if (transport.responseText == 2) {\n                                    self.alert(M2ePro.translator.translate('Current version only supports Simple Products. Please, choose Simple Product.'));\n                                } else if (transport.responseText == 3) {\n                                    self.popUp.modal('closeModal');\n                                    self.scrollPageToTop();\n                                    MessagesObj.addErrorMessage(\n                                        M2ePro.translator.translate('Item was not Mapped as the chosen %product_id% Simple Product has Custom Options.', productId)\n                                    );\n                                }\n                            }\n                        });\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Listing/Other/Grid.js":"define([\n    'M2ePro/Grid'\n], function () {\n    window.ListingOtherGrid = Class.create(Grid, {\n\n        // ---------------------------------------\n\n        productTitleCellIndex: 2,\n\n        // ---------------------------------------\n\n        prepareActions: function()\n        {\n            this.movingHandler      = new ListingMoving(this);\n            this.autoMappingHandler = new ListingOtherAutoMapping(this);\n            this.removingHandler    = new ListingOtherRemoving(this);\n            this.unmappingHandler   = new ListingOtherUnmapping(this);\n\n            this.actions = {\n                movingAction: this.movingHandler.run.bind(this.movingHandler),\n                autoMappingAction: this.autoMappingHandler.run.bind(this.autoMappingHandler),\n                removingAction: this.removingHandler.run.bind(this.removingHandler),\n                unmappingAction: this.unmappingHandler.run.bind(this.unmappingHandler)\n            };\n        },\n\n        // ---------------------------------------\n\n        afterInitPage: function()\n        {\n            var submitButton = $$('#'+this.gridId+'_massaction-form .admin__grid-massaction-form button');\n\n            submitButton.each((function(s) {\n                s.writeAttribute(\"onclick\",'');\n                s.observe('click', (function() {\n                    this.massActionSubmitClick();\n                }).bind(this));\n            }).bind(this));\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Listing/View/Action.js":"define([\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Action',\n    'M2ePro/Plugin/ProgressBar',\n    'M2ePro/Plugin/AreaWrapper'\n], function (MagentoMessageObj) {\n\n    window.ListingViewAction = Class.create(Action, {\n\n        // ---------------------------------------\n\n        initialize: function($super, gridHandler)\n        {\n            $super(gridHandler);\n\n            this.magentoMessageObj = Object.create(MagentoMessageObj);\n        },\n\n        // ---------------------------------------\n\n        sendPartsResponses: [],\n        errorsSummaryContainerId: 'listing_container_errors_summary',\n\n        // ---------------------------------------\n\n        options: {},\n\n        setOptions: function (options) {\n            this.options = Object.extend(this.options, options);\n            return this;\n        },\n\n        // ---------------------------------------\n\n        setProgressBar: function (progressBarId) {\n            this.progressBarObj = new ProgressBar(progressBarId);\n        },\n\n        setGridWrapper: function (wrapperId) {\n            this.gridWrapperObj = new AreaWrapper(wrapperId);\n        },\n\n        setErrorsSummaryContainer: function (containerId) {\n            this.errorsSummaryContainerId = containerId;\n        },\n\n        setActionMessagesContainer: function (containerId) {\n            this.magentoMessageObj.setContainer('#' + containerId);\n        },\n\n        // ---------------------------------------\n\n        startActions: function (title, url, selectedProductsParts, requestParams) {\n            var self = this;\n            self.magentoMessageObj.clear();\n\n            $(self.errorsSummaryContainerId).hide();\n\n            self.progressBarObj.reset();\n            self.progressBarObj.show(title);\n            self.gridWrapperObj.lock();\n\n            self.sendPartsOfProducts(selectedProductsParts, selectedProductsParts.length, url, requestParams);\n\n            $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n        },\n\n        sendPartsOfProducts: function (parts, totalPartsCount, url, requestParams) {\n            var self = this;\n\n            if (parts.length == totalPartsCount) {\n                self.sendPartsResponses = new Array();\n            }\n\n            if (parts.length == 0) {\n\n                self.progressBarObj.setPercents(100, 0);\n                self.progressBarObj.setStatus(M2ePro.translator.translate('task_completed_message'));\n\n                var combineResult = 'success';\n                for (var i = 0; i < self.sendPartsResponses.length; i++) {\n                    if (self.sendPartsResponses[i].result != 'success' && self.sendPartsResponses[i].result != 'warning') {\n                        combineResult = 'error';\n                        break;\n                    }\n                    if (self.sendPartsResponses[i].result == 'warning') {\n                        combineResult = 'warning';\n                    }\n                }\n\n                for (var i = 0; i < self.sendPartsResponses.length; i++) {\n                    if (typeof self.sendPartsResponses[i].is_processing_items != 'undefined' &&\n                        self.sendPartsResponses[i].is_processing_items == true) {\n                        self.magentoMessageObj.addNoticeMessage(self.options.text.locked_obj_notice);\n                        break;\n                    }\n                }\n\n                if (combineResult == 'error') {\n\n                    var message = M2ePro.translator.translate('task_completed_error_message');\n                    message = message.replace('%task_title%', self.progressBarObj.getTitle());\n                    message = message.replace('%url%', M2ePro.url.get('logViewUrl'));\n\n                    self.magentoMessageObj.addErrorMessage(message);\n\n                    var actionIds = '';\n                    for (var i = 0; i < self.sendPartsResponses.length; i++) {\n                        if (actionIds != '') {\n                            actionIds += ',';\n                        }\n                        actionIds += self.sendPartsResponses[i].action_id;\n                    }\n\n                    new Ajax.Request(M2ePro.url.get('getErrorsSummary') + 'action_ids/' + actionIds + '/', {\n                        method: 'get',\n                        onSuccess: function (transportSummary) {\n                            $(self.errorsSummaryContainerId).innerHTML = transportSummary.responseText;\n                            $(self.errorsSummaryContainerId).show();\n                        }\n                    });\n\n                } else if (combineResult == 'warning') {\n                    var message = M2ePro.translator.translate('task_completed_warning_message');\n                    message = message.replace('%task_title%', self.progressBarObj.getTitle());\n                    message = message.replace('%url%', M2ePro.url.get('logViewUrl'));\n\n                    self.magentoMessageObj.addWarningMessage(message);\n                } else {\n                    var message = M2ePro.translator.translate('task_completed_success_message');\n                    message = message.replace('%task_title%', self.progressBarObj.getTitle());\n\n                    self.magentoMessageObj.addSuccessMessage(message);\n                }\n\n                self.progressBarObj.hide();\n                self.progressBarObj.reset();\n                self.gridWrapperObj.unlock();\n                $$('.loading-mask').invoke('setStyle', {visibility: 'visible'});\n\n                self.sendPartsResponses = new Array();\n\n                self.gridHandler.unselectAllAndReload();\n\n                return;\n            }\n\n            var part = parts.splice(0, 1);\n            part = part[0];\n            var partString = implode(',', part);\n\n            var partExecuteString = '';\n\n            if (part.length <= 2 && self.gridHandler.gridId != 'amazonVariationProductManageGrid') {\n\n                for (var i = 0; i < part.length; i++) {\n\n                    if (i != 0) {\n                        partExecuteString += ', ';\n                    }\n\n                    var temp = self.gridHandler.getProductNameByRowId(part[i]);\n\n                    if (temp != '') {\n                        if (temp.length > 75) {\n                            temp = temp.substr(0, 75) + '...';\n                        }\n                        partExecuteString += '\"' + temp + '\"';\n                    } else {\n                        partExecuteString = part.length;\n                        break;\n                    }\n                }\n\n            } else {\n                partExecuteString = part.length;\n            }\n\n            partExecuteString += '';\n\n            self.progressBarObj.setStatus(\n                str_replace(\n                    '%product_title%',\n                    partExecuteString,\n                    M2ePro.translator.translate('sending_data_message')\n                )\n            );\n\n            if (typeof requestParams == 'undefined') {\n                requestParams = {}\n            }\n\n            requestParams['selected_products'] = partString;\n\n            new Ajax.Request(url + 'id/' + self.gridHandler.listingId, {\n                method: 'post',\n                parameters: requestParams,\n                onSuccess: function (transport) {\n\n                    if (!transport.responseText.isJSON()) {\n\n                        if (transport.responseText != '') {\n                            self.alert(transport.responseText);\n                        }\n\n                        self.progressBarObj.hide();\n                        self.progressBarObj.reset();\n                        self.gridWrapperObj.unlock();\n                        $$('.loading-mask').invoke('setStyle', {visibility: 'visible'});\n\n                        self.sendPartsResponses = new Array();\n\n                        self.gridHandler.unselectAllAndReload();\n\n                        return;\n                    }\n\n                    var response = transport.responseText.evalJSON(true);\n\n                    if (response.error) {\n                        self.progressBarObj.hide();\n                        self.progressBarObj.reset();\n                        self.gridWrapperObj.unlock();\n                        $$('.loading-mask').invoke('setStyle', {visibility: 'visible'});\n\n                        self.sendPartsResponses = new Array();\n\n                        self.alert(response.message);\n\n                        return;\n                    }\n\n                    self.sendPartsResponses[self.sendPartsResponses.length] = response;\n\n                    var percents = (100 / totalPartsCount) * (totalPartsCount - parts.length);\n\n                    if (percents <= 0) {\n                        self.progressBarObj.setPercents(0, 0);\n                    } else if (percents >= 100) {\n                        self.progressBarObj.setPercents(100, 0);\n                    } else {\n                        self.progressBarObj.setPercents(percents, 1);\n                    }\n\n                    setTimeout(function () {\n                        self.sendPartsOfProducts(parts, totalPartsCount, url);\n                    }, 500);\n                }\n            });\n\n            return;\n        },\n\n        // ---------------------------------------\n\n        listAction: function () {\n            var selectedProductsParts = this.gridHandler.getSelectedItemsParts();\n            if (selectedProductsParts.length == 0) {\n                return;\n            }\n\n            this.startActions(\n                M2ePro.translator.translate('listing_selected_items_message'),\n                M2ePro.url.get('runListProducts'),\n                selectedProductsParts\n            );\n        },\n\n        relistAction: function () {\n            var selectedProductsParts = this.gridHandler.getSelectedItemsParts();\n            if (selectedProductsParts.length == 0) {\n                return;\n            }\n\n            this.startActions(\n                M2ePro.translator.translate('relisting_selected_items_message'),\n                M2ePro.url.get('runRelistProducts'),\n                selectedProductsParts\n            );\n        },\n\n        reviseAction: function () {\n            var selectedProductsParts = this.gridHandler.getSelectedItemsParts();\n            if (selectedProductsParts.length == 0) {\n                return;\n            }\n\n            this.startActions(\n                M2ePro.translator.translate('revising_selected_items_message'),\n                M2ePro.url.get('runReviseProducts'),\n                selectedProductsParts\n            );\n        },\n\n        stopAction: function () {\n            var selectedProductsParts = this.gridHandler.getSelectedItemsParts();\n            if (selectedProductsParts.length == 0) {\n                return;\n            }\n\n            this.startActions(\n                M2ePro.translator.translate('stopping_selected_items_message'),\n                M2ePro.url.get('runStopProducts'),\n                selectedProductsParts\n            );\n        },\n\n        stopAndRemoveAction: function () {\n            var selectedProductsParts = this.gridHandler.getSelectedItemsParts();\n            if (selectedProductsParts.length == 0) {\n                return;\n            }\n\n            this.startActions(\n                M2ePro.translator.translate('stopping_and_removing_selected_items_message'),\n                M2ePro.url.get('runStopAndRemoveProducts'),\n                selectedProductsParts\n            );\n        },\n\n        previewItemsAction: function () {\n            var orderedSelectedProductsArray = this.gridHandler.getOrderedSelectedProductsArray();\n            if (orderedSelectedProductsArray.length == 0) {\n                return;\n            }\n\n            this.openWindow(\n                M2ePro.url.get('previewItems') + 'productIds/' + implode(',', orderedSelectedProductsArray)\n                + '/currentProductId/' + orderedSelectedProductsArray[0]\n            );\n        },\n\n        startTranslateAction: function () {\n            var selectedProductsParts = this.gridHandler.getSelectedItemsParts(100);\n            if (selectedProductsParts.length == 0) {\n                return;\n            }\n\n            var self = this;\n            EbayListingTransferringTranslateHandlerObj.loadActionHtml(\n                self.gridHandler.getSelectedProductsArray(),\n                function () {\n                    self.startActions(\n                        self.options.text.start_translate_selected_items_message,\n                        self.options.url.get('runStartTranslateProducts'),\n                        selectedProductsParts\n                    );\n                }, function () {\n                    self.gridHandler.unselectAll();\n                });\n        },\n\n        stopTranslateAction: function () {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        var selectedProductsParts = self.gridHandler.getSelectedItemsParts(100);\n                        if (selectedProductsParts.length == 0) {\n                            return;\n                        }\n\n                        self.startActions(\n                            self.options.text.stop_translate_selected_items_message,\n                            self.options.url.get('runStopTranslateProducts'),\n                            selectedProductsParts\n                        );\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Listing/View/Grid.js":"define([\n    'M2ePro/Grid',\n    'M2ePro/Listing/View/Action'\n], function () {\n\n    window.ListingViewGrid = Class.create(Grid, {\n\n        // ---------------------------------------\n\n        productIdCellIndex: 1,\n        productTitleCellIndex: 2,\n\n        // ---------------------------------------\n\n        initialize: function($super,gridId,listingId)\n        {\n            this.listingId = listingId;\n\n            $super(gridId);\n        },\n\n        // ---------------------------------------\n\n        getProductIdByRowId: function(rowId)\n        {\n            return this.getCellContent(rowId,this.productIdCellIndex);\n        },\n\n        // ---------------------------------------\n\n        getSelectedItemsParts: function(maxProductsInPart)\n        {\n            var selectedProductsArray = this.getSelectedProductsArray();\n\n            if (this.getSelectedProductsString() == '' || selectedProductsArray.length == 0) {\n                return [];\n            }\n\n            maxProductsInPart = maxProductsInPart || this.getMaxProductsInPart();\n\n            var result = [];\n            for (var i=0;i<selectedProductsArray.length;i++) {\n                if (result.length == 0 || result[result.length-1].length == maxProductsInPart) {\n                    result[result.length] = [];\n                }\n                result[result.length-1][result[result.length-1].length] = selectedProductsArray[i];\n            }\n\n            return result;\n        },\n\n        // ---------------------------------------\n\n        getMaxProductsInPart: function()\n        {\n            alert('abstract getMaxProductsInPart');\n        },\n\n        //########################################\n\n        prepareActions: function()\n        {\n            this.actionHandler = new ListingViewAction(this);\n\n            this.actions = {\n                listAction: this.actionHandler.listAction.bind(this.actionHandler),\n                relistAction: this.actionHandler.relistAction.bind(this.actionHandler),\n                reviseAction: this.actionHandler.reviseAction.bind(this.actionHandler),\n                stopAction: this.actionHandler.stopAction.bind(this.actionHandler),\n                stopAndRemoveAction: this.actionHandler.stopAndRemoveAction.bind(this.actionHandler),\n                previewItemsAction: this.actionHandler.previewItemsAction.bind(this.actionHandler),\n                startTranslateAction: this.actionHandler.startTranslateAction.bind(this.actionHandler),\n                stopTranslateAction: this.actionHandler.stopTranslateAction.bind(this.actionHandler)\n            };\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Listing/Category/Tree.js":"define([\n    'M2ePro/Common',\n    'extjs/ext-tree-checkbox'\n], function () {\n    window.ListingCategoryTree = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function() {},\n\n        // ---------------------------------------\n\n        tree_buildCategory: function(parent, config)\n        {\n            if (!config) {\n                return;\n            }\n\n            if (parent && config && config.length) {\n                for (var i = 0; i < config.length; i++) {\n\n                    config[i].uiProvider = Ext.tree.CheckboxNodeUI;\n\n                    var node = new Ext.tree.TreeNode(config[i]);\n\n                    for (var j=0;j<initTreeSelectedNodes.length;j++) {\n                        if (config[i].id == initTreeSelectedNodes[j][0]) {\n                            initTreeSelectedNodes[j][1] = node;\n                            initTreeSelectedNodes[j][1].attributes.checked = true;\n                            break;\n                        }\n                    }\n\n                    for (var k=0;k<initTreeHighlightedNodes.length;k++) {\n                        if (config[i].id == initTreeHighlightedNodes[k][0]) {\n                            initTreeHighlightedNodes[k][1] = node;\n                            break;\n                        }\n                    }\n\n                    parent.appendChild(node);\n\n                    if (config[i].children) {\n                        ListingCategoryTreeObj.tree_buildCategory(node, config[i].children);\n                    }\n                }\n            }\n        },\n\n        tree_processChildren: function(node, state)\n        {\n            if (!node.hasChildNodes()) {\n                return false;\n            }\n\n            for (var i = 0; i < node.childNodes.length; i++) {\n                node.childNodes[i].ui.check(state);\n                if (node.childNodes[i].hasChildNodes()) {\n                    ListingCategoryTreeObj.tree_processChildren(node.childNodes[i], state);\n                }\n            }\n\n            return true;\n        },\n\n        tree_categoryAdd: function(id)\n        {\n            categories_selected_items.push(id);\n            array_unique(categories_selected_items);\n        },\n\n        tree_categoryRemove: function(id)\n        {\n            while (categories_selected_items.indexOf(id) != -1) {\n                categories_selected_items.splice(categories_selected_items.indexOf(id), 1);\n            }\n\n            array_unique(categories_selected_items);\n        },\n\n        getCategoryTitleById: function(id)\n        {\n            return tree.getNodeById(id).ui.getTextEl().innerHTML;\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Listing/Product/Grid.js":"define([\n    'M2ePro/Magento/Product/Grid'\n], function () {\n\n    window.ListingProductGrid = Class.create(MagentoProductGrid, {\n\n        // ---------------------------------------\n\n        // ---------------------------------------\n\n    });\n\n});","Magento_Downloadable/downloadable-type-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'Magento_Catalog/js/product/weight-handler',\n    'Magento_Catalog/catalog/type-events'\n], function ($, weight, productType) {\n    'use strict';\n\n    return {\n        $checkbox: $('[data-action=change-type-product-downloadable]'),\n        $items: $('#product_info_tabs_downloadable_items'),\n        $tab: null,\n        isDownloadable: false,\n\n        /**\n         * Show\n         */\n        show: function () {\n            this.$checkbox.prop('checked', true);\n            this.$items.show();\n        },\n\n        /**\n         * Hide\n         */\n        hide: function () {\n            this.$checkbox.prop('checked', false);\n            this.$items.hide();\n        },\n\n        /**\n         * Constructor component\n         * @param {Object} data - this backend data\n         */\n        'Magento_Downloadable/downloadable-type-handler': function (data) {\n            this.$tab = $('[data-tab=' + data.tabId + ']');\n            this.isDownloadable = data.isDownloadable;\n            this.bindAll();\n            this._initType();\n        },\n\n        /**\n         * Bind all\n         */\n        bindAll: function () {\n            this.$checkbox.on('change', function (event) {\n                $(document).trigger('setTypeProduct', $(event.target).prop('checked') ?\n                    'downloadable' :\n                    productType.type.init === 'downloadable' ? 'virtual' : productType.type.init\n                );\n            });\n\n            $(document).on('changeTypeProduct', this._initType.bind(this));\n        },\n\n        /**\n         * Init type\n         * @private\n         */\n        _initType: function () {\n            if (productType.type.current === 'downloadable') {\n                weight.change(false);\n                weight.$weightSwitcher().one('change', function () {\n                    $(document).trigger(\n                        'setTypeProduct',\n                        productType.type.init === 'downloadable' ? 'virtual' : productType.type.init\n                    );\n                });\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n    };\n});\n","Magento_Downloadable/js/components/upload-type-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/element/select',\n    'uiRegistry'\n], function (Select, registry) {\n    'use strict';\n\n    return Select.extend({\n        defaults: {\n            listens: {\n                value: 'changeTypeUpload'\n            },\n            typeUrl: 'file',\n            typeFile: 'link_url',\n            filterPlaceholder: 'ns = ${ $.ns }, parentScope = ${ $.parentScope }'\n        },\n\n        /**\n         * Initialize component.\n         * @returns {Element}\n         */\n        initialize: function () {\n            return this\n                ._super()\n                .changeTypeUpload(this.initialValue);\n        },\n\n        /**\n         * Callback that fires when 'value' property is updated.\n         *\n         * @param {String} currentValue\n         * @returns {*}\n         */\n        onUpdate: function (currentValue) {\n            this.changeTypeUpload(currentValue);\n\n            return this._super();\n        },\n\n        /**\n         * Change visibility for typeUrl/typeFile based on current value.\n         *\n         * @param {String} currentValue\n         */\n        changeTypeUpload: function (currentValue) {\n            var componentFile = this.filterPlaceholder + ', index=' + this.typeFile,\n                componentUrl = this.filterPlaceholder + ', index=' + this.typeUrl;\n\n            switch (currentValue) {\n\n                case 'file':\n                    this.changeVisible(componentFile, true);\n                    this.changeVisible(componentUrl, false);\n                    break;\n\n                case 'url':\n                    this.changeVisible(componentFile, false);\n                    this.changeVisible(componentUrl, true);\n                    break;\n            }\n        },\n\n        /**\n         * Change visible\n         *\n         * @param {String} filter\n         * @param {Boolean} visible\n         */\n        changeVisible: function (filter, visible) {\n            registry.async(filter)(\n                function (currentComponent) {\n                    currentComponent.visible(visible);\n                }\n            );\n        }\n    });\n});\n","Magento_Downloadable/js/components/use-price-default-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/element/single-checkbox'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            linksPurchasedSeparately: '0',\n            listens: {\n                linksPurchasedSeparately: 'changeVisibleStatus'\n            }\n        },\n\n        /**\n         * Change visibility of checkbox\n         */\n        changeVisibleStatus: function () {\n            if (this.linksPurchasedSeparately === '1') {\n                this.visible(true);\n            } else {\n                this.visible(false);\n            }\n        }\n    });\n});\n","Magento_Downloadable/js/components/is-downloadable-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/element/single-checkbox'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            listens: {\n                disabled: 'changeVisibility'\n            },\n            modules: {\n                samplesFieldset: '${ $.samplesFieldset }',\n                linksFieldset: '${ $.linksFieldset}'\n            }\n        },\n\n        /**\n         * Change visibility for samplesFieldset & linksFieldset based on current statuses of checkbox.\n         */\n        changeVisibility: function () {\n            if (this.samplesFieldset() && this.linksFieldset()) {\n                if (this.checked() && !this.disabled()) {\n                    this.samplesFieldset().visible(true);\n                    this.linksFieldset().visible(true);\n                } else {\n                    this.samplesFieldset().visible(false);\n                    this.linksFieldset().visible(false);\n                }\n            }\n        },\n\n        /**\n         * Handle checked state changes for checkbox / radio button.\n         *\n         * @param {Boolean} newChecked\n         */\n        onCheckedChanged: function (newChecked) {\n            this.changeVisibility();\n            this._super(newChecked);\n        }\n    });\n});\n","Magento_Downloadable/js/components/file-uploader.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/element/file-uploader'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            fileInputName: ''\n        },\n\n        /**\n         * Adds provided file to the files list.\n         *\n         * @param {Object} file\n         * @returns {FileUploder} Chainable.\n         */\n        addFile: function (file) {\n            var processedFile = this.processFile(file),\n                tmpFile = [],\n                resultFile = {\n                'file': processedFile.file,\n                'name': processedFile.name,\n                'size': processedFile.size,\n                'status': processedFile.status ? processedFile.status : 'new'\n            };\n\n            tmpFile[0] = resultFile;\n\n            this.isMultipleFiles ?\n                this.value.push(tmpFile) :\n                this.value(tmpFile);\n\n            return this;\n        }\n    });\n});\n","Magento_Downloadable/js/components/price-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/element/abstract'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            linksPurchasedSeparately: '0',\n            useDefaultPrice: false,\n            listens: {\n                linksPurchasedSeparately: 'changeDisabledStatus',\n                useDefaultPrice: 'changeDisabledStatus'\n            }\n        },\n\n        /**\n         * Invokes initialize method of parent class,\n         * contains initialization logic\n         */\n        initialize: function () {\n            this._super();\n            this.changeDisabledStatus();\n\n            return this;\n        },\n\n        /**\n         * Disable/enable price field\n         */\n        changeDisabledStatus: function () {\n            if (this.linksPurchasedSeparately === '1') {\n                if (this.useDefaultPrice) {\n                    this.disabled(true);\n                } else {\n                    this.disabled(false);\n                }\n            } else {\n                this.disabled(true);\n            }\n        }\n    });\n});\n","Magento_CatalogInventory/js/components/qty-validator-changer.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/form/element/abstract'\n], function (Abstract) {\n    'use strict';\n\n    return Abstract.extend({\n        defaults: {\n            valueUpdate: 'input'\n        },\n\n        /**\n         * Change validator\n         */\n        handleChanges: function (value) {\n            var isDigits = value !== 1;\n\n            this.validation['validate-integer'] = isDigits;\n            this.validation['less-than-equals-to'] = isDigits ? 99999999 : 99999999.9999;\n            this.validate();\n        }\n    });\n});\n","Magento_CatalogInventory/js/components/use-config-min-sale-qty.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/form/element/single-checkbox',\n    'underscore',\n    'uiRegistry'\n], function (checkbox, _, registry) {\n    'use strict';\n\n    return checkbox.extend({\n        defaults: {\n            valueFromConfig: ''\n        },\n\n        /**\n         * @returns {Element}\n         */\n        initObservable: function () {\n            return this\n                ._super()\n                .observe(['valueFromConfig']);\n        },\n\n        /**\n         * @inheritdoc\n         */\n        initialize: function () {\n            this._super();\n            this.onCheckedChanged(this.checked());\n\n            return this;\n        },\n\n        /**\n         * @inheritdoc\n         */\n        'onCheckedChanged': function (newChecked) {\n            var valueFromConfig = this.valueFromConfig();\n\n            if (newChecked && (_.isArray(valueFromConfig) && valueFromConfig.length === 0 || valueFromConfig === 1)) {\n                this.changeVisibleDisabled(this.inputField, true, true, 1);\n            } else if (newChecked && _.isObject(valueFromConfig)) {\n                this.changeVisibleDisabled(this.inputField, false, true, null);\n                this.changeVisibleDisabled(this.dynamicRowsField, true, true, null);\n            } else if (newChecked && _.isNumber(valueFromConfig)) {\n                this.changeVisibleDisabled(this.inputField, true, true, null);\n                this.changeVisibleDisabled(this.dynamicRowsField, false, true, null);\n            } else {\n                this.changeVisibleDisabled(this.inputField, true, false, null);\n                this.changeVisibleDisabled(this.dynamicRowsField, false, true, null);\n            }\n\n            this._super(newChecked);\n        },\n\n        /**\n         * Change visible and disabled\n         *\n         * @param {String} filter\n         * @param {Boolean} visible\n         * @param {Boolean} disabled\n         * @param {Null|Number} valueFromConfig\n         */\n        changeVisibleDisabled: function (filter, visible, disabled, valueFromConfig) {\n            registry.async(filter)(\n                function (currentComponent) {\n                    var initialValue = currentComponent.initialValue;\n\n                    if (_.isString(initialValue) || initialValue === 0 || valueFromConfig === 1) {\n                        currentComponent.value(1);\n                    } else if (initialValue) {\n                        currentComponent.value(initialValue);\n                    }\n\n                    currentComponent.visible(visible);\n                    currentComponent.disabled(disabled);\n                }\n            );\n        }\n    });\n});\n","Magento_CatalogInventory/js/components/use-config-settings.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/form/element/single-checkbox'\n], function (checkbox) {\n    'use strict';\n\n    return checkbox.extend({\n        defaults: {\n            valueFromConfig: '',\n            linkedValue: ''\n        },\n\n        /**\n         * @returns {Element}\n         */\n        initObservable: function () {\n            return this\n                ._super()\n                .observe(['valueFromConfig', 'linkedValue']);\n        },\n\n        /**\n         * @inheritdoc\n         */\n        'onCheckedChanged': function (newChecked) {\n            if (newChecked) {\n                this.linkedValue(this.valueFromConfig());\n            }\n\n            this._super(newChecked);\n        }\n    });\n});\n"}
}});
