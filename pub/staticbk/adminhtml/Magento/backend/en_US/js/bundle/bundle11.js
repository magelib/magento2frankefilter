require.config({"config": {
        "jsbuild":{"knockoutjs/knockout.js":"/*!\n * Knockout JavaScript library v3.3.0\n * (c) Steven Sanderson - http://knockoutjs.com/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n(function(){\nvar DEBUG=true;\n(function(undefined){\n    // (0, eval)('this') is a robust way of getting a reference to the global object\n    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\n    var window = this || (0, eval)('this'),\n        document = window['document'],\n        navigator = window['navigator'],\n        jQueryInstance = window[\"jQuery\"],\n        JSON = window[\"JSON\"];\n(function(factory) {\n    // Support three module loading scenarios\n    if (typeof define === 'function' && define['amd']) {\n        // [1] AMD anonymous module\n        define(['exports', 'require'], factory);\n    } else if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n        // [2] CommonJS/Node.js\n        factory(module['exports'] || exports);  // module.exports is for Node.js\n    } else {\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\n        factory(window['ko'] = {});\n    }\n}(function(koExports, amdRequire){\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\nvar ko = typeof koExports !== 'undefined' ? koExports : {};\n// Google Closure Compiler helpers (used only to make the minified file smaller)\nko.exportSymbol = function(koPath, object) {\n    var tokens = koPath.split(\".\");\n\n    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\n    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\n    var target = ko;\n\n    for (var i = 0; i < tokens.length - 1; i++)\n        target = target[tokens[i]];\n    target[tokens[tokens.length - 1]] = object;\n};\nko.exportProperty = function(owner, publicName, object) {\n    owner[publicName] = object;\n};\nko.version = \"3.3.0\";\n\nko.exportSymbol('version', ko.version);\nko.utils = (function () {\n    function objectForEach(obj, action) {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                action(prop, obj[prop]);\n            }\n        }\n    }\n\n    function extend(target, source) {\n        if (source) {\n            for(var prop in source) {\n                if(source.hasOwnProperty(prop)) {\n                    target[prop] = source[prop];\n                }\n            }\n        }\n        return target;\n    }\n\n    function setPrototypeOf(obj, proto) {\n        obj.__proto__ = proto;\n        return obj;\n    }\n\n    var canSetPrototype = ({ __proto__: [] } instanceof Array);\n\n    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\n    var knownEvents = {}, knownEventTypesByEventName = {};\n    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\n    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\n    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n    objectForEach(knownEvents, function(eventType, knownEventsForType) {\n        if (knownEventsForType.length) {\n            for (var i = 0, j = knownEventsForType.length; i < j; i++)\n                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\n        }\n    });\n    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\n\n    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n    // If there is a future need to detect specific versions of IE10+, we will amend this.\n    var ieVersion = document && (function() {\n        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\n\n        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n        while (\n            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\n            iElems[0]\n        ) {}\n        return version > 4 ? version : undefined;\n    }());\n    var isIe6 = ieVersion === 6,\n        isIe7 = ieVersion === 7;\n\n    function isClickOnCheckableElement(element, eventType) {\n        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\n        if (eventType.toLowerCase() != \"click\") return false;\n        var inputType = element.type;\n        return (inputType == \"checkbox\") || (inputType == \"radio\");\n    }\n\n    // For details on the pattern for changing node classes\n    // see: https://github.com/knockout/knockout/issues/1597\n    var cssClassNameRegex = /\\S+/g;\n\n    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n        var addOrRemoveFn;\n        if (classNames) {\n            if (typeof node.classList === 'object') {\n                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n                    addOrRemoveFn.call(node.classList, className);\n                });\n            } else if (typeof node.className['baseVal'] === 'string') {\n                // SVG tag .classNames is an SVGAnimatedString instance\n                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n            } else {\n                // node.className ought to be a string.\n                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n            }\n        }\n    }\n\n    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n        });\n        obj[prop] = currentClassNames.join(\" \");\n    }\n\n    return {\n        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\n\n        arrayForEach: function (array, action) {\n            for (var i = 0, j = array.length; i < j; i++)\n                action(array[i], i);\n        },\n\n        arrayIndexOf: function (array, item) {\n            if (typeof Array.prototype.indexOf == \"function\")\n                return Array.prototype.indexOf.call(array, item);\n            for (var i = 0, j = array.length; i < j; i++)\n                if (array[i] === item)\n                    return i;\n            return -1;\n        },\n\n        arrayFirst: function (array, predicate, predicateOwner) {\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate.call(predicateOwner, array[i], i))\n                    return array[i];\n            return null;\n        },\n\n        arrayRemoveItem: function (array, itemToRemove) {\n            var index = ko.utils.arrayIndexOf(array, itemToRemove);\n            if (index > 0) {\n                array.splice(index, 1);\n            }\n            else if (index === 0) {\n                array.shift();\n            }\n        },\n\n        arrayGetDistinctValues: function (array) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++) {\n                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\n                    result.push(array[i]);\n            }\n            return result;\n        },\n\n        arrayMap: function (array, mapping) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                result.push(mapping(array[i], i));\n            return result;\n        },\n\n        arrayFilter: function (array, predicate) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate(array[i], i))\n                    result.push(array[i]);\n            return result;\n        },\n\n        arrayPushAll: function (array, valuesToPush) {\n            if (valuesToPush instanceof Array)\n                array.push.apply(array, valuesToPush);\n            else\n                for (var i = 0, j = valuesToPush.length; i < j; i++)\n                    array.push(valuesToPush[i]);\n            return array;\n        },\n\n        addOrRemoveItem: function(array, value, included) {\n            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\n            if (existingEntryIndex < 0) {\n                if (included)\n                    array.push(value);\n            } else {\n                if (!included)\n                    array.splice(existingEntryIndex, 1);\n            }\n        },\n\n        canSetPrototype: canSetPrototype,\n\n        extend: extend,\n\n        setPrototypeOf: setPrototypeOf,\n\n        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\n\n        objectForEach: objectForEach,\n\n        objectMap: function(source, mapping) {\n            if (!source)\n                return source;\n            var target = {};\n            for (var prop in source) {\n                if (source.hasOwnProperty(prop)) {\n                    target[prop] = mapping(source[prop], prop, source);\n                }\n            }\n            return target;\n        },\n\n        emptyDomNode: function (domNode) {\n            while (domNode.firstChild) {\n                ko.removeNode(domNode.firstChild);\n            }\n        },\n\n        moveCleanedNodesToContainerElement: function(nodes) {\n            // Ensure it's a real array, as we're about to reparent the nodes and\n            // we don't want the underlying collection to change while we're doing that.\n            var nodesArray = ko.utils.makeArray(nodes);\n            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\n\n            var container = templateDocument.createElement('div');\n            for (var i = 0, j = nodesArray.length; i < j; i++) {\n                container.appendChild(ko.cleanNode(nodesArray[i]));\n            }\n            return container;\n        },\n\n        cloneNodes: function (nodesArray, shouldCleanNodes) {\n            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\n                var clonedNode = nodesArray[i].cloneNode(true);\n                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\n            }\n            return newNodesArray;\n        },\n\n        setDomNodeChildren: function (domNode, childNodes) {\n            ko.utils.emptyDomNode(domNode);\n            if (childNodes) {\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    domNode.appendChild(childNodes[i]);\n            }\n        },\n\n        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\n            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\n            if (nodesToReplaceArray.length > 0) {\n                var insertionPoint = nodesToReplaceArray[0];\n                var parent = insertionPoint.parentNode;\n                for (var i = 0, j = newNodesArray.length; i < j; i++)\n                    parent.insertBefore(newNodesArray[i], insertionPoint);\n                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\n                    ko.removeNode(nodesToReplaceArray[i]);\n                }\n            }\n        },\n\n        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\n            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\n            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\n            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\n            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\n            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\n            //\n            // Rules:\n            //   [A] Any leading nodes that have been removed should be ignored\n            //       These most likely correspond to memoization nodes that were already removed during binding\n            //       See https://github.com/SteveSanderson/knockout/pull/440\n            //   [B] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\n            //       and include any nodes that have been inserted among the previous collection\n\n            if (continuousNodeArray.length) {\n                // The parent node can be a virtual element; so get the real parent node\n                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\n\n                // Rule [A]\n                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\n                    continuousNodeArray.splice(0, 1);\n\n                // Rule [B]\n                if (continuousNodeArray.length > 1) {\n                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\n                    // Replace with the actual new continuous node set\n                    continuousNodeArray.length = 0;\n                    while (current !== last) {\n                        continuousNodeArray.push(current);\n                        current = current.nextSibling;\n                        if (!current) // Won't happen, except if the developer has manually removed some DOM elements (then we're in an undefined scenario)\n                            return;\n                    }\n                    continuousNodeArray.push(last);\n                }\n            }\n            return continuousNodeArray;\n        },\n\n        setOptionNodeSelectionState: function (optionNode, isSelected) {\n            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\n            if (ieVersion < 7)\n                optionNode.setAttribute(\"selected\", isSelected);\n            else\n                optionNode.selected = isSelected;\n        },\n\n        stringTrim: function (string) {\n            return string === null || string === undefined ? '' :\n                string.trim ?\n                    string.trim() :\n                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n        },\n\n        stringStartsWith: function (string, startsWith) {\n            string = string || \"\";\n            if (startsWith.length > string.length)\n                return false;\n            return string.substring(0, startsWith.length) === startsWith;\n        },\n\n        domNodeIsContainedBy: function (node, containedByNode) {\n            if (node === containedByNode)\n                return true;\n            if (node.nodeType === 11)\n                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\n            if (containedByNode.contains)\n                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\n            if (containedByNode.compareDocumentPosition)\n                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\n            while (node && node != containedByNode) {\n                node = node.parentNode;\n            }\n            return !!node;\n        },\n\n        domNodeIsAttachedToDocument: function (node) {\n            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\n        },\n\n        anyDomNodeIsAttachedToDocument: function(nodes) {\n            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\n        },\n\n        tagNameLower: function(element) {\n            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\n            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\n            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\n            return element && element.tagName && element.tagName.toLowerCase();\n        },\n\n        registerEventHandler: function (element, eventType, handler) {\n            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\n            if (!mustUseAttachEvent && jQueryInstance) {\n                jQueryInstance(element)['bind'](eventType, handler);\n            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\n                element.addEventListener(eventType, handler, false);\n            else if (typeof element.attachEvent != \"undefined\") {\n                var attachEventHandler = function (event) { handler.call(element, event); },\n                    attachEventName = \"on\" + eventType;\n                element.attachEvent(attachEventName, attachEventHandler);\n\n                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\n                // so to avoid leaks, we have to remove them manually. See bug #856\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n                    element.detachEvent(attachEventName, attachEventHandler);\n                });\n            } else\n                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\n        },\n\n        triggerEvent: function (element, eventType) {\n            if (!(element && element.nodeType))\n                throw new Error(\"element must be a DOM node when calling triggerEvent\");\n\n            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\n            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\n            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\n            // In both cases, we'll use the click method instead.\n            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\n\n            if (jQueryInstance && !useClickWorkaround) {\n                jQueryInstance(element)['trigger'](eventType);\n            } else if (typeof document.createEvent == \"function\") {\n                if (typeof element.dispatchEvent == \"function\") {\n                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\n                    var event = document.createEvent(eventCategory);\n                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\n                    element.dispatchEvent(event);\n                }\n                else\n                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\n            } else if (useClickWorkaround && element.click) {\n                element.click();\n            } else if (typeof element.fireEvent != \"undefined\") {\n                element.fireEvent(\"on\" + eventType);\n            } else {\n                throw new Error(\"Browser doesn't support triggering events\");\n            }\n        },\n\n        unwrapObservable: function (value) {\n            return ko.isObservable(value) ? value() : value;\n        },\n\n        peekObservable: function (value) {\n            return ko.isObservable(value) ? value.peek() : value;\n        },\n\n        toggleDomNodeCssClass: toggleDomNodeCssClass,\n\n        setTextContent: function(element, textContent) {\n            var value = ko.utils.unwrapObservable(textContent);\n            if ((value === null) || (value === undefined))\n                value = \"\";\n\n            // We need there to be exactly one child: a text node.\n            // If there are no children, more than one, or if it's not a text node,\n            // we'll clear everything and create a single text node.\n            var innerTextNode = ko.virtualElements.firstChild(element);\n            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\n                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\n            } else {\n                innerTextNode.data = value;\n            }\n\n            ko.utils.forceRefresh(element);\n        },\n\n        setElementName: function(element, name) {\n            element.name = name;\n\n            // Workaround IE 6/7 issue\n            // - https://github.com/SteveSanderson/knockout/issues/197\n            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\n            if (ieVersion <= 7) {\n                try {\n                    element.mergeAttributes(document.createElement(\"<input name='\" + element.name + \"'/>\"), false);\n                }\n                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\n            }\n        },\n\n        forceRefresh: function(node) {\n            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\n            if (ieVersion >= 9) {\n                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\n                var elem = node.nodeType == 1 ? node : node.parentNode;\n                if (elem.style)\n                    elem.style.zoom = elem.style.zoom;\n            }\n        },\n\n        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\n            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\n            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\n            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\n            if (ieVersion) {\n                var originalWidth = selectElement.style.width;\n                selectElement.style.width = 0;\n                selectElement.style.width = originalWidth;\n            }\n        },\n\n        range: function (min, max) {\n            min = ko.utils.unwrapObservable(min);\n            max = ko.utils.unwrapObservable(max);\n            var result = [];\n            for (var i = min; i <= max; i++)\n                result.push(i);\n            return result;\n        },\n\n        makeArray: function(arrayLikeObject) {\n            var result = [];\n            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n                result.push(arrayLikeObject[i]);\n            };\n            return result;\n        },\n\n        isIe6 : isIe6,\n        isIe7 : isIe7,\n        ieVersion : ieVersion,\n\n        getFormFields: function(form, fieldName) {\n            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\n            var isMatchingField = (typeof fieldName == 'string')\n                ? function(field) { return field.name === fieldName }\n                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\n            var matches = [];\n            for (var i = fields.length - 1; i >= 0; i--) {\n                if (isMatchingField(fields[i]))\n                    matches.push(fields[i]);\n            };\n            return matches;\n        },\n\n        parseJson: function (jsonString) {\n            if (typeof jsonString == \"string\") {\n                jsonString = ko.utils.stringTrim(jsonString);\n                if (jsonString) {\n                    if (JSON && JSON.parse) // Use native parsing where available\n                        return JSON.parse(jsonString);\n                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\n                }\n            }\n            return null;\n        },\n\n        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\n            if (!JSON || !JSON.stringify)\n                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\n        },\n\n        postJson: function (urlOrForm, data, options) {\n            options = options || {};\n            var params = options['params'] || {};\n            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\n            var url = urlOrForm;\n\n            // If we were given a form, use its 'action' URL and pick out any requested field values\n            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\n                var originalForm = urlOrForm;\n                url = originalForm.action;\n                for (var i = includeFields.length - 1; i >= 0; i--) {\n                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\n                    for (var j = fields.length - 1; j >= 0; j--)\n                        params[fields[j].name] = fields[j].value;\n                }\n            }\n\n            data = ko.utils.unwrapObservable(data);\n            var form = document.createElement(\"form\");\n            form.style.display = \"none\";\n            form.action = url;\n            form.method = \"post\";\n            for (var key in data) {\n                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\n                form.appendChild(input);\n            }\n            objectForEach(params, function(key, value) {\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = value;\n                form.appendChild(input);\n            });\n            document.body.appendChild(form);\n            options['submitter'] ? options['submitter'](form) : form.submit();\n            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\n        }\n    }\n}());\n\nko.exportSymbol('utils', ko.utils);\nko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\nko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\nko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\nko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\nko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\nko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\nko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\nko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\nko.exportSymbol('utils.extend', ko.utils.extend);\nko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\nko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\nko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\nko.exportSymbol('utils.postJson', ko.utils.postJson);\nko.exportSymbol('utils.parseJson', ko.utils.parseJson);\nko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\nko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\nko.exportSymbol('utils.range', ko.utils.range);\nko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\nko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\nko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\nko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\nko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\nko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\nko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\n\nif (!Function.prototype['bind']) {\n    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\n    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\n    Function.prototype['bind'] = function (object) {\n        var originalFunction = this;\n        if (arguments.length === 1) {\n            return function () {\n                return originalFunction.apply(object, arguments);\n            };\n        } else {\n            var partialArgs = Array.prototype.slice.call(arguments, 1);\n            return function () {\n                var args = partialArgs.slice(0);\n                args.push.apply(args, arguments);\n                return originalFunction.apply(object, args);\n            };\n        }\n    };\n}\n\nko.utils.domData = new (function () {\n    var uniqueId = 0;\n    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\n    var dataStore = {};\n\n    function getAll(node, createIfNotFound) {\n        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\n        if (!hasExistingDataStore) {\n            if (!createIfNotFound)\n                return undefined;\n            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\n            dataStore[dataStoreKey] = {};\n        }\n        return dataStore[dataStoreKey];\n    }\n\n    return {\n        get: function (node, key) {\n            var allDataForNode = getAll(node, false);\n            return allDataForNode === undefined ? undefined : allDataForNode[key];\n        },\n        set: function (node, key, value) {\n            if (value === undefined) {\n                // Make sure we don't actually create a new domData key if we are actually deleting a value\n                if (getAll(node, false) === undefined)\n                    return;\n            }\n            var allDataForNode = getAll(node, true);\n            allDataForNode[key] = value;\n        },\n        clear: function (node) {\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n            if (dataStoreKey) {\n                delete dataStore[dataStoreKey];\n                node[dataStoreKeyExpandoPropertyName] = null;\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n            }\n            return false;\n        },\n\n        nextKey: function () {\n            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\n        }\n    };\n})();\n\nko.exportSymbol('utils.domData', ko.utils.domData);\nko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\n\nko.utils.domNodeDisposal = new (function () {\n    var domDataKey = ko.utils.domData.nextKey();\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n            allDisposeCallbacks = [];\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n        }\n        return allDisposeCallbacks;\n    }\n    function destroyCallbacksCollection(node) {\n        ko.utils.domData.set(node, domDataKey, undefined);\n    }\n\n    function cleanSingleNode(node) {\n        // Run all the dispose callbacks\n        var callbacks = getDisposeCallbacksCollection(node, false);\n        if (callbacks) {\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n            for (var i = 0; i < callbacks.length; i++)\n                callbacks[i](node);\n        }\n\n        // Erase the DOM data\n        ko.utils.domData.clear(node);\n\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n        if (cleanableNodeTypesWithDescendants[node.nodeType])\n            cleanImmediateCommentTypeChildren(node);\n    }\n\n    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\n        var child, nextChild = nodeWithChildren.firstChild;\n        while (child = nextChild) {\n            nextChild = child.nextSibling;\n            if (child.nodeType === 8)\n                cleanSingleNode(child);\n        }\n    }\n\n    return {\n        addDisposeCallback : function(node, callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"Callback must be a function\");\n            getDisposeCallbacksCollection(node, true).push(callback);\n        },\n\n        removeDisposeCallback : function(node, callback) {\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n            if (callbacksCollection) {\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n                if (callbacksCollection.length == 0)\n                    destroyCallbacksCollection(node);\n            }\n        },\n\n        cleanNode : function(node) {\n            // First clean this node, where applicable\n            if (cleanableNodeTypes[node.nodeType]) {\n                cleanSingleNode(node);\n\n                // ... then its descendants, where applicable\n                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n                    // Clone the descendants list in case it changes during iteration\n                    var descendants = [];\n                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\n                    for (var i = 0, j = descendants.length; i < j; i++)\n                        cleanSingleNode(descendants[i]);\n                }\n            }\n            return node;\n        },\n\n        removeNode : function(node) {\n            ko.cleanNode(node);\n            if (node.parentNode)\n                node.parentNode.removeChild(node);\n        },\n\n        \"cleanExternalData\" : function (node) {\n            // Special support for jQuery here because it's so commonly used.\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n            // so notify it to tear down any resources associated with the node & descendants here.\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n                jQueryInstance['cleanData']([node]);\n        }\n    };\n})();\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\nko.exportSymbol('cleanNode', ko.cleanNode);\nko.exportSymbol('removeNode', ko.removeNode);\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n(function () {\n    var leadingCommentRegex = /^(\\s*)<!--(.*?)-->/;\n\n    function simpleHtmlParse(html, documentContext) {\n        documentContext || (documentContext = document);\n        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\n        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\n        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\n        // Trim whitespace, otherwise indexOf won't work as expected\n        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\");\n\n        // Finds the first match from the left column, and returns the corresponding \"wrap\" data from the right column\n        var wrap = tags.match(/^<(thead|tbody|tfoot)/)              && [1, \"<table>\", \"</table>\"] ||\n                   !tags.indexOf(\"<tr\")                             && [2, \"<table><tbody>\", \"</tbody></table>\"] ||\n                   (!tags.indexOf(\"<td\") || !tags.indexOf(\"<th\"))   && [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"] ||\n                   /* anything else */                                 [0, \"\", \"\"];\n\n        // Go to html and back, then peel off extra wrappers\n        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\n        if (typeof windowContext['innerShiv'] == \"function\") {\n            div.appendChild(windowContext['innerShiv'](markup));\n        } else {\n            div.innerHTML = markup;\n        }\n\n        // Move to the right depth\n        while (wrap[0]--)\n            div = div.lastChild;\n\n        return ko.utils.makeArray(div.lastChild.childNodes);\n    }\n\n    function jQueryHtmlParse(html, documentContext) {\n        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\n        if (jQueryInstance['parseHTML']) {\n            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\n        } else {\n            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\n            var elems = jQueryInstance['clean']([html], documentContext);\n\n            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\n            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\n            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\n            if (elems && elems[0]) {\n                // Find the top-most parent element that's a direct child of a document fragment\n                var elem = elems[0];\n                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\n                    elem = elem.parentNode;\n                // ... then detach it\n                if (elem.parentNode)\n                    elem.parentNode.removeChild(elem);\n            }\n\n            return elems;\n        }\n    }\n\n    ko.utils.parseHtmlFragment = function(html, documentContext) {\n        return jQueryInstance ? jQueryHtmlParse(html, documentContext)   // As below, benefit from jQuery's optimisations where possible\n                              : simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\n    };\n\n    ko.utils.setHtml = function(node, html) {\n        ko.utils.emptyDomNode(node);\n\n        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n        html = ko.utils.unwrapObservable(html);\n\n        if ((html !== null) && (html !== undefined)) {\n            if (typeof html != 'string')\n                html = html.toString();\n\n            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\n            // for example <tr> elements which are not normally allowed to exist on their own.\n            // If you've referenced jQuery we'll use that rather than duplicating its code.\n            if (jQueryInstance) {\n                jQueryInstance(node)['html'](html);\n            } else {\n                // ... otherwise, use KO's own parsing logic.\n                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\n                for (var i = 0; i < parsedNodes.length; i++)\n                    node.appendChild(parsedNodes[i]);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\nko.exportSymbol('utils.setHtml', ko.utils.setHtml);\n\nko.memoization = (function () {\n    var memos = {};\n\n    function randomMax8HexChars() {\n        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n    }\n    function generateRandomId() {\n        return randomMax8HexChars() + randomMax8HexChars();\n    }\n    function findMemoNodes(rootNode, appendToArray) {\n        if (!rootNode)\n            return;\n        if (rootNode.nodeType == 8) {\n            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\n            if (memoId != null)\n                appendToArray.push({ domNode: rootNode, memoId: memoId });\n        } else if (rootNode.nodeType == 1) {\n            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\n                findMemoNodes(childNodes[i], appendToArray);\n        }\n    }\n\n    return {\n        memoize: function (callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n            var memoId = generateRandomId();\n            memos[memoId] = callback;\n            return \"<!--[ko_memo:\" + memoId + \"]-->\";\n        },\n\n        unmemoize: function (memoId, callbackParams) {\n            var callback = memos[memoId];\n            if (callback === undefined)\n                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n            try {\n                callback.apply(null, callbackParams || []);\n                return true;\n            }\n            finally { delete memos[memoId]; }\n        },\n\n        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\n            var memos = [];\n            findMemoNodes(domNode, memos);\n            for (var i = 0, j = memos.length; i < j; i++) {\n                var node = memos[i].domNode;\n                var combinedParams = [node];\n                if (extraCallbackParamsArray)\n                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\n                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\n                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\n                if (node.parentNode)\n                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n            }\n        },\n\n        parseMemoText: function (memoText) {\n            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\n            return match ? match[1] : null;\n        }\n    };\n})();\n\nko.exportSymbol('memoization', ko.memoization);\nko.exportSymbol('memoization.memoize', ko.memoization.memoize);\nko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\nko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\nko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\nko.extenders = {\n    'throttle': function(target, timeout) {\n        // Throttling means two things:\n\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n        target['throttleEvaluation'] = timeout;\n\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n        //     so the target cannot change value synchronously or faster than a certain rate\n        var writeTimeoutInstance = null;\n        return ko.dependentObservable({\n            'read': target,\n            'write': function(value) {\n                clearTimeout(writeTimeoutInstance);\n                writeTimeoutInstance = setTimeout(function() {\n                    target(value);\n                }, timeout);\n            }\n        });\n    },\n\n    'rateLimit': function(target, options) {\n        var timeout, method, limitFunction;\n\n        if (typeof options == 'number') {\n            timeout = options;\n        } else {\n            timeout = options['timeout'];\n            method = options['method'];\n        }\n\n        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\n        target.limit(function(callback) {\n            return limitFunction(callback, timeout);\n        });\n    },\n\n    'notify': function(target, notifyWhen) {\n        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\n            null :  // null equalityComparer means to always notify\n            valuesArePrimitiveAndEqual;\n    }\n};\n\nvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\nfunction valuesArePrimitiveAndEqual(a, b) {\n    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\n    return oldValueIsPrimitive ? (a === b) : false;\n}\n\nfunction throttle(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        if (!timeoutInstance) {\n            timeoutInstance = setTimeout(function() {\n                timeoutInstance = undefined;\n                callback();\n            }, timeout);\n        }\n    };\n}\n\nfunction debounce(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        clearTimeout(timeoutInstance);\n        timeoutInstance = setTimeout(callback, timeout);\n    };\n}\n\nfunction applyExtenders(requestedExtenders) {\n    var target = this;\n    if (requestedExtenders) {\n        ko.utils.objectForEach(requestedExtenders, function(key, value) {\n            var extenderHandler = ko.extenders[key];\n            if (typeof extenderHandler == 'function') {\n                target = extenderHandler(target, value) || target;\n            }\n        });\n    }\n    return target;\n}\n\nko.exportSymbol('extenders', ko.extenders);\n\nko.subscription = function (target, callback, disposeCallback) {\n    this._target = target;\n    this.callback = callback;\n    this.disposeCallback = disposeCallback;\n    this.isDisposed = false;\n    ko.exportProperty(this, 'dispose', this.dispose);\n};\nko.subscription.prototype.dispose = function () {\n    this.isDisposed = true;\n    this.disposeCallback();\n};\n\nko.subscribable = function () {\n    ko.utils.setPrototypeOfOrExtend(this, ko.subscribable['fn']);\n    this._subscriptions = {};\n    this._versionNumber = 1;\n}\n\nvar defaultEvent = \"change\";\n\nvar ko_subscribable_fn = {\n    subscribe: function (callback, callbackTarget, event) {\n        var self = this;\n\n        event = event || defaultEvent;\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n        var subscription = new ko.subscription(self, boundCallback, function () {\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n            if (self.afterSubscriptionRemove)\n                self.afterSubscriptionRemove(event);\n        });\n\n        if (self.beforeSubscriptionAdd)\n            self.beforeSubscriptionAdd(event);\n\n        if (!self._subscriptions[event])\n            self._subscriptions[event] = [];\n        self._subscriptions[event].push(subscription);\n\n        return subscription;\n    },\n\n    \"notifySubscribers\": function (valueToNotify, event) {\n        event = event || defaultEvent;\n        if (event === defaultEvent) {\n            this.updateVersion();\n        }\n        if (this.hasSubscriptionsForEvent(event)) {\n            try {\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n                for (var a = this._subscriptions[event].slice(0), i = 0, subscription; subscription = a[i]; ++i) {\n                    // In case a subscription was disposed during the arrayForEach cycle, check\n                    // for isDisposed on each subscription before invoking its callback\n                    if (!subscription.isDisposed)\n                        subscription.callback(valueToNotify);\n                }\n            } finally {\n                ko.dependencyDetection.end(); // End suppressing dependency detection\n            }\n        }\n    },\n\n    getVersion: function () {\n        return this._versionNumber;\n    },\n\n    hasChanged: function (versionToCheck) {\n        return this.getVersion() !== versionToCheck;\n    },\n\n    updateVersion: function () {\n        ++this._versionNumber;\n    },\n\n    limit: function(limitFunction) {\n        var self = this, selfIsObservable = ko.isObservable(self),\n            isPending, previousValue, pendingValue, beforeChange = 'beforeChange';\n\n        if (!self._origNotifySubscribers) {\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\n            self[\"notifySubscribers\"] = function(value, event) {\n                if (!event || event === defaultEvent) {\n                    self._rateLimitedChange(value);\n                } else if (event === beforeChange) {\n                    self._rateLimitedBeforeChange(value);\n                } else {\n                    self._origNotifySubscribers(value, event);\n                }\n            };\n        }\n\n        var finish = limitFunction(function() {\n            // If an observable provided a reference to itself, access it to get the latest value.\n            // This allows computed observables to delay calculating their value until needed.\n            if (selfIsObservable && pendingValue === self) {\n                pendingValue = self();\n            }\n            isPending = false;\n            if (self.isDifferent(previousValue, pendingValue)) {\n                self._origNotifySubscribers(previousValue = pendingValue);\n            }\n        });\n\n        self._rateLimitedChange = function(value) {\n            isPending = true;\n            pendingValue = value;\n            finish();\n        };\n        self._rateLimitedBeforeChange = function(value) {\n            if (!isPending) {\n                previousValue = value;\n                self._origNotifySubscribers(value, beforeChange);\n            }\n        };\n    },\n\n    hasSubscriptionsForEvent: function(event) {\n        return this._subscriptions[event] && this._subscriptions[event].length;\n    },\n\n    getSubscriptionsCount: function (event) {\n        if (event) {\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n        } else {\n            var total = 0;\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n                total += subscriptions.length;\n            });\n            return total;\n        }\n    },\n\n    isDifferent: function(oldValue, newValue) {\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n    },\n\n    extend: applyExtenders\n};\n\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n}\n\nko.subscribable['fn'] = ko_subscribable_fn;\n\n\nko.isSubscribable = function (instance) {\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n};\n\nko.exportSymbol('subscribable', ko.subscribable);\nko.exportSymbol('isSubscribable', ko.isSubscribable);\n\nko.computedContext = ko.dependencyDetection = (function () {\n    var outerFrames = [],\n        currentFrame,\n        lastId = 0;\n\n    // Return a unique ID that can be assigned to an observable for dependency tracking.\n    // Theoretically, you could eventually overflow the number storage size, resulting\n    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n    // take over 285 years to reach that number.\n    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\n    function getId() {\n        return ++lastId;\n    }\n\n    function begin(options) {\n        outerFrames.push(currentFrame);\n        currentFrame = options;\n    }\n\n    function end() {\n        currentFrame = outerFrames.pop();\n    }\n\n    return {\n        begin: begin,\n\n        end: end,\n\n        registerDependency: function (subscribable) {\n            if (currentFrame) {\n                if (!ko.isSubscribable(subscribable))\n                    throw new Error(\"Only subscribable things can act as dependencies\");\n                currentFrame.callback(subscribable, subscribable._id || (subscribable._id = getId()));\n            }\n        },\n\n        ignore: function (callback, callbackTarget, callbackArgs) {\n            try {\n                begin();\n                return callback.apply(callbackTarget, callbackArgs || []);\n            } finally {\n                end();\n            }\n        },\n\n        getDependenciesCount: function () {\n            if (currentFrame)\n                return currentFrame.computed.getDependenciesCount();\n        },\n\n        isInitial: function() {\n            if (currentFrame)\n                return currentFrame.isInitial;\n        }\n    };\n})();\n\nko.exportSymbol('computedContext', ko.computedContext);\nko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\nko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\nko.exportSymbol('computedContext.isSleeping', ko.computedContext.isSleeping);\n\nko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\nko.observable = function (initialValue) {\n    var _latestValue = initialValue;\n\n    function observable() {\n        if (arguments.length > 0) {\n            // Write\n\n            // Ignore writes if the value hasn't changed\n            if (observable.isDifferent(_latestValue, arguments[0])) {\n                observable.valueWillMutate();\n                _latestValue = arguments[0];\n                if (DEBUG) observable._latestValue = _latestValue;\n                observable.valueHasMutated();\n            }\n            return this; // Permits chained assignments\n        }\n        else {\n            // Read\n            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n            return _latestValue;\n        }\n    }\n    ko.subscribable.call(observable);\n    ko.utils.setPrototypeOfOrExtend(observable, ko.observable['fn']);\n\n    if (DEBUG) observable._latestValue = _latestValue;\n    observable.peek = function() { return _latestValue };\n    observable.valueHasMutated = function () { observable[\"notifySubscribers\"](_latestValue); }\n    observable.valueWillMutate = function () { observable[\"notifySubscribers\"](_latestValue, \"beforeChange\"); }\n\n    ko.exportProperty(observable, 'peek', observable.peek);\n    ko.exportProperty(observable, \"valueHasMutated\", observable.valueHasMutated);\n    ko.exportProperty(observable, \"valueWillMutate\", observable.valueWillMutate);\n\n    return observable;\n}\n\nko.observable['fn'] = {\n    \"equalityComparer\": valuesArePrimitiveAndEqual\n};\n\nvar protoProperty = ko.observable.protoProperty = \"__ko_proto__\";\nko.observable['fn'][protoProperty] = ko.observable;\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observable constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.observable['fn'], ko.subscribable['fn']);\n}\n\nko.hasPrototype = function(instance, prototype) {\n    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\n    if (instance[protoProperty] === prototype) return true;\n    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n};\n\nko.isObservable = function (instance) {\n    return ko.hasPrototype(instance, ko.observable);\n}\nko.isWriteableObservable = function (instance) {\n    // Observable\n    if ((typeof instance == \"function\") && instance[protoProperty] === ko.observable)\n        return true;\n    // Writeable dependent observable\n    if ((typeof instance == \"function\") && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\n        return true;\n    // Anything else\n    return false;\n}\n\n\nko.exportSymbol('observable', ko.observable);\nko.exportSymbol('isObservable', ko.isObservable);\nko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\nko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\nko.observableArray = function (initialValues) {\n    initialValues = initialValues || [];\n\n    if (typeof initialValues != 'object' || !('length' in initialValues))\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\n    var result = ko.observable(initialValues);\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n    return result.extend({'trackArrayChanges':true});\n};\n\nko.observableArray['fn'] = {\n    'remove': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var removedValues = [];\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        for (var i = 0; i < underlyingArray.length; i++) {\n            var value = underlyingArray[i];\n            if (predicate(value)) {\n                if (removedValues.length === 0) {\n                    this.valueWillMutate();\n                }\n                removedValues.push(value);\n                underlyingArray.splice(i, 1);\n                i--;\n            }\n        }\n        if (removedValues.length) {\n            this.valueHasMutated();\n        }\n        return removedValues;\n    },\n\n    'removeAll': function (arrayOfValues) {\n        // If you passed zero args, we remove everything\n        if (arrayOfValues === undefined) {\n            var underlyingArray = this.peek();\n            var allValues = underlyingArray.slice(0);\n            this.valueWillMutate();\n            underlyingArray.splice(0, underlyingArray.length);\n            this.valueHasMutated();\n            return allValues;\n        }\n        // If you passed an arg, we interpret it as an array of entries to remove\n        if (!arrayOfValues)\n            return [];\n        return this['remove'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'destroy': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        this.valueWillMutate();\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n            var value = underlyingArray[i];\n            if (predicate(value))\n                underlyingArray[i][\"_destroy\"] = true;\n        }\n        this.valueHasMutated();\n    },\n\n    'destroyAll': function (arrayOfValues) {\n        // If you passed zero args, we destroy everything\n        if (arrayOfValues === undefined)\n            return this['destroy'](function() { return true });\n\n        // If you passed an arg, we interpret it as an array of entries to destroy\n        if (!arrayOfValues)\n            return [];\n        return this['destroy'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'indexOf': function (item) {\n        var underlyingArray = this();\n        return ko.utils.arrayIndexOf(underlyingArray, item);\n    },\n\n    'replace': function(oldItem, newItem) {\n        var index = this['indexOf'](oldItem);\n        if (index >= 0) {\n            this.valueWillMutate();\n            this.peek()[index] = newItem;\n            this.valueHasMutated();\n        }\n    }\n};\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n        // (for consistency with mutating regular observables)\n        var underlyingArray = this.peek();\n        this.valueWillMutate();\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n        this.valueHasMutated();\n        return methodCallResult;\n    };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\nko.utils.arrayForEach([\"slice\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        var underlyingArray = this();\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\n    };\n});\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n}\n\nko.exportSymbol('observableArray', ko.observableArray);\nvar arrayChangeEventName = 'arrayChange';\nko.extenders['trackArrayChanges'] = function(target) {\n    // Only modify the target observable once\n    if (target.cacheDiffForKnownOperation) {\n        return;\n    }\n    var trackingChanges = false,\n        cachedDiff = null,\n        arrayChangeSubscription,\n        pendingNotifications = 0,\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n    target.beforeSubscriptionAdd = function (event) {\n        if (underlyingBeforeSubscriptionAddFunction)\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\n        if (event === arrayChangeEventName) {\n            trackChanges();\n        }\n    };\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n    target.afterSubscriptionRemove = function (event) {\n        if (underlyingAfterSubscriptionRemoveFunction)\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n            arrayChangeSubscription.dispose();\n            trackingChanges = false;\n        }\n    };\n\n    function trackChanges() {\n        // Calling 'trackChanges' multiple times is the same as calling it once\n        if (trackingChanges) {\n            return;\n        }\n\n        trackingChanges = true;\n\n        // Intercept \"notifySubscribers\" to track how many times it was called.\n        var underlyingNotifySubscribersFunction = target['notifySubscribers'];\n        target['notifySubscribers'] = function(valueToNotify, event) {\n            if (!event || event === defaultEvent) {\n                ++pendingNotifications;\n            }\n            return underlyingNotifySubscribersFunction.apply(this, arguments);\n        };\n\n        // Each time the array changes value, capture a clone so that on the next\n        // change it's possible to produce a diff\n        var previousContents = [].concat(target.peek() || []);\n        cachedDiff = null;\n        arrayChangeSubscription = target.subscribe(function(currentContents) {\n            // Make a copy of the current contents and ensure it's an array\n            currentContents = [].concat(currentContents || []);\n\n            // Compute the diff and issue notifications, but only if someone is listening\n            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n                var changes = getChanges(previousContents, currentContents);\n            }\n\n            // Eliminate references to the old, removed items, so they can be GCed\n            previousContents = currentContents;\n            cachedDiff = null;\n            pendingNotifications = 0;\n\n            if (changes && changes.length) {\n                target['notifySubscribers'](changes, arrayChangeEventName);\n            }\n        });\n    }\n\n    function getChanges(previousContents, currentContents) {\n        // We try to re-use cached diffs.\n        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\n        if (!cachedDiff || pendingNotifications > 1) {\n            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, { 'sparse': true });\n        }\n\n        return cachedDiff;\n    }\n\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n        // Only run if we're currently tracking changes for this observable array\n        // and there aren't any pending deferred notifications.\n        if (!trackingChanges || pendingNotifications) {\n            return;\n        }\n        var diff = [],\n            arrayLength = rawArray.length,\n            argsLength = args.length,\n            offset = 0;\n\n        function pushDiff(status, value, index) {\n            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n        }\n        switch (operationName) {\n            case 'push':\n                offset = arrayLength;\n            case 'unshift':\n                for (var index = 0; index < argsLength; index++) {\n                    pushDiff('added', args[index], offset + index);\n                }\n                break;\n\n            case 'pop':\n                offset = arrayLength - 1;\n            case 'shift':\n                if (arrayLength) {\n                    pushDiff('deleted', rawArray[offset], offset);\n                }\n                break;\n\n            case 'splice':\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n                    endAddIndex = startIndex + argsLength - 2,\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n                    additions = [], deletions = [];\n                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n                    if (index < endDeleteIndex)\n                        deletions.push(pushDiff('deleted', rawArray[index], index));\n                    if (index < endAddIndex)\n                        additions.push(pushDiff('added', args[argsIndex], index));\n                }\n                ko.utils.findMovesInArrayComparison(deletions, additions);\n                break;\n\n            default:\n                return;\n        }\n        cachedDiff = diff;\n    };\n};\nko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n    var _latestValue,\n        _needsEvaluation = true,\n        _isBeingEvaluated = false,\n        _suppressDisposalUntilDisposeWhenReturnsFalse = false,\n        _isDisposed = false,\n        readFunction = evaluatorFunctionOrOptions,\n        pure = false,\n        isSleeping = false;\n\n    if (readFunction && typeof readFunction == \"object\") {\n        // Single-parameter syntax - everything is on this \"options\" param\n        options = readFunction;\n        readFunction = options[\"read\"];\n    } else {\n        // Multi-parameter syntax - construct the options according to the params passed\n        options = options || {};\n        if (!readFunction)\n            readFunction = options[\"read\"];\n    }\n    if (typeof readFunction != \"function\")\n        throw new Error(\"Pass a function that returns the value of the ko.computed\");\n\n    function addDependencyTracking(id, target, trackingObj) {\n        if (pure && target === dependentObservable) {\n            throw Error(\"A 'pure' computed must not be called recursively\");\n        }\n\n        dependencyTracking[id] = trackingObj;\n        trackingObj._order = _dependenciesCount++;\n        trackingObj._version = target.getVersion();\n    }\n\n    function haveDependenciesChanged() {\n        var id, dependency;\n        for (id in dependencyTracking) {\n            if (dependencyTracking.hasOwnProperty(id)) {\n                dependency = dependencyTracking[id];\n                if (dependency._target.hasChanged(dependency._version)) {\n                    return true;\n                }\n            }\n        }\n    }\n\n    function disposeComputed() {\n        if (!isSleeping && dependencyTracking) {\n            ko.utils.objectForEach(dependencyTracking, function (id, dependency) {\n                if (dependency.dispose)\n                    dependency.dispose();\n            });\n        }\n        dependencyTracking = null;\n        _dependenciesCount = 0;\n        _isDisposed = true;\n        _needsEvaluation = false;\n        isSleeping = false;\n    }\n\n    function evaluatePossiblyAsync() {\n        var throttleEvaluationTimeout = dependentObservable['throttleEvaluation'];\n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n            clearTimeout(evaluationTimeoutInstance);\n            evaluationTimeoutInstance = setTimeout(function () {\n                evaluateImmediate(true /*notifyChange*/);\n            }, throttleEvaluationTimeout);\n        } else if (dependentObservable._evalRateLimited) {\n            dependentObservable._evalRateLimited();\n        } else {\n            evaluateImmediate(true /*notifyChange*/);\n        }\n    }\n\n    function evaluateImmediate(notifyChange) {\n        if (_isBeingEvaluated) {\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n            return;\n        }\n\n        // Do not evaluate (and possibly capture new dependencies) if disposed\n        if (_isDisposed) {\n            return;\n        }\n\n        if (disposeWhen && disposeWhen()) {\n            // See comment below about _suppressDisposalUntilDisposeWhenReturnsFalse\n            if (!_suppressDisposalUntilDisposeWhenReturnsFalse) {\n                dispose();\n                return;\n            }\n        } else {\n            // It just did return false, so we can stop suppressing now\n            _suppressDisposalUntilDisposeWhenReturnsFalse = false;\n        }\n\n        _isBeingEvaluated = true;\n\n        try {\n            // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n            // Then, during evaluation, we cross off any that are in fact still being used.\n            var disposalCandidates = dependencyTracking,\n                disposalCount = _dependenciesCount,\n                isInitial = pure ? undefined : !_dependenciesCount;   // If we're evaluating when there are no previous dependencies, it must be the first time\n\n            ko.dependencyDetection.begin({\n                callback: function(subscribable, id) {\n                    if (!_isDisposed) {\n                        if (disposalCount && disposalCandidates[id]) {\n                            // Don't want to dispose this subscription, as it's still being used\n                            addDependencyTracking(id, subscribable, disposalCandidates[id]);\n                            delete disposalCandidates[id];\n                            --disposalCount;\n                        } else if (!dependencyTracking[id]) {\n                            // Brand new subscription - add it\n                            addDependencyTracking(id, subscribable, isSleeping ? { _target: subscribable } : subscribable.subscribe(evaluatePossiblyAsync));\n                        }\n                    }\n                },\n                computed: dependentObservable,\n                isInitial: isInitial\n            });\n\n            dependencyTracking = {};\n            _dependenciesCount = 0;\n\n            try {\n                var newValue = evaluatorFunctionTarget ? readFunction.call(evaluatorFunctionTarget) : readFunction();\n\n            } finally {\n                ko.dependencyDetection.end();\n\n                // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n                if (disposalCount && !isSleeping) {\n                    ko.utils.objectForEach(disposalCandidates, function(id, toDispose) {\n                        if (toDispose.dispose)\n                            toDispose.dispose();\n                    });\n                }\n\n                _needsEvaluation = false;\n            }\n\n            if (dependentObservable.isDifferent(_latestValue, newValue)) {\n                if (!isSleeping) {\n                    notify(_latestValue, \"beforeChange\");\n                }\n\n                _latestValue = newValue;\n                if (DEBUG) dependentObservable._latestValue = _latestValue;\n\n                if (isSleeping) {\n                    dependentObservable.updateVersion();\n                } else if (notifyChange) {\n                    notify(_latestValue);\n                }\n            }\n\n            if (isInitial) {\n                notify(_latestValue, \"awake\");\n            }\n        } finally {\n            _isBeingEvaluated = false;\n        }\n\n        if (!_dependenciesCount)\n            dispose();\n    }\n\n    function dependentObservable() {\n        if (arguments.length > 0) {\n            if (typeof writeFunction === \"function\") {\n                // Writing a value\n                writeFunction.apply(evaluatorFunctionTarget, arguments);\n            } else {\n                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n            }\n            return this; // Permits chained assignments\n        } else {\n            // Reading the value\n            ko.dependencyDetection.registerDependency(dependentObservable);\n            if (_needsEvaluation || (isSleeping && haveDependenciesChanged())) {\n                evaluateImmediate();\n            }\n            return _latestValue;\n        }\n    }\n\n    function peek() {\n        // Peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n        if ((_needsEvaluation && !_dependenciesCount) || (isSleeping && haveDependenciesChanged())) {\n            evaluateImmediate();\n        }\n        return _latestValue;\n    }\n\n    function isActive() {\n        return _needsEvaluation || _dependenciesCount > 0;\n    }\n\n    function notify(value, event) {\n        dependentObservable[\"notifySubscribers\"](value, event);\n    }\n\n    // By here, \"options\" is always non-null\n    var writeFunction = options[\"write\"],\n        disposeWhenNodeIsRemoved = options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\n        disposeWhenOption = options[\"disposeWhen\"] || options.disposeWhen,\n        disposeWhen = disposeWhenOption,\n        dispose = disposeComputed,\n        dependencyTracking = {},\n        _dependenciesCount = 0,\n        evaluationTimeoutInstance = null;\n\n    if (!evaluatorFunctionTarget)\n        evaluatorFunctionTarget = options[\"owner\"];\n\n    ko.subscribable.call(dependentObservable);\n    ko.utils.setPrototypeOfOrExtend(dependentObservable, ko.dependentObservable['fn']);\n\n    dependentObservable.peek = peek;\n    dependentObservable.getDependenciesCount = function () { return _dependenciesCount; };\n    dependentObservable.hasWriteFunction = typeof writeFunction === \"function\";\n    dependentObservable.dispose = function () { dispose(); };\n    dependentObservable.isActive = isActive;\n\n    // Replace the limit function with one that delays evaluation as well.\n    var originalLimit = dependentObservable.limit;\n    dependentObservable.limit = function(limitFunction) {\n        originalLimit.call(dependentObservable, limitFunction);\n        dependentObservable._evalRateLimited = function() {\n            dependentObservable._rateLimitedBeforeChange(_latestValue);\n\n            _needsEvaluation = true;    // Mark as dirty\n\n            // Pass the observable to the rate-limit code, which will access it when\n            // it's time to do the notification.\n            dependentObservable._rateLimitedChange(dependentObservable);\n        }\n    };\n\n    if (options['pure']) {\n        pure = true;\n        isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n        dependentObservable.beforeSubscriptionAdd = function (event) {\n            // If asleep, wake up the computed by subscribing to any dependencies.\n            if (!_isDisposed && isSleeping && event == 'change') {\n                isSleeping = false;\n                if (_needsEvaluation || haveDependenciesChanged()) {\n                    dependencyTracking = null;\n                    _dependenciesCount = 0;\n                    _needsEvaluation = true;\n                    evaluateImmediate();\n                } else {\n                    // First put the dependencies in order\n                    var dependeciesOrder = [];\n                    ko.utils.objectForEach(dependencyTracking, function (id, dependency) {\n                        dependeciesOrder[dependency._order] = id;\n                    });\n                    // Next, subscribe to each one\n                    ko.utils.arrayForEach(dependeciesOrder, function(id, order) {\n                        var dependency = dependencyTracking[id],\n                            subscription = dependency._target.subscribe(evaluatePossiblyAsync);\n                        subscription._order = order;\n                        subscription._version = dependency._version;\n                        dependencyTracking[id] = subscription;\n                    });\n                }\n                if (!_isDisposed) {     // test since evaluating could trigger disposal\n                    notify(_latestValue, \"awake\");\n                }\n            }\n        };\n\n        dependentObservable.afterSubscriptionRemove = function (event) {\n            if (!_isDisposed && event == 'change' && !dependentObservable.hasSubscriptionsForEvent('change')) {\n                ko.utils.objectForEach(dependencyTracking, function (id, dependency) {\n                    if (dependency.dispose) {\n                        dependencyTracking[id] = {\n                            _target: dependency._target,\n                            _order: dependency._order,\n                            _version: dependency._version\n                        };\n                        dependency.dispose();\n                    }\n                });\n                isSleeping = true;\n                notify(undefined, \"asleep\");\n            }\n        };\n\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\n        // simply return the version number. Instead, we check if any of the dependencies have\n        // changed and conditionally re-evaluate the computed observable.\n        dependentObservable._originalGetVersion = dependentObservable.getVersion;\n        dependentObservable.getVersion = function () {\n            if (isSleeping && (_needsEvaluation || haveDependenciesChanged())) {\n                evaluateImmediate();\n            }\n            return dependentObservable._originalGetVersion();\n        };\n    } else if (options['deferEvaluation']) {\n        // This will force a computed with deferEvaluation to evaluate when the first subscriptions is registered.\n        dependentObservable.beforeSubscriptionAdd = function (event) {\n            if (event == 'change' || event == 'beforeChange') {\n                peek();\n            }\n        }\n    }\n\n    ko.exportProperty(dependentObservable, 'peek', dependentObservable.peek);\n    ko.exportProperty(dependentObservable, 'dispose', dependentObservable.dispose);\n    ko.exportProperty(dependentObservable, 'isActive', dependentObservable.isActive);\n    ko.exportProperty(dependentObservable, 'getDependenciesCount', dependentObservable.getDependenciesCount);\n\n    // Add a \"disposeWhen\" callback that, on each evaluation, disposes if the node was removed without using ko.removeNode.\n    if (disposeWhenNodeIsRemoved) {\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\n        _suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\n        // Only watch for the node's disposal if the value really is a node. It might not be,\n        // e.g., { disposeWhenNodeIsRemoved: true } can be used to opt into the \"only dispose\n        // after first false result\" behaviour even if there's no specific node to watch. This\n        // technique is intended for KO's internal use only and shouldn't be documented or used\n        // by application code, as it's likely to change in a future version of KO.\n        if (disposeWhenNodeIsRemoved.nodeType) {\n            disposeWhen = function () {\n                return !ko.utils.domNodeIsAttachedToDocument(disposeWhenNodeIsRemoved) || (disposeWhenOption && disposeWhenOption());\n            };\n        }\n    }\n\n    // Evaluate, unless sleeping or deferEvaluation is true\n    if (!isSleeping && !options['deferEvaluation'])\n        evaluateImmediate();\n\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n    if (disposeWhenNodeIsRemoved && isActive() && disposeWhenNodeIsRemoved.nodeType) {\n        dispose = function() {\n            ko.utils.domNodeDisposal.removeDisposeCallback(disposeWhenNodeIsRemoved, dispose);\n            disposeComputed();\n        };\n        ko.utils.domNodeDisposal.addDisposeCallback(disposeWhenNodeIsRemoved, dispose);\n    }\n\n    return dependentObservable;\n};\n\nko.isComputed = function(instance) {\n    return ko.hasPrototype(instance, ko.dependentObservable);\n};\n\nvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\nko.dependentObservable[protoProp] = ko.observable;\n\nko.dependentObservable['fn'] = {\n    \"equalityComparer\": valuesArePrimitiveAndEqual\n};\nko.dependentObservable['fn'][protoProp] = ko.dependentObservable;\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.dependentObservable constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.dependentObservable['fn'], ko.subscribable['fn']);\n}\n\nko.exportSymbol('dependentObservable', ko.dependentObservable);\nko.exportSymbol('computed', ko.dependentObservable); // Make \"ko.computed\" an alias for \"ko.dependentObservable\"\nko.exportSymbol('isComputed', ko.isComputed);\n\nko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n    if (typeof evaluatorFunctionOrOptions === 'function') {\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\n    } else {\n        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\n        evaluatorFunctionOrOptions['pure'] = true;\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n    }\n}\nko.exportSymbol('pureComputed', ko.pureComputed);\n\n(function() {\n    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\n    ko.toJS = function(rootObject) {\n        if (arguments.length == 0)\n            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\n        // We just unwrap everything at every level in the object graph\n        return mapJsObjectGraph(rootObject, function(valueToMap) {\n            // Loop because an observable's value might in turn be another observable wrapper\n            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\n                valueToMap = valueToMap();\n            return valueToMap;\n        });\n    };\n\n    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\n        var plainJavaScriptObject = ko.toJS(rootObject);\n        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\n    };\n\n    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n        visitedObjects = visitedObjects || new objectLookup();\n\n        rootObject = mapInputCallback(rootObject);\n        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n        if (!canHaveProperties)\n            return rootObject;\n\n        var outputProperties = rootObject instanceof Array ? [] : {};\n        visitedObjects.save(rootObject, outputProperties);\n\n        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\n            var propertyValue = mapInputCallback(rootObject[indexer]);\n\n            switch (typeof propertyValue) {\n                case \"boolean\":\n                case \"number\":\n                case \"string\":\n                case \"function\":\n                    outputProperties[indexer] = propertyValue;\n                    break;\n                case \"object\":\n                case \"undefined\":\n                    var previouslyMappedValue = visitedObjects.get(propertyValue);\n                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\n                        ? previouslyMappedValue\n                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n                    break;\n            }\n        });\n\n        return outputProperties;\n    }\n\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n        if (rootObject instanceof Array) {\n            for (var i = 0; i < rootObject.length; i++)\n                visitorCallback(i);\n\n            // For arrays, also respect toJSON property for custom mappings (fixes #278)\n            if (typeof rootObject['toJSON'] == 'function')\n                visitorCallback('toJSON');\n        } else {\n            for (var propertyName in rootObject) {\n                visitorCallback(propertyName);\n            }\n        }\n    };\n\n    function objectLookup() {\n        this.keys = [];\n        this.values = [];\n    };\n\n    objectLookup.prototype = {\n        constructor: objectLookup,\n        save: function(key, value) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            if (existingIndex >= 0)\n                this.values[existingIndex] = value;\n            else {\n                this.keys.push(key);\n                this.values.push(value);\n            }\n        },\n        get: function(key) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\n        }\n    };\n})();\n\nko.exportSymbol('toJS', ko.toJS);\nko.exportSymbol('toJSON', ko.toJSON);\n(function () {\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n    ko.selectExtensions = {\n        readValue : function(element) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    if (element[hasDomDataExpandoProperty] === true)\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n                    return ko.utils.ieVersion <= 7\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n                        : element.value;\n                case 'select':\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n                default:\n                    return element.value;\n            }\n        },\n\n        writeValue: function(element, value, allowUnset) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    switch(typeof value) {\n                        case \"string\":\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n                                delete element[hasDomDataExpandoProperty];\n                            }\n                            element.value = value;\n                            break;\n                        default:\n                            // Store arbitrary object using DomData\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n                            element[hasDomDataExpandoProperty] = true;\n\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n                            element.value = typeof value === \"number\" ? value : \"\";\n                            break;\n                    }\n                    break;\n                case 'select':\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n                        value = undefined;\n                    var selection = -1;\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n                        // Include special check to handle selecting a caption with a blank string value\n                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\n                            selection = i;\n                            break;\n                        }\n                    }\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n                        element.selectedIndex = selection;\n                    }\n                    break;\n                default:\n                    if ((value === null) || (value === undefined))\n                        value = \"\";\n                    element.value = value;\n                    break;\n            }\n        }\n    };\n})();\n\nko.exportSymbol('selectExtensions', ko.selectExtensions);\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\nko.expressionRewriting = (function () {\n    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\n\n    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\n\n    function getWriteableValue(expression) {\n        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\n            return false;\n        var match = expression.match(javaScriptAssignmentTarget);\n        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\n    }\n\n    // The following regular expressions will be used to split an object-literal string into tokens\n\n        // These two match strings, either with double quotes or single quotes\n    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\n        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\n        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\n        // as a regular expression (this is handled by the parsing loop below).\n        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\n        // These characters have special meaning to the parser and must not appear in the middle of a\n        // token, except as part of a string.\n        specials = ',\"\\'{}()/:[\\\\]',\n        // Match text (at least two characters) that does not contain any of the above special characters,\n        // although some of the special characters are allowed to start it (all but the colon and comma).\n        // The text can contain spaces, but leading or trailing spaces are skipped.\n        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\n        // Match any non-space character not matched already. This will match colons and commas, since they're\n        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n        oneNotSpace = '[^\\\\s]',\n\n        // Create the actual regular expression by or-ing the above strings. The order is important.\n        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\n\n        // Match end of previous token to determine whether a slash is a division or regex.\n        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\n        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\n\n    function parseObjectLiteral(objectLiteralString) {\n        // Trim leading and trailing spaces from the string\n        var str = ko.utils.stringTrim(objectLiteralString);\n\n        // Trim braces '{' surrounding the whole object literal\n        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\n\n        // Split into tokens\n        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\n\n        if (toks) {\n            // Append a comma so that we don't need a separate code block to deal with the last item\n            toks.push(',');\n\n            for (var i = 0, tok; tok = toks[i]; ++i) {\n                var c = tok.charCodeAt(0);\n                // A comma signals the end of a key/value pair if depth is zero\n                if (c === 44) { // \",\"\n                    if (depth <= 0) {\n                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\n                        key = depth = 0;\n                        values = [];\n                        continue;\n                    }\n                // Simply skip the colon that separates the name and value\n                } else if (c === 58) { // \":\"\n                    if (!depth && !key && values.length === 1) {\n                        key = values.pop();\n                        continue;\n                    }\n                // A set of slashes is initially matched as a regular expression, but could be division\n                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n                    // Look at the end of the previous token to determine if the slash is actually division\n                    var match = toks[i-1].match(divisionLookBehind);\n                    if (match && !keywordRegexLookBehind[match[0]]) {\n                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n                        str = str.substr(str.indexOf(tok) + 1);\n                        toks = str.match(bindingToken);\n                        toks.push(',');\n                        i = -1;\n                        // Continue with just the slash\n                        tok = '/';\n                    }\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n                    ++depth;\n                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n                    --depth;\n                // The key will be the first token; if it's a string, trim the quotes\n                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n                    tok = tok.slice(1, -1);\n                }\n                values.push(tok);\n            }\n        }\n        return result;\n    }\n\n    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\n    var twoWayBindings = {};\n\n    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\n        bindingOptions = bindingOptions || {};\n\n        function processKeyValue(key, val) {\n            var writableVal;\n            function callPreprocessHook(obj) {\n                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\n            }\n            if (!bindingParams) {\n                if (!callPreprocessHook(ko['getBindingHandler'](key)))\n                    return;\n\n                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\n                    // For two-way bindings, provide a write method in case the value\n                    // isn't a writable observable.\n                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\n                }\n            }\n            // Values are wrapped in a function so that each value can be accessed independently\n            if (makeValueAccessors) {\n                val = 'function(){return ' + val + ' }';\n            }\n            resultStrings.push(\"'\" + key + \"':\" + val);\n        }\n\n        var resultStrings = [],\n            propertyAccessorResultStrings = [],\n            makeValueAccessors = bindingOptions['valueAccessors'],\n            bindingParams = bindingOptions['bindingParams'],\n            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\n        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\n            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\n        });\n\n        if (propertyAccessorResultStrings.length)\n            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n\n        return resultStrings.join(\",\");\n    }\n\n    return {\n        bindingRewriteValidators: [],\n\n        twoWayBindings: twoWayBindings,\n\n        parseObjectLiteral: parseObjectLiteral,\n\n        preProcessBindings: preProcessBindings,\n\n        keyValueArrayContainsKey: function(keyValueArray, key) {\n            for (var i = 0; i < keyValueArray.length; i++)\n                if (keyValueArray[i]['key'] == key)\n                    return true;\n            return false;\n        },\n\n        // Internal, private KO utility for updating model properties from within bindings\n        // property:            If the property being updated is (or might be) an observable, pass it here\n        //                      If it turns out to be a writable observable, it will be written to directly\n        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\n        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n        // value:               The value to be written\n        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n        //                      it is !== existing value on that writable observable\n        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\n            if (!property || !ko.isObservable(property)) {\n                var propWriters = allBindings.get('_ko_property_writers');\n                if (propWriters && propWriters[key])\n                    propWriters[key](value);\n            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n                property(value);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('expressionRewriting', ko.expressionRewriting);\nko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\nko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\nko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\n\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n// as an internal implementation detail in the short term.\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\nko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\n\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\nko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\nko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\n(function() {\n    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n    // of that virtual hierarchy\n    //\n    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n    // without having to scatter special cases all over the binding and templating code.\n\n    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\n    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\n    // So, use node.text where available, and node.nodeValue elsewhere\n    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\n\n    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\n    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\n    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\n\n    function isStartComment(node) {\n        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function isEndComment(node) {\n        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function getVirtualChildren(startComment, allowUnbalanced) {\n        var currentNode = startComment;\n        var depth = 1;\n        var children = [];\n        while (currentNode = currentNode.nextSibling) {\n            if (isEndComment(currentNode)) {\n                depth--;\n                if (depth === 0)\n                    return children;\n            }\n\n            children.push(currentNode);\n\n            if (isStartComment(currentNode))\n                depth++;\n        }\n        if (!allowUnbalanced)\n            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\n        return null;\n    }\n\n    function getMatchingEndComment(startComment, allowUnbalanced) {\n        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\n        if (allVirtualChildren) {\n            if (allVirtualChildren.length > 0)\n                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n            return startComment.nextSibling;\n        } else\n            return null; // Must have no matching end comment, and allowUnbalanced is true\n    }\n\n    function getUnbalancedChildTags(node) {\n        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n        var childNode = node.firstChild, captureRemaining = null;\n        if (childNode) {\n            do {\n                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n                    captureRemaining.push(childNode);\n                else if (isStartComment(childNode)) {\n                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\n                        childNode = matchingEndComment;\n                    else\n                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n                } else if (isEndComment(childNode)) {\n                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n                }\n            } while (childNode = childNode.nextSibling);\n        }\n        return captureRemaining;\n    }\n\n    ko.virtualElements = {\n        allowedBindings: {},\n\n        childNodes: function(node) {\n            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\n        },\n\n        emptyNode: function(node) {\n            if (!isStartComment(node))\n                ko.utils.emptyDomNode(node);\n            else {\n                var virtualChildren = ko.virtualElements.childNodes(node);\n                for (var i = 0, j = virtualChildren.length; i < j; i++)\n                    ko.removeNode(virtualChildren[i]);\n            }\n        },\n\n        setDomNodeChildren: function(node, childNodes) {\n            if (!isStartComment(node))\n                ko.utils.setDomNodeChildren(node, childNodes);\n            else {\n                ko.virtualElements.emptyNode(node);\n                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n            }\n        },\n\n        prepend: function(containerNode, nodeToPrepend) {\n            if (!isStartComment(containerNode)) {\n                if (containerNode.firstChild)\n                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\n                else\n                    containerNode.appendChild(nodeToPrepend);\n            } else {\n                // Start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\n            }\n        },\n\n        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\n            if (!insertAfterNode) {\n                ko.virtualElements.prepend(containerNode, nodeToInsert);\n            } else if (!isStartComment(containerNode)) {\n                // Insert after insertion point\n                if (insertAfterNode.nextSibling)\n                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n                else\n                    containerNode.appendChild(nodeToInsert);\n            } else {\n                // Children of start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n            }\n        },\n\n        firstChild: function(node) {\n            if (!isStartComment(node))\n                return node.firstChild;\n            if (!node.nextSibling || isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        nextSibling: function(node) {\n            if (isStartComment(node))\n                node = getMatchingEndComment(node);\n            if (node.nextSibling && isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        hasBindingValue: isStartComment,\n\n        virtualNodeBindingValue: function(node) {\n            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\n            return regexMatch ? regexMatch[1] : null;\n        },\n\n        normaliseVirtualElementDomStructure: function(elementVerified) {\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n            // that are direct descendants of <ul> into the preceding <li>)\n            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\n                return;\n\n            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n            // must be intended to appear *after* that child, so move them there.\n            var childNode = elementVerified.firstChild;\n            if (childNode) {\n                do {\n                    if (childNode.nodeType === 1) {\n                        var unbalancedTags = getUnbalancedChildTags(childNode);\n                        if (unbalancedTags) {\n                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n                            var nodeToInsertBefore = childNode.nextSibling;\n                            for (var i = 0; i < unbalancedTags.length; i++) {\n                                if (nodeToInsertBefore)\n                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n                                else\n                                    elementVerified.appendChild(unbalancedTags[i]);\n                            }\n                        }\n                    }\n                } while (childNode = childNode.nextSibling);\n            }\n        }\n    };\n})();\nko.exportSymbol('virtualElements', ko.virtualElements);\nko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\nko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\nko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\nko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\nko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\n(function() {\n    var defaultBindingAttributeName = \"data-bind\";\n\n    ko.bindingProvider = function() {\n        this.bindingCache = {};\n    };\n\n    ko.utils.extend(ko.bindingProvider.prototype, {\n        'nodeHasBindings': function(node) {\n            switch (node.nodeType) {\n                case 1: // Element\n                    return node.getAttribute(defaultBindingAttributeName) != null\n                        || ko.components['getComponentNameForNode'](node);\n                case 8: // Comment node\n                    return ko.virtualElements.hasBindingValue(node);\n                default: return false;\n            }\n        },\n\n        'getBindings': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n        },\n\n        'getBindingAccessors': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'getBindingsString': function(node, bindingContext) {\n            switch (node.nodeType) {\n                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\n                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\n                default: return null;\n            }\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\n            try {\n                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\n                return bindingFunction(bindingContext, node);\n            } catch (ex) {\n                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n                throw ex;\n            }\n        }\n    });\n\n    ko.bindingProvider['instance'] = new ko.bindingProvider();\n\n    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\n        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\n        return cache[cacheKey]\n            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\n    }\n\n    function createBindingsStringEvaluator(bindingsString, options) {\n        // Build the source for a function that evaluates \"expression\"\n        // For each scope variable, add an extra level of \"with\" nesting\n        // Example result: with(sc1) { with(sc0) { return (expression) } }\n        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\n            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\n        return new Function(\"$context\", \"$element\", functionBody);\n    }\n})();\n\nko.exportSymbol('bindingProvider', ko.bindingProvider);\n(function () {\n    ko.bindingHandlers = {};\n\n    // The following element types will not be recursed into during binding. In the future, we\n    // may consider adding <template> to this list, because such elements' contents are always\n    // intended to be bound in a different context from where they appear in the document.\n    var bindingDoesNotRecurseIntoElementTypes = {\n        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\n        // because it's unexpected and a potential XSS issue\n        'script': true,\n        'textarea': true\n    };\n\n    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\n    ko['getBindingHandler'] = function(bindingKey) {\n        return ko.bindingHandlers[bindingKey];\n    };\n\n    // The ko.bindingContext constructor is only called directly to create the root context. For child\n    // contexts, use bindingContext.createChildContext or bindingContext.extend.\n    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback) {\n\n        // The binding context object includes static properties for the current, parent, and root view models.\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\n        // any child contexts, must be updated when the view model is changed.\n        function updateContext() {\n            // Most of the time, the context will directly get a view model object, but if a function is given,\n            // we call the function to retrieve the view model. If the function accesses any obsevables or returns\n            // an observable, the dependency is tracked, and those observables can later cause the binding\n            // context to be updated.\n            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\n                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\n\n            if (parentContext) {\n                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\n                // parent context is updated, this context will also be updated.\n                if (parentContext._subscribable)\n                    parentContext._subscribable();\n\n                // Copy $root and any custom properties from the parent context\n                ko.utils.extend(self, parentContext);\n\n                // Because the above copy overwrites our own properties, we need to reset them.\n                // During the first execution, \"subscribable\" isn't set, so don't bother doing the update then.\n                if (subscribable) {\n                    self._subscribable = subscribable;\n                }\n            } else {\n                self['$parents'] = [];\n                self['$root'] = dataItem;\n\n                // Export 'ko' in the binding context so it will be available in bindings and templates\n                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\n                // See https://github.com/SteveSanderson/knockout/issues/490\n                self['ko'] = ko;\n            }\n            self['$rawData'] = dataItemOrObservable;\n            self['$data'] = dataItem;\n            if (dataItemAlias)\n                self[dataItemAlias] = dataItem;\n\n            // The extendCallback function is provided when creating a child context or extending a context.\n            // It handles the specific actions needed to finish setting up the binding context. Actions in this\n            // function could also add dependencies to this binding context.\n            if (extendCallback)\n                extendCallback(self, parentContext, dataItem);\n\n            return self['$data'];\n        }\n        function disposeWhen() {\n            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\n        }\n\n        var self = this,\n            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\n            nodes,\n            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\n\n        // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\n        // subscribed to any observables that were accessed in the process. If there is nothing to track, the\n        // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\n        // the context object.\n        if (subscribable.isActive()) {\n            self._subscribable = subscribable;\n\n            // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\n            subscribable['equalityComparer'] = null;\n\n            // We need to be able to dispose of this computed observable when it's no longer needed. This would be\n            // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\n            // we cannot assume that those nodes have any relation to each other. So instead we track any node that\n            // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\n\n            // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\n            nodes = [];\n            subscribable._addNode = function(node) {\n                nodes.push(node);\n                ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\n                    ko.utils.arrayRemoveItem(nodes, node);\n                    if (!nodes.length) {\n                        subscribable.dispose();\n                        self._subscribable = subscribable = undefined;\n                    }\n                });\n            };\n        }\n    }\n\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\n    // any obsevables, the new child context will automatically get a dependency on the parent context.\n    // But this does not mean that the $data value of the child context will also get updated. If the child\n    // view model also depends on the parent view model, you must provide a function that returns the correct\n    // view model on each update.\n    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback) {\n        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\n            // Extend the context hierarchy by setting the appropriate pointers\n            self['$parentContext'] = parentContext;\n            self['$parent'] = parentContext['$data'];\n            self['$parents'] = (parentContext['$parents'] || []).slice(0);\n            self['$parents'].unshift(self['$parent']);\n            if (extendCallback)\n                extendCallback(self);\n        });\n    };\n\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\n    // when an observable view model is updated.\n    ko.bindingContext.prototype['extend'] = function(properties) {\n        // If the parent context references an observable view model, \"_subscribable\" will always be the\n        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\n        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\n            // This \"child\" context doesn't directly track a parent observable view model,\n            // so we need to manually set the $rawData value to match the parent.\n            self['$rawData'] = parentContext['$rawData'];\n            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\n        });\n    };\n\n    // Returns the valueAccesor function for a binding value\n    function makeValueAccessor(value) {\n        return function() {\n            return value;\n        };\n    }\n\n    // Returns the value of a valueAccessor function\n    function evaluateValueAccessor(valueAccessor) {\n        return valueAccessor();\n    }\n\n    // Given a function that returns bindings, create and return a new object that contains\n    // binding value-accessors functions. Each accessor function calls the original function\n    // so that it always gets the latest value and all dependencies are captured. This is used\n    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\n    function makeAccessorsFromFunction(callback) {\n        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\n            return function() {\n                return callback()[key];\n            };\n        });\n    }\n\n    // Given a bindings function or object, create and return a new object that contains\n    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\n    function makeBindingAccessors(bindings, context, node) {\n        if (typeof bindings === 'function') {\n            return makeAccessorsFromFunction(bindings.bind(null, context, node));\n        } else {\n            return ko.utils.objectMap(bindings, makeValueAccessor);\n        }\n    }\n\n    // This function is used if the binding provider doesn't include a getBindingAccessors function.\n    // It must be called with 'this' set to the provider instance.\n    function getBindingsAndMakeAccessors(node, context) {\n        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\n    }\n\n    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\n        var validator = ko.virtualElements.allowedBindings[bindingName];\n        if (!validator)\n            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\n    }\n\n    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\n        var currentChild,\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\n            provider = ko.bindingProvider['instance'],\n            preprocessNode = provider['preprocessNode'];\n\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\n        // trigger insertion of <template> contents at that point in the document.\n        if (preprocessNode) {\n            while (currentChild = nextInQueue) {\n                nextInQueue = ko.virtualElements.nextSibling(currentChild);\n                preprocessNode.call(provider, currentChild);\n            }\n            // Reset nextInQueue for the next loop\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n        }\n\n        while (currentChild = nextInQueue) {\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\n            nextInQueue = ko.virtualElements.nextSibling(currentChild);\n            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\n        }\n    }\n\n    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\n        var shouldBindDescendants = true;\n\n        // Perf optimisation: Apply bindings only if...\n        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\n        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\n        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\n        var isElement = (nodeVerified.nodeType === 1);\n        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\n\n        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\n                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\n        if (shouldApplyBindings)\n            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\n\n        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\n            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\n            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\n            //    hence bindingContextsMayDifferFromDomParentElement is false\n            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\n            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\n            //    hence bindingContextsMayDifferFromDomParentElement is true\n            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\n        }\n    }\n\n    var boundElementDomDataKey = ko.utils.domData.nextKey();\n\n\n    function topologicalSortBindings(bindings) {\n        // Depth-first sort\n        var result = [],                // The list of key/handler pairs that we will return\n            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\n            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\n        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\n            if (!bindingsConsidered[bindingKey]) {\n                var binding = ko['getBindingHandler'](bindingKey);\n                if (binding) {\n                    // First add dependencies (if any) of the current binding\n                    if (binding['after']) {\n                        cyclicDependencyStack.push(bindingKey);\n                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\n                            if (bindings[bindingDependencyKey]) {\n                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\n                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\n                                } else {\n                                    pushBinding(bindingDependencyKey);\n                                }\n                            }\n                        });\n                        cyclicDependencyStack.length--;\n                    }\n                    // Next add the current binding\n                    result.push({ key: bindingKey, handler: binding });\n                }\n                bindingsConsidered[bindingKey] = true;\n            }\n        });\n\n        return result;\n    }\n\n    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\n        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\n        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\n        if (!sourceBindings) {\n            if (alreadyBound) {\n                throw Error(\"You cannot apply bindings multiple times to the same element.\");\n            }\n            ko.utils.domData.set(node, boundElementDomDataKey, true);\n        }\n\n        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\n        // we can easily recover it just by scanning up the node's ancestors in the DOM\n        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\n        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\n            ko.storedBindingContextForNode(node, bindingContext);\n\n        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\n        var bindings;\n        if (sourceBindings && typeof sourceBindings !== 'function') {\n            bindings = sourceBindings;\n        } else {\n            var provider = ko.bindingProvider['instance'],\n                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\n\n            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\n            // the binding context is updated or if the binding provider accesses observables.\n            var bindingsUpdater = ko.dependentObservable(\n                function() {\n                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\n                    // Register a dependency on the binding context to support obsevable view models.\n                    if (bindings && bindingContext._subscribable)\n                        bindingContext._subscribable();\n                    return bindings;\n                },\n                null, { disposeWhenNodeIsRemoved: node }\n            );\n\n            if (!bindings || !bindingsUpdater.isActive())\n                bindingsUpdater = null;\n        }\n\n        var bindingHandlerThatControlsDescendantBindings;\n        if (bindings) {\n            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\n            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\n            // the latest binding value and registers a dependency on the binding updater.\n            var getValueAccessor = bindingsUpdater\n                ? function(bindingKey) {\n                    return function() {\n                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\n                    };\n                } : function(bindingKey) {\n                    return bindings[bindingKey];\n                };\n\n            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\n            function allBindings() {\n                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\n            }\n            // The following is the 3.x allBindings API\n            allBindings['get'] = function(key) {\n                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\n            };\n            allBindings['has'] = function(key) {\n                return key in bindings;\n            };\n\n            // First put the bindings into the right order\n            var orderedBindings = topologicalSortBindings(bindings);\n\n            // Go through the sorted bindings, calling init and update for each\n            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\n                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\n                // so bindingKeyAndHandler.handler will always be nonnull.\n                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\n                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\n                    bindingKey = bindingKeyAndHandler.key;\n\n                if (node.nodeType === 8) {\n                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\n                }\n\n                try {\n                    // Run init, ignoring any dependencies\n                    if (typeof handlerInitFn == \"function\") {\n                        ko.dependencyDetection.ignore(function() {\n                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\n                            // If this binding handler claims to control descendant bindings, make a note of this\n                            if (initResult && initResult['controlsDescendantBindings']) {\n                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\n                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\n                                bindingHandlerThatControlsDescendantBindings = bindingKey;\n                            }\n                        });\n                    }\n\n                    // Run update in its own computed wrapper\n                    if (typeof handlerUpdateFn == \"function\") {\n                        ko.dependentObservable(\n                            function() {\n                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n                            },\n                            null,\n                            { disposeWhenNodeIsRemoved: node }\n                        );\n                    }\n                } catch (ex) {\n                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\n                    throw ex;\n                }\n            });\n        }\n\n        return {\n            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\n        };\n    };\n\n    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\n    ko.storedBindingContextForNode = function (node, bindingContext) {\n        if (arguments.length == 2) {\n            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\n            if (bindingContext._subscribable)\n                bindingContext._subscribable._addNode(node);\n        } else {\n            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\n        }\n    }\n\n    function getBindingContext(viewModelOrBindingContext) {\n        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\n            ? viewModelOrBindingContext\n            : new ko.bindingContext(viewModelOrBindingContext);\n    }\n\n    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\n        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(node);\n        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\n    };\n\n    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\n        var context = getBindingContext(viewModelOrBindingContext);\n        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\n    };\n\n    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\n        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\n            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\n        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\n        if (!jQueryInstance && window['jQuery']) {\n            jQueryInstance = window['jQuery'];\n        }\n\n        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\n            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\n        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\n\n        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    // Retrieving binding context from arbitrary nodes\n    ko.contextFor = function(node) {\n        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\n        switch (node.nodeType) {\n            case 1:\n            case 8:\n                var context = ko.storedBindingContextForNode(node);\n                if (context) return context;\n                if (node.parentNode) return ko.contextFor(node.parentNode);\n                break;\n        }\n        return undefined;\n    };\n    ko.dataFor = function(node) {\n        var context = ko.contextFor(node);\n        return context ? context['$data'] : undefined;\n    };\n\n    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\n    ko.exportSymbol('applyBindings', ko.applyBindings);\n    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\n    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\n    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\n    ko.exportSymbol('contextFor', ko.contextFor);\n    ko.exportSymbol('dataFor', ko.dataFor);\n})();\n(function(undefined) {\n    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\n        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\n\n    ko.components = {\n        get: function(componentName, callback) {\n            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\n            if (cachedDefinition) {\n                // It's already loaded and cached. Reuse the same definition object.\n                // Note that for API consistency, even cache hits complete asynchronously by default.\n                // You can bypass this by putting synchronous:true on your component config.\n                if (cachedDefinition.isSynchronousComponent) {\n                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\n                        callback(cachedDefinition.definition);\n                    });\n                } else {\n                    setTimeout(function() { callback(cachedDefinition.definition); }, 0);\n                }\n            } else {\n                // Join the loading process that is already underway, or start a new one.\n                loadComponentAndNotify(componentName, callback);\n            }\n        },\n\n        clearCachedDefinition: function(componentName) {\n            delete loadedDefinitionsCache[componentName];\n        },\n\n        _getFirstResultFromLoaders: getFirstResultFromLoaders\n    };\n\n    function getObjectOwnProperty(obj, propName) {\n        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n    }\n\n    function loadComponentAndNotify(componentName, callback) {\n        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\n            completedAsync;\n        if (!subscribable) {\n            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\n            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\n            subscribable.subscribe(callback);\n\n            beginLoadingComponent(componentName, function(definition, config) {\n                var isSynchronousComponent = !!(config && config['synchronous']);\n                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\n                delete loadingSubscribablesCache[componentName];\n\n                // For API consistency, all loads complete asynchronously. However we want to avoid\n                // adding an extra setTimeout if it's unnecessary (i.e., the completion is already\n                // async) since setTimeout(..., 0) still takes about 16ms or more on most browsers.\n                //\n                // You can bypass the 'always synchronous' feature by putting the synchronous:true\n                // flag on your component configuration when you register it.\n                if (completedAsync || isSynchronousComponent) {\n                    // Note that notifySubscribers ignores any dependencies read within the callback.\n                    // See comment in loaderRegistryBehaviors.js for reasoning\n                    subscribable['notifySubscribers'](definition);\n                } else {\n                    setTimeout(function() {\n                        subscribable['notifySubscribers'](definition);\n                    }, 0);\n                }\n            });\n            completedAsync = true;\n        } else {\n            subscribable.subscribe(callback);\n        }\n    }\n\n    function beginLoadingComponent(componentName, callback) {\n        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\n            if (config) {\n                // We have a config, so now load its definition\n                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\n                    callback(definition, config);\n                });\n            } else {\n                // The component has no config - it's unknown to all the loaders.\n                // Note that this is not an error (e.g., a module loading error) - that would abort the\n                // process and this callback would not run. For this callback to run, all loaders must\n                // have confirmed they don't know about this component.\n                callback(null, null);\n            }\n        });\n    }\n\n    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\n        // On the first call in the stack, start with the full set of loaders\n        if (!candidateLoaders) {\n            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\n        }\n\n        // Try the next candidate\n        var currentCandidateLoader = candidateLoaders.shift();\n        if (currentCandidateLoader) {\n            var methodInstance = currentCandidateLoader[methodName];\n            if (methodInstance) {\n                var wasAborted = false,\n                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\n                        if (wasAborted) {\n                            callback(null);\n                        } else if (result !== null) {\n                            // This candidate returned a value. Use it.\n                            callback(result);\n                        } else {\n                            // Try the next candidate\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n                        }\n                    }));\n\n                // Currently, loaders may not return anything synchronously. This leaves open the possibility\n                // that we'll extend the API to support synchronous return values in the future. It won't be\n                // a breaking change, because currently no loader is allowed to return anything except undefined.\n                if (synchronousReturnValue !== undefined) {\n                    wasAborted = true;\n\n                    // Method to suppress exceptions will remain undocumented. This is only to keep\n                    // KO's specs running tidily, since we can observe the loading got aborted without\n                    // having exceptions cluttering up the console too.\n                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\n                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n                    }\n                }\n            } else {\n                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n            }\n        } else {\n            // No candidates returned a value\n            callback(null);\n        }\n    }\n\n    // Reference the loaders via string name so it's possible for developers\n    // to replace the whole array by assigning to ko.components.loaders\n    ko.components['loaders'] = [];\n\n    ko.exportSymbol('components', ko.components);\n    ko.exportSymbol('components.get', ko.components.get);\n    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\n})();\n(function(undefined) {\n\n    // The default loader is responsible for two things:\n    // 1. Maintaining the default in-memory registry of component configuration objects\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n    // 2. Answering requests for components by fetching configuration objects\n    //    from that default in-memory registry and resolving them into standard\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\n    // Custom loaders may override either of these facilities, i.e.,\n    // 1. To supply configuration objects from some other source (e.g., conventions)\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\n    var defaultConfigRegistry = {};\n\n    ko.components.register = function(componentName, config) {\n        if (!config) {\n            throw new Error('Invalid configuration for ' + componentName);\n        }\n\n        if (ko.components.isRegistered(componentName)) {\n            throw new Error('Component ' + componentName + ' is already registered');\n        }\n\n        defaultConfigRegistry[componentName] = config;\n    }\n\n    ko.components.isRegistered = function(componentName) {\n        return componentName in defaultConfigRegistry;\n    }\n\n    ko.components.unregister = function(componentName) {\n        delete defaultConfigRegistry[componentName];\n        ko.components.clearCachedDefinition(componentName);\n    }\n\n    ko.components.defaultLoader = {\n        'getConfig': function(componentName, callback) {\n            var result = defaultConfigRegistry.hasOwnProperty(componentName)\n                ? defaultConfigRegistry[componentName]\n                : null;\n            callback(result);\n        },\n\n        'loadComponent': function(componentName, config, callback) {\n            var errorCallback = makeErrorCallback(componentName);\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n            });\n        },\n\n        'loadTemplate': function(componentName, templateConfig, callback) {\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n        },\n\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n        }\n    };\n\n    var createViewModelKey = 'createViewModel';\n\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n    // into the standard component definition format:\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n    // so this is implemented manually below.\n    function resolveConfig(componentName, errorCallback, config, callback) {\n        var result = {},\n            makeCallBackWhenZero = 2,\n            tryIssueCallback = function() {\n                if (--makeCallBackWhenZero === 0) {\n                    callback(result);\n                }\n            },\n            templateConfig = config['template'],\n            viewModelConfig = config['viewModel'];\n\n        if (templateConfig) {\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n                    result['template'] = resolvedTemplate;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n\n        if (viewModelConfig) {\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n                    result[createViewModelKey] = resolvedViewModel;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n    }\n\n    function resolveTemplate(errorCallback, templateConfig, callback) {\n        if (typeof templateConfig === 'string') {\n            // Markup - parse it\n            callback(ko.utils.parseHtmlFragment(templateConfig));\n        } else if (templateConfig instanceof Array) {\n            // Assume already an array of DOM nodes - pass through unchanged\n            callback(templateConfig);\n        } else if (isDocumentFragment(templateConfig)) {\n            // Document fragment - use its child nodes\n            callback(ko.utils.makeArray(templateConfig.childNodes));\n        } else if (templateConfig['element']) {\n            var element = templateConfig['element'];\n            if (isDomElement(element)) {\n                // Element instance - copy its child nodes\n                callback(cloneNodesFromTemplateSourceElement(element));\n            } else if (typeof element === 'string') {\n                // Element ID - find it, then copy its child nodes\n                var elemInstance = document.getElementById(element);\n                if (elemInstance) {\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n                } else {\n                    errorCallback('Cannot find element with ID ' + element);\n                }\n            } else {\n                errorCallback('Unknown element type: ' + element);\n            }\n        } else {\n            errorCallback('Unknown template value: ' + templateConfig);\n        }\n    }\n\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n        if (typeof viewModelConfig === 'function') {\n            // Constructor - convert to standard factory function format\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n            // be used in factory functions, not viewmodel constructors.\n            callback(function (params /*, componentInfo */) {\n                return new viewModelConfig(params);\n            });\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n            // Already a factory function - use it as-is\n            callback(viewModelConfig[createViewModelKey]);\n        } else if ('instance' in viewModelConfig) {\n            // Fixed object instance - promote to createViewModel format for API consistency\n            var fixedInstance = viewModelConfig['instance'];\n            callback(function (params, componentInfo) {\n                return fixedInstance;\n            });\n        } else if ('viewModel' in viewModelConfig) {\n            // Resolved AMD module whose value is of the form { viewModel: ... }\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n        } else {\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n        }\n    }\n\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\n        switch (ko.utils.tagNameLower(elemInstance)) {\n            case 'script':\n                return ko.utils.parseHtmlFragment(elemInstance.text);\n            case 'textarea':\n                return ko.utils.parseHtmlFragment(elemInstance.value);\n            case 'template':\n                // For browsers with proper <template> element support (i.e., where the .content property\n                // gives a document fragment), use that document fragment.\n                if (isDocumentFragment(elemInstance.content)) {\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n                }\n        }\n\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n        // understand <template> and just treat it as a regular container\n        return ko.utils.cloneNodes(elemInstance.childNodes);\n    }\n\n    function isDomElement(obj) {\n        if (window['HTMLElement']) {\n            return obj instanceof HTMLElement;\n        } else {\n            return obj && obj.tagName && obj.nodeType === 1;\n        }\n    }\n\n    function isDocumentFragment(obj) {\n        if (window['DocumentFragment']) {\n            return obj instanceof DocumentFragment;\n        } else {\n            return obj && obj.nodeType === 11;\n        }\n    }\n\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n        if (typeof config['require'] === 'string') {\n            // The config is the value of an AMD module\n            if (amdRequire || window['require']) {\n                (amdRequire || window['require'])([config['require']], callback);\n            } else {\n                errorCallback('Uses require, but no AMD loader is present');\n            }\n        } else {\n            callback(config);\n        }\n    }\n\n    function makeErrorCallback(componentName) {\n        return function (message) {\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\n        };\n    }\n\n    ko.exportSymbol('components.register', ko.components.register);\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n    ko.exportSymbol('components.unregister', ko.components.unregister);\n\n    // Expose the default loader so that developers can directly ask it for configuration\n    // or to resolve configuration\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\n    // By default, the default loader is the only registered component loader\n    ko.components['loaders'].push(ko.components.defaultLoader);\n\n    // Privately expose the underlying config registry for use in old-IE shim\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\n})();\n(function (undefined) {\n    // Overridable API for determining which component name applies to a given node. By overriding this,\n    // you can for example map specific tagNames to components that are not preregistered.\n    ko.components['getComponentNameForNode'] = function(node) {\n        var tagNameLower = ko.utils.tagNameLower(node);\n        return ko.components.isRegistered(tagNameLower) && tagNameLower;\n    };\n\n    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\n        // Determine if it's really a custom element matching a component\n        if (node.nodeType === 1) {\n            var componentName = ko.components['getComponentNameForNode'](node);\n            if (componentName) {\n                // It does represent a component, so add a component binding for it\n                allBindings = allBindings || {};\n\n                if (allBindings['component']) {\n                    // Avoid silently overwriting some other 'component' binding that may already be on the element\n                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n                }\n\n                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\n\n                allBindings['component'] = valueAccessors\n                    ? function() { return componentBindingValue; }\n                    : componentBindingValue;\n            }\n        }\n\n        return allBindings;\n    }\n\n    var nativeBindingProviderInstance = new ko.bindingProvider();\n\n    function getComponentParamsFromCustomElement(elem, bindingContext) {\n        var paramsAttribute = elem.getAttribute('params');\n\n        if (paramsAttribute) {\n            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\n                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\n                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\n                }),\n                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\n                    var paramValue = paramValueComputed.peek();\n                    // Does the evaluation of the parameter value unwrap any observables?\n                    if (!paramValueComputed.isActive()) {\n                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n                        return paramValue;\n                    } else {\n                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n                        // level of observability, and any inner (resulting model value) level of observability.\n                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n                        // writable observable, the computed will also be writable and pass the value on to the observable.\n                        return ko.computed({\n                            'read': function() {\n                                return ko.utils.unwrapObservable(paramValueComputed());\n                            },\n                            'write': ko.isWriteableObservable(paramValue) && function(value) {\n                                paramValueComputed()(value);\n                            },\n                            disposeWhenNodeIsRemoved: elem\n                        });\n                    }\n                });\n\n            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n            // This is in case the developer wants to react to outer (binding) observability separately from inner\n            // (model value) observability, or in case the model value observable has subobservables.\n            if (!result.hasOwnProperty('$raw')) {\n                result['$raw'] = rawParamComputedValues;\n            }\n\n            return result;\n        } else {\n            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n            // any empty one. Otherwise component viewmodels need special code to check whether or not\n            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n            return { '$raw': {} };\n        }\n    }\n\n    // --------------------------------------------------------------------------------\n    // Compatibility code for older (pre-HTML5) IE browsers\n\n    if (ko.utils.ieVersion < 9) {\n        // Whenever you preregister a component, enable it as a custom element in the current document\n        ko.components['register'] = (function(originalFunction) {\n            return function(componentName) {\n                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\n                return originalFunction.apply(this, arguments);\n            }\n        })(ko.components['register']);\n\n        // Whenever you create a document fragment, enable all preregistered component names as custom elements\n        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\n        document.createDocumentFragment = (function(originalFunction) {\n            return function() {\n                var newDocFrag = originalFunction(),\n                    allComponents = ko.components._allRegisteredComponents;\n                for (var componentName in allComponents) {\n                    if (allComponents.hasOwnProperty(componentName)) {\n                        newDocFrag.createElement(componentName);\n                    }\n                }\n                return newDocFrag;\n            };\n        })(document.createDocumentFragment);\n    }\n})();(function(undefined) {\n\n    var componentLoadingOperationUniqueId = 0;\n\n    ko.bindingHandlers['component'] = {\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n            var currentViewModel,\n                currentLoadingOperationId,\n                disposeAssociatedComponentViewModel = function () {\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n                    if (typeof currentViewModelDispose === 'function') {\n                        currentViewModelDispose.call(currentViewModel);\n                    }\n\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n                    currentLoadingOperationId = null;\n                },\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\n            ko.computed(function () {\n                var value = ko.utils.unwrapObservable(valueAccessor()),\n                    componentName, componentParams;\n\n                if (typeof value === 'string') {\n                    componentName = value;\n                } else {\n                    componentName = ko.utils.unwrapObservable(value['name']);\n                    componentParams = ko.utils.unwrapObservable(value['params']);\n                }\n\n                if (!componentName) {\n                    throw new Error('No component name specified');\n                }\n\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n                ko.components.get(componentName, function(componentDefinition) {\n                    // If this is not the current load operation for this element, ignore it.\n                    if (currentLoadingOperationId !== loadingOperationId) {\n                        return;\n                    }\n\n                    // Clean up previous state\n                    disposeAssociatedComponentViewModel();\n\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n                    if (!componentDefinition) {\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\n                    }\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\n                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\n                            ctx['$component'] = componentViewModel;\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\n                        });\n                    currentViewModel = componentViewModel;\n                    ko.applyBindingsToDescendants(childBindingContext, element);\n                });\n            }, null, { disposeWhenNodeIsRemoved: element });\n\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n\n    ko.virtualElements.allowedBindings['component'] = true;\n\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n        var template = componentDefinition['template'];\n        if (!template) {\n            throw new Error('Component \\'' + componentName + '\\' has no template');\n        }\n\n        var clonedNodesArray = ko.utils.cloneNodes(template);\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n    }\n\n    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\n        var componentViewModelFactory = componentDefinition['createViewModel'];\n        return componentViewModelFactory\n            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\n            : componentParams; // Template-only component\n    }\n\n})();\nvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\nko.bindingHandlers['attr'] = {\n    'update': function(element, valueAccessor, allBindings) {\n        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\n        ko.utils.objectForEach(value, function(attrName, attrValue) {\n            attrValue = ko.utils.unwrapObservable(attrValue);\n\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n            if (toRemove)\n                element.removeAttribute(attrName);\n\n            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\n            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\n            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\n            // property for IE <= 8.\n            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\n                attrName = attrHtmlToJavascriptMap[attrName];\n                if (toRemove)\n                    element.removeAttribute(attrName);\n                else\n                    element[attrName] = attrValue;\n            } else if (!toRemove) {\n                element.setAttribute(attrName, attrValue.toString());\n            }\n\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n            // entirely, and there's no strong reason to allow for such casing in HTML.\n            if (attrName === \"name\") {\n                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\n            }\n        });\n    }\n};\n(function() {\n\nko.bindingHandlers['checked'] = {\n    'after': ['value', 'attr'],\n    'init': function (element, valueAccessor, allBindings) {\n        var checkedValue = ko.pureComputed(function() {\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n            if (allBindings['has']('checkedValue')) {\n                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n            } else if (allBindings['has']('value')) {\n                return ko.utils.unwrapObservable(allBindings.get('value'));\n            }\n\n            return element.value;\n        });\n\n        function updateModel() {\n            // This updates the model value from the view value.\n            // It runs in response to DOM events (click) and changes in checkedValue.\n            var isChecked = element.checked,\n                elemValue = useCheckedValue ? checkedValue() : isChecked;\n\n            // When we're first setting up this computed, don't change any model state.\n            if (ko.computedContext.isInitial()) {\n                return;\n            }\n\n            // We can ignore unchecked radio buttons, because some other radio\n            // button will be getting checked, and that one can take care of updating state.\n            if (isRadio && !isChecked) {\n                return;\n            }\n\n            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\n            if (isValueArray) {\n                if (oldElemValue !== elemValue) {\n                    // When we're responding to the checkedValue changing, and the element is\n                    // currently checked, replace the old elem value with the new elem value\n                    // in the model array.\n                    if (isChecked) {\n                        ko.utils.addOrRemoveItem(modelValue, elemValue, true);\n                        ko.utils.addOrRemoveItem(modelValue, oldElemValue, false);\n                    }\n\n                    oldElemValue = elemValue;\n                } else {\n                    // When we're responding to the user having checked/unchecked a checkbox,\n                    // add/remove the element value to the model array.\n                    ko.utils.addOrRemoveItem(modelValue, elemValue, isChecked);\n                }\n            } else {\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n            }\n        };\n\n        function updateView() {\n            // This updates the view value from the model value.\n            // It runs in response to changes in the bound (checked) value.\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (isValueArray) {\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\n                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\n            } else if (isCheckbox) {\n                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\n                element.checked = modelValue;\n            } else {\n                // For radio buttons, being checked means that the radio button's value corresponds to the model value\n                element.checked = (checkedValue() === modelValue);\n            }\n        };\n\n        var isCheckbox = element.type == \"checkbox\",\n            isRadio = element.type == \"radio\";\n\n        // Only bind to check boxes and radio buttons\n        if (!isCheckbox && !isRadio) {\n            return;\n        }\n\n        var isValueArray = isCheckbox && (ko.utils.unwrapObservable(valueAccessor()) instanceof Array),\n            oldElemValue = isValueArray ? checkedValue() : undefined,\n            useCheckedValue = isRadio || isValueArray;\n\n        // IE 6 won't allow radio buttons to be selected unless they have a name\n        if (isRadio && !element.name)\n            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\n\n        // Set up two computeds to update the binding:\n\n        // The first responds to changes in the checkedValue value and to element clicks\n        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\n        ko.utils.registerEventHandler(element, \"click\", updateModel);\n\n        // The second responds to changes in the model value (the one associated with the checked binding)\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n    }\n};\nko.expressionRewriting.twoWayBindings['checked'] = true;\n\nko.bindingHandlers['checkedValue'] = {\n    'update': function (element, valueAccessor) {\n        element.value = ko.utils.unwrapObservable(valueAccessor());\n    }\n};\n\n})();var classesWrittenByBindingKey = '__ko__cssValue';\nko.bindingHandlers['css'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value !== null && typeof value == \"object\") {\n            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\n                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\n                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\n            });\n        } else {\n            value = String(value || ''); // Make sure we don't try to store or set a non-string value\n            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\n            element[classesWrittenByBindingKey] = value;\n            ko.utils.toggleDomNodeCssClass(element, value, true);\n        }\n    }\n};\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            element.removeAttribute(\"disabled\");\n        else if ((!value) && (!element.disabled))\n            element.disabled = true;\n    }\n};\n\nko.bindingHandlers['disable'] = {\n    'update': function (element, valueAccessor) {\n        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n    }\n};\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n// e.g. click:handler instead of the usual full-length event:{click:handler}\nfunction makeEventHandlerShortcut(eventName) {\n    ko.bindingHandlers[eventName] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var newValueAccessor = function () {\n                var result = {};\n                result[eventName] = valueAccessor();\n                return result;\n            };\n            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\n        }\n    }\n}\n\nko.bindingHandlers['event'] = {\n    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var eventsToHandle = valueAccessor() || {};\n        ko.utils.objectForEach(eventsToHandle, function(eventName) {\n            if (typeof eventName == \"string\") {\n                ko.utils.registerEventHandler(element, eventName, function (event) {\n                    var handlerReturnValue;\n                    var handlerFunction = valueAccessor()[eventName];\n                    if (!handlerFunction)\n                        return;\n\n                    try {\n                        // Take all the event args, and prefix with the viewmodel\n                        var argsForHandler = ko.utils.makeArray(arguments);\n                        viewModel = bindingContext['$data'];\n                        argsForHandler.unshift(viewModel);\n                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\n                    } finally {\n                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                            if (event.preventDefault)\n                                event.preventDefault();\n                            else\n                                event.returnValue = false;\n                        }\n                    }\n\n                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\n                    if (!bubble) {\n                        event.cancelBubble = true;\n                        if (event.stopPropagation)\n                            event.stopPropagation();\n                    }\n                });\n            }\n        });\n    }\n};\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\nko.bindingHandlers['foreach'] = {\n    makeTemplateValueAccessor: function(valueAccessor) {\n        return function() {\n            var modelValue = valueAccessor(),\n                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\n            // If unwrappedValue is the array, pass in the wrapped value on its own\n            // The value will be unwrapped and tracked within the template binding\n            // (See https://github.com/SteveSanderson/knockout/issues/523)\n            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\n                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\n\n            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n            ko.utils.unwrapObservable(modelValue);\n            return {\n                'foreach': unwrappedValue['data'],\n                'as': unwrappedValue['as'],\n                'includeDestroyed': unwrappedValue['includeDestroyed'],\n                'afterAdd': unwrappedValue['afterAdd'],\n                'beforeRemove': unwrappedValue['beforeRemove'],\n                'afterRender': unwrappedValue['afterRender'],\n                'beforeMove': unwrappedValue['beforeMove'],\n                'afterMove': unwrappedValue['afterMove'],\n                'templateEngine': ko.nativeTemplateEngine.instance\n            };\n        };\n    },\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\n    },\n    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n    }\n};\nko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\nko.virtualElements.allowedBindings['foreach'] = true;\nvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\nvar hasfocusLastValue = '__ko_hasfocusLastValue';\nko.bindingHandlers['hasfocus'] = {\n    'init': function(element, valueAccessor, allBindings) {\n        var handleElementFocusChange = function(isFocused) {\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n            // from calling 'blur()' on the element when it loses focus.\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n            element[hasfocusUpdatingProperty] = true;\n            var ownerDoc = element.ownerDocument;\n            if (\"activeElement\" in ownerDoc) {\n                var active;\n                try {\n                    active = ownerDoc.activeElement;\n                } catch(e) {\n                    // IE9 throws if you access activeElement during page load (see issue #703)\n                    active = ownerDoc.body;\n                }\n                isFocused = (active === element);\n            }\n            var modelValue = valueAccessor();\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n            element[hasfocusLastValue] = isFocused;\n            element[hasfocusUpdatingProperty] = false;\n        };\n        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\n        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\n\n        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\n        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\n        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n    },\n    'update': function(element, valueAccessor) {\n        var value = !!ko.utils.unwrapObservable(valueAccessor()); //force boolean to compare with last value\n        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\n            value ? element.focus() : element.blur();\n            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]); // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n        }\n    }\n};\nko.expressionRewriting.twoWayBindings['hasfocus'] = true;\n\nko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\nko.expressionRewriting.twoWayBindings['hasFocus'] = true;\nko.bindingHandlers['html'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        // setHtml will unwrap the value if needed\n        ko.utils.setHtml(element, valueAccessor());\n    }\n};\n// Makes a binding like with or if\nfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\n    ko.bindingHandlers[bindingKey] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var didDisplayOnLastUpdate,\n                savedNodes;\n            ko.computed(function() {\n                var dataValue = ko.utils.unwrapObservable(valueAccessor()),\n                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\n                    isFirstRender = !savedNodes,\n                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\n\n                if (needsRefresh) {\n                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\n                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\n                    }\n\n                    if (shouldDisplay) {\n                        if (!isFirstRender) {\n                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\n                        }\n                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, dataValue) : bindingContext, element);\n                    } else {\n                        ko.virtualElements.emptyNode(element);\n                    }\n\n                    didDisplayOnLastUpdate = shouldDisplay;\n                }\n            }, null, { disposeWhenNodeIsRemoved: element });\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n    ko.virtualElements.allowedBindings[bindingKey] = true;\n}\n\n// Construct the actual binding handlers\nmakeWithIfBinding('if');\nmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\nmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\n    function(bindingContext, dataValue) {\n        return bindingContext['createChildContext'](dataValue);\n    }\n);\nvar captionPlaceholder = {};\nko.bindingHandlers['options'] = {\n    'init': function(element) {\n        if (ko.utils.tagNameLower(element) !== \"select\")\n            throw new Error(\"options binding applies only to SELECT elements\");\n\n        // Remove all existing <option>s.\n        while (element.length > 0) {\n            element.remove(0);\n        }\n\n        // Ensures that the binding processor doesn't try to bind the options\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor, allBindings) {\n        function selectedOptions() {\n            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\n        }\n\n        var selectWasPreviouslyEmpty = element.length == 0,\n            multiple = element.multiple,\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n            arrayToDomNodeChildrenOptions = {},\n            captionValue,\n            filteredArray,\n            previousSelectedValues = [];\n\n        if (!valueAllowUnset) {\n            if (multiple) {\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n            } else if (element.selectedIndex >= 0) {\n                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\n            }\n        }\n\n        if (unwrappedArray) {\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // If caption is included, add it to the array\n            if (allBindings['has']('optionsCaption')) {\n                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n                // If caption value is null or undefined, don't show a caption\n                if (captionValue !== null && captionValue !== undefined) {\n                    filteredArray.unshift(captionPlaceholder);\n                }\n            }\n        } else {\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n        }\n\n        function applyToObject(object, predicate, defaultValue) {\n            var predicateType = typeof predicate;\n            if (predicateType == \"function\")    // Given a function; run it against the data value\n                return predicate(object);\n            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\n                return object[predicate];\n            else                                // Given no optionsText arg; use the data value itself\n                return defaultValue;\n        }\n\n        // The following functions can run at two different times:\n        // The first is when the whole array is being updated directly from this binding handler.\n        // The second is when an observable value for a specific array entry is updated.\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n        var itemUpdate = false;\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\n            if (oldOptions.length) {\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\n                itemUpdate = true;\n            }\n            var option = element.ownerDocument.createElement(\"option\");\n            if (arrayEntry === captionPlaceholder) {\n                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n                ko.selectExtensions.writeValue(option, undefined);\n            } else {\n                // Apply a value to the option element\n                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\n                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\n\n                // Apply some text to the option element\n                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\n                ko.utils.setTextContent(option, optionText);\n            }\n            return [option];\n        }\n\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n        arrayToDomNodeChildrenOptions['beforeRemove'] =\n            function (option) {\n                element.removeChild(option);\n            };\n\n        function setSelectionCallback(arrayEntry, newOptions) {\n            if (itemUpdate && valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else if (previousSelectedValues.length) {\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n                // That's why we first added them without selection. Now it's time to set the selection.\n                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\n                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\n\n                // If this option was changed from being selected during a single-item update, notify the change\n                if (itemUpdate && !isSelected) {\n                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                }\n            }\n        }\n\n        var callback = setSelectionCallback;\n        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\n            callback = function(arrayEntry, newOptions) {\n                setSelectionCallback(arrayEntry, newOptions);\n                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n            }\n        }\n\n        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\n        ko.dependencyDetection.ignore(function () {\n            if (valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else {\n                // Determine if the selection has changed as a result of updating the options list\n                var selectionChanged;\n                if (multiple) {\n                    // For a multiple-select box, compare the new selection count to the previous one\n                    // But if nothing was selected before, the selection can't have changed\n                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n                } else {\n                    // For a single-select box, compare the current value to the previous value\n                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\n                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n                        : (previousSelectedValues.length || element.selectedIndex >= 0);\n                }\n\n                // Ensure consistency between model value and selected option.\n                // If the dropdown was changed so that selection is no longer the same,\n                // notify the value or selectedOptions binding.\n                if (selectionChanged) {\n                    ko.utils.triggerEvent(element, \"change\");\n                }\n            }\n        });\n\n        // Workaround for IE bug\n        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\n\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\n            element.scrollTop = previousScrollTop;\n    }\n};\nko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\nko.bindingHandlers['selectedOptions'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        ko.utils.registerEventHandler(element, \"change\", function () {\n            var value = valueAccessor(), valueToWrite = [];\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                if (node.selected)\n                    valueToWrite.push(ko.selectExtensions.readValue(node));\n            });\n            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n        });\n    },\n    'update': function (element, valueAccessor) {\n        if (ko.utils.tagNameLower(element) != \"select\")\n            throw new Error(\"values binding applies only to SELECT elements\");\n\n        var newValue = ko.utils.unwrapObservable(valueAccessor());\n        if (newValue && typeof newValue.length == \"number\") {\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\n                ko.utils.setOptionNodeSelectionState(node, isSelected);\n            });\n        }\n    }\n};\nko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\nko.bindingHandlers['style'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor() || {});\n        ko.utils.objectForEach(value, function(styleName, styleValue) {\n            styleValue = ko.utils.unwrapObservable(styleValue);\n\n            if (styleValue === null || styleValue === undefined || styleValue === false) {\n                // Empty string removes the value, whereas null/undefined have no effect\n                styleValue = \"\";\n            }\n\n            element.style[styleName] = styleValue;\n        });\n    }\n};\nko.bindingHandlers['submit'] = {\n    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        if (typeof valueAccessor() != \"function\")\n            throw new Error(\"The value for a submit binding must be a function\");\n        ko.utils.registerEventHandler(element, \"submit\", function (event) {\n            var handlerReturnValue;\n            var value = valueAccessor();\n            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\n            finally {\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                    if (event.preventDefault)\n                        event.preventDefault();\n                    else\n                        event.returnValue = false;\n                }\n            }\n        });\n    }\n};\nko.bindingHandlers['text'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        ko.utils.setTextContent(element, valueAccessor());\n    }\n};\nko.virtualElements.allowedBindings['text'] = true;\n(function () {\n\nif (window && window.navigator) {\n    var parseVersion = function (matches) {\n        if (matches) {\n            return parseFloat(matches[1]);\n        }\n    };\n\n    // Detect various browser versions because some old versions don't fully support the 'input' event\n    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\n        userAgent = window.navigator.userAgent,\n        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\n        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\n}\n\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\n// But it does fire the 'selectionchange' event on many of those, presumably because the\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\n// fired at the document level only and doesn't directly indicate which element changed. We\n// set up just one event handler for the document and use 'activeElement' to determine which\n// element was changed.\nif (ko.utils.ieVersion < 10) {\n    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\n        selectionChangeHandlerName = ko.utils.domData.nextKey();\n    var selectionChangeHandler = function(event) {\n        var target = this.activeElement,\n            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\n        if (handler) {\n            handler(event);\n        }\n    };\n    var registerForSelectionChangeEvent = function (element, handler) {\n        var ownerDoc = element.ownerDocument;\n        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\n            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\n            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\n        }\n        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\n    };\n}\n\nko.bindingHandlers['textInput'] = {\n    'init': function (element, valueAccessor, allBindings) {\n\n        var previousElementValue = element.value,\n            timeoutHandle,\n            elementValueBeforeEvent;\n\n        var updateModel = function (event) {\n            clearTimeout(timeoutHandle);\n            elementValueBeforeEvent = timeoutHandle = undefined;\n\n            var elementValue = element.value;\n            if (previousElementValue !== elementValue) {\n                // Provide a way for tests to know exactly which event was processed\n                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\n                previousElementValue = elementValue;\n                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n            }\n        };\n\n        var deferUpdateModel = function (event) {\n            if (!timeoutHandle) {\n                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n                // event firing and the updateModel function running. This allows us to ignore model\n                // updates that are from the previous state of the element, usually due to techniques\n                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n                elementValueBeforeEvent = element.value;\n                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\n                timeoutHandle = setTimeout(handler, 4);\n            }\n        };\n\n        var updateView = function () {\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (modelValue === null || modelValue === undefined) {\n                modelValue = '';\n            }\n\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n                setTimeout(updateView, 4);\n                return;\n            }\n\n            // Update the element only if the element and model are different. On some browsers, updating the value\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\n            if (element.value !== modelValue) {\n                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\n                element.value = modelValue;\n            }\n        };\n\n        var onEvent = function (event, handler) {\n            ko.utils.registerEventHandler(element, event, handler);\n        };\n\n        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\n            // Provide a way for tests to specify exactly which events are bound\n            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\n                if (eventName.slice(0,5) == 'after') {\n                    onEvent(eventName.slice(5), deferUpdateModel);\n                } else {\n                    onEvent(eventName, updateModel);\n                }\n            });\n        } else {\n            if (ko.utils.ieVersion < 10) {\n                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\n                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\n                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\n                // when using autocomplete, we'll use 'propertychange' for it also.\n                onEvent('propertychange', function(event) {\n                    if (event.propertyName === 'value') {\n                        updateModel(event);\n                    }\n                });\n\n                if (ko.utils.ieVersion == 8) {\n                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\n                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\n                    // events too.\n                    onEvent('keyup', updateModel);      // A single keystoke\n                    onEvent('keydown', updateModel);    // The first character when a key is held down\n                }\n                if (ko.utils.ieVersion >= 8) {\n                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\n                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\n                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\n                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\n                    // These are also needed in IE8 because of the bug described above.\n                    registerForSelectionChangeEvent(element, updateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\n                    onEvent('dragend', deferUpdateModel);\n                }\n            } else {\n                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\n                // through the user interface.\n                onEvent('input', updateModel);\n\n                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\n                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\n                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\n                    onEvent('keydown', deferUpdateModel);\n                    onEvent('paste', deferUpdateModel);\n                    onEvent('cut', deferUpdateModel);\n                } else if (operaVersion < 11) {\n                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\n                    // We can try to catch some of those using 'keydown'.\n                    onEvent('keydown', deferUpdateModel);\n                } else if (firefoxVersion < 4.0) {\n                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n                    onEvent('DOMAutoComplete', updateModel);\n\n                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\n                    onEvent('dragdrop', updateModel);       // <3.5\n                    onEvent('drop', updateModel);           // 3.5\n                }\n            }\n        }\n\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n        onEvent('change', updateModel);\n\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n    }\n};\nko.expressionRewriting.twoWayBindings['textInput'] = true;\n\n// textinput is an alias for textInput\nko.bindingHandlers['textinput'] = {\n    // preprocess is the only way to set up a full alias\n    'preprocess': function (value, name, addBinding) {\n        addBinding('textInput', value);\n    }\n};\n\n})();ko.bindingHandlers['uniqueName'] = {\n    'init': function (element, valueAccessor) {\n        if (valueAccessor()) {\n            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\n            ko.utils.setElementName(element, name);\n        }\n    }\n};\nko.bindingHandlers['uniqueName'].currentIndex = 0;\nko.bindingHandlers['value'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\n            return;\n        }\n\n        // Always catch \"change\" event; possibly other events too if asked\n        var eventsToCatch = [\"change\"];\n        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\n        var propertyChangedFired = false;\n        var elementValueBeforeEvent = null;\n\n        if (requestedEventsToCatch) {\n            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\n                requestedEventsToCatch = [requestedEventsToCatch];\n            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\n            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\n        }\n\n        var valueUpdateHandler = function() {\n            elementValueBeforeEvent = null;\n            propertyChangedFired = false;\n            var modelValue = valueAccessor();\n            var elementValue = ko.selectExtensions.readValue(element);\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n        }\n\n        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\n        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\n        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\n                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\n        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\n            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\n            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\n            ko.utils.registerEventHandler(element, \"blur\", function() {\n                if (propertyChangedFired) {\n                    valueUpdateHandler();\n                }\n            });\n        }\n\n        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\n            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\n            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\n            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\n            var handler = valueUpdateHandler;\n            if (ko.utils.stringStartsWith(eventName, \"after\")) {\n                handler = function() {\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n                    // techniques like rateLimit can trigger model changes at critical moments that will\n                    // override the user's inputs, causing keystrokes to be lost.\n                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\n                    setTimeout(valueUpdateHandler, 0);\n                };\n                eventName = eventName.substring(\"after\".length);\n            }\n            ko.utils.registerEventHandler(element, eventName, handler);\n        });\n\n        var updateFromModel = function () {\n            var newValue = ko.utils.unwrapObservable(valueAccessor());\n            var elementValue = ko.selectExtensions.readValue(element);\n\n            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n                setTimeout(updateFromModel, 0);\n                return;\n            }\n\n            var valueHasChanged = (newValue !== elementValue);\n\n            if (valueHasChanged) {\n                if (ko.utils.tagNameLower(element) === \"select\") {\n                    var allowUnset = allBindings.get('valueAllowUnset');\n                    var applyValueAction = function () {\n                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\n                    };\n                    applyValueAction();\n\n                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                    } else {\n                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\n                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\n                        // to apply the value as well.\n                        setTimeout(applyValueAction, 0);\n                    }\n                } else {\n                    ko.selectExtensions.writeValue(element, newValue);\n                }\n            }\n        };\n\n        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n    },\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\n};\nko.expressionRewriting.twoWayBindings['value'] = true;\nko.bindingHandlers['visible'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        var isCurrentlyVisible = !(element.style.display == \"none\");\n        if (value && !isCurrentlyVisible)\n            element.style.display = \"\";\n        else if ((!value) && isCurrentlyVisible)\n            element.style.display = \"none\";\n    }\n};\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\nmakeEventHandlerShortcut('click');\n// If you want to make a custom template engine,\n//\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\n//\n//        function (templateSource, bindingContext, options) {\n//            // - templateSource.text() is the text of the template you should render\n//            // - bindingContext.$data is the data you should pass into the template\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n//            //     and bindingContext.$root available in the template too\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n//            // - templateDocument is the document object of the template\n//            //\n//            // Return value: an array of DOM nodes\n//        }\n//\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n//\n//        function (script) {\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n//        }\n//\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\nko.templateEngine = function () { };\n\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    throw new Error(\"Override renderTemplateSource\");\n};\n\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n};\n\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n    // Named template\n    if (typeof template == \"string\") {\n        templateDocument = templateDocument || document;\n        var elem = templateDocument.getElementById(template);\n        if (!elem)\n            throw new Error(\"Cannot find template with ID \" + template);\n        return new ko.templateSources.domElement(elem);\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n        // Anonymous template\n        return new ko.templateSources.anonymousTemplate(template);\n    } else\n        throw new Error(\"Unknown template type: \" + template);\n};\n\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n};\n\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n    // Skip rewriting if requested\n    if (this['allowTemplateRewriting'] === false)\n        return true;\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n};\n\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    var rewritten = rewriterCallback(templateSource['text']());\n    templateSource['text'](rewritten);\n    templateSource['data'](\"isRewritten\", true);\n};\n\nko.exportSymbol('templateEngine', ko.templateEngine);\n\nko.templateRewriting = (function () {\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\n    function validateDataBindValuesForRewriting(keyValueArray) {\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n        for (var i = 0; i < keyValueArray.length; i++) {\n            var key = keyValueArray[i]['key'];\n            if (allValidators.hasOwnProperty(key)) {\n                var validator = allValidators[key];\n\n                if (typeof validator === \"function\") {\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n                    if (possibleErrorMessage)\n                        throw new Error(possibleErrorMessage);\n                } else if (!validator) {\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n                }\n            }\n        }\n    }\n\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n        // extra indirection.\n        var applyBindingsToNextSiblingScript =\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n    }\n\n    return {\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n                }, templateDocument);\n        },\n\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n            });\n        },\n\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n            return ko.memoization.memoize(function (domNode, bindingContext) {\n                var nodeToBind = domNode.nextSibling;\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n                }\n            });\n        }\n    }\n})();\n\n\n// Exported only because it has to be referenced by string lookup from within rewritten template\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n(function() {\n    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n    //\n    // Two are provided by default:\n    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n    //                                           without reading/writing the actual element text content, since it will be overwritten\n    //                                           with the rendered template output.\n    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n    // Template sources need to have the following functions:\n    //   text()             - returns the template text from your storage location\n    //   text(value)        - writes the supplied template text to your storage location\n    //   data(key)          - reads values stored using data(key, value) - see below\n    //   data(key, value)   - associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n    //\n    // Optionally, template sources can also have the following functions:\n    //   nodes()            - returns a DOM element containing the nodes of this template, where available\n    //   nodes(value)       - writes the given DOM element to your storage location\n    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n    //\n    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\n    ko.templateSources = {};\n\n    // ---- ko.templateSources.domElement -----\n\n    ko.templateSources.domElement = function(element) {\n        this.domElement = element;\n    }\n\n    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\n        var tagNameLower = ko.utils.tagNameLower(this.domElement),\n            elemContentsProperty = tagNameLower === \"script\" ? \"text\"\n                                 : tagNameLower === \"textarea\" ? \"value\"\n                                 : \"innerHTML\";\n\n        if (arguments.length == 0) {\n            return this.domElement[elemContentsProperty];\n        } else {\n            var valueToWrite = arguments[0];\n            if (elemContentsProperty === \"innerHTML\")\n                ko.utils.setHtml(this.domElement, valueToWrite);\n            else\n                this.domElement[elemContentsProperty] = valueToWrite;\n        }\n    };\n\n    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\n    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\n        if (arguments.length === 1) {\n            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\n        } else {\n            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\n        }\n    };\n\n    // ---- ko.templateSources.anonymousTemplate -----\n    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\n    var anonymousTemplatesDomDataKey = ko.utils.domData.nextKey();\n    ko.templateSources.anonymousTemplate = function(element) {\n        this.domElement = element;\n    }\n    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\n    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\n    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\n        if (arguments.length == 0) {\n            var templateData = ko.utils.domData.get(this.domElement, anonymousTemplatesDomDataKey) || {};\n            if (templateData.textData === undefined && templateData.containerData)\n                templateData.textData = templateData.containerData.innerHTML;\n            return templateData.textData;\n        } else {\n            var valueToWrite = arguments[0];\n            ko.utils.domData.set(this.domElement, anonymousTemplatesDomDataKey, {textData: valueToWrite});\n        }\n    };\n    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\n        if (arguments.length == 0) {\n            var templateData = ko.utils.domData.get(this.domElement, anonymousTemplatesDomDataKey) || {};\n            return templateData.containerData;\n        } else {\n            var valueToWrite = arguments[0];\n            ko.utils.domData.set(this.domElement, anonymousTemplatesDomDataKey, {containerData: valueToWrite});\n        }\n    };\n\n    ko.exportSymbol('templateSources', ko.templateSources);\n    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\n    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\n})();\n(function () {\n    var _templateEngine;\n    ko.setTemplateEngine = function (templateEngine) {\n        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\n            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\n        _templateEngine = templateEngine;\n    }\n\n    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\n        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\n        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n            nextInQueue = ko.virtualElements.nextSibling(node);\n            action(node, nextInQueue);\n        }\n    }\n\n    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\n        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\n        if (continuousNodeArray.length) {\n            var firstNode = continuousNodeArray[0],\n                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n                parentNode = firstNode.parentNode,\n                provider = ko.bindingProvider['instance'],\n                preprocessNode = provider['preprocessNode'];\n\n            if (preprocessNode) {\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\n                    var nodePreviousSibling = node.previousSibling;\n                    var newNodes = preprocessNode.call(provider, node);\n                    if (newNodes) {\n                        if (node === firstNode)\n                            firstNode = newNodes[0] || nextNodeInRange;\n                        if (node === lastNode)\n                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n                    }\n                });\n\n                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n                // first node needs to be in the array).\n                continuousNodeArray.length = 0;\n                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n                    return;\n                }\n                if (firstNode === lastNode) {\n                    continuousNodeArray.push(firstNode);\n                } else {\n                    continuousNodeArray.push(firstNode, lastNode);\n                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n                }\n            }\n\n            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n            // whereas a regular applyBindings won't introduce new memoized nodes\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.applyBindings(bindingContext, node);\n            });\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\n            });\n\n            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n        }\n    }\n\n    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\n        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\n                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\n                                        : null;\n    }\n\n    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\n        options = options || {};\n        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\n        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\n        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\n\n        // Loosely check result is an array of DOM nodes\n        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\n            throw new Error(\"Template engine must return an array of DOM nodes\");\n\n        var haveAddedNodesToParent = false;\n        switch (renderMode) {\n            case \"replaceChildren\":\n                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"replaceNode\":\n                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"ignoreTargetNode\": break;\n            default:\n                throw new Error(\"Unknown renderMode: \" + renderMode);\n        }\n\n        if (haveAddedNodesToParent) {\n            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n            if (options['afterRender'])\n                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\n        }\n\n        return renderedNodesArray;\n    }\n\n    function resolveTemplateName(template, data, context) {\n        // The template can be specified as:\n        if (ko.isObservable(template)) {\n            // 1. An observable, with string value\n            return template();\n        } else if (typeof template === 'function') {\n            // 2. A function of (data, context) returning a string\n            return template(data, context);\n        } else {\n            // 3. A string\n            return template;\n        }\n    }\n\n    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\n        options = options || {};\n        if ((options['templateEngine'] || _templateEngine) == undefined)\n            throw new Error(\"Set a template engine before calling renderTemplate\");\n        renderMode = renderMode || \"replaceChildren\";\n\n        if (targetNodeOrNodeArray) {\n            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\n            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\n            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\n\n            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\n                function () {\n                    // Ensure we've got a proper binding context to work with\n                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\n                        ? dataOrBindingContext\n                        : new ko.bindingContext(ko.utils.unwrapObservable(dataOrBindingContext));\n\n                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\n                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\n                    if (renderMode == \"replaceNode\") {\n                        targetNodeOrNodeArray = renderedNodesArray;\n                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n                    }\n                },\n                null,\n                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\n            );\n        } else {\n            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n            return ko.memoization.memoize(function (domNode) {\n                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\n            });\n        }\n    };\n\n    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\n        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n        var arrayItemContext;\n\n        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n        var executeTemplateForArrayItem = function (arrayValue, index) {\n            // Support selecting template as a function of the data being rendered\n            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\n                context['$index'] = index;\n            });\n\n            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\n            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\n        }\n\n        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\n            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n            if (options['afterRender'])\n                options['afterRender'](addedNodesArray, arrayValue);\n\n            // release the \"cache\" variable, so that it can be collected by\n            // the GC when its value isn't used from within the bindings anymore.\n            arrayItemContext = null;\n        };\n\n        return ko.dependentObservable(function () {\n            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\n\n        }, null, { disposeWhenNodeIsRemoved: targetNode });\n    };\n\n    var templateComputedDomDataKey = ko.utils.domData.nextKey();\n    function disposeOldComputedAndStoreNewOne(element, newComputed) {\n        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\n        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\n            oldComputed.dispose();\n        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\n    }\n\n    ko.bindingHandlers['template'] = {\n        'init': function(element, valueAccessor) {\n            // Support anonymous templates\n            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\n            if (typeof bindingValue == \"string\" || bindingValue['name']) {\n                // It's a named template - clear the element\n                ko.virtualElements.emptyNode(element);\n            } else if ('nodes' in bindingValue) {\n                // We've been given an array of DOM nodes. Save them as the template source.\n                // There is no known use case for the node array being an observable array (if the output\n                // varies, put that behavior *into* your template - that's what templates are for), and\n                // the implementation would be a mess, so assert that it's not observable.\n                var nodes = bindingValue['nodes'] || [];\n                if (ko.isObservable(nodes)) {\n                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n                }\n                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            } else {\n                // It's an anonymous template - store the element contents, then clear the element\n                var templateNodes = ko.virtualElements.childNodes(element),\n                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            }\n            return { 'controlsDescendantBindings': true };\n        },\n        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var value = valueAccessor(),\n                dataValue,\n                options = ko.utils.unwrapObservable(value),\n                shouldDisplay = true,\n                templateComputed = null,\n                templateName;\n\n            if (typeof options == \"string\") {\n                templateName = value;\n                options = {};\n            } else {\n                templateName = options['name'];\n\n                // Support \"if\"/\"ifnot\" conditions\n                if ('if' in options)\n                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\n                if (shouldDisplay && 'ifnot' in options)\n                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\n\n                dataValue = ko.utils.unwrapObservable(options['data']);\n            }\n\n            if ('foreach' in options) {\n                // Render once for each data point (treating data set as empty if shouldDisplay==false)\n                var dataArray = (shouldDisplay && options['foreach']) || [];\n                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\n            } else if (!shouldDisplay) {\n                ko.virtualElements.emptyNode(element);\n            } else {\n                // Render once for this single data point (or use the viewModel if no data was provided)\n                var innerBindingContext = ('data' in options) ?\n                    bindingContext['createChildContext'](dataValue, options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\n                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\n                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\n            }\n\n            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n            disposeOldComputedAndStoreNewOne(element, templateComputed);\n        }\n    };\n\n    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\n    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\n        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\n\n        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\n            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n\n        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\n            return null; // Named templates can be rewritten, so return \"no error\"\n        return \"This template engine does not support anonymous templates nested within its templates\";\n    };\n\n    ko.virtualElements.allowedBindings['template'] = true;\n})();\n\nko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\nko.exportSymbol('renderTemplate', ko.renderTemplate);\n// Go through the items that have been added and deleted and try to find matches between them.\nko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\n    if (left.length && right.length) {\n        var failedCompares, l, r, leftItem, rightItem;\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n            for (r = 0; rightItem = right[r]; ++r) {\n                if (leftItem['value'] === rightItem['value']) {\n                    leftItem['moved'] = rightItem['index'];\n                    rightItem['moved'] = leftItem['index'];\n                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n                    break;\n                }\n            }\n            failedCompares += r;\n        }\n    }\n};\n\nko.utils.compareArrays = (function () {\n    var statusNotInOld = 'added', statusNotInNew = 'deleted';\n\n    // Simple calculation based on Levenshtein distance.\n    function compareArrays(oldArray, newArray, options) {\n        // For backward compatibility, if the third arg is actually a bool, interpret\n        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\n        oldArray = oldArray || [];\n        newArray = newArray || [];\n\n        if (oldArray.length <= newArray.length)\n            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\n        else\n            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n    }\n\n    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n        var myMin = Math.min,\n            myMax = Math.max,\n            editDistanceMatrix = [],\n            smlIndex, smlIndexMax = smlArray.length,\n            bigIndex, bigIndexMax = bigArray.length,\n            compareRange = (bigIndexMax - smlIndexMax) || 1,\n            maxDistance = smlIndexMax + bigIndexMax + 1,\n            thisRow, lastRow,\n            bigIndexMaxForRow, bigIndexMinForRow;\n\n        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n            lastRow = thisRow;\n            editDistanceMatrix.push(thisRow = []);\n            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n            bigIndexMinForRow = myMax(0, smlIndex - 1);\n            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n                if (!bigIndex)\n                    thisRow[bigIndex] = smlIndex + 1;\n                else if (!smlIndex)  // Top row - transform empty array into new array via additions\n                    thisRow[bigIndex] = bigIndex + 1;\n                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\n                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n                else {\n                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n                }\n            }\n        }\n\n        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\n        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\n                notInSml.push(editScript[editScript.length] = {     // added\n                    'status': statusNotInSml,\n                    'value': bigArray[--bigIndex],\n                    'index': bigIndex });\n            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n                notInBig.push(editScript[editScript.length] = {     // deleted\n                    'status': statusNotInBig,\n                    'value': smlArray[--smlIndex],\n                    'index': smlIndex });\n            } else {\n                --bigIndex;\n                --smlIndex;\n                if (!options['sparse']) {\n                    editScript.push({\n                        'status': \"retained\",\n                        'value': bigArray[bigIndex] });\n                }\n            }\n        }\n\n        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n        // smlIndexMax keeps the time complexity of this algorithm linear.\n        ko.utils.findMovesInArrayComparison(notInSml, notInBig, smlIndexMax * 10);\n\n        return editScript.reverse();\n    }\n\n    return compareArrays;\n})();\n\nko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\n(function () {\n    // Objective:\n    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n    //   previously mapped - retain those nodes, and just insert/delete other ones\n\n    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n    // You can use this, for example, to activate bindings on those nodes.\n\n    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\n        // Map this array value inside a dependentObservable so we re-map when any dependency changes\n        var mappedNodes = [];\n        var dependentObservable = ko.dependentObservable(function() {\n            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n            if (mappedNodes.length > 0) {\n                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\n                if (callbackAfterAddingNodes)\n                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n            }\n\n            // Replace the contents of the mappedNodes array, thereby updating the record\n            // of which nodes would be deleted if valueToMap was itself later removed\n            mappedNodes.length = 0;\n            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\n        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\n        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\n    }\n\n    var lastMappingResultDomDataKey = ko.utils.domData.nextKey();\n\n    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\n        // Compare the provided array against the previous one\n        array = array || [];\n        options = options || {};\n        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\n        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\n        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\n        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\n\n        // Build the new mapping result\n        var newMappingResult = [];\n        var lastMappingResultIndex = 0;\n        var newMappingResultIndex = 0;\n\n        var nodesToDelete = [];\n        var itemsToProcess = [];\n        var itemsForBeforeRemoveCallbacks = [];\n        var itemsForMoveCallbacks = [];\n        var itemsForAfterAddCallbacks = [];\n        var mapData;\n\n        function itemMovedOrRetained(editScriptIndex, oldPosition) {\n            mapData = lastMappingResult[oldPosition];\n            if (newMappingResultIndex !== oldPosition)\n                itemsForMoveCallbacks[editScriptIndex] = mapData;\n            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n            mapData.indexObservable(newMappingResultIndex++);\n            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n            newMappingResult.push(mapData);\n            itemsToProcess.push(mapData);\n        }\n\n        function callCallback(callback, items) {\n            if (callback) {\n                for (var i = 0, n = items.length; i < n; i++) {\n                    if (items[i]) {\n                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\n                            callback(node, i, items[i].arrayEntry);\n                        });\n                    }\n                }\n            }\n        }\n\n        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\n            movedIndex = editScriptItem['moved'];\n            switch (editScriptItem['status']) {\n                case \"deleted\":\n                    if (movedIndex === undefined) {\n                        mapData = lastMappingResult[lastMappingResultIndex];\n\n                        // Stop tracking changes to the mapping for these nodes\n                        if (mapData.dependentObservable)\n                            mapData.dependentObservable.dispose();\n\n                        // Queue these nodes for later removal\n                        nodesToDelete.push.apply(nodesToDelete, ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode));\n                        if (options['beforeRemove']) {\n                            itemsForBeforeRemoveCallbacks[i] = mapData;\n                            itemsToProcess.push(mapData);\n                        }\n                    }\n                    lastMappingResultIndex++;\n                    break;\n\n                case \"retained\":\n                    itemMovedOrRetained(i, lastMappingResultIndex++);\n                    break;\n\n                case \"added\":\n                    if (movedIndex !== undefined) {\n                        itemMovedOrRetained(i, movedIndex);\n                    } else {\n                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\n                        newMappingResult.push(mapData);\n                        itemsToProcess.push(mapData);\n                        if (!isFirstExecution)\n                            itemsForAfterAddCallbacks[i] = mapData;\n                    }\n                    break;\n            }\n        }\n\n        // Call beforeMove first before any changes have been made to the DOM\n        callCallback(options['beforeMove'], itemsForMoveCallbacks);\n\n        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\n\n        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\n            // Get nodes for newly added items\n            if (!mapData.mappedNodes)\n                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n\n            // Put nodes in the right place if they aren't there already\n            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\n                if (node !== nextNode)\n                    ko.virtualElements.insertAfter(domNode, node, lastNode);\n            }\n\n            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n            if (!mapData.initialized && callbackAfterAddingNodes) {\n                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n                mapData.initialized = true;\n            }\n        }\n\n        // If there's a beforeRemove callback, call it after reordering.\n        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n        // Perhaps we'll make that change in the future if this scenario becomes more common.\n        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\n\n        // Finally call afterMove and afterAdd callbacks\n        callCallback(options['afterMove'], itemsForMoveCallbacks);\n        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\n\n        // Store a copy of the array items we just considered so we can difference it next time\n        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\n    }\n})();\n\nko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\nko.nativeTemplateEngine = function () {\n    this['allowTemplateRewriting'] = false;\n}\n\nko.nativeTemplateEngine.prototype = new ko.templateEngine();\nko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\nko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\n        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\n        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\n\n    if (templateNodes) {\n        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\n    } else {\n        var templateText = templateSource['text']();\n        return ko.utils.parseHtmlFragment(templateText, templateDocument);\n    }\n};\n\nko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\nko.setTemplateEngine(ko.nativeTemplateEngine.instance);\n\nko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\n(function() {\n    ko.jqueryTmplTemplateEngine = function () {\n        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\n        // doesn't expose a version number, so we have to infer it.\n        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\n        // which KO internally refers to as version \"2\", so older versions are no longer detected.\n        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\n            if (!jQueryInstance || !(jQueryInstance['tmpl']))\n                return 0;\n            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\n            try {\n                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\n                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\n                    return 2; // Final version of jquery.tmpl\n                }\n            } catch(ex) { /* Apparently not the version we were looking for */ }\n\n            return 1; // Any older version that we don't support\n        })();\n\n        function ensureHasReferencedJQueryTemplates() {\n            if (jQueryTmplVersion < 2)\n                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\n        }\n\n        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\n            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\n        }\n\n        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\n            templateDocument = templateDocument || document;\n            options = options || {};\n            ensureHasReferencedJQueryTemplates();\n\n            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\n            var precompiled = templateSource['data']('precompiled');\n            if (!precompiled) {\n                var templateText = templateSource['text']() || \"\";\n                // Wrap in \"with($whatever.koBindingContext) { ... }\"\n                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\n\n                precompiled = jQueryInstance['template'](null, templateText);\n                templateSource['data']('precompiled', precompiled);\n            }\n\n            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\n            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\n\n            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\n            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\n\n            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\n            return resultNodes;\n        };\n\n        this['createJavaScriptEvaluatorBlock'] = function(script) {\n            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\n        };\n\n        this['addTemplate'] = function(templateName, templateMarkup) {\n            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\n        };\n\n        if (jQueryTmplVersion > 0) {\n            jQueryInstance['tmpl']['tag']['ko_code'] = {\n                open: \"__.push($1 || '');\"\n            };\n            jQueryInstance['tmpl']['tag']['ko_with'] = {\n                open: \"with($1) {\",\n                close: \"} \"\n            };\n        }\n    };\n\n    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\n    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\n\n    // Use this one by default *only if jquery.tmpl is referenced*\n    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\n    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\n        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\n\n    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\n})();\n}));\n}());\n})();\n","knockoutjs/knockout-repeat.js":"// REPEAT binding for Knockout http://knockoutjs.com/\n// (c) Michael Best\n// License: MIT (http://www.opensource.org/licenses/mit-license.php)\n// Version 2.1.0\n\n(function(factory) {\n    if (typeof define === 'function' && define.amd) {\n        // [1] AMD anonymous module\n        define(['knockout'], factory);\n    } else if (typeof exports === 'object') {\n        // [2] commonJS\n        factory(require('knockout'));\n    } else {\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\n        factory(window.ko);\n    }\n})(function(ko) {\n\nif (!ko.virtualElements)\n    throw Error('Repeat requires at least Knockout 2.1');\n\nvar ko_bindingFlags = ko.bindingFlags || {};\nvar ko_unwrap = ko.utils.unwrapObservable;\n\nvar koProtoName = '__ko_proto__';\n\nif (ko.version >= \"3.0.0\") {\n    // In Knockout 3.0.0, use the node preprocessor to replace a node with a repeat binding with a virtual element\n    var provider = ko.bindingProvider.instance, previousPreprocessFn = provider.preprocessNode;\n    provider.preprocessNode = function(node) {\n        var newNodes, nodeBinding;\n        if (!previousPreprocessFn || !(newNodes = previousPreprocessFn.call(this, node))) {\n            if (node.nodeType === 1 && (nodeBinding = node.getAttribute('data-bind'))) {\n                if (/^\\s*repeat\\s*:/.test(nodeBinding)) {\n                    var leadingComment = node.ownerDocument.createComment('ko ' + nodeBinding),\n                        trailingComment = node.ownerDocument.createComment('/ko');\n                    node.parentNode.insertBefore(leadingComment, node);\n                    node.parentNode.insertBefore(trailingComment, node.nextSibling);\n                    node.removeAttribute('data-bind');\n                    newNodes = [leadingComment, node, trailingComment];\n                }\n            }\n        }\n        return newNodes;\n    };\n}\n\nko.virtualElements.allowedBindings.repeat = true;\nko.bindingHandlers.repeat = {\n    flags: ko_bindingFlags.contentBind | ko_bindingFlags.canUseVirtual,\n    init: function(element, valueAccessor, allBindingsAccessor, xxx, bindingContext) {\n\n        // Read and set fixed options--these options cannot be changed\n        var repeatParam = ko_unwrap(valueAccessor());\n        if (repeatParam && typeof repeatParam == 'object' && !('length' in repeatParam)) {\n            var repeatIndex = repeatParam.index,\n                repeatData = repeatParam.item,\n                repeatStep = repeatParam.step,\n                repeatReversed = repeatParam.reverse,\n                repeatBind = repeatParam.bind,\n                repeatInit = repeatParam.init,\n                repeatUpdate = repeatParam.update;\n        }\n        // Set default values for options that need it\n        repeatIndex = repeatIndex || '$index';\n        repeatData = repeatData || ko.bindingHandlers.repeat.itemName || '$item';\n        repeatStep = repeatStep || 1;\n        repeatReversed = repeatReversed || false;\n\n        var parent = element.parentNode, placeholder;\n        if (element.nodeType == 8) {    // virtual element\n            // Extract the \"children\" and find the single element node\n            var childNodes = ko.utils.arrayFilter(ko.virtualElements.childNodes(element), function(node) { return node.nodeType == 1;});\n            if (childNodes.length !== 1) {\n                throw Error(\"Repeat binding requires a single element to repeat\");\n            }\n            ko.virtualElements.emptyNode(element);\n\n            // The placeholder is the closing comment normally, or the opening comment if reversed\n            placeholder = repeatReversed ? element : element.nextSibling;\n            // The element to repeat is the contained element\n            element = childNodes[0];\n        } else {    // regular element\n            // First clean the element node and remove node's binding\n            var origBindString = element.getAttribute('data-bind');\n            ko.cleanNode(element);\n            element.removeAttribute('data-bind');\n\n            // Original element is no longer needed: delete it and create a placeholder comment\n            placeholder = element.ownerDocument.createComment('ko_repeatplaceholder ' + origBindString);\n            parent.replaceChild(placeholder, element);\n        }\n\n        // extract and remove a data-repeat-bind attribute, if present\n        if (!repeatBind) {\n            repeatBind = element.getAttribute('data-repeat-bind');\n            if (repeatBind) {\n                element.removeAttribute('data-repeat-bind');\n            }\n        }\n\n        // Make a copy of the element node to be copied for each repetition\n        var cleanNode = element.cloneNode(true);\n        if (typeof repeatBind == \"string\") {\n            cleanNode.setAttribute('data-bind', repeatBind);\n            repeatBind = null;\n        }\n\n        // Set up persistent data\n        var lastRepeatCount = 0,\n            notificationObservable = ko.observable(),\n            repeatArray, arrayObservable;\n\n        if (repeatInit) {\n            repeatInit(parent);\n        }\n\n        var subscribable = ko.computed(function() {\n            function makeArrayItemAccessor(index) {\n                var f = function(newValue) {\n                    var item = repeatArray[index];\n                    // Reading the value of the item\n                    if (!arguments.length) {\n                        notificationObservable();   // for dependency tracking\n                        return ko_unwrap(item);\n                    }\n                    // Writing a value to the item\n                    if (ko.isObservable(item)) {\n                        item(newValue);\n                    } else if (arrayObservable && arrayObservable.splice) {\n                        arrayObservable.splice(index, 1, newValue);\n                    } else {\n                        repeatArray[index] = newValue;\n                    }\n                    return this;\n                };\n                // Pretend that our accessor function is an observable\n                f[koProtoName] = ko.observable;\n                return f;\n            }\n\n            function makeBinding(item, index, context) {\n                return repeatArray\n                    ? function() { return repeatBind.call(bindingContext.$data, item, index, context); }\n                    : function() { return repeatBind.call(bindingContext.$data, index, context); }\n            }\n\n            // Read and set up variable options--these options can change and will update the binding\n            var paramObservable = valueAccessor(), repeatParam = ko_unwrap(paramObservable), repeatCount = 0;\n            if (repeatParam && typeof repeatParam == 'object') {\n                if ('length' in repeatParam) {\n                    repeatArray = repeatParam;\n                    repeatCount = repeatArray.length;\n                } else {\n                    if ('foreach' in repeatParam) {\n                        repeatArray = ko_unwrap(paramObservable = repeatParam.foreach);\n                        if (repeatArray && typeof repeatArray == 'object' && 'length' in repeatArray) {\n                            repeatCount = repeatArray.length || 0;\n                        } else {\n                            repeatCount = repeatArray || 0;\n                            repeatArray = null;\n                        }\n                    }\n                    // If a count value is provided (>0), always output that number of items\n                    if ('count' in repeatParam)\n                        repeatCount = ko_unwrap(repeatParam.count) || repeatCount;\n                    // If a limit is provided, don't output more than the limit\n                    if ('limit' in repeatParam)\n                        repeatCount = Math.min(repeatCount, ko_unwrap(repeatParam.limit)) || repeatCount;\n                }\n                arrayObservable = repeatArray && ko.isObservable(paramObservable) ? paramObservable : null;\n            } else {\n                repeatCount = repeatParam || 0;\n            }\n\n            // Remove nodes from end if array is shorter\n            for (; lastRepeatCount > repeatCount; lastRepeatCount-=repeatStep) {\n                ko.removeNode(repeatReversed ? placeholder.nextSibling : placeholder.previousSibling);\n            }\n\n            // Notify existing nodes of change\n            notificationObservable.notifySubscribers();\n\n            // Add nodes to end if array is longer (also initially populates nodes)\n            for (; lastRepeatCount < repeatCount; lastRepeatCount+=repeatStep) {\n                // Clone node and add to document\n                var newNode = cleanNode.cloneNode(true);\n                parent.insertBefore(newNode, repeatReversed ? placeholder.nextSibling : placeholder);\n                newNode.setAttribute('data-repeat-index', lastRepeatCount);\n\n                // Apply bindings to inserted node\n                if (repeatArray && repeatData == '$data') {\n                    var newContext = bindingContext.createChildContext(makeArrayItemAccessor(lastRepeatCount));\n                } else {\n                    var newContext = bindingContext.extend();\n                    if (repeatArray)\n                        newContext[repeatData] = makeArrayItemAccessor(lastRepeatCount);\n                }\n                newContext[repeatIndex] = lastRepeatCount;\n                if (repeatBind) {\n                    var result = ko.applyBindingsToNode(newNode, makeBinding(newContext[repeatData], lastRepeatCount, newContext), newContext, true),\n                        shouldBindDescendants = result && result.shouldBindDescendants;\n                }\n                if (!repeatBind || (result && shouldBindDescendants !== false)) {\n                    ko.applyBindings(newContext, newNode);\n                }\n            }\n            if (repeatUpdate) {\n                repeatUpdate(parent);\n            }\n        }, null, {disposeWhenNodeIsRemoved: placeholder});\n\n        return { controlsDescendantBindings: true, subscribable: subscribable };\n    }\n};\n});","knockoutjs/knockout-fast-foreach.js":"/*!\n  Knockout Fast Foreach v0.4.1 (2015-07-17T14:06:15.974Z)\n  By: Brian M Hunt (C) 2015\n  License: MIT\n\n  Adds `fastForEach` to `ko.bindingHandlers`.\n*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['knockout'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('knockout'));\n  } else {\n    root.KnockoutFastForeach = factory(root.ko);\n  }\n}(this, function (ko) {\n  \"use strict\";\n// index.js\n// --------\n// Fast For Each\n//\n// Employing sound techniques to make a faster Knockout foreach binding.\n// --------\n\n//      Utilities\n\n// from https://github.com/jonschlinkert/is-plain-object\nfunction isPlainObject(o) {\n  return !!o && typeof o === 'object' && o.constructor === Object;\n}\n\n// From knockout/src/virtualElements.js\nvar commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\nvar startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\nvar supportsDocumentFragment = document && typeof document.createDocumentFragment === \"function\";\nfunction isVirtualNode(node) {\n  return (node.nodeType === 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n}\n\n\n// Get a copy of the (possibly virtual) child nodes of the given element,\n// put them into a container, then empty the given node.\nfunction makeTemplateNode(sourceNode) {\n  var container = document.createElement(\"div\");\n  var parentNode;\n  if (sourceNode.content) {\n    // For e.g. <template> tags\n    parentNode = sourceNode.content;\n  } else if (sourceNode.tagName === 'SCRIPT') {\n    parentNode = document.createElement(\"div\");\n    parentNode.innerHTML = sourceNode.text;\n  } else {\n    // Anything else e.g. <div>\n    parentNode = sourceNode;\n  }\n  ko.utils.arrayForEach(ko.virtualElements.childNodes(parentNode), function (child) {\n    // FIXME - This cloneNode could be expensive; we may prefer to iterate over the\n    // parentNode children in reverse (so as not to foul the indexes as childNodes are\n    // removed from parentNode when inserted into the container)\n    if (child) {\n      container.insertBefore(child.cloneNode(true), null);\n    }\n  });\n  return container;\n}\n\nfunction insertAllAfter(containerNode, nodeOrNodeArrayToInsert, insertAfterNode) {\n  var frag, len, i;\n  // poor man's node and array check, should be enough for this\n  if (typeof nodeOrNodeArrayToInsert.nodeType !== \"undefined\" && typeof nodeOrNodeArrayToInsert.length === \"undefined\") {\n    throw new Error(\"Expected a single node or a node array\");\n  }\n\n  if (typeof nodeOrNodeArrayToInsert.nodeType !== \"undefined\") {\n    ko.virtualElements.insertAfter(containerNode, nodeOrNodeArrayToInsert, insertAfterNode);\n    return;\n  }\n\n  if (nodeOrNodeArrayToInsert.length === 1) {\n    ko.virtualElements.insertAfter(containerNode, nodeOrNodeArrayToInsert[0], insertAfterNode);\n    return;\n  }\n\n  if (supportsDocumentFragment) {\n    frag = document.createDocumentFragment();\n\n    for (i = 0, len = nodeOrNodeArrayToInsert.length; i !== len; ++i) {\n      frag.appendChild(nodeOrNodeArrayToInsert[i]);\n    }\n    ko.virtualElements.insertAfter(containerNode, frag, insertAfterNode);\n  } else {\n    // Nodes are inserted in reverse order - pushed down immediately after\n    // the last node for the previous item or as the first node of element.\n    for (i = nodeOrNodeArrayToInsert.length - 1; i >= 0; --i) {\n      var child = nodeOrNodeArrayToInsert[i];\n      if (!child) {\n        return;\n      }\n      ko.virtualElements.insertAfter(containerNode, child, insertAfterNode);\n    }\n  }\n}\n\n// Mimic a KO change item 'add'\nfunction valueToChangeAddItem(value, index) {\n  return {\n    status: 'added',\n    value: value,\n    index: index\n  };\n}\n\nfunction isAdditionAdjacentToLast(changeIndex, arrayChanges) {\n  return changeIndex > 0 &&\n    changeIndex < arrayChanges.length &&\n    arrayChanges[changeIndex].status === \"added\" &&\n    arrayChanges[changeIndex - 1].status === \"added\" &&\n    arrayChanges[changeIndex - 1].index === arrayChanges[changeIndex].index - 1;\n}\n\nfunction FastForEach(spec) {\n  this.element = spec.element;\n  this.container = isVirtualNode(this.element) ?\n                   this.element.parentNode : this.element;\n  this.$context = spec.$context;\n  this.data = spec.data;\n  this.as = spec.as;\n  this.noContext = spec.noContext;\n  this.templateNode = makeTemplateNode(\n    spec.name ? document.getElementById(spec.name).cloneNode(true) : spec.element\n  );\n  this.afterQueueFlush = spec.afterQueueFlush;\n  this.beforeQueueFlush = spec.beforeQueueFlush;\n  this.changeQueue = [];\n  this.lastNodesList = [];\n  this.indexesToDelete = [];\n  this.rendering_queued = false;\n\n  // Remove existing content.\n  ko.virtualElements.emptyNode(this.element);\n\n  // Prime content\n  var primeData = ko.unwrap(this.data);\n  if (primeData.map) {\n    this.onArrayChange(primeData.map(valueToChangeAddItem));\n  }\n\n  // Watch for changes\n  if (ko.isObservable(this.data)) {\n    if (!this.data.indexOf) {\n      // Make sure the observable is trackable.\n      this.data = this.data.extend({trackArrayChanges: true});\n    }\n    this.changeSubs = this.data.subscribe(this.onArrayChange, this, 'arrayChange');\n  }\n}\n\n\nFastForEach.animateFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n  window.mozRequestAnimationFrame || window.msRequestAnimationFrame ||\n  function(cb) { return window.setTimeout(cb, 1000 / 60); };\n\n\nFastForEach.prototype.dispose = function () {\n  if (this.changeSubs) {\n    this.changeSubs.dispose();\n  }\n};\n\n\n// If the array changes we register the change.\nFastForEach.prototype.onArrayChange = function (changeSet) {\n  var self = this;\n  var changeMap = {\n    added: [],\n    deleted: []\n  };\n  for (var i = 0, len = changeSet.length; i < len; i++) {\n    // the change is appended to a last change info object when both are 'added' and have indexes next to each other\n    // here I presume that ko is sending changes in monotonic order (in index variable) which happens to be true, tested with push and splice with multiple pushed values\n    if (isAdditionAdjacentToLast(i, changeSet)) {\n      var batchValues = changeMap.added[changeMap.added.length - 1].values;\n      if (!batchValues) {\n        // transform the last addition into a batch addition object\n        var lastAddition = changeMap.added.pop();\n        var batchAddition = {\n          isBatch: true,\n          status: 'added',\n          index: lastAddition.index,\n          values: [lastAddition.value]\n        };\n        batchValues = batchAddition.values;\n        changeMap.added.push(batchAddition);\n      }\n      batchValues.push(changeSet[i].value);\n    } else {\n      changeMap[changeSet[i].status].push(changeSet[i]);\n    }\n  }\n  if (changeMap.deleted.length > 0) {\n    this.changeQueue.push.apply(this.changeQueue, changeMap.deleted);\n    this.changeQueue.push({status: 'clearDeletedIndexes'});\n  }\n  this.changeQueue.push.apply(this.changeQueue, changeMap.added);\n  // Once a change is registered, the ticking count-down starts for the processQueue.\n  if (this.changeQueue.length > 0 && !this.rendering_queued) {\n    this.rendering_queued = true;\n    FastForEach.animateFrame.call(window, function () { self.processQueue(); });\n  }\n};\n\n\n// Reflect all the changes in the queue in the DOM, then wipe the queue.\nFastForEach.prototype.processQueue = function () {\n  var self = this;\n\n  // Callback so folks can do things before the queue flush.\n  if (typeof this.beforeQueueFlush === 'function') {\n    this.beforeQueueFlush(this.changeQueue);\n  }\n\n  ko.utils.arrayForEach(this.changeQueue, function (changeItem) {\n    // console.log(self.data(), \"CI\", JSON.stringify(changeItem, null, 2), JSON.stringify($(self.element).text()))\n    self[changeItem.status](changeItem);\n    // console.log(\"  ==> \", JSON.stringify($(self.element).text()))\n  });\n  this.rendering_queued = false;\n  // Callback so folks can do things.\n  if (typeof this.afterQueueFlush === 'function') {\n    this.afterQueueFlush(this.changeQueue);\n  }\n  this.changeQueue = [];\n};\n\n\n// Process a changeItem with {status: 'added', ...}\nFastForEach.prototype.added = function (changeItem) {\n  var index = changeItem.index;\n  var valuesToAdd = changeItem.isBatch ? changeItem.values : [changeItem.value];\n  var referenceElement = this.lastNodesList[index - 1] || null;\n  // gather all childnodes for a possible batch insertion\n  var allChildNodes = [];\n\n  for (var i = 0, len = valuesToAdd.length; i < len; ++i) {\n    var templateClone = this.templateNode.cloneNode(true);\n    var childContext;\n\n    if (this.noContext) {\n      childContext = this.$context.extend({\n        '$item': valuesToAdd[i]\n      });\n    } else {\n      childContext = this.$context.createChildContext(valuesToAdd[i], this.as || null);\n    }\n\n    // apply bindings first, and then process child nodes, because bindings can add childnodes\n    ko.applyBindingsToDescendants(childContext, templateClone);\n\n    var childNodes = ko.virtualElements.childNodes(templateClone);\n    // Note discussion at https://github.com/angular/angular.js/issues/7851\n    allChildNodes.push.apply(allChildNodes, Array.prototype.slice.call(childNodes));\n    this.lastNodesList.splice(index + i, 0, childNodes[childNodes.length - 1]);\n  }\n\n  insertAllAfter(this.element, allChildNodes, referenceElement);\n};\n\n\n// Process a changeItem with {status: 'deleted', ...}\nFastForEach.prototype.deleted = function (changeItem) {\n  var index = changeItem.index;\n  var ptr = this.lastNodesList[index],\n      // We use this.element because that will be the last previous node\n      // for virtual element lists.\n      lastNode = this.lastNodesList[index - 1] || this.element;\n  do {\n    ptr = ptr.previousSibling;\n    ko.removeNode((ptr && ptr.nextSibling) || ko.virtualElements.firstChild(this.element));\n  } while (ptr && ptr !== lastNode);\n  // The \"last node\" in the DOM from which we begin our delets of the next adjacent node is\n  // now the sibling that preceded the first node of this item.\n  this.lastNodesList[index] = this.lastNodesList[index - 1];\n  this.indexesToDelete.push(index);\n};\n\n\n// We batch our deletion of item indexes in our parallel array.\n// See brianmhunt/knockout-fast-foreach#6/#8\nFastForEach.prototype.clearDeletedIndexes = function () {\n  // We iterate in reverse on the presumption (following the unit tests) that KO's diff engine\n  // processes diffs (esp. deletes) monotonically ascending i.e. from index 0 -> N.\n  for (var i = this.indexesToDelete.length - 1; i >= 0; --i) {\n    this.lastNodesList.splice(this.indexesToDelete[i], 1);\n  }\n  this.indexesToDelete = [];\n};\n\n\nko.bindingHandlers.fastForEach = {\n  // Valid valueAccessors:\n  //    []\n  //    ko.observable([])\n  //    ko.observableArray([])\n  //    ko.computed\n  //    {data: array, name: string, as: string}\n  init: function init(element, valueAccessor, bindings, vm, context) {\n    var value = valueAccessor(),\n        ffe;\n    if (isPlainObject(value)) {\n      value.element = value.element || element;\n      value.$context = context;\n      ffe = new FastForEach(value);\n    } else {\n      ffe = new FastForEach({\n        element: element,\n        data: ko.unwrap(context.$rawData) === value ? context.$rawData : value,\n        $context: context\n      });\n    }\n    ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\n      ffe.dispose();\n    });\n    return {controlsDescendantBindings: true};\n  },\n\n  // Export for testing, debugging, and overloading.\n  FastForEach: FastForEach\n};\n\nko.virtualElements.allowedBindings.fastForEach = true;\n}));","knockoutjs/knockout-es5.js":"/*!\n * Knockout ES5 plugin - https://github.com/SteveSanderson/knockout-es5\n * Copyright (c) Steve Sanderson\n * MIT license\n */\n\n(function(global, undefined) {\n  'use strict';\n\n  var ko;\n\n  // Model tracking\n  // --------------\n  //\n  // This is the central feature of Knockout-ES5. We augment model objects by converting properties\n  // into ES5 getter/setter pairs that read/write an underlying Knockout observable. This means you can\n  // use plain JavaScript syntax to read/write the property while still getting the full benefits of\n  // Knockout's automatic dependency detection and notification triggering.\n  //\n  // For comparison, here's Knockout ES3-compatible syntax:\n  //\n  //     var firstNameLength = myModel.user().firstName().length; // Read\n  //     myModel.user().firstName('Bert'); // Write\n  //\n  // ... versus Knockout-ES5 syntax:\n  //\n  //     var firstNameLength = myModel.user.firstName.length; // Read\n  //     myModel.user.firstName = 'Bert'; // Write\n\n  // `ko.track(model)` converts each property on the given model object into a getter/setter pair that\n  // wraps a Knockout observable. Optionally specify an array of property names to wrap; otherwise we\n  // wrap all properties. If any of the properties are already observables, we replace them with\n  // ES5 getter/setter pairs that wrap your original observable instances. In the case of readonly\n  // ko.computed properties, we simply do not define a setter (so attempted writes will be ignored,\n  // which is how ES5 readonly properties normally behave).\n  //\n  // By design, this does *not* recursively walk child object properties, because making literally\n  // everything everywhere independently observable is usually unhelpful. When you do want to track\n  // child object properties independently, define your own class for those child objects and put\n  // a separate ko.track call into its constructor --- this gives you far more control.\n  /**\n   * @param {object} obj\n   * @param {object|array.<string>} propertyNamesOrSettings\n   * @param {boolean} propertyNamesOrSettings.deep Use deep track.\n   * @param {array.<string>} propertyNamesOrSettings.fields Array of property names to wrap.\n   * todo: @param {array.<string>} propertyNamesOrSettings.exclude Array of exclude property names to wrap.\n   * todo: @param {function(string, *):boolean} propertyNamesOrSettings.filter Function to filter property \n   *   names to wrap. A function that takes ... params\n   * @return {object}\n   */\n  function track(obj, propertyNamesOrSettings) {\n    if (!obj || typeof obj !== 'object') {\n      throw new Error('When calling ko.track, you must pass an object as the first parameter.');\n    }\n\n    var propertyNames;\n\n    if ( isPlainObject(propertyNamesOrSettings) ) {\n      // defaults\n      propertyNamesOrSettings.deep = propertyNamesOrSettings.deep || false;\n      propertyNamesOrSettings.fields = propertyNamesOrSettings.fields || Object.getOwnPropertyNames(obj);\n      propertyNamesOrSettings.lazy = propertyNamesOrSettings.lazy || false;\n\n      wrap(obj, propertyNamesOrSettings.fields, propertyNamesOrSettings);\n    } else {\n      propertyNames = propertyNamesOrSettings || Object.getOwnPropertyNames(obj);\n      wrap(obj, propertyNames, {});\n    }\n\n    return obj;\n  }\n\n  // fix for ie\n  var rFunctionName = /^function\\s*([^\\s(]+)/;\n  function getFunctionName( ctor ){\n    if (ctor.name) {\n      return ctor.name;\n    }\n    return (ctor.toString().trim().match( rFunctionName ) || [])[1];\n  }\n\n  function canTrack(obj) {\n    return obj && typeof obj === 'object' && getFunctionName(obj.constructor) === 'Object';\n  }\n\n  function createPropertyDescriptor(originalValue, prop, map) {\n    var isObservable = ko.isObservable(originalValue);\n    var isArray = !isObservable && Array.isArray(originalValue);\n    var observable = isObservable ? originalValue\n        : isArray ? ko.observableArray(originalValue)\n        : ko.observable(originalValue);\n\n    map[prop] = function () { return observable; };\n\n    // add check in case the object is already an observable array\n    if (isArray || (isObservable && 'push' in observable)) {\n      notifyWhenPresentOrFutureArrayValuesMutate(ko, observable);\n    }\n\n    return {\n      configurable: true,\n      enumerable: true,\n      get: observable,\n      set: ko.isWriteableObservable(observable) ? observable : undefined\n    };\n  }\n\n  function createLazyPropertyDescriptor(originalValue, prop, map) {\n    if (ko.isObservable(originalValue)) {\n      // no need to be lazy if we already have an observable\n      return createPropertyDescriptor(originalValue, prop, map);\n    }\n\n    var observable;\n\n    function getOrCreateObservable(value, writing) {\n      if (observable) {\n        return writing ? observable(value) : observable;\n      }\n\n      if (Array.isArray(value)) {\n        observable = ko.observableArray(value);\n        notifyWhenPresentOrFutureArrayValuesMutate(ko, observable);\n        return observable;\n      }\n\n      return (observable = ko.observable(value));\n    }\n\n    map[prop] = function () { return getOrCreateObservable(originalValue); };\n    return {\n      configurable: true,\n      enumerable: true,\n      get: function () { return getOrCreateObservable(originalValue)(); },\n      set: function (value) { getOrCreateObservable(value, true); }\n    };\n  }\n\n  function wrap(obj, props, options) {\n    if (!props.length) {\n      return;\n    }\n\n    var allObservablesForObject = getAllObservablesForObject(obj, true);\n    var descriptors = {};\n\n    props.forEach(function (prop) {\n      // Skip properties that are already tracked\n      if (prop in allObservablesForObject) {\n        return;\n      }\n\n      // Skip properties where descriptor can't be redefined\n      if (Object.getOwnPropertyDescriptor(obj, prop).configurable === false){\n        return;\n      }\n\n      var originalValue = obj[prop];\n      descriptors[prop] = (options.lazy ? createLazyPropertyDescriptor : createPropertyDescriptor)\n        (originalValue, prop, allObservablesForObject);\n\n      if (options.deep && canTrack(originalValue)) {\n        wrap(originalValue, Object.keys(originalValue), options);\n      }\n    });\n\n    Object.defineProperties(obj, descriptors);\n  }\n\n  function isPlainObject( obj ){\n    return !!obj && typeof obj === 'object' && obj.constructor === Object;\n  }\n\n  // Lazily created by `getAllObservablesForObject` below. Has to be created lazily because the\n  // WeakMap factory isn't available until the module has finished loading (may be async).\n  var objectToObservableMap;\n\n  // Gets or creates the hidden internal key-value collection of observables corresponding to\n  // properties on the model object.\n  function getAllObservablesForObject(obj, createIfNotDefined) {\n    if (!objectToObservableMap) {\n      objectToObservableMap = weakMapFactory();\n    }\n\n    var result = objectToObservableMap.get(obj);\n    if (!result && createIfNotDefined) {\n      result = {};\n      objectToObservableMap.set(obj, result);\n    }\n    return result;\n  }\n\n  // Removes the internal references to observables mapped to the specified properties\n  // or the entire object reference if no properties are passed in. This allows the\n  // observables to be replaced and tracked again.\n  function untrack(obj, propertyNames) {\n    if (!objectToObservableMap) {\n      return;\n    }\n\n    if (arguments.length === 1) {\n      objectToObservableMap['delete'](obj);\n    } else {\n      var allObservablesForObject = getAllObservablesForObject(obj, false);\n      if (allObservablesForObject) {\n        propertyNames.forEach(function(propertyName) {\n          delete allObservablesForObject[propertyName];\n        });\n      }\n    }\n  }\n\n  // Computed properties\n  // -------------------\n  //\n  // The preceding code is already sufficient to upgrade ko.computed model properties to ES5\n  // getter/setter pairs (or in the case of readonly ko.computed properties, just a getter).\n  // These then behave like a regular property with a getter function, except they are smarter:\n  // your evaluator is only invoked when one of its dependencies changes. The result is cached\n  // and used for all evaluations until the next time a dependency changes).\n  //\n  // However, instead of forcing developers to declare a ko.computed property explicitly, it's\n  // nice to offer a utility function that declares a computed getter directly.\n\n  // Implements `ko.defineProperty`\n  function defineComputedProperty(obj, propertyName, evaluatorOrOptions) {\n    var ko = this,\n      computedOptions = { owner: obj, deferEvaluation: true };\n\n    if (typeof evaluatorOrOptions === 'function') {\n      computedOptions.read = evaluatorOrOptions;\n    } else {\n      if ('value' in evaluatorOrOptions) {\n        throw new Error('For ko.defineProperty, you must not specify a \"value\" for the property. ' +\n                        'You must provide a \"get\" function.');\n      }\n\n      if (typeof evaluatorOrOptions.get !== 'function') {\n        throw new Error('For ko.defineProperty, the third parameter must be either an evaluator function, ' +\n                        'or an options object containing a function called \"get\".');\n      }\n\n      computedOptions.read = evaluatorOrOptions.get;\n      computedOptions.write = evaluatorOrOptions.set;\n    }\n\n    obj[propertyName] = ko.computed(computedOptions);\n    track.call(ko, obj, [propertyName]);\n    return obj;\n  }\n\n  // Array handling\n  // --------------\n  //\n  // Arrays are special, because unlike other property types, they have standard mutator functions\n  // (`push`/`pop`/`splice`/etc.) and it's desirable to trigger a change notification whenever one of\n  // those mutator functions is invoked.\n  //\n  // Traditionally, Knockout handles this by putting special versions of `push`/`pop`/etc. on observable\n  // arrays that mutate the underlying array and then trigger a notification. That approach doesn't\n  // work for Knockout-ES5 because properties now return the underlying arrays, so the mutator runs\n  // in the context of the underlying array, not any particular observable:\n  //\n  //     // Operates on the underlying array value\n  //     myModel.someCollection.push('New value');\n  //\n  // To solve this, Knockout-ES5 detects array values, and modifies them as follows:\n  //  1. Associates a hidden subscribable with each array instance that it encounters\n  //  2. Intercepts standard mutators (`push`/`pop`/etc.) and makes them trigger the subscribable\n  // Then, for model properties whose values are arrays, the property's underlying observable\n  // subscribes to the array subscribable, so it can trigger a change notification after mutation.\n\n  // Given an observable that underlies a model property, watch for any array value that might\n  // be assigned as the property value, and hook into its change events\n  function notifyWhenPresentOrFutureArrayValuesMutate(ko, observable) {\n    var watchingArraySubscription = null;\n    ko.computed(function () {\n      // Unsubscribe to any earlier array instance\n      if (watchingArraySubscription) {\n        watchingArraySubscription.dispose();\n        watchingArraySubscription = null;\n      }\n\n      // Subscribe to the new array instance\n      var newArrayInstance = observable();\n      if (newArrayInstance instanceof Array) {\n        watchingArraySubscription = startWatchingArrayInstance(ko, observable, newArrayInstance);\n      }\n    });\n  }\n\n  // Listens for array mutations, and when they happen, cause the observable to fire notifications.\n  // This is used to make model properties of type array fire notifications when the array changes.\n  // Returns a subscribable that can later be disposed.\n  function startWatchingArrayInstance(ko, observable, arrayInstance) {\n    var subscribable = getSubscribableForArray(ko, arrayInstance);\n    return subscribable.subscribe(observable);\n  }\n\n  // Lazily created by `getSubscribableForArray` below. Has to be created lazily because the\n  // WeakMap factory isn't available until the module has finished loading (may be async).\n  var arraySubscribablesMap;\n\n  // Gets or creates a subscribable that fires after each array mutation\n  function getSubscribableForArray(ko, arrayInstance) {\n    if (!arraySubscribablesMap) {\n      arraySubscribablesMap = weakMapFactory();\n    }\n\n    var subscribable = arraySubscribablesMap.get(arrayInstance);\n    if (!subscribable) {\n      subscribable = new ko.subscribable();\n      arraySubscribablesMap.set(arrayInstance, subscribable);\n\n      var notificationPauseSignal = {};\n      wrapStandardArrayMutators(arrayInstance, subscribable, notificationPauseSignal);\n      addKnockoutArrayMutators(ko, arrayInstance, subscribable, notificationPauseSignal);\n    }\n\n    return subscribable;\n  }\n\n  // After each array mutation, fires a notification on the given subscribable\n  function wrapStandardArrayMutators(arrayInstance, subscribable, notificationPauseSignal) {\n    ['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'].forEach(function(fnName) {\n      var origMutator = arrayInstance[fnName];\n      arrayInstance[fnName] = function() {\n        var result = origMutator.apply(this, arguments);\n        if (notificationPauseSignal.pause !== true) {\n          subscribable.notifySubscribers(this);\n        }\n        return result;\n      };\n    });\n  }\n\n  // Adds Knockout's additional array mutation functions to the array\n  function addKnockoutArrayMutators(ko, arrayInstance, subscribable, notificationPauseSignal) {\n    ['remove', 'removeAll', 'destroy', 'destroyAll', 'replace'].forEach(function(fnName) {\n      // Make it a non-enumerable property for consistency with standard Array functions\n      Object.defineProperty(arrayInstance, fnName, {\n        enumerable: false,\n        value: function() {\n          var result;\n\n          // These additional array mutators are built using the underlying push/pop/etc.\n          // mutators, which are wrapped to trigger notifications. But we don't want to\n          // trigger multiple notifications, so pause the push/pop/etc. wrappers and\n          // delivery only one notification at the end of the process.\n          notificationPauseSignal.pause = true;\n          try {\n            // Creates a temporary observableArray that can perform the operation.\n            result = ko.observableArray.fn[fnName].apply(ko.observableArray(arrayInstance), arguments);\n          }\n          finally {\n            notificationPauseSignal.pause = false;\n          }\n          subscribable.notifySubscribers(arrayInstance);\n          return result;\n        }\n      });\n    });\n  }\n\n  // Static utility functions\n  // ------------------------\n  //\n  // Since Knockout-ES5 sets up properties that return values, not observables, you can't\n  // trivially subscribe to the underlying observables (e.g., `someProperty.subscribe(...)`),\n  // or tell them that object values have mutated, etc. To handle this, we set up some\n  // extra utility functions that can return or work with the underlying observables.\n\n  // Returns the underlying observable associated with a model property (or `null` if the\n  // model or property doesn't exist, or isn't associated with an observable). This means\n  // you can subscribe to the property, e.g.:\n  //\n  //     ko.getObservable(model, 'propertyName')\n  //       .subscribe(function(newValue) { ... });\n  function getObservable(obj, propertyName) {\n    if (!obj || typeof obj !== 'object') {\n      return null;\n    }\n\n    var allObservablesForObject = getAllObservablesForObject(obj, false);\n    if (allObservablesForObject && propertyName in allObservablesForObject) {\n      return allObservablesForObject[propertyName]();\n    }\n\n    return null;\n  }\n  \n  // Returns a boolean indicating whether the property on the object has an underlying\n  // observables. This does the check in a way not to create an observable if the\n  // object was created with lazily created observables\n  function isTracked(obj, propertyName) {\n    if (!obj || typeof obj !== 'object') {\n      return false;\n    }\n    \n    var allObservablesForObject = getAllObservablesForObject(obj, false);\n    return !!allObservablesForObject && propertyName in allObservablesForObject;\n  }\n\n  // Causes a property's associated observable to fire a change notification. Useful when\n  // the property value is a complex object and you've modified a child property.\n  function valueHasMutated(obj, propertyName) {\n    var observable = getObservable(obj, propertyName);\n\n    if (observable) {\n      observable.valueHasMutated();\n    }\n  }\n\n  // Module initialisation\n  // ---------------------\n  //\n  // When this script is first evaluated, it works out what kind of module loading scenario\n  // it is in (Node.js or a browser `<script>` tag), stashes a reference to its dependencies\n  // (currently that's just the WeakMap shim), and then finally attaches itself to whichever\n  // instance of Knockout.js it can find.\n\n  // A function that returns a new ES6-compatible WeakMap instance (using ES5 shim if needed).\n  // Instantiated by prepareExports, accounting for which module loader is being used.\n  var weakMapFactory;\n\n  // Extends a Knockout instance with Knockout-ES5 functionality\n  function attachToKo(ko) {\n    ko.track = track;\n    ko.untrack = untrack;\n    ko.getObservable = getObservable;\n    ko.valueHasMutated = valueHasMutated;\n    ko.defineProperty = defineComputedProperty;\n\n    // todo: test it, maybe added it to ko. directly\n    ko.es5 = {\n      getAllObservablesForObject: getAllObservablesForObject,\n      notifyWhenPresentOrFutureArrayValuesMutate: notifyWhenPresentOrFutureArrayValuesMutate,\n      isTracked: isTracked\n    };\n  }\n\n  // Determines which module loading scenario we're in, grabs dependencies, and attaches to KO\n  function prepareExports() {\n    if (typeof exports === 'object' && typeof module === 'object') {\n      // Node.js case - load KO and WeakMap modules synchronously\n      ko = require('knockout');\n      var WM = require('../lib/weakmap');\n      attachToKo(ko);\n      weakMapFactory = function() { return new WM(); };\n      module.exports = ko;\n    } else if (typeof define === 'function' && define.amd) {\n      define(['knockout'], function(koModule) {\n        ko = koModule;\n        attachToKo(koModule);\n        weakMapFactory = function() { return new global.WeakMap(); };\n        return koModule;\n      });\n    } else if ('ko' in global) {\n      // Non-module case - attach to the global instance, and assume a global WeakMap constructor\n      ko = global.ko;\n      attachToKo(global.ko);\n      weakMapFactory = function() { return new global.WeakMap(); };\n    }\n  }\n\n  prepareExports();\n\n})(this);","Magento_Paypal/js/rule.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'uiClass',\n    'Magento_Paypal/js/rules'\n], function (Class, Rules) {\n    'use strict';\n\n    return Class.extend({\n\n        /**\n         * Constructor\n         *\n         * @param {Object} config\n         * @returns {exports.initialize}\n         */\n        initialize: function (config) {\n            this.rules = new Rules();\n            this.initConfig(config);\n\n            return this;\n        },\n\n        /**\n         * To apply the rule\n         */\n        apply: function () {\n            this.rules[this.name](this.$target, this.$owner, this.data);\n        }\n    });\n});\n","Magento_Paypal/js/solution.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'uiClass',\n    'Magento_Paypal/js/rule',\n    'mageUtils',\n    'underscore'\n], function ($, Class, Rule, utils, _) {\n    'use strict';\n\n    return Class.extend({\n        defaults: {\n\n            /**\n             * The event corresponding to the state change\n             */\n            systemEvent: 'change',\n\n            /**\n             * The rules applied after the page is loaded\n             */\n            afterLoadRules: [],\n\n            /**\n             * An attribute of the element responsible for the activation of the payment method (data attribute)\n             */\n            enableButton:   '[data-enable=\"payment\"]',\n\n            /**\n             * An attribute of the element responsible for the activation of the Payflow Express (data attribute)\n             */\n            enableExpress:  '[data-enable=\"express\"]',\n\n            /**\n             * An attribute of the element responsible for the activation of the\n             * PayPal Express In-Context Checkout Experience (data attribute)\n             */\n            enableInContextPayPal: '[data-enable=\"in-context-api\"]',\n\n            /**\n             * An attribute of the element responsible for the activation of the Payflow Bml (data attribute)\n             */\n            enableBml:      '[data-enable=\"bml\"]',\n\n            /**\n             * An attribute of the element responsible for the activation of the PayPal Bml (data attribute)\n             */\n            enableBmlPayPal:      '[data-enable=\"bml-api\"]',\n\n            /**\n             * An attribute of the element responsible for the visibility of the PayPal Merchant Id (data attribute)\n             */\n            dependsMerchantId:  '[data-enable=\"merchant-id\"]',\n\n            /**\n             * An attribute of the element responsible for the visibility of the Payflow Bml Sort Order (data attribute)\n             */\n            dependsBmlSortOrder:    '[data-enable=\"bml-sort-order\"]',\n\n            /**\n             * An attribute of the element responsible for the visibility of the PayPal Bml Sort Order (data attribute)\n             */\n            dependsBmlApiSortOrder:    '[data-enable=\"bml-api-sort-order\"]',\n\n            /**\n             * Templates element selectors\n             */\n            templates: {\n                elementSelector: 'div.section-config tr[id$=\"${ $.identifier }\"]:first'\n            }\n        },\n\n        /**\n         * Constructor\n         *\n         * @param {Object} config\n         * @param {String} identifier\n         * @returns {exports.initialize}\n         */\n        initialize: function (config, identifier) {\n            this.initConfig(config);\n            this.$self = this.createElement(identifier);\n\n            return this;\n        },\n\n        /**\n         * Initialization events\n         *\n         * @returns {exports.initEvents}\n         */\n        initEvents: function () {\n            _.each(this.config.events, function (elementEvents, selector) {\n\n                var solution = this,\n                    selectorButton = solution.$self.find(selector),\n                    $self = solution.$self,\n                    events = elementEvents;\n\n                selectorButton.on(solution.systemEvent, function () {\n                    _.each(events, function (elementEvent, name) {\n\n                        var predicate = elementEvent.predicate,\n                            result = true,\n\n                            /**\n                             * @param {Function} functionPredicate\n                             */\n                            predicateCallback = function (functionPredicate) {\n                                result = functionPredicate(solution, predicate.message, predicate.argument);\n\n                                if (result) {\n                                    $self.trigger(name);\n                                } else {\n                                    $self.trigger(predicate.event);\n                                }\n                            };\n\n                        if (solution.getValue($(this)) === elementEvent.value) {\n                            if (predicate.name) {\n                                require([\n                                    'Magento_Paypal/js/predicate/' + predicate.name\n                                ], predicateCallback);\n                            } else {\n                                $self.trigger(name);\n                            }\n                        }\n                    }, this);\n                });\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * @param {Object} $element\n         * @returns {*}\n         */\n        getValue: function ($element) {\n            if ($element.is(':checkbox')) {\n                return $element.prop('checked') ? '1' : '0';\n            }\n\n            return $element.val();\n        },\n\n        /**\n         * Adding event listeners\n         *\n         * @returns {exports.addListeners}\n         */\n        addListeners: function () {\n\n            _.each(this.config.relations, function (rules, targetName) {\n\n                var $target = this.createElement(targetName);\n\n                _.each(rules, function (instances, instanceName) {\n\n                    _.each(instances, function (instance) {\n                        var handler = new Rule({\n                            name: instanceName,\n                            $target: $target,\n                            $owner: this.$self,\n                            data: {\n                                buttonConfiguration: this.buttonConfiguration,\n                                enableButton: this.enableButton,\n                                enableExpress: this.enableExpress,\n                                enableInContextPayPal: this.enableInContextPayPal,\n                                enableBml: this.enableBml,\n                                enableBmlPayPal: this.enableBmlPayPal,\n                                dependsMerchantId: this.dependsMerchantId,\n                                dependsBmlSortOrder: this.dependsBmlSortOrder,\n                                dependsBmlApiSortOrder: this.dependsBmlApiSortOrder,\n                                solutionsElements: this.solutionsElements,\n                                argument: instance.argument\n                            }\n                        });\n\n                        if (instance.event === ':load') {\n                            this.afterLoadRules.push(handler);\n\n                            return;\n                        }\n\n                        this.$self.on(instance.event, _.bind(handler.apply, handler));\n                    }, this);\n                }, this);\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * Create a jQuery element according to selector\n         *\n         * @param {String} identifier\n         * @returns {*}\n         */\n        createElement: function (identifier) {\n            if (identifier === ':self') {\n                return this.$self;\n            }\n\n            return $(utils.template(this.templates.elementSelector, {\n                'identifier': identifier\n            }));\n        },\n\n        /**\n         * Assign solutions elements\n         *\n         * @param {Object} elements\n         * @returns {exports.setSolutionsElements}\n         */\n        setSolutionsElements: function (elements) {\n            this.solutionsElements = elements;\n\n            return this;\n        }\n    });\n});\n","Magento_Paypal/js/solutions.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'uiClass',\n    'Magento_Paypal/js/solution',\n    'underscore'\n], function ($, Class, Solution, _) {\n    'use strict';\n\n    return Class.extend({\n        defaults: {\n\n            /**\n             * Initialized solutions\n             */\n            solutions: {},\n\n            /**\n             * The elements of created solutions\n             */\n            solutionsElements: {},\n\n            /**\n             * The selector element responsible for configuration of payment method (CSS class)\n             */\n            buttonConfiguration: '.button.action-configure'\n        },\n\n        /**\n         * Constructor\n         *\n         * @param {Object} config\n         * @returns {exports.initialize}\n         */\n        initialize: function (config) {\n            this.initConfig(config)\n                .initSolutions();\n\n            return this;\n        },\n\n        /**\n         * Initialization and configuration solutions\n         *\n         * @returns {exports.initSolutions}\n         */\n        initSolutions: function () {\n            _.each(this.config.solutions, this.addSolution, this);\n            this.initializeSolutions()\n                .wipeButtonsConfiguration();\n            _.each(this.solutions, this.applicationRules);\n\n            return this;\n        },\n\n        /**\n         * The creation and addition of the solution according to the configuration\n         *\n         * @param {Object} solution\n         * @param {String} identifier\n         */\n        addSolution: function (solution, identifier) {\n            this.solutions[identifier] = new Solution({\n                config: solution,\n                buttonConfiguration: this.buttonConfiguration\n            }, identifier);\n            this.solutionsElements[identifier] = this.solutions[identifier].$self;\n        },\n\n        /**\n         * Wiping buttons configuration of the payment method\n         */\n        wipeButtonsConfiguration: function () {\n            $(this.buttonConfiguration).removeClass('disabled')\n                .removeAttr('disabled');\n        },\n\n        /**\n         * Application of the rules\n         *\n         * @param {Object} solution\n         */\n        applicationRules: function (solution) {\n            _.each(solution.afterLoadRules, function (rule) {\n                rule.apply();\n            });\n        },\n\n        /**\n         * Initialize solutions\n         *\n         * @returns {exports.initializeSolutions}\n         */\n        initializeSolutions: function () {\n            _.each(this.solutions, function (solution) {\n                solution.setSolutionsElements(this.solutionsElements)\n                    .initEvents()\n                    .addListeners();\n            }, this);\n\n            return this;\n        }\n    });\n});\n","Magento_Paypal/js/rules.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'uiClass',\n    'Magento_Ui/js/modal/alert'\n], function (Class, alert) {\n    'use strict';\n\n    /**\n     * Check is solution enabled\n     *\n     * @param {*} solution\n     * @param {String} enabler\n     * @returns {Boolean}\n     */\n    var isSolutionEnabled = function (solution, enabler) {\n            return solution.find(enabler).val() === '1';\n        },\n\n        /**\n         * Check is solution has related solutions enabled\n         *\n         * @param {Object} data\n         * @returns {Boolean}\n         */\n        hasRelationsEnabled = function (data) {\n            var name;\n\n            for (name in data.argument) {\n                if (\n                    data.solutionsElements[name] &&\n                    isSolutionEnabled(data.solutionsElements[name], data.enableButton)\n                ) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Set solution select-enabler to certain option\n         *\n         * @param {*} solution\n         * @param {String} enabler\n         * @param {Boolean} enabled\n         */\n        setSolutionSelectEnabled = function (solution, enabler, enabled) {\n            enabled = !(enabled || typeof enabled === 'undefined') ? '0' : '1';\n\n            solution.find(enabler + ' option[value=' + enabled + ']')\n            .prop('selected', true);\n        },\n\n        /**\n         * Set solution property 'disabled' value\n         *\n         * @param {*} solution\n         * @param {String} enabler\n         * @param {Boolean} enabled\n         */\n        setSolutionPropEnabled = function (solution, enabler, enabled) {\n            enabled = !(enabled || typeof enabled === 'undefined');\n\n            solution.find(enabler).prop('disabled', enabled);\n        },\n\n        /**\n         * Set/unset solution select-enabler label\n         *\n         * @param {*} solution\n         * @param {String} enabler\n         * @param {Boolean} enabled\n         */\n        setSolutionMarkEnabled = function (solution, enabler, enabled) {\n            var solutionEnabler = solution.find('label[for=\"' + solution.find(enabler).attr('id') + '\"]');\n\n            enabled || typeof enabled === 'undefined' ?\n                solutionEnabler.addClass('enabled') :\n                solutionEnabler.removeClass('enabled');\n        },\n\n        /**\n         * Set/unset solution section label\n         *\n         * @param {*} solution\n         * @param {Boolean} enabled\n         */\n        setSolutionSectionMarkEnabled = function (solution, enabled) {\n            var solutionSection = solution.find('.section-config');\n\n            enabled || typeof enabled === 'undefined' ?\n                solutionSection.addClass('enabled') :\n                solutionSection.removeClass('enabled');\n        },\n\n        /**\n         * Set/unset solution section inner labels\n         *\n         * @param {*} solution\n         * @param {Boolean} enabled\n         */\n        setSolutionLabelsMarkEnabled = function (solution, enabled) {\n            var solutionLabels = solution.find('label.enabled');\n\n            enabled || typeof enabled === 'undefined' ?\n                solutionLabels.addClass('enabled') :\n                solutionLabels.removeClass('enabled');\n        },\n\n        /**\n         * Set/unset solution usedefault checkbox\n         *\n         * @param {*} solution\n         * @param {String} enabler\n         * @param {Boolean} checked\n         */\n        setSolutionUsedefaultEnabled = function (solution, enabler, checked) {\n            checked = !(checked || typeof checked === 'undefined');\n\n            solution.find('input[id=\"' + solution.find(enabler).attr('id') + '_inherit\"]')\n            .prop('checked', checked);\n        },\n\n        /**\n         * Set solution as disabled\n         *\n         * @param {*} solution\n         * @param {String} enabler\n         */\n        disableSolution = function (solution, enabler) {\n            setSolutionUsedefaultEnabled(solution, enabler);\n            setSolutionMarkEnabled(solution, enabler, false);\n            setSolutionSelectEnabled(solution, enabler, false);\n            setSolutionPropEnabled(solution, enabler, false);\n        },\n\n        /**\n         * Set solution as enabled\n         *\n         * @param {*} solution\n         * @param {String} enabler\n         */\n        enableSolution = function (solution, enabler) {\n            setSolutionUsedefaultEnabled(solution, enabler);\n            setSolutionPropEnabled(solution, enabler);\n            setSolutionSelectEnabled(solution, enabler);\n            setSolutionMarkEnabled(solution, enabler);\n        },\n\n        /**\n         * Lock/unlock solution configuration button\n         *\n         * @param {*} solution\n         * @param {String} buttonConfiguration\n         * @param {Boolean} unlock\n         */\n        setSolutionConfigurationUnlock = function (solution, buttonConfiguration, unlock) {\n            var solutionConfiguration = solution.find(buttonConfiguration);\n\n            unlock || typeof unlock === 'undefined' ?\n                solutionConfiguration.removeClass('disabled').removeAttr('disabled') :\n                solutionConfiguration.addClass('disabled').attr('disabled', 'disabled');\n        },\n\n        /**\n         * Forward solution select-enabler changes\n         *\n         * @param {*} solution\n         * @param {String} enabler\n         */\n        forwardSolutionChange = function (solution, enabler) {\n            solution.find(enabler).change();\n        },\n\n        /**\n         * Show/hide dependent fields\n         *\n         * @param {*} solution\n         * @param {String} identifier\n         * @param {Boolean} show\n         */\n        showDependsField = function (solution, identifier, show) {\n            show = show || typeof show === 'undefined';\n\n            solution.find(identifier).toggle(show);\n            solution.find(identifier).closest('tr').toggle(show);\n            solution.find(identifier).attr('disabled', !show);\n        };\n\n    return Class.extend({\n        defaults: {\n            /**\n             * Payment conflicts checker\n             */\n            executed: false\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        simpleDisable: function ($target, $owner, data) {\n            setSolutionSelectEnabled($target, data.enableButton, false);\n            setSolutionLabelsMarkEnabled($target, false);\n            setSolutionSectionMarkEnabled($target, false);\n        },\n\n        /**\n         * @param {*} $target\n         */\n        simpleMarkEnable: function ($target) {\n            setSolutionSectionMarkEnabled($target);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        disable: function ($target, $owner, data) {\n            this.simpleDisable($target, $owner, data);\n            forwardSolutionChange($target, data.enableButton);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        paypalExpressDisable: function ($target, $owner, data) {\n            setSolutionSelectEnabled($target, data.enableButton, false);\n            setSolutionLabelsMarkEnabled($target, false);\n            forwardSolutionChange($target, data.enableButton);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        paypalExpressLockConfiguration: function ($target, $owner, data) {\n            setSolutionConfigurationUnlock($target, data.buttonConfiguration, false);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        paypalExpressLockConfigurationConditional: function ($target, $owner, data) {\n            if (\n                !isSolutionEnabled($target, data.enableInContextPayPal) &&\n                hasRelationsEnabled(data)\n            ) {\n                this.paypalExpressLockConfiguration($target, $owner, data);\n            }\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        paypalExpressMarkDisable: function ($target, $owner, data) {\n            if (!hasRelationsEnabled(data)) {\n                this.simpleDisable($target, $owner, data);\n            }\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        paypalExpressUnlockConfiguration: function ($target, $owner, data) {\n            if (!hasRelationsEnabled(data)) {\n                setSolutionConfigurationUnlock($target, data.buttonConfiguration);\n            }\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        paypalBmlDisable: function ($target, $owner, data) {\n            disableSolution($target, data.enableBmlPayPal);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        paypalBmlDisableConditional: function ($target, $owner, data) {\n            if (!isSolutionEnabled($target, data.enableButton)) {\n                this.paypalBmlDisable($target, $owner, data);\n            }\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        paypalBmlEnable: function ($target, $owner, data) {\n            enableSolution($target, data.enableBmlPayPal);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowExpressDisable: function ($target, $owner, data) {\n            disableSolution($target, data.enableExpress);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowExpressDisableConditional: function ($target, $owner, data) {\n            if (\n                !isSolutionEnabled($target, data.enableButton) ||\n                hasRelationsEnabled(data)\n            ) {\n                this.payflowExpressDisable($target, $owner, data);\n                forwardSolutionChange($target, data.enableExpress);\n            }\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowExpressEnable: function ($target, $owner, data) {\n            enableSolution($target, data.enableExpress);\n            forwardSolutionChange($target, data.enableExpress);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowExpressEnableConditional: function ($target, $owner, data) {\n            if (hasRelationsEnabled(data)) {\n                setSolutionPropEnabled($target, data.enableExpress, false);\n                setSolutionSelectEnabled($target, data.enableExpress);\n                setSolutionMarkEnabled($target, data.enableExpress);\n            } else {\n                disableSolution($target, data.enableExpress);\n            }\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowExpressLockConditional: function ($target, $owner, data) {\n            if (!isSolutionEnabled($target, data.enableButton)) {\n                setSolutionPropEnabled($target, data.enableExpress, false);\n            }\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowExpressUsedefaultDisable: function ($target, $owner, data) {\n            setSolutionUsedefaultEnabled($target, data.enableExpress, false);\n            this.payflowExpressEnable($target, $owner, data);\n            forwardSolutionChange($target, data.enableExpress);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowExpressUsedefaultEnable: function ($target, $owner, data) {\n            setSolutionUsedefaultEnabled($target, data.enableExpress);\n            this.payflowExpressDisable($target, $owner, data);\n            forwardSolutionChange($target, data.enableExpress);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowBmlDisable: function ($target, $owner, data) {\n            disableSolution($target, data.enableBml);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowBmlDisableConditional: function ($target, $owner, data) {\n            if (\n                !isSolutionEnabled($target, data.enableButton) ||\n                hasRelationsEnabled(data)\n            ) {\n                this.payflowBmlDisable($target, $owner, data);\n            }\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowBmlDisableConditionalExpress: function ($target, $owner, data) {\n            if (!isSolutionEnabled($target, data.enableExpress)) {\n                this.payflowBmlDisable($target, $owner, data);\n            }\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowBmlEnable: function ($target, $owner, data) {\n            enableSolution($target, data.enableBml);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowBmlEnableConditional: function ($target, $owner, data) {\n            if (hasRelationsEnabled(data)) {\n                setSolutionPropEnabled($target, data.enableBml, false);\n                setSolutionSelectEnabled($target, data.enableBml);\n                setSolutionMarkEnabled($target, data.enableBml);\n            } else {\n                disableSolution($target, data.enableBml);\n            }\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowBmlLockConditional: function ($target, $owner, data) {\n            if (!isSolutionEnabled($target, data.enableButton)) {\n                setSolutionPropEnabled($target, data.enableBml, false);\n            }\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        inContextEnable: function ($target, $owner, data) {\n            enableSolution($target, data.enableInContextPayPal);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        inContextDisable: function ($target, $owner, data) {\n            disableSolution($target, data.enableInContextPayPal);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        inContextShowMerchantId: function ($target, $owner, data) {\n            showDependsField($target, data.dependsMerchantId);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        inContextHideMerchantId: function ($target, $owner, data) {\n            showDependsField($target, data.dependsMerchantId, false);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowShowSortOrder: function ($target, $owner, data) {\n            showDependsField($target, data.dependsBmlSortOrder);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        payflowHideSortOrder: function ($target, $owner, data) {\n            showDependsField($target, data.dependsBmlSortOrder, false);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        paypalShowSortOrder: function ($target, $owner, data) {\n            showDependsField($target, data.dependsBmlApiSortOrder);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        paypalHideSortOrder: function ($target, $owner, data) {\n            showDependsField($target, data.dependsBmlApiSortOrder, false);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        inContextActivate: function ($target, $owner, data) {\n            setSolutionMarkEnabled($target, data.enableInContextPayPal);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        inContextDeactivate: function ($target, $owner, data) {\n            setSolutionMarkEnabled($target, data.enableInContextPayPal, false);\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        inContextDisableConditional: function ($target, $owner, data) {\n            if (!isSolutionEnabled($target, data.enableButton)) {\n                this.inContextDisable($target, $owner, data);\n            }\n        },\n\n        /**\n         * @param {*} $target\n         * @param {*} $owner\n         * @param {Object} data\n         */\n        conflict: function ($target, $owner, data) {\n            var newLine = String.fromCharCode(10, 13);\n\n            if (\n                isSolutionEnabled($owner, data.enableButton) &&\n                hasRelationsEnabled(data) &&\n                !this.executed\n            ) {\n                this.executed = true;\n                alert({\n                    content: 'The following error(s) occurred:' +\n                    newLine +\n                    'Some PayPal solutions conflict.' +\n                    newLine +\n                    'Please re-enable the previously enabled payment solutions.'\n                });\n            }\n        }\n    });\n});\n","Magento_Paypal/js/payflowpro/vault.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'uiComponent'\n], function ($, Class) {\n    'use strict';\n\n    return Class.extend({\n        defaults: {\n            $selector: null,\n            selector: 'edit_form'\n        },\n\n        /**\n         * Set list of observable attributes\n         * @returns {exports.initObservable}\n         */\n        initObservable: function () {\n            var self = this;\n\n            self.$selector = $('#' + self.selector);\n            this._super();\n\n            this.initEventHandlers();\n\n            return this;\n        },\n\n        /**\n         * Get payment code\n         * @returns {String}\n         */\n        getCode: function () {\n            return 'payflowpro';\n        },\n\n        /**\n         * Init event handlers\n         */\n        initEventHandlers: function () {\n            $('#' + this.container).find('[name=\"payment[token_switcher]\"]')\n                .on('click', this.setPaymentDetails.bind(this));\n        },\n\n        /**\n         * Store payment details\n         */\n        setPaymentDetails: function () {\n            this.$selector.find('[name=\"payment[public_hash]\"]').val(this.publicHash);\n        }\n    });\n});\n","Magento_Paypal/js/predicate/confirm.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine(['underscore'], function (_) {\n    'use strict';\n\n    return function (solution, message, argument) {\n        var isConfirm = false;\n\n        _.every(argument, function (name) {\n            if (solution.solutionsElements[name] &&\n                solution.solutionsElements[name].find(solution.enableButton).val() == 1 //eslint-disable-line eqeqeq\n            ) {\n                isConfirm = true;\n\n                return !isConfirm;\n            }\n\n            return !isConfirm;\n        }, this);\n\n        if (isConfirm) {\n            return confirm(message); //eslint-disable-line no-alert\n        }\n\n        return true;\n    };\n});\n","requirejs/domReady.js":"/**\n * @license RequireJS domReady 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/domReady for details\n */\n/*jslint */\n/*global require: false, define: false, requirejs: false,\n  window: false, clearInterval: false, document: false,\n  self: false, setInterval: false */\n\n\ndefine(function () {\n    'use strict';\n\n    var isTop, testDiv, scrollIntervalId,\n        isBrowser = typeof window !== \"undefined\" && window.document,\n        isPageLoaded = !isBrowser,\n        doc = isBrowser ? document : null,\n        readyCalls = [];\n\n    function runCallbacks(callbacks) {\n        var i;\n        for (i = 0; i < callbacks.length; i += 1) {\n            callbacks[i](doc);\n        }\n    }\n\n    function callReady() {\n        var callbacks = readyCalls;\n\n        if (isPageLoaded) {\n            //Call the DOM ready callbacks\n            if (callbacks.length) {\n                readyCalls = [];\n                runCallbacks(callbacks);\n            }\n        }\n    }\n\n    /**\n     * Sets the page as loaded.\n     */\n    function pageLoaded() {\n        if (!isPageLoaded) {\n            isPageLoaded = true;\n            if (scrollIntervalId) {\n                clearInterval(scrollIntervalId);\n            }\n\n            callReady();\n        }\n    }\n\n    if (isBrowser) {\n        if (document.addEventListener) {\n            //Standards. Hooray! Assumption here that if standards based,\n            //it knows about DOMContentLoaded.\n            document.addEventListener(\"DOMContentLoaded\", pageLoaded, false);\n            window.addEventListener(\"load\", pageLoaded, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onload\", pageLoaded);\n\n            testDiv = document.createElement('div');\n            try {\n                isTop = window.frameElement === null;\n            } catch (e) {}\n\n            //DOMContentLoaded approximation that uses a doScroll, as found by\n            //Diego Perini: http://javascript.nwbox.com/IEContentLoaded/,\n            //but modified by other contributors, including jdalton\n            if (testDiv.doScroll && isTop && window.external) {\n                scrollIntervalId = setInterval(function () {\n                    try {\n                        testDiv.doScroll();\n                        pageLoaded();\n                    } catch (e) {}\n                }, 30);\n            }\n        }\n\n        //Check if document already complete, and if so, just trigger page load\n        //listeners. Latest webkit browsers also use \"interactive\", and\n        //will fire the onDOMContentLoaded before \"interactive\" but not after\n        //entering \"interactive\" or \"complete\". More details:\n        //http://dev.w3.org/html5/spec/the-end.html#the-end\n        //http://stackoverflow.com/questions/3665561/document-readystate-of-interactive-vs-ondomcontentloaded\n        //Hmm, this is more complicated on further use, see \"firing too early\"\n        //bug: https://github.com/requirejs/domReady/issues/1\n        //so removing the || document.readyState === \"interactive\" test.\n        //There is still a window.onload binding that should get fired if\n        //DOMContentLoaded is missed.\n        if (document.readyState === \"complete\") {\n            pageLoaded();\n        }\n    }\n\n    /** START OF PUBLIC API **/\n\n    /**\n     * Registers a callback for DOM ready. If DOM is already ready, the\n     * callback is called immediately.\n     * @param {Function} callback\n     */\n    function domReady(callback) {\n        if (isPageLoaded) {\n            callback(doc);\n        } else {\n            readyCalls.push(callback);\n        }\n        return domReady;\n    }\n\n    domReady.version = '2.0.1';\n\n    /**\n     * Loader Plugin API method\n     */\n    domReady.load = function (name, req, onLoad, config) {\n        if (config.isBuild) {\n            onLoad(null);\n        } else {\n            domReady(onLoad);\n        }\n    };\n\n    /** END OF PUBLIC API **/\n\n    return domReady;\n});","Magento_Swatches/js/text.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global $break $ $$ */\n\n/**\n *  @api\n */\ndefine([\n    'jquery',\n    'mage/template',\n    'uiRegistry',\n    'jquery/ui',\n    'prototype'\n], function (jQuery, mageTemplate, rg) {\n    'use strict';\n\n    return function (config) {\n        var swatchOptionTextDefaultInputType = 'radio',\n            swatchTextOption = {\n                table: $('swatch-text-options-table'),\n                itemCount: 0,\n                totalItems: 0,\n                rendered: 0,\n                isReadOnly: config.isReadOnly,\n                template: mageTemplate('#swatch-text-row-template'),\n\n                /**\n                 * Add option\n                 *\n                 * @param {Object} data\n                 * @param {Object} render\n                 */\n                add: function (data, render) {\n                    var isNewOption = false,\n                        element;\n\n                    if (typeof data.id == 'undefined') {\n                        data = {\n                            'id': 'option_' + this.itemCount,\n                            'sort_order': this.itemCount + 1\n                        };\n                        isNewOption = true;\n                    }\n\n                    if (!data.intype) {\n                        data.intype = swatchOptionTextDefaultInputType;\n                    }\n\n                    element = this.template({\n                        data: data\n                    });\n\n                    if (isNewOption && !this.isReadOnly) {\n                        this.enableNewOptionDeleteButton(data.id);\n                    }\n                    this.itemCount++;\n                    this.totalItems++;\n                    this.elements += element;\n\n                    if (render) {\n                        this.render();\n                    }\n                },\n\n                /**\n                 * Remove option\n                 *\n                 * @param {Object} event\n                 */\n                remove: function (event) {\n                    var element = $(Event.findElement(event, 'tr')),\n                        elementFlags; // !!! Button already have table parent in safari\n\n                    // Safari workaround\n                    element.ancestors().each(function (parentItem) {\n                        if (parentItem.hasClassName('option-row')) {\n                            element = parentItem;\n                            throw $break;\n                        } else if (parentItem.hasClassName('box')) {\n                            throw $break;\n                        }\n                    });\n\n                    if (element) {\n                        elementFlags = element.getElementsByClassName('delete-flag');\n\n                        if (elementFlags[0]) {\n                            elementFlags[0].value = 1;\n                        }\n\n                        element.addClassName('no-display');\n                        element.addClassName('template');\n                        element.hide();\n                        this.totalItems--;\n                        this.updateItemsCountField();\n                    }\n                },\n\n                /**\n                 * Update items count field\n                 */\n                updateItemsCountField: function () {\n                    $('swatch-text-option-count-check').value = this.totalItems > 0 ? '1' : '';\n                },\n\n                /**\n                 * Enable delete button for new option\n                 *\n                 * @param {String} id\n                 */\n                enableNewOptionDeleteButton: function (id) {\n                    $$('#delete_button_swatch_container_' + id + ' button').each(function (button) {\n                        button.enable();\n                        button.removeClassName('disabled');\n                    });\n                },\n\n                /**\n                 * Bind remove button\n                 */\n                bindRemoveButtons: function () {\n                    jQuery('#swatch-text-options-panel').on('click', '.delete-option', this.remove.bind(this));\n                },\n\n                /**\n                 * Render action\n                 */\n                render: function () {\n                    Element.insert($$('[data-role=swatch-text-options-container]')[0], this.elements);\n                    this.elements = '';\n                },\n\n                /**\n                 * Render action with delay (performance fix)\n                 *\n                 * @param {Object} data\n                 * @param {Number} from\n                 * @param {Number} step\n                 * @param {Number} delay\n                 * @returns {Boolean}\n                 */\n                renderWithDelay: function (data, from, step, delay) {\n                    var arrayLength = data.length,\n                        len;\n\n                    for (len = from + step; from < len && from < arrayLength; from++) {\n                        this.add(data[from]);\n                    }\n                    this.render();\n\n                    if (from === arrayLength) {\n                        this.updateItemsCountField();\n                        this.rendered = 1;\n                        jQuery('body').trigger('processStop');\n\n                        return true;\n                    }\n                    setTimeout(this.renderWithDelay.bind(this, data, from, step, delay), delay);\n                },\n\n                /**\n                 * Ignore validate action\n                 */\n                ignoreValidate: function () {\n                    var ignore = '.ignore-validate input, ' +\n                        '.ignore-validate select, ' +\n                        '.ignore-validate textarea';\n\n                    jQuery('#edit_form').data('validator').settings.forceIgnore = ignore;\n                }\n            };\n\n        if ($('add_new_swatch_text_option_button')) {\n            Event.observe(\n                'add_new_swatch_text_option_button',\n                'click',\n                swatchTextOption.add.bind(swatchTextOption, true)\n            );\n        }\n        jQuery('#swatch-text-options-panel').on('render', function () {\n            swatchTextOption.ignoreValidate();\n\n            if (swatchTextOption.rendered) {\n                return false;\n            }\n            jQuery('body').trigger('processStart');\n            swatchTextOption.renderWithDelay(config.attributesData, 0, 100, 300);\n            swatchTextOption.bindRemoveButtons();\n        });\n\n        if (config.isSortable) {\n            jQuery(function ($) {\n                $('[data-role=swatch-text-options-container]').sortable({\n                    distance: 8,\n                    tolerance: 'pointer',\n                    cancel: 'input, button',\n                    axis: 'y',\n\n                    /**\n                     * Update components\n                     */\n                    update: function () {\n                        $('[data-role=swatch-text-options-container] [data-role=order]').each(\n                            function (index, element) {\n                                $(element).val(index + 1);\n                            }\n                        );\n                    }\n                });\n            });\n        }\n\n        jQuery(document).ready(function () {\n            if (jQuery('#frontend_input').val() !== 'swatch_text') {\n                jQuery('.swatch-text-field-0').removeClass('required-option');\n            }\n        });\n\n        window.swatchTextOption = swatchTextOption;\n        window.swatchOptionTextDefaultInputType = swatchOptionTextDefaultInputType;\n\n        rg.set('swatch-text-options-panel', swatchTextOption);\n    };\n});\n","Magento_Swatches/js/type-change.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\nrequire([\n    'jquery',\n    'mage/translate'\n], function ($) {\n    'use strict';\n\n    $(function () {\n\n        // disabled select only\n        $('select#frontend_input:disabled').each(function () {\n            var select = $(this),\n                currentValue = select.find('option:selected').val(),\n                enabledTypes = ['select', 'swatch_visual', 'swatch_text'],\n                warning = $('<label>')\n                    .hide()\n                    .text($.mage.__('These changes affect all related products.'))\n                    .addClass('mage-error')\n                    .attr({\n                        generated: true, for: select.attr('id')\n                    }),\n\n                /**\n                 * Toggle hint about changes types\n                 */\n                toggleWarning = function () {\n                    if (select.find('option:selected').val() === currentValue) {\n                        warning.hide();\n                    } else {\n                        warning.show();\n                    }\n                },\n\n                /**\n                 * Remove unsupported options\n                 */\n                removeOption = function () {\n                    if (!~enabledTypes.indexOf($(this).val())) {\n                        $(this).remove();\n                    }\n                };\n\n            // Check current type (allow only: select, swatch_visual, swatch_text)\n            if (!~enabledTypes.indexOf(currentValue)) {\n                return;\n            }\n\n            // Enable select and keep only available options (all other will be removed)\n            select.removeAttr('disabled').find('option').each(removeOption);\n\n            // Add warning on page and event for show/hide it\n            select.after(warning).on('change', toggleWarning);\n        });\n    });\n});\n","Magento_Swatches/js/product-attributes.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/alert',\n    'Magento_Ui/js/modal/prompt',\n    'uiRegistry',\n    'collapsable'\n], function ($, alert, prompt, rg) {\n    'use strict';\n\n    return function (optionConfig) {\n        var swatchProductAttributes = {\n                frontendInput: $('#frontend_input'),\n                isFilterable: $('#is_filterable'),\n                isFilterableInSearch: $('#is_filterable_in_search'),\n                backendType: $('#backend_type'),\n                usedForSortBy: $('#used_for_sort_by'),\n                frontendClass: $('#frontend_class'),\n                isWysiwygEnabled: $('#is_wysiwyg_enabled'),\n                isHtmlAllowedOnFront: $('#is_html_allowed_on_front'),\n                isRequired: $('#is_required'),\n                isUnique: $('#is_unique'),\n                defaultValueText: $('#default_value_text'),\n                defaultValueTextarea: $('#default_value_textarea'),\n                defaultValueDate: $('#default_value_date'),\n                defaultValueYesno: $('#default_value_yesno'),\n                isGlobal: $('#is_global'),\n                useProductImageForSwatch: $('#use_product_image_for_swatch'),\n                updateProductPreviewImage: $('#update_product_preview_image'),\n                usedInProductListing: $('#used_in_product_listing'),\n                isVisibleOnFront: $('#is_visible_on_front'),\n                position: $('#position'),\n                attrTabsFront: $('#product_attribute_tabs_front'),\n\n                /**\n                 * @returns {*|jQuery|HTMLElement}\n                 */\n                get tabsFront() {\n                    return this.attrTabsFront.length ? this.attrTabsFront.closest('li') : $('#front_fieldset-wrapper');\n                },\n                selectFields: ['select', 'multiselect', 'price', 'swatch_text', 'swatch_visual'],\n\n                /**\n                 * @this {swatchProductAttributes}\n                 */\n                toggleApplyVisibility: function (select) {\n                    if ($(select).val() === 1) {\n                        $(select).next('select').removeClass('no-display');\n                        $(select).next('select').removeClass('ignore-validate');\n                    } else {\n                        $(select).next('select').addClass('no-display');\n                        $(select).next('select').addClass('ignore-validate');\n                        $(select).next('select option:selected').each(function () {\n                            this.selected = false;\n                        });\n                    }\n                },\n\n                /**\n                 * @this {swatchProductAttributes}\n                 */\n                checkOptionsPanelVisibility: function () {\n                    var selectOptionsPanel = $('#manage-options-panel'),\n                        visualOptionsPanel = $('#swatch-visual-options-panel'),\n                        textOptionsPanel = $('#swatch-text-options-panel');\n\n                    this._hidePanel(selectOptionsPanel);\n                    this._hidePanel(visualOptionsPanel);\n                    this._hidePanel(textOptionsPanel);\n\n                    switch (this.frontendInput.val()) {\n                        case 'swatch_visual':\n                            this._showPanel(visualOptionsPanel);\n                            break;\n\n                        case 'swatch_text':\n                            this._showPanel(textOptionsPanel);\n                            break;\n\n                        case 'select':\n                        case 'multiselect':\n                            this._showPanel(selectOptionsPanel);\n                            break;\n                    }\n                },\n\n                /**\n                 * @this {swatchProductAttributes}\n                 */\n                bindAttributeInputType: function () {\n                    this.checkOptionsPanelVisibility();\n                    this.switchDefaultValueField();\n\n                    if (!~$.inArray(this.frontendInput.val(), this.selectFields)) {\n                        // not in array\n                        this.isFilterable.selectedIndex = 0;\n                        this._disable(this.isFilterable);\n                        this._disable(this.isFilterableInSearch);\n                    } else {\n                        // in array\n                        this._enable(this.isFilterable);\n                        this._enable(this.isFilterableInSearch);\n                        this.backendType.val('int');\n                    }\n\n                    if (this.frontendInput.val() === 'multiselect' ||\n                        this.frontendInput.val() === 'gallery' ||\n                        this.frontendInput.val() === 'textarea'\n                    ) {\n                        this._disable(this.usedForSortBy);\n                    } else {\n                        this._enable(this.usedForSortBy);\n                    }\n\n                    if (this.frontendInput.val() === 'swatch_text') {\n                        $('.swatch-text-field-0').addClass('required-option');\n                    } else {\n                        $('.swatch-text-field-0').removeClass('required-option');\n                    }\n\n                    this.setRowVisibility(this.isWysiwygEnabled, false);\n                    this.setRowVisibility(this.isHtmlAllowedOnFront, false);\n\n                    switch (this.frontendInput.val()) {\n                        case 'textarea':\n                            this.setRowVisibility(this.isWysiwygEnabled, true);\n\n                            if (this.isWysiwygEnabled.val() === '0') {\n                                this._enable(this.isHtmlAllowedOnFront);\n                            }\n                            this.frontendClass.val('');\n                            this._disable(this.frontendClass);\n                            break;\n\n                        case 'text':\n                            this.setRowVisibility(this.isHtmlAllowedOnFront, true);\n                            this._enable(this.frontendClass);\n                            break;\n\n                        case 'select':\n                        case 'multiselect':\n                            this.setRowVisibility(this.isHtmlAllowedOnFront, true);\n                            this.frontendClass.val('');\n                            this._disable(this.frontendClass);\n                            break;\n                        default:\n                            this.frontendClass.val('');\n                            this._disable(this.frontendClass);\n                    }\n\n                    this.switchIsFilterable();\n                },\n\n                /**\n                 * @this {swatchProductAttributes}\n                 */\n                switchIsFilterable: function () {\n                    if (this.isFilterable.selectedIndex === 0) {\n                        this._disable(this.position);\n                    } else {\n                        this._enable(this.position);\n                    }\n                },\n\n                /**\n                 * @this {swatchProductAttributes}\n                 */\n                switchDefaultValueField: function () {\n                    var currentValue = this.frontendInput.val(),\n                        defaultValueTextVisibility = false,\n                        defaultValueTextareaVisibility = false,\n                        defaultValueDateVisibility = false,\n                        defaultValueYesnoVisibility = false,\n                        scopeVisibility = true,\n                        useProductImageForSwatch = false,\n                        defaultValueUpdateImage = false,\n                        optionDefaultInputType = '',\n                        isFrontTabHidden = false,\n                        thing = this;\n\n                    if (!this.frontendInput.length) {\n                        return;\n                    }\n\n                    switch (currentValue) {\n                        case 'select':\n                            optionDefaultInputType = 'radio';\n                            break;\n\n                        case 'multiselect':\n                            optionDefaultInputType = 'checkbox';\n                            break;\n\n                        case 'date':\n                            defaultValueDateVisibility = true;\n                            break;\n\n                        case 'boolean':\n                            defaultValueYesnoVisibility = true;\n                            break;\n\n                        case 'textarea':\n                            defaultValueTextareaVisibility = true;\n                            break;\n\n                        case 'media_image':\n                            defaultValueTextVisibility = false;\n                            break;\n\n                        case 'price':\n                            scopeVisibility = false;\n                            break;\n\n                        case 'swatch_visual':\n                            useProductImageForSwatch = true;\n                            defaultValueUpdateImage = true;\n                            defaultValueTextVisibility = false;\n                            break;\n\n                        case 'swatch_text':\n                            useProductImageForSwatch = false;\n                            defaultValueUpdateImage = true;\n                            defaultValueTextVisibility = false;\n                            break;\n                        default:\n                            defaultValueTextVisibility = true;\n                            break;\n                    }\n\n                    delete optionConfig.hiddenFields['swatch_visual'];\n                    delete optionConfig.hiddenFields['swatch_text'];\n\n                    if (currentValue === 'media_image') {\n                        this.tabsFront.hide();\n                        this.setRowVisibility(this.isRequired, false);\n                        this.setRowVisibility(this.isUnique, false);\n                        this.setRowVisibility(this.frontendClass, false);\n                    } else if (optionConfig.hiddenFields[currentValue]) {\n                        $.each(optionConfig.hiddenFields[currentValue], function (key, option) {\n                            switch (option) {\n                                case '_front_fieldset':\n                                    thing.tabsFront.hide();\n                                    isFrontTabHidden = true;\n                                    break;\n\n                                case '_default_value':\n                                    defaultValueTextVisibility = false;\n                                    defaultValueTextareaVisibility = false;\n                                    defaultValueDateVisibility = false;\n                                    defaultValueYesnoVisibility = false;\n                                    break;\n\n                                case '_scope':\n                                    scopeVisibility = false;\n                                    break;\n                                default:\n                                    thing.setRowVisibility($('#' + option), false);\n                            }\n                        });\n\n                        if (!isFrontTabHidden) {\n                            thing.tabsFront.show();\n                        }\n\n                    } else {\n                        this.tabsFront.show();\n                        this.showDefaultRows();\n                    }\n\n                    this.setRowVisibility(this.defaultValueText, defaultValueTextVisibility);\n                    this.setRowVisibility(this.defaultValueTextarea, defaultValueTextareaVisibility);\n                    this.setRowVisibility(this.defaultValueDate, defaultValueDateVisibility);\n                    this.setRowVisibility(this.defaultValueYesno, defaultValueYesnoVisibility);\n                    this.setRowVisibility(this.isGlobal, scopeVisibility);\n\n                    /* swatch attributes */\n                    this.setRowVisibility(this.useProductImageForSwatch, useProductImageForSwatch);\n                    this.setRowVisibility(this.updateProductPreviewImage, defaultValueUpdateImage);\n\n                    $('input[name=\\'default[]\\']').each(function () {\n                        $(this).attr('type', optionDefaultInputType);\n                    });\n                },\n\n                /**\n                 * @this {swatchProductAttributes}\n                 */\n                showDefaultRows: function () {\n                    this.setRowVisibility(this.isRequired, true);\n                    this.setRowVisibility(this.isUnique, true);\n                    this.setRowVisibility(this.frontendClass, true);\n                },\n\n                /**\n                 * @param {Object} el\n                 * @param {Boolean} isVisible\n                 * @this {swatchProductAttributes}\n                 */\n                setRowVisibility: function (el, isVisible) {\n                    if (isVisible) {\n                        el.show();\n                        el.closest('.field').show();\n                    } else {\n                        el.hide();\n                        el.closest('.field').hide();\n                    }\n                },\n\n                /**\n                 * @param {Object} el\n                 * @this {swatchProductAttributes}\n                 */\n                _disable: function (el) {\n                    el.attr('disabled', 'disabled');\n                },\n\n                /**\n                 * @param {Object} el\n                 * @this {swatchProductAttributes}\n                 */\n                _enable: function (el) {\n                    if (!el.attr('readonly')) {\n                        el.removeAttr('disabled');\n                    }\n                },\n\n                /**\n                 * @param {Object} el\n                 * @this {swatchProductAttributes}\n                 */\n                _showPanel: function (el) {\n                    el.closest('.fieldset').show();\n                    this._render(el.attr('id'));\n                },\n\n                /**\n                 * @param {Object} el\n                 * @this {swatchProductAttributes}\n                 */\n                _hidePanel: function (el) {\n                    el.closest('.fieldset').hide();\n                },\n\n                /**\n                 * @param {String} id\n                 * @this {swatchProductAttributes}\n                 */\n                _render: function (id) {\n                    rg.get(id, function () {\n                        $('#' + id).trigger('render');\n                    });\n                },\n\n                /**\n                 * @param {String} promptMessage\n                 * @this {swatchProductAttributes}\n                 */\n                saveAttributeInNewSet: function (promptMessage) {\n\n                    prompt({\n                        content: promptMessage,\n                        actions: {\n\n                            /**\n                             * @param {String} val\n                             * @this {actions}\n                             */\n                            confirm: function (val) {\n                                var rules = ['required-entry', 'validate-no-html-tags'],\n                                    newAttributeSetNameInputId = $('#new_attribute_set_name'),\n                                    editForm = $('#edit_form'),\n                                    newAttributeSetName = val,\n                                    i;\n\n                                if (!newAttributeSetName) {\n                                    return;\n                                }\n\n                                for (i = 0; i < rules.length; i++) {\n                                    if (!$.validator.methods[rules[i]](newAttributeSetName)) {\n                                        alert({\n                                            content: $.validator.messages[rules[i]]\n                                        });\n\n                                        return;\n                                    }\n                                }\n\n                                if (newAttributeSetNameInputId.length) {\n                                    newAttributeSetNameInputId.val(newAttributeSetName);\n                                } else {\n                                    editForm.append(new Element('input', {\n                                            type: 'hidden',\n                                            id: newAttributeSetNameInputId,\n                                            name: 'new_attribute_set_name',\n                                            value: newAttributeSetName\n                                        })\n                                    );\n                                }\n                                // Temporary solution will replaced after refactoring of attributes functionality\n                                editForm.triggerHandler('save');\n                            }\n                        }\n                    });\n                }\n            };\n\n        $(function () {\n            $('#frontend_input').bind('change', function () {\n                swatchProductAttributes.bindAttributeInputType();\n            });\n            $('#is_filterable').bind('change', function () {\n                swatchProductAttributes.switchIsFilterable();\n            });\n\n            swatchProductAttributes.bindAttributeInputType();\n\n            // @todo: refactor collapsable component\n            $('.attribute-popup .collapse, [data-role=\"advanced_fieldset-content\"]')\n                .collapsable()\n                .collapse('hide');\n        });\n\n        window.saveAttributeInNewSet = swatchProductAttributes.saveAttributeInNewSet;\n        window.toggleApplyVisibility = swatchProductAttributes.toggleApplyVisibility;\n    };\n});\n","Magento_Swatches/js/visual.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global $break $ $$ FORM_KEY */\n\n/**\n * @api\n */\ndefine([\n    'jquery',\n    'mage/template',\n    'uiRegistry',\n    'jquery/colorpicker/js/colorpicker',\n    'prototype',\n    'jquery/ui'\n], function (jQuery, mageTemplate, rg) {\n    'use strict';\n\n    return function (config) {\n        var swatchOptionVisualDefaultInputType = 'radio',\n            swatchVisualOption = {\n                table: $('swatch-visual-options-table'),\n                itemCount: 0,\n                totalItems: 0,\n                rendered: 0,\n                isReadOnly: config.isReadOnly,\n                template: mageTemplate('#swatch-visual-row-template'),\n\n                /**\n                 * Add new option using template\n                 *\n                 * @param {Object} data\n                 * @param {Object} render\n                 */\n                add: function (data, render) {\n                    var isNewOption = false,\n                        element;\n\n                    if (typeof data.id == 'undefined') {\n                        data = {\n                            'id': 'option_' + this.itemCount,\n                            'sort_order': this.itemCount + 1,\n                            'empty_class': 'unavailable'\n                        };\n                        isNewOption = true;\n                    } else if (data.defaultswatch0 === '') {\n                        data['empty_class'] = 'unavailable';\n                    }\n\n                    if (!data.intype) {\n                        data.intype = swatchOptionVisualDefaultInputType;\n                    }\n\n                    element = this.template({\n                        data: data\n                    });\n\n                    if (isNewOption && !this.isReadOnly) {\n                        this.enableNewOptionDeleteButton(data.id);\n                    }\n                    this.itemCount++;\n                    this.totalItems++;\n                    this.elements += element;\n\n                    if (render) {\n                        this.render();\n                    }\n                },\n\n                /**\n                 * ColorPicker initialization process\n                 */\n                initColorPicker: function () {\n                    var element = this,\n                        hiddenColorPicker = !jQuery(element).data('colorpickerId');\n\n                    jQuery(this).ColorPicker({\n\n                        /**\n                         * ColorPicker onShow action\n                         */\n                        onShow: function () {\n                            var color = jQuery(element).parent().parent().prev().prev('input').val(),\n                                menu = jQuery(this).parents('.swatch_sub-menu_container');\n\n                            menu.hide();\n                            jQuery(element).ColorPickerSetColor(color);\n                        },\n\n                        /**\n                         * ColorPicker onSubmit action\n                         *\n                         * @param {String} hsb\n                         * @param {String} hex\n                         * @param {String} rgb\n                         * @param {String} el\n                         */\n                        onSubmit: function (hsb, hex, rgb, el) {\n                            var container = jQuery(el).parent().parent().prev();\n\n                            jQuery(el).ColorPickerHide();\n                            container.parent().removeClass('unavailable');\n                            container.prev('input').val('#' + hex);\n                            container.css('background', '#' + hex);\n                        }\n                    });\n\n                    if (hiddenColorPicker) {\n                        jQuery(this).ColorPickerShow();\n                    }\n                },\n\n                /**\n                 * Remove action\n                 *\n                 * @param {Object} event\n                 */\n                remove: function (event) {\n                    var element = $(Event.findElement(event, 'tr')),\n                        elementFlags; // !!! Button already have table parent in safari\n\n                    // Safari workaround\n                    element.ancestors().each(function (parentItem) {\n                        if (parentItem.hasClassName('option-row')) {\n                            element = parentItem;\n                            throw $break;\n                        } else if (parentItem.hasClassName('box')) {\n                            throw $break;\n                        }\n                    });\n\n                    if (element) {\n                        elementFlags = element.getElementsByClassName('delete-flag');\n\n                        if (elementFlags[0]) {\n                            elementFlags[0].value = 1;\n                        }\n\n                        element.addClassName('no-display');\n                        element.addClassName('template');\n                        element.hide();\n                        this.totalItems--;\n                        this.updateItemsCountField();\n                    }\n                },\n\n                /**\n                 * Update items count field\n                 */\n                updateItemsCountField: function () {\n                    $('swatch-visual-option-count-check').value = this.totalItems > 0 ? '1' : '';\n                },\n\n                /**\n                 * Enable delete button for new option\n                 *\n                 * @param {String} id\n                 */\n                enableNewOptionDeleteButton: function (id) {\n                    $$('#delete_button_swatch_container_' + id + ' button').each(function (button) {\n                        button.enable();\n                        button.removeClassName('disabled');\n                    });\n                },\n\n                /**\n                 * Bind remove button\n                 */\n                bindRemoveButtons: function () {\n                    jQuery('#swatch-visual-options-panel').on('click', '.delete-option', this.remove.bind(this));\n                },\n\n                /**\n                 * Render options\n                 */\n                render: function () {\n                    Element.insert($$('[data-role=swatch-visual-options-container]')[0], this.elements);\n                    this.elements = '';\n                },\n\n                /**\n                 * Render elements with delay (performance fix)\n                 *\n                 * @param {Object} data\n                 * @param {Number} from\n                 * @param {Number} step\n                 * @param {Number} delay\n                 * @returns {Boolean}\n                 */\n                renderWithDelay: function (data, from, step, delay) {\n                    var arrayLength = data.length,\n                        len;\n\n                    for (len = from + step; from < len && from < arrayLength; from++) {\n                        this.add(data[from]);\n                    }\n                    this.render();\n\n                    if (from === arrayLength) {\n                        this.updateItemsCountField();\n                        this.rendered = 1;\n                        jQuery('body').trigger('processStop');\n\n                        return true;\n                    }\n                    setTimeout(this.renderWithDelay.bind(this, data, from, step, delay), delay);\n                },\n\n                /**\n                 * Ignore validate action\n                 */\n                ignoreValidate: function () {\n                    var ignore = '.ignore-validate input, ' +\n                        '.ignore-validate select, ' +\n                        '.ignore-validate textarea';\n\n                    jQuery('#edit_form').data('validator').settings.forceIgnore = ignore;\n                }\n            };\n\n        if ($('add_new_swatch_visual_option_button')) {\n            Event.observe(\n                'add_new_swatch_visual_option_button',\n                'click',\n                swatchVisualOption.add.bind(swatchVisualOption, {}, true)\n            );\n        }\n\n        jQuery('#swatch-visual-options-panel').on('render', function () {\n            swatchVisualOption.ignoreValidate();\n\n            if (swatchVisualOption.rendered) {\n                return false;\n            }\n            jQuery('body').trigger('processStart');\n            swatchVisualOption.renderWithDelay(config.attributesData, 0, 100, 300);\n            swatchVisualOption.bindRemoveButtons();\n            jQuery('#swatch-visual-options-panel').on(\n                'click',\n                '.colorpicker_handler',\n                swatchVisualOption.initColorPicker\n            );\n        });\n        jQuery('body').on('click', function (event) {\n            var element = jQuery(event.target);\n\n            if (\n                element.parents('.swatch_sub-menu_container').length === 1 ||\n                element.next('div.swatch_sub-menu_container').length === 1\n            ) {\n                return true;\n            }\n            jQuery('.swatch_sub-menu_container').hide();\n        });\n\n        if (config.isSortable) {\n            jQuery(function ($) {\n                $('[data-role=swatch-visual-options-container]').sortable({\n                    distance: 8,\n                    tolerance: 'pointer',\n                    cancel: 'input, button',\n                    axis: 'y',\n\n                    /**\n                     * Update component\n                     */\n                    update: function () {\n                        $('[data-role=swatch-visual-options-container] [data-role=order]').each(\n                            function (index, element) {\n                                $(element).val(index + 1);\n                            }\n                        );\n                    }\n                });\n            });\n        }\n\n        window.swatchVisualOption = swatchVisualOption;\n        window.swatchOptionVisualDefaultInputType = swatchOptionVisualDefaultInputType;\n\n        rg.set('swatch-visual-options-panel', swatchVisualOption);\n\n        jQuery(function ($) {\n\n            var swatchComponents = {\n\n                /**\n                 * div wrapper for to hide all evement\n                 */\n                wrapper: null,\n\n                /**\n                 * iframe component to perform file upload without page reload\n                 */\n                iframe: null,\n\n                /**\n                 * form component for upload image\n                 */\n                form: null,\n\n                /**\n                 * Input file component for upload image\n                 */\n                inputFile: null,\n\n                /**\n                 * Create swatch component for upload files\n                 *\n                 * @this {swatchComponents}\n                 * @public\n                 */\n                create: function () {\n                    this.wrapper = $('<div>').css({\n                        display: 'none'\n                    }).appendTo($('body'));\n\n                    this.iframe = $('<iframe />', {\n                        id:  'upload_iframe',\n                        name: 'upload_iframe'\n                    }).appendTo(this.wrapper);\n\n                    this.form = $('<form />', {\n                        id: 'swatch_form_image_upload',\n                        name: 'swatch_form_image_upload',\n                        target: 'upload_iframe',\n                        method: 'post',\n                        enctype: 'multipart/form-data',\n                        class: 'ignore-validate',\n                        action: config.uploadActionUrl\n                    }).appendTo(this.wrapper);\n\n                    this.inputFile = $('<input />', {\n                        type: 'file',\n                        name: 'datafile',\n                        class: 'swatch_option_file'\n                    }).appendTo(this.form);\n\n                    $('<input />', {\n                        type: 'hidden',\n                        name: 'form_key',\n                        value: FORM_KEY\n                    }).appendTo(this.form);\n                }\n            };\n\n            /**\n             * Create swatch components\n             */\n            swatchComponents.create();\n\n            /**\n             * Register event for swatch input[type=file] change\n             */\n            swatchComponents.inputFile.change(function () {\n                var container = $('#' + $(this).attr('data-called-by')).parents().eq(2).children('.swatch_window'),\n\n                    /**\n                     * @this {iframe}\n                     */\n                    iframeHandler = function () {\n                        var imageParams = $.parseJSON($(this).contents().find('body').html()),\n                            fullMediaUrl = imageParams['swatch_path'] + imageParams['file_path'];\n\n                        container.prev('input').val(imageParams['file_path']);\n                        container.css({\n                            'background-image': 'url(' + fullMediaUrl + ')',\n                            'background-size': 'cover'\n                        });\n                        container.parent().removeClass('unavailable');\n                    };\n\n                swatchComponents.iframe.off('load');\n                swatchComponents.iframe.load(iframeHandler);\n                swatchComponents.form.submit();\n                $(this).val('');\n            });\n\n            /**\n             * Register event for choose \"upload image\" option\n             */\n            $(document).on('click', '.btn_choose_file_upload', function () {\n                swatchComponents.inputFile.attr('data-called-by', $(this).attr('id'));\n                swatchComponents.inputFile.click();\n            });\n\n            /**\n             * Register event for remove option\n             */\n            $(document).on('click', '.btn_remove_swatch', function () {\n                var optionPanel = $(this).parents().eq(2);\n\n                optionPanel.children('input').val('');\n                optionPanel.children('.swatch_window').css('background', '');\n\n                optionPanel.addClass('unavailable');\n\n                jQuery('.swatch_sub-menu_container').hide();\n            });\n\n            /**\n             * Toggle color upload chooser\n             */\n            $(document).on('click', '.swatch_window', function () {\n                $(this).next('div').toggle();\n            });\n        });\n    };\n});\n","Magento_Swatches/js/form/element/swatch-visual.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global $break $ FORM_KEY */\n\n/**\n * @api\n */\ndefine([\n    'underscore',\n    'Magento_Ui/js/lib/view/utils/async',\n    'mage/template',\n    'uiRegistry',\n    'prototype',\n    'Magento_Ui/js/form/element/abstract',\n    'jquery/colorpicker/js/colorpicker',\n    'jquery/ui'\n], function (_, jQuery, mageTemplate, rg, prototype, Abstract) {\n    'use strict';\n\n    /**\n     * Former implementation.\n     *\n     * @param {*} value\n     * @param {Object} container\n     * @param {String} uploadUrl\n     * @param {String} elementName\n     */\n    function oldCode(value, container, uploadUrl, elementName) {\n        var swatchVisualOption = {\n            itemCount: 0,\n            totalItems: 0,\n            rendered: 0,\n            isReadOnly: false,\n\n            /**\n             * Initialize.\n             */\n            initialize: function () {\n                if (_.isEmpty(value)) {\n                    container.addClassName('unavailable');\n                }\n\n                jQuery(container).on(\n                    'click',\n                    '.colorpicker_handler',\n                    this.initColorPicker\n                );\n            },\n\n            /**\n             * ColorPicker initialization process\n             */\n            initColorPicker: function () {\n                var element = this,\n                    hiddenColorPicker = !jQuery(element).data('colorpickerId');\n\n                jQuery(this).ColorPicker({\n\n                    /**\n                     * ColorPicker onShow action\n                     */\n                    onShow: function () {\n                        var color = jQuery(element).parent().parent().prev().prev('input').val(),\n                            menu = jQuery(this).parents('.swatch_sub-menu_container');\n\n                        menu.hide();\n                        jQuery(element).ColorPickerSetColor(color);\n                    },\n\n                    /**\n                     * ColorPicker onSubmit action\n                     *\n                     * @param {String} hsb\n                     * @param {String} hex\n                     * @param {String} rgb\n                     * @param {String} el\n                     */\n                    onSubmit: function (hsb, hex, rgb, el) {\n                        var localContainer = jQuery(el).parent().parent().prev();\n\n                        jQuery(el).ColorPickerHide();\n                        localContainer.parent().removeClass('unavailable');\n                        localContainer.prev('input').val('#' + hex).trigger('change');\n                        localContainer.css('background', '#' + hex);\n                    }\n                });\n\n                if (hiddenColorPicker) {\n                    jQuery(this).ColorPickerShow();\n                }\n            },\n\n            /**\n             * Remove action\n             *\n             * @param {Object} event\n             */\n            remove: function (event) {\n                var element = $(Event.findElement(event, 'tr')),\n                    elementFlags; // !!! Button already have table parent in safari\n\n                // Safari workaround\n                element.ancestors().each(function (parentItem) {\n                    if (parentItem.hasClassName('option-row')) {\n                        element = parentItem;\n                        throw $break;\n                    } else if (parentItem.hasClassName('box')) {\n                        throw $break;\n                    }\n                });\n\n                if (element) {\n                    elementFlags = element.getElementsByClassName('delete-flag');\n\n                    if (elementFlags[0]) {\n                        elementFlags[0].value = 1;\n                    }\n\n                    element.addClassName('no-display');\n                    element.addClassName('template');\n                    element.hide();\n                    this.totalItems--;\n                    this.updateItemsCountField();\n                }\n            },\n\n            /**\n             * Update items count field\n             */\n            updateItemsCountField: function () {\n                $('swatch-visual-option-count-check').value = this.totalItems > 0 ? '1' : '';\n            }\n        };\n\n        //swatchVisualOption.initColorPicker();\n\n        jQuery('body').on('click', function (event) {\n            var element = jQuery(event.target);\n\n            if (\n                element.parents('.swatch_sub-menu_container').length === 1 ||\n                element.next('div.swatch_sub-menu_container').length === 1\n            ) {\n                return true;\n            }\n            jQuery('.swatch_sub-menu_container').hide();\n        });\n\n        jQuery(function ($) {\n\n            var swatchComponents = {\n\n                /**\n                 * div wrapper for to hide all evement\n                 */\n                wrapper: null,\n\n                /**\n                 * iframe component to perform file upload without page reload\n                 */\n                iframe: null,\n\n                /**\n                 * form component for upload image\n                 */\n                form: null,\n\n                /**\n                 * Input file component for upload image\n                 */\n                inputFile: null,\n\n                /**\n                 * Create swatch component for upload files\n                 *\n                 * @this {swatchComponents}\n                 * @public\n                 */\n                create: function () {\n                    this.wrapper = $('<div>').css({\n                        display: 'none'\n                    }).appendTo($('body'));\n\n                    this.iframe = $('<iframe />', {\n                        name: 'upload_iframe_' + elementName\n                    }).appendTo(this.wrapper);\n\n                    this.form = $('<form />', {\n                        name: 'swatch_form_image_upload_' + elementName,\n                        target: 'upload_iframe_' + elementName,\n                        method: 'post',\n                        enctype: 'multipart/form-data',\n                        class: 'ignore-validate',\n                        action: uploadUrl\n                    }).appendTo(this.wrapper);\n\n                    this.inputFile = $('<input />', {\n                        type: 'file',\n                        name: 'datafile',\n                        class: 'swatch_option_file'\n                    }).appendTo(this.form);\n\n                    $('<input />', {\n                        type: 'hidden',\n                        name: 'form_key',\n                        value: FORM_KEY\n                    }).appendTo(this.form);\n                }\n            };\n\n            swatchVisualOption.initialize();\n\n            /**\n             * Create swatch components\n             */\n            swatchComponents.create();\n\n            /**\n             * Register event for swatch input[type=file] change\n             */\n            swatchComponents.inputFile.change(function () {\n                var localContainer = $('.' + $(this).attr('data-called-by')).parents().eq(2).children('.swatch_window'),\n\n                    /**\n                     * @this {iframe}\n                     */\n                    iframeHandler = function () {\n                        var imageParams = $.parseJSON($(this).contents().find('body').html()),\n                            fullMediaUrl = imageParams['swatch_path'] + imageParams['file_path'];\n\n                        localContainer.prev('input').val(imageParams['file_path']).trigger('change');\n                        localContainer.css({\n                            'background-image': 'url(' + fullMediaUrl + ')',\n                            'background-size': 'cover'\n                        });\n                        localContainer.parent().removeClass('unavailable');\n                    };\n\n                swatchComponents.iframe.off('load');\n                swatchComponents.iframe.load(iframeHandler);\n                swatchComponents.form.submit();\n                $(this).val('');\n            });\n\n            /**\n             * Register event for choose \"upload image\" option\n             */\n            $(container).on('click', '.btn_choose_file_upload', function () {\n                swatchComponents.inputFile.attr('data-called-by', $(this).data('class'));\n                swatchComponents.inputFile.click();\n            });\n\n            /**\n             * Register event for remove option\n             */\n            $(container).on('click', '.btn_remove_swatch', function () {\n                var optionPanel = $(this).parents().eq(2);\n\n                optionPanel.children('input').val('').trigger('change');\n                optionPanel.children('.swatch_window').css('background', '');\n                optionPanel.addClass('unavailable');\n                jQuery('.swatch_sub-menu_container').hide();\n            });\n\n            /**\n             * Toggle color upload chooser\n             */\n            $(container).on('click', '.swatch_window', function () {\n                jQuery('.swatch_sub-menu_container').hide();\n                $(this).next('div').toggle();\n            });\n        });\n    }\n\n    return Abstract.extend({\n        defaults: {\n            elementId: 0,\n            prefixName: '',\n            prefixElementName: '',\n            elementName: '',\n            value: '',\n            uploadUrl: ''\n        },\n\n        /**\n         * Parses options and merges the result with instance\n         *\n         * @returns {Object} Chainable.\n         */\n        initConfig: function () {\n            this._super();\n\n            this.configureDataScope();\n\n            return this;\n        },\n\n        /**\n         * Initialize.\n         *\n         * @returns {Object} Chainable.\n         */\n        initialize: function () {\n            this._super()\n                .initOldCode();\n\n            return this;\n        },\n\n        /**\n         * Initialize wrapped former implementation.\n         *\n         * @returns {Object} Chainable.\n         */\n        initOldCode: function () {\n            jQuery.async('.' + this.elementName, function (elem) {\n                oldCode(this.value(), elem.parentElement, this.uploadUrl, this.elementName);\n            }.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Configure data scope.\n         */\n        configureDataScope: function () {\n            var recordId, prefixName;\n\n            // Get recordId\n            recordId = this.parentName.split('.').last();\n\n            prefixName = this.dataScopeToHtmlArray(this.prefixName);\n            this.elementName = this.prefixElementName + recordId;\n\n            this.inputName = prefixName + '[' + this.elementName + ']';\n            this.dataScope = 'data.' + this.prefixName + '.' + this.elementName;\n\n            this.links.value = this.provider + ':' + this.dataScope;\n        },\n\n        /**\n         * Get HTML array from data scope.\n         *\n         * @param {String} dataScopeString\n         * @returns {String}\n         */\n        dataScopeToHtmlArray: function (dataScopeString) {\n            var dataScopeArray, dataScope, reduceFunction;\n\n            /**\n             * Add new level of nesting.\n             *\n             * @param {String} prev\n             * @param {String} curr\n             * @returns {String}\n             */\n            reduceFunction = function (prev, curr) {\n                return prev + '[' + curr + ']';\n            };\n\n            dataScopeArray = dataScopeString.split('.');\n\n            dataScope = dataScopeArray.shift();\n            dataScope += dataScopeArray.reduce(reduceFunction, '');\n\n            return dataScope;\n        }\n    });\n});\n","Craftyclicks_Ukpostcodelookup/cc_rapid_core.js":"/**\n * Lets define the CraftyClicks Constructor\n * @cfg {object} containing base configurations.\n */\n\nfunction cc_rapid(cfg){\n\tthis.baseURL\t= 'https://pcls1.craftyclicks.co.uk/json/rapidaddress';\n\tthis.key\t\t= cfg.key;\n\tthis.geocode\t= cfg.geocode;\n\tif(typeof this.geocode == \"undefined\")\n\t\tthis.geocode = false;\n\tthis.alias\t\t= cfg.alias;\n\tif(typeof this.alias == \"undefined\")\n\t\tthis.alias = false;\n\tthis.preformat\t= cfg.preformat;\n\tif(typeof this.preformat == \"undefined\")\n\t\tthis.preformat = false;\n\tthis.capsformat = cfg.capsformat;\n\tif(typeof this.capsformat == \"undefined\")\n\t\tthis.capsformat = {\n\t\t\taddress : false,\n\t\t\torganization : false,\n\t\t\tcounty : false,\n\t\t\ttown: false\n\t\t};\n\t// store previously retrieved datasets\n\tthis.lines = cfg.lines;\n\tthis.dataStore\t= new Array();\n\n}\n/**\n * Fetches data from the api based on the configuration, and stores it.\n * Skips the lookup if the data is already looked up.\n * @return {object} the response data set.\n */\n\n\ncc_rapid.prototype.search = function(input){\n\t// clean postcode\n\tvar postcode = this.clean_input(input);\n\tif(postcode == null){\n\t\treturn { error_code: \"0002\" };\n\t}\n\tvar data = {};\n\tif(this.is_stored(postcode)){\n\t\tdata = this.get_store(postcode);\n\t} else {\n\t\tdata = this.fetch_data(postcode);\n\t\tif(typeof data.error_code == \"undefined\"){\n\t\t\tdata = this.format_data(data);\n\t\t}\n\t\tthis.store(postcode, data);\n\t}\n\treturn data;\n}\n// gets data from storage\ncc_rapid.prototype.get_store = function(postcode){\n\t//console.warn('retrieving data from store');\n\treturn this.dataStore[postcode];\n}\n// adds data to storage\ncc_rapid.prototype.store = function(postcode, object){\n\tthis.dataStore[postcode] = object;\n\t//console.warn('data saved');\n\treturn true;\n}\n// checks if postcode related data is already stored\ncc_rapid.prototype.is_stored = function(postcode){\n\treturn this.dataStore.hasOwnProperty(postcode);\n}\n// gets data from craftyclicks API\ncc_rapid.prototype.fetch_data = function(postcode){\n\t// Set up the URL\n\tvar url = this.baseURL + '?key=' + this.key + '&postcode=' + postcode;\n\turl += '&sort=asc';\n\tif(this.preformat){\n\t\turl += '&response=data_formatted';\n\t\turl += '&lines='+this.lines;\n\t}\n\n\t// Create new XMLHttpRequest, has to be synchronous so we can handle response\n\trequest = new XMLHttpRequest();\n\trequest.open('GET', url, false);\n\n\t// Wait for change and then either JSON parse response text or throw exception for HTTP error\n\trequest.onreadystatechange = function() {\n\t\tif (this.readyState === 4){\n\t\t\tif (this.status >= 200 && this.status < 400){\n\t\t\t\t// Success!\n\t\t\t\tdata = JSON.parse(this.responseText);\n\t\t\t\t//console.log(data);\n\t\t\t} else {\n\t\t\t\tdata = { error_code: \"0004\" };\n\t\t\t}\n\t\t}\n\t};\n\t// Send request\n\ttry{\n\t\trequest.send();\n\t}\n\tcatch(err){\n\t\tdata = { error_code: \"0003\" };\n\t}\n\t// Nullify request object\n\trequest = null;\n\treturn data;\n}\n// formatting text from capital to leading caps based on cfg\ncc_rapid.prototype.format_data = function(data){\n\tif(this.capsformat.county){\n\t\tdata.postal_county = this.leading_caps(data.postal_county);\n\t\tdata.traditional_county = this.leading_caps(data.traditional_county);\n\t}\n\tif(this.capsformat.town){\n\t\tdata.town = this.leading_caps(data.town);\n\t}\n\tif(this.preformat){\n\t\tfor(var i=0; i<data.delivery_point_count; i++){\n\t\t\tif(this.capsformat.address){\n\t\t\t\tdata.delivery_points[i].line_1 = this.leading_caps(data.delivery_points[i].line_1);\n\t\t\t\tdata.delivery_points[i].line_2 = this.leading_caps(data.delivery_points[i].line_2);\n\t\t\t}\n\t\t\tif(this.capsformat.organization){\n\t\t\t\tdata.delivery_points[i].organisation_name = this.leading_caps(data.delivery_points[i].organisation_name);\n\t\t\t}\n\t\t}\n\t}\n\treturn data;\n}\n\n// leading caps transformation\ncc_rapid.prototype.leading_caps = function(txt){\n\tif (2 > txt.length) { return (txt) }\n\tvar out_text = '';\n\tvar words = txt.split(\" \");\n\tfor (var i=0; i<words.length; i++) {\t// each word in turn\n\t\tvar word = this.str_trim(words[i]);\n\t\tif ('' != word)\t{\n\t\t\tif ('' != out_text)\t{\n\t\t\t\tout_text = out_text + ' ';\n\t\t\t}\n\t\t\tout_text = out_text + this.cp_uc(word);\n\t\t}\n\t}\n\treturn (out_text);\n}\n// simple trim functionality\ncc_rapid.prototype.str_trim = function(s){\n\tvar l=0;\n\tvar r=s.length -1;\n\twhile(l < s.length && s[l] == ' ') { l++; }\n\twhile(r > l && s[r] == ' ') { r-=1;\t}\n\treturn s.substring(l, r+1);\n}\n\ncc_rapid.prototype.cp_uc = function(text) {\n\tif (\"PC\" == text || \"UK\" == text || \"EU\" == text) {return (text);}\n\tvar alpha=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\tvar out_text = '';\n\tvar do_uc = 1;\n\tvar all_uc = 0;\n\tfor (var i=0; i<text.length; i++){\n\t\tif (-1 != alpha.indexOf(text.charAt(i))) {\n\t\t\tif (do_uc || all_uc) {\n\t\t\t\tout_text = out_text + text.charAt(i);\n\t\t\t\tdo_uc = 0;\n\t\t\t} else {\n\t\t\t\tout_text = out_text + text.charAt(i).toLowerCase();\n\t\t\t}\n\t\t} else {\n\t\t\tout_text = out_text + text.charAt(i);\n\t\t\tif (i+2 >= text.length && \"'\" == text.charAt(i)) { // only one more char left, don't capitalise\n\t\t\t\tdo_uc = 0;\n\t\t\t} else if (\"(\" == text.charAt(i)) {\n\t\t\t\tclose_idx = text.indexOf(\")\",i+1);\n\t\t\t\tif (i+3 < close_idx) { // more than 2 chars\n\t\t\t\t\tall_uc = 0; do_uc = 1;\n\t\t\t\t} else { // no closing bracket or 2 or les chars in brackets, leave uppercase\n\t\t\t\t\tall_uc = 1;\n\t\t\t\t}\n\t\t\t} else if (\")\" == text.charAt(i)) {\n\t\t\t\tall_uc = 0; do_uc = 1;\n\t\t\t} else if (\"-\" == text.charAt(i)) {\n\t\t\t\tclose_idx = text.indexOf(\"-\",i+1);\n\t\t\t\tif ((-1 != close_idx && i+3 >= close_idx) || i+3 >= text.length) { // less than 2 chars\n\t\t\t\t\tall_uc = 0; do_uc = 0;\n\t\t\t\t} else { // 2 or more chars\n\t\t\t\t\tall_uc = 0; do_uc = 1;\n\t\t\t\t}\n\t\t\t} else if (i+2 < text.length && \"0\" <= text.charAt(i) && \"9\" >= text.charAt(i)) {\n\t\t\t\tdo_uc = 0;\n\t\t\t} else {\n\t\t\t\tdo_uc = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn (out_text);\n}\n// cleaning the postcode input for all caps no space version\ncc_rapid.prototype.clean_input = function(dirty_pc){\n\t// first strip out anything not alphanumenric\n\tvar pc = '';\n\tdo {\n\t\tpc = dirty_pc;\n\t\tdirty_pc = dirty_pc.replace(/[^A-Za-z0-9]/, \"\");\n\t} while (pc != dirty_pc);\n\tpc = dirty_pc.toUpperCase();\n\t// check if we have the right length with what is left\n\tif (7 >= pc.length && 5 <= pc.length) {\n\t\t// get the in code\n\t\tvar inc = pc.substring(pc.length-3,pc.length);\n\t\t// get the out code\n\t\tvar outc = pc.substring(0, pc.length-3);\n\t\t// now validate both in and out codes\n\t\tif (true == /[CIKMOV]/.test(inc)) {\n\t\t\treturn null;\n\t\t}\n\t\t// inCode must be NAA\n\t\tif ( '0' <= inc.charAt(0) && '9' >= inc.charAt(0) &&\n\t\t\t 'A' <= inc.charAt(1) && 'Z' >= inc.charAt(1) &&\n\t\t\t 'A' <= inc.charAt(2) && 'Z' >= inc.charAt(2) ) {\n\t\t\t// outcode must be one of AN, ANN, AAN, ANA, AANN, AANA\n\t\t\tswitch (outc.length) {\n\t\t\t\tcase 2: // AN\n\t\t\t\t\tif ('A' <= outc.charAt(0) && 'Z' >= outc.charAt(0) &&\n\t\t\t\t\t\t'0' <= outc.charAt(1) && '9' >= outc.charAt(1) ) { return (pc); }\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // ANN, AAN, ANA\n\t\t\t\t\tif ('A' <= outc.charAt(0) && 'Z' >= outc.charAt(0)) {\n\t\t\t\t\t\tif ('0' <= outc.charAt(1) && '9' >= outc.charAt(1) &&\n\t\t\t\t\t\t\t'0' <= outc.charAt(2) && '9' >= outc.charAt(2) ) { return (pc); }\n\t\t\t\t\t\telse if ('A' <= outc.charAt(1) && 'Z' >= outc.charAt(1) &&\n\t\t\t\t\t\t\t\t '0' <= outc.charAt(2) && '9' >= outc.charAt(2) ) { return (pc); }\n\t\t\t\t\t\telse if ('0' <= outc.charAt(1) && '9' >= outc.charAt(1) &&\n\t\t\t\t\t\t\t\t 'A' <= outc.charAt(2) && 'Z' >= outc.charAt(2) ) { return (pc); }\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4: // AANN, AANA\n\t\t\t\t\tif ('A' <= outc.charAt(0) && 'Z' >= outc.charAt(0) &&\n\t\t\t\t\t\t'A' <= outc.charAt(1) && 'Z' >= outc.charAt(1) &&\n\t\t\t\t\t\t'0' <= outc.charAt(2) && '9' >= outc.charAt(2)) {\n\t\t\t\t\t\tif ('0' <= outc.charAt(3) && '9' >= outc.charAt(3) ) { return (pc); }\n\t\t\t\t\t\telse if ('A' <= outc.charAt(3) && 'Z' >= outc.charAt(3) ) { return (pc); }\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n","Craftyclicks_Ukpostcodelookup/cc_middleman.js":"/**\n * Lets define the CraftyClicks Constructor\n * @cfg {object} containing base configurations.\n */\n\nfunction cc_ui_handler(cfg){\n\t//console.log(cfg);\n\tthis.cfg = cfg;\n\n\tvar lines = 0;\n\tif(typeof cfg.dom.address_1 !== \"undefined\"){\n\t\tlines++;\n\t}\n\tif(typeof cfg.dom.address_2 !== \"undefined\"){\n\t\tlines++;\n\t}\n\tif(typeof cfg.dom.address_3 !== \"undefined\"){\n\t\tlines++;\n\t}\n\tthis.cfg.core.lines = lines;\n\tthis.cc_core = new cc_rapid(this.cfg.core);\n}\n/**\n * Fetches data from the api based on the configuration, and stores it.\n * Skips the lookup if the data is already looked up.\n * @return {object} the response data set.\n */\n\ncc_ui_handler.prototype.sort = function(is_uk){\n\tvar elems = this.cfg.dom;\n\tvar country = elems.country.parents(this.cfg.sort_fields.parent).last();\n\t// Sort disabled; position country on top\n\tvar company = elems.company.parents(this.cfg.sort_fields.parent).last();\n\tvar postcode = elems.postcode.parents(this.cfg.sort_fields.parent).last();\n\tcountry.insertBefore(company);\n\tvar searchContainer = {};\n\tif(this.cfg.search_type != 'traditional'){\n\t\tsearchContainer = this.search_object.parents(this.cfg.sort_fields.parent).last();\n\t\tcountry.after(searchContainer);\n\t} else {\n\t\tsearchContainer = this.search_object;\n\t\tcountry.after(searchContainer);\n\t}\n\n\tif(this.cfg.hide_fields){\n\t\tvar tagElement = [];\n\t\tif(this.cfg.search_type != 'traditional'){\n\t\t\ttagElement = ['postcode', 'company', 'address_1', 'town', 'county', 'county_list'];\n\t\t} else {\n\t\t\ttagElement = ['company', 'address_1', 'town', 'county', 'county_list'];\n\t\t}\n\t\tfor(var i=0; i < tagElement.length; i++){\n\t\t\telems[tagElement[i]].parents(this.cfg.sort_fields.parent).last().addClass('crafty_address_field');\n\t\t}\n\t}\n};\n/*\ncc_ui_handler.prototype.sortTool = function(a,b){\n\tvar a_holder = a.parents(this.cfg.sort_fields.parent).last();\n\tvar b_holder = b.parents(this.cfg.sort_fields.parent).last();\n\ta_holder.after(b_holder);\n}*/\ncc_ui_handler.prototype.country_change = function(country){\n\n\tvar active_countries = ['GB','IM','JE','GY'];\n\tif(active_countries.indexOf(country) != -1){\n\t\tif(this.cfg.sort_fields.active){\n\t\t\tthis.sort(true);\n\t\t}\n\t\tthis.search_object.parents(this.cfg.sort_fields.parent).last().show();\n\n\t} else {\n\t\tif(this.cfg.sort_fields.active){\n\t\t\tthis.sort(false);\n\t\t}\n\t\tthis.search_object.parents(this.cfg.sort_fields.parent).last().hide();\n\t}\n\tif(active_countries.indexOf(country) != -1){\n\t\tthis.search_object.find('.search-bar .action').show();\n\t} else {\n\t\tthis.search_object.find('.search-bar .action').hide();\n\t}\n\tif(this.cfg.hide_fields && (active_countries.indexOf(country) != -1) && (this.cfg.dom.postcode.val() === \"\")){\n\t\tthis.search_object.closest(this.cfg.sort_fields.parent).parent().find('.crafty_address_field').hide();\n\t} else {\n\t\tthis.search_object.closest(this.cfg.sort_fields.parent).parent().find('.crafty_address_field').show();\n\t}\n};\n\ncc_ui_handler.prototype.activate = function(){\n\tthis.addui();\n\tif(this.cfg.only_uk){\n\t\tthis.country_change(this.cfg.dom.country.val());\n\t\t// transfer object to event scope\n\t\tvar that = this;\n\t\tthis.cfg.dom.country.on('change',function(){\n\t\t\t// selected country\n\t\t\tvar sc = jQuery(this).val();\n\t\t\tthat.country_change(sc);\n\t\t});\n\t}\n};\n\ncc_ui_handler.prototype.addui = function(){\n\t// transfer object to event scope\n\tvar that = this;\n\t// apply dom elements\n\tvar html = '';\n\tswitch(this.cfg.search_type){\n\t\tcase \"searchbar_text\":\n\t\t\thtml = '<div class=\"search-container type_2\" id=\"' + this.cfg.id + '\">'\n\t\t\t\t+ '<div class=\"search-bar\">'\n\t\t\t\t\t+ '<input class=\"search-box\" type=\"text\" placeholder=\"' + this.cfg.txt.search_placeholder + '\">'\n\t\t\t\t\t+ '<button type=\"button\" class=\"action primary\">'\n\t\t\t\t\t+ '<span>Find Address</span></button>'\n\t\t\t\t+ '</div>'\n\t\t\t\t+ '<div class=\"search-list\" style=\"display: none;\">'\n\t\t\t\t\t+ '<ul>'\n\t\t\t\t\t+ '</ul>'\n\t\t\t\t\t+ '<div class=\"extra-info\" style=\"display: none;\"><div class=\"search-subtext\"></div></div>'\n\t\t\t\t+ '</div>'\n\t\t\t\t+ '<div class=\"mage-error\" generated><div class=\"search-subtext\"></div></div>'\n\t\t\t+ '</div>';\n\t\tbreak;\n\t}\n\n\tif(this.cfg.search_type != 'traditional' && typeof this.cfg.search_wrapper !== 'undefined'){\n\t\thtml = this.cfg.search_wrapper.before + html + this.cfg.search_wrapper.after;\n\t}\n\tif(this.cfg.search_type != 'traditional'){\n\t\tthis.cfg.dom.country.parents(this.cfg.sort_fields.parent).last().after(html);\n\t} else {\n\t\t// input after postcode\n\t\tvar postcode_elem = this.cfg.dom.postcode;\n\t\tpostcode_elem.wrap('<div class=\"search-bar\"></div>');\n\t\tpostcode_elem.addClass('search-box');\n\t\tpostcode_elem.after('<button type=\"button\" class=\"action primary\">'\n\t\t\t\t\t+ '<span>Find Address</span></button>');\n\t\tvar new_container = postcode_elem.closest(this.cfg.sort_fields.parent);\n\t\tnew_container.addClass('search-container').attr('id',this.cfg.id).addClass('type_3');\n\t\t// add search list\n\t\tpostcode_elem.closest('.search-bar').after('<div class=\"search-list\" style=\"display: none;\">'\n\t\t\t\t\t\t\t+ '<select></select>'\n\t\t\t\t\t\t+ '</div>'\n\t\t\t\t\t\t+ '<div class=\"mage-error\" generated><div class=\"search-subtext\"></div></div>');\n\t}\n\n\t// apply postcode lookup (by button)\n\tthis.search_object = jQuery('.search-container[id=\"'+this.cfg.id+'\"]');\n\tthis.search_object.find('.action').on('click',function(){\n\t\tthat.lookup(that.search_object.find('.search-box').val());\n\t});\n\t// apply hiding of list on input change && auto search\n\tthis.search_object.find('.search-box').on('keyup',function(){\n\t\tthat.search_object.find('.search-list').hide();\n\t\tthat.search_object.find('.extra-info').hide();\n\n\t\tthat.search_object.find('.mage-error').hide();\n\n\t\tif(that.cfg.search_type != 'traditional'){\n\t\t\t// apply auto search\n\t\t\tif(that.cfg.auto_search && (that.cc_core.clean_input(jQuery(this).val()) !== null)){\n\t\t\t\tthat.lookup(that.search_object.find('.search-box').val());\n\t\t\t}\n\t\t}\n\t});\n\n};\n\ncc_ui_handler.prototype.lookup = function(postcode){\n\tvar dataset = this.cc_core.search(postcode);\n\tif(typeof dataset.error_code != \"undefined\"){\n\t\tthis.prompt_error(dataset.error_code);\n\t\treturn;\n\t}\n\tvar new_html = \"\";\n\tfor(var i=0; i < dataset.delivery_point_count; i++){\n\t\tvar elems = [];\n\t\tvar endpoint = dataset.delivery_points[i];\n\t\tif(endpoint.department_name !== \"\")\n\t\t\telems.push(endpoint.department_name);\n\t\tif(endpoint.organisation_name !== \"\")\n\t\t\telems.push(endpoint.organisation_name);\n\t\tif(endpoint.line_1 !== \"\")\n\t\t\telems.push(endpoint.line_1);\n\t\tif(endpoint.line_2 !== \"\")\n\t\t\telems.push(endpoint.line_2);\n\t\tif(this.cfg.search_type != 'traditional'){\n\t\t\tnew_html += '<li data-id=\"'+i+'\"><span style=\"font-weight: bold;\">'+dataset.town+', </span><span style=\"font-style: italic;\">' + elems.join(', ') + '</span></li>';\n\t\t} else {\n\t\t\tnew_html += '<option data-id=\"'+i+'\">'+dataset.town+', ' + elems.join(', ') + '</option>';\n\t\t}\n\t}\n\tvar search_list = this.search_object.find('.search-list');\n\tif(this.cfg.search_type != 'traditional'){\n\t\tsearch_list.find('ul').html(new_html);\n\t} else {\n\t\tsearch_list.find('select').html('<option>Select Your Address</option>'+new_html);\n\t}\n\tsearch_list.show();\n\n\tthis.search_object.find('.extra-info .search-subtext').html(dataset.town);\n\tthis.search_object.find('.extra-info').show();\n\tvar that = this;\n\n\tif(this.cfg.search_type != 'traditional'){\n\t\tsearch_list.find('li').on('click',function(){\n\t\t\tthat.select(postcode, jQuery(this).data('id'));\n\t\t\tsearch_list.hide();\n\t\t});\n\t} else {\n\t\tsearch_list.find('select').off('change');\n\t\tsearch_list.find('select').on('change',function(){\n\t\t\tthat.select(postcode, jQuery(this).find('option:selected').data('id'));\n\t\t\tsearch_list.hide();\n\t\t});\n\t}\n\n\tif(that.cfg.search_type != 'traditional'){\n\t\tthis.search_object.on('focusout',function(){\n\t\t\t// give a tiny time for the on click event to trigger first\n\t\t\tsetTimeout(function(){\n\t\t\t\tsearch_list.hide();\n\t\t\t}, 250);\n\t\t});\n\t}\n};\ncc_ui_handler.prototype.prompt_error = function(error_code){\n\tif(!this.cfg.error_msg.hasOwnProperty(error_code)){\n\t\t// simplyfy complex error messages\n\t\terror_code = \"0004\";\n\t}\n\tthis.search_object.find('.mage-error .search-subtext').html(this.cfg.error_msg[error_code]);\n\tthis.search_object.find('.mage-error').show();\n};\ncc_ui_handler.prototype.select = function(postcode, id){\n\tvar dataset = this.cc_core.get_store(this.cc_core.clean_input(postcode));\n\n\tthis.cfg.dom.town.val(dataset.town);\n\tthis.cfg.dom.postcode.val(dataset.postcode);\n\n\tvar company_details = [];\n\tif(dataset.delivery_points[id].department_name !== \"\"){\n\t\tcompany_details.push(dataset.delivery_points[id].department_name);\n\t}\n\tif(dataset.delivery_points[id].organisation_name !== \"\"){\n\t\tcompany_details.push(dataset.delivery_points[id].organisation_name);\n\t}\n\n\tthis.cfg.dom.company.val(company_details.join(', '));\n\n\tfor(var i=1; i<=this.cfg.core.lines; i++){\n\t\tthis.cfg.dom[\"address_\"+i].val(dataset.delivery_points[id][\"line_\"+i]);\n\t}\n\n\tif(this.cfg.hide_fields){\n\t\tjQuery('.crafty_address_field').show();\n\t}\n\tif(this.cfg.search_type != 'traditional' && this.cfg.clean_postsearch){\n\t\tthis.search_object.find('.search-box').val('');\n\t}\n\t// trigger change for checkout validation\n\tjQuery.each(this.cfg.dom, function(index, name){\n\t\tname.trigger('change');\n\t});\n};\n","Craftyclicks_Ukpostcodelookup/form_integrations/cc_admin_order.js":"function activate_cc_m2(){\n\tif(crafty_cfg.enabled){\n\t\tvar cfg = {\n\t\t\tid: \"\",\n\t\t\tcore: {\n\t\t\t\tkey: crafty_cfg.key,\n\t\t\t\tpreformat: true,\n\t\t\t\tcapsformat: {\n\t\t\t\t\taddress: true,\n\t\t\t\t\torganization: true,\n\t\t\t\t\tcounty: true,\n\t\t\t\t\ttown: true\n\t\t\t\t}\n\t\t\t},\n\t\t\tdom: {},\n\t\t\tsort_fields: {\n\t\t\t\tactive: true,\n\t\t\t\tparent: 'div.admin__field'\n\t\t\t},\n\t\t\tsearch_type: crafty_cfg.searchbar_type,\n\t\t\thide_fields: crafty_cfg.hide_fields,\n\t\t\tauto_search: crafty_cfg.auto_search,\n\t\t\tclean_postsearch: crafty_cfg.clean_postsearch,\n\t\t\tonly_uk: true,\n\t\t\tsearch_wrapper: {\n\t\t\t\tbefore: '<div class=\"admin__field field\"><label class=\"label admin__field-label\">'+crafty_cfg.txt.search_label+'</label><div class=\"control admin__field-control\">',\n\t\t\t\tafter: '</div></div>'\n\t\t\t},\n\t\t\ttxt: crafty_cfg.txt,\n\t\t\terror_msg: crafty_cfg.error_msg\n\t\t};\n\t\tvar dom = {\n\t\t\tcompany:\t'[name=\"company\"]',\n\t\t\taddress_1:\t'[name=\"street[0]\"]',\n\t\t\taddress_2:\t'[name=\"street[1]\"]',\n\t\t\tpostcode:\t'[name=\"postcode\"]',\n\t\t\ttown:\t\t'[name=\"city\"]',\n\t\t\tcounty:\t\t'[name=\"region\"]',\n\t\t\tcounty_list:'[name=\"region_id\"]',\n\t\t\tcountry:\t'[name=\"country_id\"]'\n\t\t};\n\t\tvar postcode_elements = jQuery(dom.postcode);\n\t\tpostcode_elements.each(function(index){\n\t\t\tif(postcode_elements.eq(index).data('cc') != '1'){\n\t\t\t\tvar active_cfg = {};\n\t\t\t\tjQuery.extend(active_cfg, cfg);\n\t\t\t\tactive_cfg.id = \"m2_\"+cc_index;\n\t\t\t\tvar form = postcode_elements.eq(index).closest('fieldset');\n\t\t\t\tcc_index++;\n\t\t\t\tactive_cfg.dom = {\n\t\t\t\t\tcompany:\t\tform.find(dom.company),\n\t\t\t\t\taddress_1:\t\tform.find(dom.address_1),\n\t\t\t\t\taddress_2:\t\tform.find(dom.address_2),\n\t\t\t\t\tpostcode:\t\tpostcode_elements.eq(index),\n\t\t\t\t\ttown:\t\t\tform.find(dom.town),\n\t\t\t\t\tcounty:\t\t\tform.find(dom.county),\n\t\t\t\t\tcounty_list:\tform.find(dom.county_list),\n\t\t\t\t\tcountry:\t\tform.find(dom.country)\n\t\t\t\t};\n\t\t\t\tactive_cfg.dom.postcode.data('cc','1');\n\t\t\t\tvar cc_generic = new cc_ui_handler(active_cfg);\n\t\t\t\tcc_generic.activate();\n\t\t\t}\n\t\t});\n\t}\n}\n\nvar cc_index = 0;\nrequirejs(['jquery'], function( $ ) {\n\tjQuery( document ).ready(function() {\n\t\tif(crafty_cfg.enabled){\n\t\t\tsetInterval(activate_cc_m2,200);\n\t\t}\n\t});\n});\n","Craftyclicks_Ukpostcodelookup/form_integrations/cc_admin_order_create_customer.js":"\nvar cc_activate_flags = [];\nfunction activate_cc_m2(){\n\tif(crafty_cfg.enabled){\n\t\tvar cfg = {\n\t\t\tid: \"\",\n\t\t\tcore: {\n\t\t\t\tkey: crafty_cfg.key,\n\t\t\t\tpreformat: true,\n\t\t\t\tcapsformat: {\n\t\t\t\t\taddress: true,\n\t\t\t\t\torganization: true,\n\t\t\t\t\tcounty: true,\n\t\t\t\t\ttown: true\n\t\t\t\t}\n\t\t\t},\n\t\t\tdom: {},\n\t\t\tsort_fields: {\n\t\t\t\tactive: true,\n\t\t\t\tparent: 'div.admin__field'\n\t\t\t},\n\t\t\tsearch_type: crafty_cfg.searchbar_type,\n\t\t\thide_fields: crafty_cfg.hide_fields,\n\t\t\tauto_search: crafty_cfg.auto_search,\n\t\t\tclean_postsearch: crafty_cfg.clean_postsearch,\n\t\t\tonly_uk: true,\n\t\t\tsearch_wrapper: {\n\t\t\t\tbefore: '<div class=\"admin__field field\"><label class=\"label admin__field-label\">'+crafty_cfg.txt.search_label+'</label><div class=\"control admin__field-control\">',\n\t\t\t\tafter: '</div></div>'\n\t\t\t},\n\t\t\ttxt: crafty_cfg.txt,\n\t\t\terror_msg: crafty_cfg.error_msg\n\t\t};\n\t\tvar dom = {\n\t\t\tcompany:\t'[name$=\"_address][company]\"]',\n\t\t\taddress_1:\t'[name$=\"_address][street][0]\"]',\n\t\t\taddress_2:\t'[name$=\"_address][street][1]\"]',\n\t\t\tpostcode:\t'[name$=\"_address][postcode]\"]',\n\t\t\ttown:\t\t'[name$=\"_address][city]\"]',\n\t\t\tcounty:\t\t'[name$=\"_address][region]\"]',\n\t\t\tcounty_list:'[name$=\"_address][region_id]\"]',\n\t\t\tcountry:\t'select[name$=\"_address][country_id]\"]'\n\t\t};\n\t\tvar postcode_elements = jQuery(dom.postcode);\n\t\tpostcode_elements.each(function(index){\n\t\t\tif(postcode_elements.eq(index).data('cc') != '1'){\n\t\t\t\tvar active_cfg = {};\n\t\t\t\tjQuery.extend(active_cfg, cfg);\n\t\t\t\tactive_cfg.id = \"m2_\"+cc_index;\n\t\t\t\tvar form = postcode_elements.eq(index).closest('fieldset');\n\t\t\t\tconsole.log(form);\n\t\t\t\tcc_index++;\n\t\t\t\tactive_cfg.dom = {\n\t\t\t\t\tcompany:\t\tform.find(dom.company),\n\t\t\t\t\taddress_1:\t\tform.find(dom.address_1),\n\t\t\t\t\taddress_2:\t\tform.find(dom.address_2),\n\t\t\t\t\tpostcode:\t\tpostcode_elements.eq(index),\n\t\t\t\t\ttown:\t\t\tform.find(dom.town),\n\t\t\t\t\tcounty:\t\t\tform.find(dom.county),\n\t\t\t\t\tcounty_list:\tform.find(dom.county_list),\n\t\t\t\t\tcountry:\t\tform.find(dom.country)\n\t\t\t\t};\n\t\t\t\tactive_cfg.dom.postcode.data('cc','1');\n\t\t\t\tvar cc_generic = new cc_ui_handler(active_cfg);\n\t\t\t\tcc_generic.activate();\n\t\t\t}\n\t\t});\n\t}\n}\n\nvar cc_index = 0;\nrequirejs(['jquery'], function( $ ) {\n\tjQuery( document ).ready(function() {\n\t\tif(crafty_cfg.enabled){\n\t\t\tsetInterval(activate_cc_m2,200);\n\t\t}\n\t});\n});\n","Craftyclicks_Ukpostcodelookup/form_integrations/cc_admin_customer.js":"function activate_cc_m2(){\n\tif(crafty_cfg.enabled){\n\t\tvar cfg = {\n\t\t\tid: \"\",\n\t\t\tcore: {\n\t\t\t\tkey: crafty_cfg.key,\n\t\t\t\tpreformat: true,\n\t\t\t\tcapsformat: {\n\t\t\t\t\taddress: true,\n\t\t\t\t\torganization: true,\n\t\t\t\t\tcounty: true,\n\t\t\t\t\ttown: true\n\t\t\t\t}\n\t\t\t},\n\t\t\tdom: {},\n\t\t\tsort_fields: {\n\t\t\t\tactive: true,\n\t\t\t\tparent: 'div.admin__field',\n\t\t\t\t/*\tspecial structure workaround.\n\t\t\t\t\tcan't move easily the street objects (special parent?!)\n\t\t\t\t\tUse company to move country up to a proper position & leave the rest as usual\n\t\t\t\t*/\n\t\t\t\tcustom_order: ['company', 'country', 'company', 'postcode']\n\t\t\t},\n\t\t\tsearch_type: crafty_cfg.searchbar_type,\n\t\t\thide_fields: crafty_cfg.hide_fields,\n\t\t\tauto_search: crafty_cfg.auto_search,\n\t\t\tclean_postsearch: crafty_cfg.clean_postsearch,\n\t\t\tonly_uk: true,\n\t\t\tsearch_wrapper: {\n\t\t\t\tbefore: '<div class=\"admin__field\"><label class=\"admin__field-label\">'+crafty_cfg.txt.search_label+'</label><div class=\"admin__field-control\">',\n\t\t\t\tafter: '</div></div>'\n\t\t\t},\n\t\t\ttxt: crafty_cfg.txt,\n\t\t\terror_msg: crafty_cfg.error_msg\n\t\t};\n\t\tvar dom = {\n\t\t\tcompany:\t'[name$=\"[company]\"]',\n\t\t\taddress_1:\t'[name$=\"[street][0]\"]',\n\t\t\taddress_2:\t'[name$=\"[street][1]\"]',\n\t\t\tpostcode:\t'[name$=\"[postcode]\"]',\n\t\t\ttown:\t\t'[name$=\"[city]\"]',\n\t\t\tcounty:\t\t'[name$=\"[region]\"]',\n\t\t\tcounty_list:'select[name$=\"[region_id]\"]',\n\t\t\tcountry:\t'select[name$=\"[country_id]\"]'\n\t\t};\n\t\t// special for admin panel: search each potential element\n\t\tvar postcode_elements = jQuery(dom.postcode);\n\t\tpostcode_elements.each(function(index){\n\t\t\tif(postcode_elements.eq(index).data('cc') != '1'){\n\t\t\t\tvar active_cfg = {};\n\t\t\t\tjQuery.extend(active_cfg, cfg);\n\t\t\t\tactive_cfg.id = \"m2_\"+cc_index;\n\t\t\t\tvar form = postcode_elements.eq(index).closest('fieldset');\n\t\t\t\tcc_index++;\n\t\t\t\tactive_cfg.dom = {\n\t\t\t\t\tcompany:\t\tform.find(dom.company),\n\t\t\t\t\taddress_1:\t\tform.find(dom.address_1),\n\t\t\t\t\taddress_2:\t\tform.find(dom.address_2),\n\t\t\t\t\tpostcode:\t\tpostcode_elements.eq(index),\n\t\t\t\t\ttown:\t\t\tform.find(dom.town),\n\t\t\t\t\tcounty:\t\t\tform.find(dom.county),\n\t\t\t\t\tcounty_list:\tform.find(dom.county_list),\n\t\t\t\t\tcountry:\t\tform.find(dom.country)\n\t\t\t\t};\n\t\t\t\tactive_cfg.dom.postcode.data('cc','1');\n\t\t\t\tvar cc_generic = new cc_ui_handler(active_cfg);\n\t\t\t\tcc_generic.activate();\n\t\t\t}\n\t\t});\n\t}\n}\n\nvar cc_index = 0;\nrequirejs(['jquery'], function( $ ) {\n\tjQuery( document ).ready(function() {\n\t\tif(crafty_cfg.enabled){\n\t\t\tsetInterval(activate_cc_m2,200);\n\t\t}\n\t});\n});\n","Magento_ConfigurableProduct/js/configurable-type-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'Magento_Catalog/catalog/type-events',\n    'collapsible',\n    'Magento_Ui/js/modal/modal',\n    'mage/translate',\n    'domReady!'\n], function ($, productType) {\n    'use strict';\n\n    return {\n        $block: null,\n        hasVariations: null,\n        configurationSectionMessageHandler: (function () {\n            var title = $('[data-role=\"product-create-configuration-info\"]'),\n                buttons = $('[data-action=\"product-create-configuration-buttons\"]'),\n                newText = 'Configurations cannot be created for a standard product with downloadable files.' +\n                ' To create configurations, first remove all downloadable files.',\n                oldText = title.text();\n\n            return function (change) {\n                if (change) {\n                    title.text(newText);\n                    buttons.hide();\n                } else {\n                    title.text(oldText);\n                    buttons.show();\n                }\n            };\n        }()),\n\n        /**\n         * Set element disabled\n         * @param {Object} $element - jquery instance element\n         * @param {Bool} state\n         * @param {Bool} triggerEvent\n         * @private\n         */\n        _setElementDisabled: function ($element, state, triggerEvent) {\n            if (!$element.is('[data-locked]')) {\n                $element.prop('disabled', state);\n\n                if (triggerEvent) {\n                    $element.trigger('change');\n                }\n            }\n        },\n\n        /**\n         * Show\n         */\n        show: function () {\n            this.configurationSectionMessageHandler(false);\n        },\n\n        /**\n         * Hide\n         */\n        hide: function () {\n            this.configurationSectionMessageHandler(true);\n        },\n\n        /**\n         * Bind all\n         */\n        bindAll: function () {\n            $(document).on('changeConfigurableTypeProduct', function (event, isConfigurable) {\n                $(document).trigger('setTypeProduct', isConfigurable ?\n                    'configurable' :\n                    productType.type.init === 'configurable' ? 'simple' : productType.type.init\n                );\n            });\n            $(document).on('changeTypeProduct', this._initType.bind(this));\n        },\n\n        /**\n         * Init type\n         * @private\n         */\n        _initType: function () {\n\n            /*var suggestContainer = $('#product-template-suggest-container .action-dropdown > .action-toggle');\n\n\n            if (productType.type.current === 'configurable') {\n                this._setElementDisabled(suggestContainer.addClass('disabled'), true);\n                this._setElementDisabled($('#inventory_qty'), true);\n                this._setElementDisabled($('#inventory_stock_availability'), false);\n                this._setElementDisabled($('#qty'), true, true);\n                this._setElementDisabled($('#quantity_and_stock_status'), false, false);\n            } else {\n                this._setElementDisabled(suggestContainer.removeClass('disabled'), false);\n                this._setElementDisabled($('#inventory_qty'), false);\n                this._setElementDisabled($('#inventory_stock_availability'), true);\n                this._setElementDisabled($('#qty'), false, true);\n            }\n            */\n\n            /*if (['simple', 'virtual', 'configurable'].indexOf(productType.type.current) < 0) {\n                this.hide();\n            } else {\n                this.show();\n            }*/\n\n            this.show();\n        },\n\n        /**\n         * Constructor component\n         * @param {Object} data - this backend data\n         */\n        'Magento_ConfigurableProduct/js/configurable-type-handler': function (data) {\n            this.$block = $(data.blockId + ' input[name=\"attributes[]\"]');\n            this.hasVariations = data.hasVariations;\n\n            //advancedPricingHandler.init();\n            //priceTypeHandler.init();\n\n            /*if (productType.type.init === 'configurable' && !this.hasVariations) {\n                $(document).trigger('setTypeProduct', 'simple');\n            }*/\n            $(document).trigger('setTypeProduct', 'simple');\n\n            this.bindAll();\n            this._initType();\n        }\n    };\n});\n","Magento_ConfigurableProduct/js/configurable.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**************************** CONFIGURABLE PRODUCT **************************/\n/* global Product, optionsPrice */\ndefine([\n    'jquery',\n    'mage/template',\n    'mage/translate',\n    'prototype'\n], function (jQuery, mageTemplate) {\n    'use strict';\n\n    if (typeof Product == 'undefined') {\n        window.Product = {};\n    }\n\n    Product.Config = Class.create();\n    Product.Config.prototype = {\n        /**\n         * Initialize function.\n         *\n         * @param {Object} config\n         */\n        initialize: function (config) {\n            var separatorIndex, paramsStr, urlValues, i, childSettings, prevSetting, nextSetting;\n\n            // Magic preprocessing\n            // TODO MAGETWO-31539\n            config.taxConfig = {\n                showBothPrices: false,\n                inclTaxTitle: jQuery.mage.__('Incl. Tax')\n            };\n\n            this.config     = config;\n            this.taxConfig  = this.config.taxConfig;\n\n            if (config.containerId) {\n                this.settings   = $$('#' + config.containerId + ' ' + '.super-attribute-select');\n            } else {\n                this.settings   = $$('.super-attribute-select');\n            }\n            this.state      = new Hash();\n            this.priceTemplate = mageTemplate(this.config.template);\n            this.prices     = config.prices;\n            this.values     = {};\n\n            // Set default values from config\n            if (config.defaultValues) {\n                this.values = config.defaultValues;\n            }\n\n            // Overwrite defaults by url\n            separatorIndex = window.location.href.indexOf('#');\n\n            if (separatorIndex != -1) { //eslint-disable-line eqeqeq\n                paramsStr = window.location.href.substr(separatorIndex + 1);\n                urlValues = paramsStr.toQueryParams();\n\n                for (i in urlValues) { //eslint-disable-line guard-for-in\n                    this.values[i] = urlValues[i];\n                }\n            }\n\n            // Overwrite defaults by inputs values if needed\n            if (config.inputsInitialized) {\n                this.values = {};\n                this.settings.each(function (element) {\n                    var attributeId;\n\n                    if (element.value) {\n                        attributeId = element.id.replace(/[a-z]*/, '');\n                        this.values[attributeId] = element.value;\n                    }\n                }.bind(this));\n            }\n\n            // Put events to check select reloads\n            this.settings.each(function (element) {\n                Event.observe(element, 'change', this.configure.bind(this));\n            }.bind(this));\n\n            // fill state\n            this.settings.each(function (element) {\n                var attributeId = element.id.replace(/[a-z]*/, '');\n\n                if (attributeId && this.config.attributes[attributeId]) {\n                    element.config = this.config.attributes[attributeId];\n                    element.attributeId = attributeId;\n                    this.state[attributeId] = false;\n                }\n            }.bind(this));\n\n            // Init settings dropdown\n            childSettings = [];\n\n            for (i = this.settings.length - 1; i >= 0; i--) {\n                prevSetting = this.settings[i - 1] ? this.settings[i - 1] : false;\n                nextSetting = this.settings[i + 1] ? this.settings[i + 1] : false;\n\n                if (i === 0) {\n                    this.fillSelect(this.settings[i]);\n                } else {\n                    this.settings[i].disabled = true;\n                }\n                $(this.settings[i]).childSettings = childSettings.clone();\n                $(this.settings[i]).prevSetting   = prevSetting;\n                $(this.settings[i]).nextSetting   = nextSetting;\n                childSettings.push(this.settings[i]);\n            }\n\n            // Set values to inputs\n            this.configureForValues();\n            document.observe('dom:loaded', this.configureForValues.bind(this));\n        },\n\n        /**\n         * Configure for values.\n         */\n        configureForValues: function () {\n            if (this.values) {\n                this.settings.each(function (element) {\n                    var attributeId = element.attributeId;\n\n                    element.value = typeof this.values[attributeId] === 'undefined' ? '' : this.values[attributeId];\n                    this.configureElement(element);\n                }.bind(this));\n            }\n        },\n\n        /**\n         * @param {Object} event\n         */\n        configure: function (event) {\n            var element = Event.element(event);\n\n            this.configureElement(element);\n        },\n\n        /**\n         * @param {Object} element\n         */\n        configureElement: function (element) {\n            this.reloadOptionLabels(element);\n\n            if (element.value) {\n                this.state[element.config.id] = element.value;\n\n                if (element.nextSetting) {\n                    element.nextSetting.disabled = false;\n                    this.fillSelect(element.nextSetting);\n                    this.resetChildren(element.nextSetting);\n                }\n            } else {\n                this.resetChildren(element);\n            }\n            this.reloadPrice();\n        },\n\n        /**\n         * @param {Object} element\n         */\n        reloadOptionLabels: function (element) {\n            var selectedPrice = 0,\n                option, i;\n\n            if (element.options[element.selectedIndex] && element.options[element.selectedIndex].config) {\n                option = element.options[element.selectedIndex].config;\n                selectedPrice = parseFloat(this.config.optionPrices[option.allowedProducts[0]].finalPrice.amount);\n            }\n            element.setAttribute('price', selectedPrice);\n\n            for (i = 0; i < element.options.length; i++) {\n                if (element.options[i].config) {\n                    element.options[i].setAttribute('price', selectedPrice);\n                    element.options[i].setAttribute('summarizePrice', 0);\n                    element.options[i].text = this.getOptionLabel(element.options[i].config, selectedPrice);\n                }\n            }\n        },\n\n        /* eslint-disable max-depth */\n        /**\n         * @param {Object} element\n         */\n        resetChildren: function (element) {\n            var i;\n\n            if (element.childSettings) {\n                for (i = 0; i < element.childSettings.length; i++) {\n                    element.childSettings[i].selectedIndex = 0;\n                    element.childSettings[i].disabled = true;\n\n                    if (element.config) {\n                        this.state[element.config.id] = false;\n                    }\n                }\n            }\n        },\n\n        /**\n         * @param {Object} element\n         */\n        fillSelect: function (element) {\n            var attributeId = element.id.replace(/[a-z]*/, ''),\n                options = this.getAttributeOptions(attributeId),\n                prevConfig = false,\n                index = 1,\n                i, j, allowedProducts;\n\n            this.clearSelect(element);\n            element.options[0] = new Option('', '');\n            element.options[0].innerHTML = this.config.chooseText;\n\n            if (element.prevSetting) {\n                prevConfig = element.prevSetting.options[element.prevSetting.selectedIndex];\n            }\n\n            if (options) {\n                for (i = 0; i < options.length; i++) {\n                    allowedProducts = [];\n\n                    if (prevConfig) {\n                        for (j = 0; j < options[i].products.length; j++) {\n                            if (prevConfig.config.allowedProducts &&\n                                prevConfig.config.allowedProducts.indexOf(options[i].products[j]) > -1\n                            ) {\n                                allowedProducts.push(options[i].products[j]);\n                            }\n                        }\n                    } else {\n                        allowedProducts = options[i].products.clone();\n                    }\n\n                    if (allowedProducts.size() > 0) {\n                        options[i].allowedProducts = allowedProducts;\n                        element.options[index] = new Option(this.getOptionLabel(options[i]), options[i].id);\n\n                        if (typeof options[i].price != 'undefined') {\n                            element.options[index].setAttribute('price', options[i].price);\n                        }\n                        element.options[index].config = options[i];\n                        index++;\n                    }\n                }\n            }\n        },\n\n        //eslint-enable max-depth\n        /**\n         * @param {Object} option\n         */\n        getOptionLabel: function (option) {\n            return option.label;\n        },\n\n        /**\n         * @param {*} price\n         * @param {Boolean} showSign\n         * @return {String}\n         */\n        formatPrice: function (price, showSign) {\n            var str = '',\n                roundedPrice;\n\n            price = parseFloat(price);\n\n            if (showSign) {\n                if (price < 0) {\n                    str += '-';\n                    price = -price;\n                } else {\n                    str += '+';\n                }\n            }\n\n            roundedPrice = Number(Math.round(price + 'e+2') + 'e-2').toString();\n\n            if (this.prices && this.prices[roundedPrice]) {\n                str += this.prices[roundedPrice];\n            } else {\n                str += this.priceTemplate({\n                    data: {\n                        price: price.toFixed(2)\n                    }\n                });\n            }\n\n            return str;\n        },\n\n        /**\n         * @param {Object} element\n         */\n        clearSelect: function (element) {\n            var i;\n\n            for (i = element.options.length - 1; i >= 0; i--) {\n                element.remove(i);\n            }\n        },\n\n        /**\n         * @param {*} attributeId\n         * @return {*|undefined}\n         */\n        getAttributeOptions: function (attributeId) {\n            if (this.config.attributes[attributeId]) {\n                return this.config.attributes[attributeId].options;\n            }\n        },\n\n        /**\n         * Reload price.\n         *\n         * @return {undefined|Number}\n         */\n        reloadPrice: function () {\n            var price = 0,\n                oldPrice = 0,\n                inclTaxPrice = 0,\n                exclTaxPrice = 0,\n                i, selected;\n\n            if (this.config.disablePriceReload) {\n                return undefined;\n            }\n\n            for (i = this.settings.length - 1; i >= 0; i--) {\n                selected = this.settings[i].options[this.settings[i].selectedIndex];\n\n                if (selected.config) {\n                    price += parseFloat(selected.config.price);\n                    oldPrice += parseFloat(selected.config.oldPrice);\n                    inclTaxPrice += parseFloat(selected.config.inclTaxPrice);\n                    exclTaxPrice += parseFloat(selected.config.exclTaxPrice);\n                }\n            }\n\n            optionsPrice.changePrice(\n                'config', {\n                    'price': price,\n                    'oldPrice': oldPrice,\n                    'inclTaxPrice': inclTaxPrice,\n                    'exclTaxPrice': exclTaxPrice\n                }\n            );\n            optionsPrice.reload();\n\n            return price;\n        },\n\n        /**\n         * Reload old price.\n         */\n        reloadOldPrice: function () {\n            var price, i, selected;\n\n            if (this.config.disablePriceReload) {\n                return;\n            }\n\n            if ($('old-price-' + this.config.productId)) {\n\n                price = parseFloat(this.config.oldPrice);\n\n                for (i = this.settings.length - 1; i >= 0; i--) {\n                    selected = this.settings[i].options[this.settings[i].selectedIndex];\n\n                    if (selected.config) {\n                        price += parseFloat(selected.config.price);\n                    }\n                }\n\n                if (price < 0) {\n                    price = 0;\n                }\n                price = this.formatPrice(price);\n\n                if ($('old-price-' + this.config.productId)) {\n                    $('old-price-' + this.config.productId).innerHTML = price;\n                }\n\n            }\n        }\n    };\n});\n","Magento_ConfigurableProduct/js/variations/variations.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiComponent',\n    'jquery',\n    'ko',\n    'underscore',\n    'Magento_Ui/js/modal/alert',\n    'uiRegistry',\n    'mage/translate'\n], function (Component, $, ko, _, alert, registry, $t) {\n    'use strict';\n\n    /**\n     * @param {*} message\n     * @constructor\n     */\n    function UserException(message) {\n        this.message = message;\n        this.name = 'UserException';\n    }\n    UserException.prototype = Object.create(Error.prototype);\n\n    return Component.extend({\n        defaults: {\n            opened: false,\n            attributes: [],\n            usedAttributes: [],\n            attributeCodes: [],\n            attributesData: {},\n            productMatrix: [],\n            variations: [],\n            formSaveParams: [],\n            productAttributes: [],\n            disabledAttributes: [],\n            fullAttributes: [],\n            rowIndexToEdit: false,\n            productAttributesMap: null,\n            value: [],\n            modules: {\n                associatedProductGrid: '${ $.configurableProductGrid }',\n                wizardButtonElement: '${ $.wizardModalButtonName }',\n                formElement: '${ $.formName }',\n                attributeSetHandlerModal: '${ $.attributeSetHandler }'\n            },\n            imports: {\n                attributeSetName: '${ $.provider }:configurableNewAttributeSetName',\n                attributeSetId: '${ $.provider }:configurableExistingAttributeSetId',\n                attributeSetSelection: '${ $.provider }:configurableAffectedAttributeSet',\n                productPrice: '${ $.provider }:data.product.price'\n            },\n            links: {\n                value: '${ $.provider }:${ $.dataScopeVariations }',\n                usedAttributes: '${ $.provider }:${ $.dataScopeAttributes }',\n                attributesData: '${ $.provider }:${ $.dataScopeAttributesData }',\n                attributeCodes: '${ $.provider }:${ $.dataScopeAttributeCodes }',\n                skeletonAttributeSet: '${ $.provider }:data.new-variations-attribute-set-id'\n            }\n        },\n\n        /** @inheritdoc */\n        initialize: function () {\n            this._super();\n\n            this.changeButtonWizard();\n            this.initProductAttributesMap();\n            this.disableConfigurableAttributes(this.productAttributes);\n        },\n\n        /** @inheritdoc */\n        initObservable: function () {\n            this._super().observe(\n                'actions opened attributes productMatrix value usedAttributes attributesData attributeCodes'\n            );\n\n            return this;\n        },\n\n        /**\n         * @param {Object} product\n         * @return {Object}\n         * @private\n         */\n        _makeProduct: function (product) {\n            var productId = product['entity_id'] || product.productId || null,\n                attributes = _.pick(product, this.attributes.pluck('code')),\n                options = _.map(attributes, function (option, attribute) {\n                    var oldOptions = _.findWhere(this.attributes(), {\n                            code: attribute\n                        }).options,\n                        result;\n\n                    if (_.isFunction(oldOptions)) {\n                        result = oldOptions.findWhere({\n                            value: option\n                        });\n                    } else {\n                        result = _.findWhere(oldOptions, {\n                            value: option\n                        });\n                    }\n\n                    return result;\n                }.bind(this));\n\n            return {\n                attribute: JSON.stringify(attributes),\n                editable: false,\n                images: {\n                    preview: product['thumbnail_src']\n                },\n                name: product.name || product.sku,\n                options: options,\n                price: parseFloat(Math.round(product.price.replace(/[^\\d.]+/g, '') + 'e+4') + 'e-4').toFixed(4),\n                productId: productId,\n                productUrl: this.buildProductUrl(productId),\n                quantity: product.quantity || null,\n                sku: product.sku,\n                status: product.status === undefined ? 1 : parseInt(product.status, 10),\n                variationKey: this.getVariationKey(options),\n                weight: product.weight || null\n            };\n        },\n\n        /**\n         * @param {String} name\n         * @return {String|Number|Array}\n         */\n        getProductValue: function (name) {\n            name = name.split('/').join('][');\n\n            return $('[name=\"product[' + name + ']\"]:enabled:not(.ignore-validate)', this.productForm).val();\n        },\n\n        /**\n         * @param {Object} data\n         * @param {String} field\n         * @return {String}\n         */\n        getRowId: function (data, field) {\n            var key = data.variationKey;\n\n            return 'variations-matrix-' + key + '-' + field;\n        },\n\n        /**\n         * @param {Object} variation\n         * @param {String} field\n         * @return {String}\n         */\n        getVariationRowName: function (variation, field) {\n            var result;\n\n            if (variation.productId) {\n                result = 'configurations[' + variation.productId + '][' + field.split('/').join('][') + ']';\n            } else {\n                result = 'variations-matrix[' + variation.variationKey + '][' + field.split('/').join('][') + ']';\n            }\n\n            return result;\n        },\n\n        /**\n         * @param {*} variations\n         * @param {*} attributes\n         */\n        render: function (variations, attributes) {\n            this.changeButtonWizard();\n            this.populateVariationMatrix(variations);\n            this.attributes(attributes);\n            this.disableConfigurableAttributes(attributes);\n            this.handleValue(variations);\n            this.handleAttributes();\n        },\n\n        /**\n         * Change button wizard.\n         */\n        changeButtonWizard: function () {\n            if (this.variations.length) {\n                this.wizardButtonElement().title(this.wizardModalButtonTitle);\n            }\n        },\n\n        /**\n         * @param {Array} variations\n         */\n        handleValue: function (variations) {\n            var tmpArray = [];\n\n            _.each(variations, function (variation) {\n                var attributes = _.reduce(variation.options, function (memo, option) {\n                    var attribute = {};\n\n                    attribute[option['attribute_code']] = option.value;\n\n                    return _.extend(memo, attribute);\n                }, {}),\n                    gallery = {\n                        images: {}\n                    },\n                    types = {};\n\n                _.each(variation.images.images, function (image) {\n                    gallery.images[image['file_id']] = {\n                        position: image.position,\n                        file: image.file,\n                        disabled: image.disabled,\n                        label: image.label || ''\n                    };\n                    _.each(image.galleryTypes, function (type) {\n                        types[type] = image.file;\n                    });\n                }, this);\n\n                tmpArray.push(_.extend(variation, types, {\n                    productId: variation.productId || null,\n                    name: variation.name || variation.sku,\n                    priceCurrency: this.currencySymbol,\n                    weight: variation.weight,\n                    attribute: JSON.stringify(attributes),\n                    variationKey: this.getVariationKey(variation.options),\n                    editable: variation.editable === undefined ? 0 : 1,\n                    productUrl: this.buildProductUrl(variation.productId),\n                    status: variation.status === undefined ? 1 : parseInt(variation.status, 10),\n                    newProduct: variation.productId ? 0 : 1,\n                    'media_gallery': gallery\n                }));\n            }, this);\n\n            this.value(tmpArray);\n        },\n\n        /**\n         * Handle attributes.\n         */\n        handleAttributes: function () {\n            var tmpArray = [],\n                codesArray = [],\n                tmpOptions = {},\n                option = {},\n                position = 0,\n                values = {};\n\n            _.each(this.attributes(), function (attribute) {\n                tmpArray.push(attribute.id);\n                codesArray.push(attribute.code);\n                values = {};\n                _.each(attribute.chosen, function (row) {\n                    values[row.value] = {\n                        'include': '1',\n                        'value_index': row.value\n                    };\n                }, this);\n                option = {\n                    'attribute_id': attribute.id,\n                    'code': attribute.code,\n                    'label': attribute.label,\n                    'position': position,\n                    'values': values\n                };\n                tmpOptions[attribute.id] = option;\n                position++;\n            }, this);\n\n            this.attributesData(tmpOptions);\n            this.usedAttributes(tmpArray);\n            this.attributeCodes(codesArray);\n        },\n\n        /**\n         * Get attributes options\n         * @see use in matrix.phtml\n         *\n         * @returns {Array}\n         */\n        getAttributesOptions: function () {\n            return this.showVariations() ? this.productMatrix()[0].options : [];\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        showVariations: function () {\n            return this.productMatrix().length > 0;\n        },\n\n        /**\n         * @param {Array} variations\n         */\n        populateVariationMatrix: function (variations) {\n            this.productMatrix([]);\n            _.each(variations, function (variation) {\n                var attributes = _.reduce(variation.options, function (memo, option) {\n                    var attribute = {};\n\n                    attribute[option['attribute_code']] = option.value;\n\n                    return _.extend(memo, attribute);\n                }, {});\n\n                this.productMatrix.push(_.extend(variation, {\n                    productId: variation.productId || null,\n                    name: variation.name || variation.sku,\n                    weight: variation.weight,\n                    attribute: JSON.stringify(attributes),\n                    variationKey: this.getVariationKey(variation.options),\n                    editable: variation.editable === undefined ? !variation.productId : variation.editable,\n                    productUrl: this.buildProductUrl(variation.productId),\n                    status: variation.status === undefined ? 1 : parseInt(variation.status, 10)\n                }));\n            }, this);\n        },\n\n        /**\n         * @param {*} productId\n         */\n        buildProductUrl: function (productId) {\n            return this.productUrl.replace('%id%', productId);\n        },\n\n        /**\n         * @param {Object} options\n         * @return {String}\n         */\n        getVariationKey: function (options) {\n            return _.pluck(options, 'value').sort().join('-');\n        },\n\n        /**\n         * @param {*} options\n         * @return {*|null}\n         */\n        getProductIdByOptions: function (options) {\n            return this.productAttributesMap[this.getVariationKey(options)] || null;\n        },\n\n        /**\n         * Init product attributes map\n         */\n        initProductAttributesMap: function () {\n            if (this.productAttributesMap === null) {\n                this.productAttributesMap = {};\n                _.each(this.variations, function (product) {\n                    this.productAttributesMap[this.getVariationKey(product.options)] = product.productId;\n                }.bind(this));\n            }\n        },\n\n        /**\n         * @param {Array} attributes\n         */\n        disableConfigurableAttributes: function (attributes) {\n            var element;\n\n            _.each(this.disabledAttributes, function (attribute) {\n                registry.get('index = ' + attribute).disabled(false);\n            });\n            this.disabledAttributes = [];\n\n            _.each(attributes, function (attribute) {\n                element = registry.get('index = ' + attribute.code);\n\n                if (!_.isUndefined(element)) {\n                    element.disabled(true);\n                    this.disabledAttributes.push(attribute.code);\n                }\n            }, this);\n        },\n\n        /**\n         * Get currency symbol\n         * @returns {String}\n         */\n        getCurrencySymbol: function () {\n            return this.currencySymbol;\n        },\n\n        /**\n         * Chose action for the form save button\n         */\n        saveFormHandler: function () {\n            this.serializeData();\n\n            if (this.checkForNewAttributes()) {\n                this.formSaveParams = arguments;\n                this.attributeSetHandlerModal().openModal();\n            } else {\n                this.formElement().save(arguments[0], arguments[1]);\n            }\n        },\n\n        /**\n         * Serialize data for specific form fields\n         *\n         * Get data from outdated fields, serialize it and produce new form fields.\n         *\n         * Outdated fields:\n         *   - configurable-matrix;\n         *   - associated_product_ids.\n         *\n         * New fields:\n         *   - configurable-matrix-serialized;\n         *   - associated_product_ids_serialized.\n         */\n        serializeData: function () {\n            this.source.data['configurable-matrix-serialized'] =\n                JSON.stringify(this.source.data['configurable-matrix']);\n\n            delete this.source.data['configurable-matrix'];\n\n            this.source.data['associated_product_ids_serialized'] =\n                JSON.stringify(this.source.data['associated_product_ids']);\n\n            delete this.source.data['associated_product_ids'];\n        },\n\n        /**\n         * Check for newly added attributes\n         * @returns {Boolean}\n         */\n        checkForNewAttributes: function () {\n            var element, newAttributes = false;\n\n            _.each(this.source.get('data.attribute_codes'), function (attribute) {\n                element = registry.get('index = ' + attribute);\n\n                if (_.isUndefined(element)) {\n                    newAttributes = true;\n                }\n            }, this);\n\n            return newAttributes;\n        },\n\n        /**\n         * New attributes handler\n         * @returns {Boolean}\n         */\n        addNewAttributeSetHandler: function () {\n            var choosenAttributeSetOption;\n\n            this.formElement().validate();\n\n            if (this.formElement().source.get('params.invalid') === false) {\n                choosenAttributeSetOption = this.attributeSetSelection;\n\n                if (choosenAttributeSetOption === 'new') {\n                    this.createNewAttributeSet();\n\n                    return false;\n                }\n\n                if (choosenAttributeSetOption === 'existing') {\n                    this.set(\n                        'skeletonAttributeSet',\n                        this.attributeSetId\n                    );\n                }\n\n                this.closeDialogAndProcessForm();\n\n                return true;\n            }\n        },\n\n        /**\n         * Handles new attribute set creation\n         * @returns {Boolean}\n         */\n        createNewAttributeSet: function () {\n            var messageBoxElement = registry.get('index = affectedAttributeSetError');\n\n            messageBoxElement.visible(false);\n\n            $.ajax({\n                type: 'POST',\n                url: this.attributeSetCreationUrl,\n                data: {\n                    gotoEdit: 1,\n                    'attribute_set_name': this.attributeSetName,\n                    'skeleton_set': this.skeletonAttributeSet,\n                    'return_session_messages_only': 1\n                },\n                dataType: 'json',\n                showLoader: true,\n                context: this\n            }).success(function (data) {\n                if (!data.error) {\n                    this.set(\n                        'skeletonAttributeSet',\n                        data.id\n                    );\n                    messageBoxElement.content(data.messages);\n                    messageBoxElement.visible(true);\n                    this.closeDialogAndProcessForm();\n                } else {\n                    messageBoxElement.content(data.messages);\n                    messageBoxElement.visible(true);\n                }\n\n                return false;\n            }).error(function (xhr) {\n                if (xhr.statusText === 'abort') {\n                    return;\n                }\n\n                alert({\n                    content: $t('Something went wrong.')\n                });\n            });\n\n            return false;\n        },\n\n        /**\n         * Closes attribute set handler modal and process product form\n         */\n        closeDialogAndProcessForm: function () {\n            this.attributeSetHandlerModal().closeModal();\n            this.formElement().save(this.formSaveParams[0], this.formSaveParams[1]);\n        },\n\n        /**\n         * Retrieves product price\n         * @returns {*}\n         */\n        getProductPrice: function () {\n            return this.productPrice;\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/variations/product-grid.js":"// jscs:disable requireDotNotation\n/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiComponent',\n    'jquery',\n    'Magento_Ui/js/core/app',\n    'underscore',\n    'notification',\n    'mage/translate'\n], function (Component, $, bootstrap, _) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            productsGridUrl: null,\n            productAttributes: [],\n            productsModal: null,\n            button: '',\n            gridSelector: '[data-grid-id=associated-products-container]',\n            modules: {\n                productsFilter: '${ $.productsFilter }',\n                productsProvider: '${ $.productsProvider }',\n                productsMassAction: '${ $.productsMassAction }',\n                productsColumns: '${ $.productsColumns }',\n                variationsComponent: '${ $.configurableVariations }'\n            },\n            listens: {\n                '${ $.productsProvider }:data': '_showMessageAssociatedGrid _handleManualGridOpening',\n                '${ $.productsMassAction }:selected': '_handleManualGridSelect',\n                '${ $.configurableVariations }:productMatrix': '_showButtonAddManual _switchProductType'\n            }\n        },\n\n        /**\n         * Initialize\n         *\n         * @param {Array} options\n         */\n        initialize: function (options) {\n            this._super(options);\n            this.productsModal = $(this.gridSelector).modal({\n                title: $.mage.__('Select Associated Product'),\n                type: 'slide',\n                buttons: [\n                    {\n                        text: $.mage.__('Cancel'),\n\n                        /** Close modal */\n                        click: function () {\n                            this.closeModal();\n                        }\n                    }, {\n                        text: $.mage.__('Done'),\n                        click: this.close.bind(this, null)\n                    }\n                ]\n            });\n\n            this.productsProvider(function () {\n                this.productsModal.notification();\n            }.bind(this));\n            this.variationsComponent(function (variation) {\n                this._showButtonAddManual(variation.productMatrix());\n            }.bind(this));\n\n            this._initGrid = _.once(this._initGrid);\n            this._switchProductType = _.wrap(this._switchProductType.bind(this), function (func, params) {\n                if (!!params.length !== !!this.init) {\n                    this.init = !!params.length;\n                    func(params);\n                }\n            }.bind(this._switchProductType));\n        },\n\n        /**\n         * Initial observerable\n         * @returns {*}\n         */\n        initObservable: function () {\n            this._super().observe('button');\n\n            return this;\n        },\n\n        /**\n         * init Grid\n         * @private\n         */\n        _initGrid: function (filterData) {\n            $.ajax({\n                type: 'GET',\n                url: this._buildGridUrl(filterData),\n                context: $('body')\n            }).success(function (data) {\n                bootstrap(JSON.parse(data));\n            });\n        },\n\n        /**\n         * Select different product in configurations section\n         * @see configurable_associated_product_listing.xml\n         * @param {Integer} rowIndex\n         */\n        selectProduct: function (rowIndex) {\n            this.close(rowIndex);\n        },\n\n        /**\n         * Open\n         * @param {Object} filterData - filter data\n         * @param {Object|*} filterData.filters - attribute name\n         * @param {Object|*} filterData.filters_modifier - modifier value\n         * @param {String} callbackName\n         * @param {Boolean} showMassActionColumn\n         */\n        open: function (filterData, callbackName, showMassActionColumn) {\n            this.callbackName = callbackName;\n            this.productsMassAction(function (massActionComponent) {\n                this.productsColumns().elems().each(function (rowElement) {\n                    rowElement.disableAction = showMassActionColumn;\n                });\n                massActionComponent.visible = showMassActionColumn;\n            }.bind(this));\n            this._setFilter(filterData);\n            this._initGrid(filterData);\n            this.productsModal.trigger('openModal');\n        },\n\n        /**\n         * Close\n         */\n        close: function (rowIndex) {\n            try {\n                if (this.productsMassAction().selected.getLength()) {\n                    this.variationsComponent()[this.callbackName](this.productsMassAction()\n                        .selected.map(this.getProductById.bind(this)));\n                    this.productsMassAction().deselectAll();\n                } else if (!_.isNull(rowIndex)) {\n                    this.variationsComponent()[this.callbackName]([this.getProductByIndex(rowIndex)]);\n                }\n                this.productsModal.trigger('closeModal');\n            } catch (e) {\n                if (e.name === 'UserException') {\n                    this.productsModal.notification('clear');\n                    this.productsModal.notification('add', {\n                        message: e.message,\n                        messageContainer: this.gridSelector\n                    });\n                } else {\n                    throw e;\n                }\n            }\n        },\n\n        /**\n         * Get product by id\n         * @param {Integer} productId\n         * @returns {*}\n         */\n        getProductById: function (productId) {\n            return _.findWhere(this.productsProvider().data.items, {\n                'entity_id': productId\n            });\n        },\n\n        /**\n         * Get product\n         * @param {Integer} rowIndex\n         * @returns {*}\n         */\n        getProductByIndex: function (rowIndex) {\n            return this.productsProvider().data.items[rowIndex];\n        },\n\n        /**\n         * Build grid url\n         * @private\n         */\n        _buildGridUrl: function (filterData) {\n            var params = '?' + $.param({\n                'filters': filterData.filters,\n                'attributes_codes': this._getAttributesCodes(),\n                'filters_modifier': filterData['filters_modifier']\n            });\n\n            return this.productsGridUrl + params;\n        },\n\n        /**\n         * Show button add manual\n         * @param {Array} variations\n         * @returns {*}\n         * @private\n         */\n        _showButtonAddManual: function (variations) {\n            return this.button(variations.length);\n        },\n\n        /**\n         * @param {Array} variations\n         * @private\n         */\n        _switchProductType: function (variations) {\n            $(document).trigger('changeConfigurableTypeProduct', variations.length);\n        },\n\n        /**\n         * Get attributes codes used for configurable\n         * @private\n         */\n        _getAttributesCodes: function () {\n            return this.variationsComponent().attributes.pluck('code');\n        },\n\n        /**\n         * Show data associated grid\n         * @private\n         */\n        _showMessageAssociatedGrid: function (data) {\n            this.productsModal.notification('clear');\n\n            if (data.items.length) {\n                this.productsModal.notification('add', {\n                    message: $.mage.__('Choose a new product to delete and replace the current product configuration.'),\n                    messageContainer: this.gridSelector\n                });\n            } else {\n                this.productsModal.notification('add', {\n                    message: $.mage.__('For better results, add attributes and attribute values to your products.'),\n                    messageContainer: this.gridSelector\n                });\n            }\n        },\n\n        /**\n         * Show manually grid\n         */\n        showManuallyGrid: function () {\n            var filterModifier = _.mapObject(_.object(this._getAttributesCodes(), []), function () {\n                    return {\n                        'condition_type': 'notnull'\n                    };\n                }),\n                usedProductIds = _.values(this.variationsComponent().productAttributesMap);\n\n            if (usedProductIds && usedProductIds.length > 0) {\n                filterModifier['entity_id'] = {\n                    'condition_type': 'nin', value: usedProductIds\n                };\n            }\n\n            this.open(\n                {\n                    'filters_modifier': filterModifier\n                },\n                'appendProducts',\n                true\n            );\n        },\n\n        /**\n         * Handle manual grid after opening\n         * @private\n         */\n        _handleManualGridOpening: function (data) {\n            if (data.items.length && this.callbackName == 'appendProducts') { //eslint-disable-line eqeqeq\n                this.productsColumns().elems().each(function (rowElement) {\n                    rowElement.disableAction = true;\n                });\n\n                this._disableRows(data.items);\n            }\n        },\n\n        /**\n         * Disable rows in grid for products with the same variation key\n         *\n         * @param {Array} items\n         * @param {Array} selectedVariationKeys\n         * @param {Array} selected\n         * @private\n         */\n        _disableRows: function (items, selectedVariationKeys, selected) {\n            selectedVariationKeys = selectedVariationKeys === undefined ? [] : selectedVariationKeys;\n            selected = selected === undefined ? [] : selected;\n            this.productsMassAction(function (massaction) {\n                var configurableVariationKeys = _.union(\n                        selectedVariationKeys,\n                        _.pluck(this.variationsComponent().productMatrix(), 'variationKey')\n                    ),\n                    variationKeyMap = this._getVariationKeyMap(items),\n                    rowsForDisable = _.keys(_.pick(\n                        variationKeyMap,\n                        function (variationKey) {\n                            return configurableVariationKeys.indexOf(variationKey) !== -1;\n                        }\n                    ));\n\n                massaction.disabled(_.difference(rowsForDisable, selected));\n            }.bind(this));\n        },\n\n        /**\n         * @private\n         */\n        _handleManualGridSelect: function (selected) {\n            var selectedRows, selectedVariationKeys;\n\n            if (this.callbackName == 'appendProducts') { //eslint-disable-line eqeqeq\n                selectedRows = _.filter(this.productsProvider().data.items, function (row) {\n                    return selected.indexOf(row['entity_id']) !== -1;\n                });\n                selectedVariationKeys = _.values(this._getVariationKeyMap(selectedRows));\n                this._disableRows(this.productsProvider().data.items, selectedVariationKeys, selected);\n            }\n        },\n\n        /**\n         * Get variation key map used in manual grid.\n         *\n         * @param {Object} items\n         * @returns {Array} [{entity_id: variation-key}, ...]\n         * @private\n         */\n        _getVariationKeyMap: function (items) {\n            this._variationKeyMap = {};\n\n            _.each(items, function (row) {\n                this._variationKeyMap[row['entity_id']] = _.values(\n                    _.pick(row, this._getAttributesCodes())\n                ).sort().join('-');\n\n            }, this);\n\n            return this._variationKeyMap;\n        },\n\n        /**\n         * Set filter\n         * @private\n         */\n        _setFilter: function (filterData) {\n            this.productsProvider(function (provider) {\n                provider.params['filters_modifier'] = filterData['filters_modifier'];\n                provider.params['attributes_codes'] = this._getAttributesCodes();\n            }.bind(this));\n\n            this.productsFilter(function (filter) {\n                filter.set('filters', _.extend({\n                    'filters_modifier': filterData['filters_modifier']\n                }, filterData.filters))\n                    .apply();\n            });\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/variations/paging/sizes.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/grid/paging/sizes'\n], function (Sizes) {\n    'use strict';\n\n    return Sizes.extend({\n        defaults: {\n            excludedOptions: ['100', '200']\n        },\n\n        /**\n         * @override\n         */\n        initialize: function () {\n            this._super();\n\n            this.excludedOptions.forEach(function (excludedOption) {\n                delete this.options[excludedOption];\n            }, this);\n            this.updateArray();\n\n            return this;\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/variations/steps/select_attributes.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiComponent',\n    'jquery',\n    'underscore',\n    'mage/translate'\n], function (Component, $, _) {\n    'use strict';\n\n    /**\n     * @param {Function} provider\n     */\n    var initNewAttributeListener = function (provider) {\n        $('[data-role=product-variations-matrix]').on('add', function () {\n            provider().reload();\n        });\n    };\n\n    return Component.extend({\n        attributesLabels: {},\n        stepInitialized: false,\n        defaults: {\n            modules: {\n                multiselect: '${ $.multiselectName }',\n                attributeProvider: '${ $.providerName }'\n            },\n            listens: {\n                '${ $.multiselectName }:selected': 'doSelectedAttributesLabels',\n                '${ $.multiselectName }:rows': 'doSelectSavedAttributes'\n            },\n            notificationMessage: {\n                text: null,\n                error: null\n            },\n            selectedAttributes: []\n        },\n\n        /** @inheritdoc */\n        initialize: function () {\n            this._super();\n            this.selected = [];\n\n            initNewAttributeListener(this.attributeProvider);\n        },\n\n        /** @inheritdoc */\n        initObservable: function () {\n            this._super().observe(['selectedAttributes']);\n\n            return this;\n        },\n\n        /**\n         * @param {Object} wizard\n         */\n        render: function (wizard) {\n            this.wizard = wizard;\n            this.setNotificationMessage();\n        },\n\n        /**\n         * Set notification message.\n         */\n        setNotificationMessage: function () {\n            /*eslint-disable max-len*/\n            var msg = $.mage.__('When you remove or add an attribute, we automatically update all configurations and you will need to recreate current configurations manually.');\n\n            /*eslint-enable max-len*/\n\n            if (this.mode === 'edit') {\n                this.wizard.setNotificationMessage(msg);\n            }\n        },\n\n        /**\n         * Do select saved attributes.\n         */\n        doSelectSavedAttributes: function () {\n            if (this.stepInitialized === false) {\n                this.stepInitialized = true;\n                //cache attributes labels, which can be present on the 2nd page\n                _.each(this.initData.attributes, function (attribute) {\n                    this.attributesLabels[attribute.id] = attribute.label;\n                }.bind(this));\n                this.multiselect().selected(_.pluck(this.initData.attributes, 'id'));\n            }\n        },\n\n        /**\n         * @param {*} selected\n         */\n        doSelectedAttributesLabels: function (selected) {\n            var labels = [];\n\n            this.selected = selected;\n            _.each(selected, function (attributeId) {\n                var attribute;\n\n                if (!this.attributesLabels[attributeId]) {\n                    attribute = _.findWhere(this.multiselect().rows(), {\n                        'attribute_id': attributeId\n                    });\n\n                    if (attribute) {\n                        this.attributesLabels[attribute['attribute_id']] = attribute['frontend_label'];\n                    }\n                }\n                labels.push(this.attributesLabels[attributeId]);\n            }.bind(this));\n            this.selectedAttributes(labels.join(', '));\n        },\n\n        /**\n         * @param {Object} wizard\n         */\n        force: function (wizard) {\n            wizard.data.attributesIds = this.multiselect().selected;\n\n            if (!wizard.data.attributesIds() || wizard.data.attributesIds().length === 0) {\n                throw new Error($.mage.__('Please select attribute(s).'));\n            }\n            this.setNotificationMessage();\n        },\n\n        /**\n         * Back.\n         */\n        back: function () {\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/variations/steps/summary.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiComponent',\n    'jquery',\n    'ko',\n    'underscore',\n    'Magento_Ui/js/grid/paging/paging',\n    'mage/translate'\n], function (Component, $, ko, _, paging) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            modules: {\n                variationsComponent: '${ $.variationsComponent }',\n                modalComponent: '${ $.modalComponent }'\n            },\n            notificationMessage: {\n                text: null,\n                error: null\n            },\n            gridExisting: [],\n            gridNew: [],\n            gridDeleted: [],\n            variationsExisting: [],\n            variationsNew: [],\n            variationsDeleted: [],\n            pagingExisting: paging({\n                name: 'configurableWizard.pagingExisting',\n                sizesConfig: {\n                    component: 'Magento_ConfigurableProduct/js/variations/paging/sizes',\n                    name: 'configurableWizard.pagingExisting_sizes'\n                }\n            }),\n            pagingNew: paging({\n                name: 'configurableWizard.pagingNew',\n                sizesConfig: {\n                    component: 'Magento_ConfigurableProduct/js/variations/paging/sizes',\n                    name: 'configurableWizard.pagingNew_sizes'\n                }\n            }),\n            pagingDeleted: paging({\n                name: 'configurableWizard.pagingDeleted',\n                sizesConfig: {\n                    component: 'Magento_ConfigurableProduct/js/variations/paging/sizes',\n                    name: 'configurableWizard.pagingDeleted_sizes'\n                }\n            }),\n            attributes: [],\n            attributesName: [$.mage.__('Images'), $.mage.__('SKU'), $.mage.__('Quantity'), $.mage.__('Price')],\n            sections: [],\n            gridTemplate: 'Magento_ConfigurableProduct/variations/steps/summary-grid'\n        },\n\n        /** @inheritdoc */\n        initObservable: function () {\n            var pagingObservables = {\n                currentNew: ko.getObservable(this.pagingNew, 'current'),\n                currentExisting: ko.getObservable(this.pagingExisting, 'current'),\n                currentDeleted: ko.getObservable(this.pagingDeleted, 'current'),\n                pageSizeNew: ko.getObservable(this.pagingNew, 'pageSize'),\n                pageSizeExisting: ko.getObservable(this.pagingExisting, 'pageSize'),\n                pageSizeDeleted: ko.getObservable(this.pagingDeleted, 'pageSize')\n            };\n\n            this._super().observe('gridExisting gridNew gridDeleted attributes sections');\n            this.gridExisting.columns = ko.observableArray();\n            this.gridNew.columns = ko.observableArray();\n            this.gridDeleted.columns = ko.observableArray();\n\n            _.each(pagingObservables, function (observable) {\n                observable.subscribe(function () {\n                    this.generateGrid();\n                }, this);\n            }, this);\n\n            return this;\n        },\n        nextLabelText: $.mage.__('Generate Products'),\n        variations: [],\n\n        /**\n         * @param {*} variations\n         * @param {Function} getSectionValue\n         */\n        calculate: function (variations, getSectionValue) {\n            var productSku = this.variationsComponent().getProductValue('sku'),\n                productPrice = this.variationsComponent().getProductPrice(),\n                productWeight = this.variationsComponent().getProductValue('weight'),\n                productName = this.variationsComponent().getProductValue('name'),\n                variationsKeys = [],\n                gridExisting = [],\n                gridNew = [],\n                gridDeleted = [];\n\n            this.variations = [];\n            _.each(variations, function (options) {\n                var product, images, sku, name, quantity, price, variation,\n                    productId = this.variationsComponent().getProductIdByOptions(options);\n\n                if (productId) {\n                    product = _.findWhere(this.variationsComponent().variations, {\n                        productId: productId\n                    });\n                }\n                images = getSectionValue('images', options);\n                sku = productSku + _.reduce(options, function (memo, option) {\n                    return memo + '-' + option.label;\n                }, '');\n                name = productName + _.reduce(options, function (memo, option) {\n                        return memo + '-' + option.label;\n                    }, '');\n                quantity = getSectionValue('quantity', options);\n\n                if (!quantity && productId) {\n                    quantity = product.quantity;\n                }\n                price = getSectionValue('price', options);\n\n                if (!price) {\n                    price = productId ? product.price : productPrice;\n                }\n\n                if (productId && !images.file) {\n                    images = product.images;\n                }\n                variation = {\n                    options: options,\n                    images: images,\n                    sku: sku,\n                    name: name,\n                    quantity: quantity,\n                    price: price,\n                    productId: productId,\n                    weight: productWeight,\n                    editable: true\n                };\n\n                if (productId) {\n                    variation.sku = product.sku;\n                    variation.weight = product.weight;\n                    variation.name = product.name;\n                    gridExisting.push(this.prepareRowForGrid(variation));\n                } else {\n                    gridNew.push(this.prepareRowForGrid(variation));\n                }\n                this.variations.push(variation);\n                variationsKeys.push(this.variationsComponent().getVariationKey(options));\n            }, this);\n\n            _.each(_.omit(this.variationsComponent().productAttributesMap, variationsKeys), function (productId) {\n                gridDeleted.push(this.prepareRowForGrid(\n                    _.findWhere(this.variationsComponent().variations, {\n                        productId: productId\n                    })\n                ));\n            }.bind(this));\n\n            this.variationsExisting = gridExisting;\n            this.variationsNew = gridNew;\n            this.variationsDeleted = gridDeleted;\n\n        },\n\n        /**\n         * Generate grid.\n         */\n        generateGrid: function () {\n            var pageExisting = this.pagingExisting.pageSize * this.pagingExisting.current,\n                pageNew = this.pagingNew.pageSize * this.pagingNew.current,\n                pageDeleted = this.pagingDeleted.pageSize * this.pagingDeleted.current;\n\n            this.pagingExisting.totalRecords = this.variationsExisting.length;\n            this.gridExisting(this.variationsExisting.slice(pageExisting - this.pagingExisting.pageSize, pageExisting));\n\n            this.pagingNew.totalRecords = this.variationsNew.length;\n            this.gridNew(this.variationsNew.slice(pageNew - this.pagingNew.pageSize, pageNew));\n\n            this.pagingDeleted.totalRecords = this.variationsDeleted.length;\n            this.gridDeleted(this.variationsDeleted.slice(pageDeleted - this.pagingDeleted.pageSize, pageDeleted));\n        },\n\n        /**\n         * @param {Object} variation\n         * @return {Array}\n         */\n        prepareRowForGrid: function (variation) {\n            var row = [];\n\n            row.push(_.extend({\n                images: []\n            }, variation.images));\n            row.push(variation.sku);\n            row.push(variation.quantity);\n            _.each(variation.options, function (option) {\n                row.push(option.label);\n            });\n            row.push(this.variationsComponent().getCurrencySymbol() +  ' ' + variation.price);\n\n            return row;\n        },\n\n        /**\n         * @return {String|*}\n         */\n        getGridTemplate: function () {\n            return this.gridTemplate;\n        },\n\n        /**\n         * @return {*|String}\n         */\n        getGridId: function () {\n            return _.uniqueId('grid_');\n        },\n\n        /**\n         * @param {*} attributes\n         * @return {Array}\n         */\n        getColumnsName: function (attributes) {\n            var columns = this.attributesName.slice(0);\n\n            attributes.each(function (attribute, index) {\n                columns.splice(3 + index, 0, attribute.label);\n            }, this);\n\n            return columns;\n        },\n\n        /**\n         * @param {Object} wizard\n         */\n        render: function (wizard) {\n            this.wizard = wizard;\n            this.sections(wizard.data.sections());\n            this.attributes(wizard.data.attributes());\n            this.gridNew([]);\n            this.gridExisting([]);\n            this.gridDeleted([]);\n            this.gridExisting.columns(this.getColumnsName(this.wizard.data.attributes));\n            this.gridNew.columns(this.getColumnsName(this.wizard.data.attributes));\n            this.gridDeleted.columns(this.getColumnsName(this.variationsComponent().productAttributes));\n            this.calculate(wizard.data.variations, wizard.data.sectionHelper);\n            this.generateGrid();\n        },\n\n        /**\n         * Force.\n         */\n        force: function () {\n            this.variationsComponent().render(this.variations, this.attributes());\n            this.modalComponent().closeModal();\n        },\n\n        /**\n         * Back.\n         */\n        back: function () {\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/variations/steps/bulk.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/* global FORM_KEY, byteConvert */\ndefine([\n    'uiComponent',\n    'jquery',\n    'ko',\n    'underscore',\n    'Magento_Ui/js/lib/collapsible',\n    'mage/template',\n    'Magento_Ui/js/modal/alert',\n    'Magento_Catalog/js/product-gallery',\n    'jquery/file-uploader',\n    'mage/translate',\n    'Magento_ConfigurableProduct/js/variations/variations'\n], function (Component, $, ko, _, Collapsible, mageTemplate, alert) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            modules: {\n                variationsComponent: '${ $.variationsComponent }'\n            },\n            countVariations: 0,\n            attributes: [],\n            sections: {},\n            images: null,\n            price: '',\n            quantity: '',\n            notificationMessage: {\n                text: null,\n                error: null\n            }\n        },\n\n        /** @inheritdoc */\n        initObservable: function () {\n            this._super().observe('countVariations attributes sections');\n\n            return this;\n        },\n\n        /** @inheritdoc */\n        initialize: function () {\n            var self = this;\n\n            this._super();\n            this.sections({\n                images: {\n                    label: 'images',\n                    type: ko.observable('none'),\n                    value: ko.observable(),\n                    attribute: ko.observable()\n                },\n                price: {\n                    label: 'price',\n                    type: ko.observable('none'),\n                    value: ko.observable(),\n                    attribute: ko.observable(),\n                    currencySymbol: ''\n                },\n                quantity: {\n                    label: 'quantity',\n                    type: ko.observable('none'),\n                    value: ko.observable(),\n                    attribute: ko.observable()\n                }\n            });\n\n            this.variationsComponent(function (variationsComponent) {\n                this.sections().price.currencySymbol = variationsComponent.getCurrencySymbol();\n            }.bind(this));\n\n            /**\n             * Make options sections.\n             */\n            this.makeOptionSections = function () {\n                this.images = new self.makeImages(null);\n                this.price = self.price;\n                this.quantity = self.quantity;\n            };\n\n            /**\n             * @param {Object} images\n             * @param {*} typePreview\n             */\n            this.makeImages = function (images, typePreview) {\n                var preview;\n\n                if (!images) {\n                    this.images = [];\n                    this.preview = self.noImage;\n                    this.file = null;\n                } else {\n                    this.images = images;\n                    preview = _.find(this.images, function (image) {\n                        return _.contains(image.galleryTypes, typePreview);\n                    });\n\n                    if (preview) {\n                        this.file = preview.file;\n                        this.preview = preview.url;\n                    } else {\n                        this.file = null;\n                        this.preview = self.noImage;\n                    }\n                }\n            };\n            this.images = new this.makeImages();\n            _.each(this.sections(), function (section) {\n                section.type.subscribe(function () {\n                    this.setWizardNotifyMessageDependOnSectionType();\n                }.bind(this));\n            }, this);\n        },\n        types: ['each', 'single', 'none'],\n\n        /**\n         * Set Wizard notify message depend on section type\n         */\n        setWizardNotifyMessageDependOnSectionType: function () {\n            var flag = false;\n\n            _.each(this.sections(), function (section) {\n                if (section.type() !== 'none') {\n                    flag = true;\n                }\n            }, this);\n\n            if (flag) {\n                this.wizard.setNotificationMessage(\n                    $.mage.__('Choose this option to delete and replace extension data for all past configurations.')\n                );\n            } else {\n                this.wizard.cleanNotificationMessage();\n            }\n        },\n\n        /**\n         * @param {Object} wizard\n         */\n        render: function (wizard) {\n            this.wizard = wizard;\n            this.attributes(wizard.data.attributes());\n\n            if (this.mode === 'edit') {\n                this.setWizardNotifyMessageDependOnSectionType();\n            }\n            //fill option section data\n            this.attributes.each(function (attribute) {\n                attribute.chosen.each(function (option) {\n                    option.sections = ko.observable(new this.makeOptionSections());\n                }, this);\n            }, this);\n            //reset section.attribute\n            _.each(this.sections(), function (section) {\n                section.attribute(null);\n            });\n\n            this.initCountVariations();\n            this.bindGalleries();\n        },\n\n        /**\n         * Init count variations.\n         */\n        initCountVariations: function () {\n            var variations = this.generateVariation(this.attributes()),\n                newVariations = _.map(variations, function (options) {\n                    return this.variationsComponent().getVariationKey(options);\n                }.bind(this)),\n                existingVariations = _.keys(this.variationsComponent().productAttributesMap);\n\n            this.countVariations(_.difference(newVariations, existingVariations).length);\n        },\n\n        /**\n         * @param {Object} attributes - example [['b1', 'b2'],['a1', 'a2', 'a3'],['c1', 'c2', 'c3'],['d1']]\n         * @returns {*} example [['b1','a1','c1','d1'],['b1','a1','c2','d1']...]\n         */\n        generateVariation: function (attributes) {\n            return _.reduce(attributes, function (matrix, attribute) {\n                var tmp = [];\n\n                _.each(matrix, function (variations) {\n                    _.each(attribute.chosen, function (option) {\n                        option['attribute_code'] = attribute.code;\n                        option['attribute_label'] = attribute.label;\n                        tmp.push(_.union(variations, [option]));\n                    });\n                });\n\n                if (!tmp.length) {\n                    return _.map(attribute.chosen, function (option) {\n                        option['attribute_code'] = attribute.code;\n                        option['attribute_label'] = attribute.label;\n\n                        return [option];\n                    });\n                }\n\n                return tmp;\n            }, []);\n        },\n\n        /**\n         * @param {*} section\n         * @param {Object} options\n         * @return {*}\n         */\n        getSectionValue: function (section, options) {\n            switch (this.sections()[section].type()) {\n                case 'each':\n                    return _.find(this.sections()[section].attribute().chosen, function (chosen) {\n                        return _.find(options, function (option) {\n                            return chosen.id == option.id; //eslint-disable-line eqeqeq\n                        });\n                    }).sections()[section];\n\n                case 'single':\n                    return this.sections()[section].value();\n\n                case 'none':\n                    return this[section];\n            }\n        },\n\n        /**\n         * @param {*} node\n         * @return {Promise|*}\n         */\n        getImageProperty: function (node) {\n            var types = node.find('[data-role=gallery]').productGallery('option').types,\n                images = _.map(node.find('[data-role=image]'), function (image) {\n                    var imageData = $(image).data('imageData');\n\n                    imageData.galleryTypes = _.pluck(_.filter(types, function (type) {\n                        return type.value === imageData.file;\n                    }), 'code');\n\n                    return imageData;\n                });\n\n            return _.reject(images, function (image) {\n                return !!image.isRemoved;\n            });\n        },\n\n        /**\n         * Fill images section.\n         */\n        fillImagesSection: function () {\n            switch (this.sections().images.type()) {\n                case 'each':\n                    if (this.sections().images.attribute()) {\n                        this.sections().images.attribute().chosen.each(function (option) {\n                            option.sections().images = new this.makeImages(\n                                this.getImageProperty($('[data-role=step-gallery-option-' + option.id + ']')),\n                                'thumbnail'\n                            );\n                        }, this);\n                    }\n                    break;\n\n                case 'single':\n                    this.sections().images.value(new this.makeImages(\n                        this.getImageProperty($('[data-role=step-gallery-single]')),\n                        'thumbnail'\n                    ));\n                    break;\n\n                default:\n                    this.sections().images.value(new this.makeImages());\n                    break;\n            }\n        },\n\n        /**\n         * @param {Object} wizard\n         */\n        force: function (wizard) {\n            this.fillImagesSection();\n            this.validate();\n            this.validateImage();\n            wizard.data.sections = this.sections;\n            wizard.data.sectionHelper = this.getSectionValue.bind(this);\n            wizard.data.variations = this.generateVariation(this.attributes());\n        },\n\n        /**\n         * Validate.\n         */\n        validate: function () {\n            var formValid;\n\n            _.each(this.sections(), function (section) {\n                switch (section.type()) {\n                    case 'each':\n                        if (!section.attribute()) {\n                            throw new Error($.mage.__('Please select attribute for {section} section.')\n                                .replace('{section}', section.label));\n                        }\n                        break;\n\n                    case 'single':\n                        if (!section.value()) {\n                            throw new Error($.mage.__('Please fill in the values for {section} section.')\n                                .replace('{section}', section.label));\n                        }\n                        break;\n                }\n            }, this);\n            formValid = true;\n            _.each($('[data-role=attributes-values-form]'), function (form) {\n                formValid = $(form).valid() && formValid;\n            });\n\n            if (!formValid) {\n                throw new Error($.mage.__('Please fill-in correct values.'));\n            }\n        },\n\n        /**\n         * Validate image.\n         */\n        validateImage: function () {\n            switch (this.sections().images.type()) {\n                case 'each':\n                    _.each(this.sections().images.attribute().chosen, function (option) {\n                        if (!option.sections().images.images.length) {\n                            throw new Error($.mage.__('Please select image(s) for your attribute.'));\n                        }\n                    });\n                    break;\n\n                case 'single':\n                    if (this.sections().images.value().file == null) {\n                        throw new Error($.mage.__('Please choose image(s).'));\n                    }\n                    break;\n            }\n        },\n\n        /**\n         * Back.\n         */\n        back: function () {\n            this.setWizardNotifyMessageDependOnSectionType();\n        },\n\n        /**\n         * Bind galleries.\n         */\n        bindGalleries: function () {\n            $('[data-role=bulk-step] [data-role=gallery]').each(function (index, element) {\n                var gallery = $(element),\n                    uploadInput = $(gallery.find('[name=image]')),\n                    dropZone = $(gallery).find('.image-placeholder');\n\n                if (!gallery.data('gallery-initialized')) {\n                    gallery.mage('productGallery', {\n                        template: '[data-template=gallery-content]',\n                        dialogTemplate: '.dialog-template',\n                        dialogContainerTmpl: '[data-role=img-dialog-container-tmpl]'\n                    });\n\n                    uploadInput.fileupload({\n                        dataType: 'json',\n                        dropZone: dropZone,\n                        process: [{\n                            action: 'load',\n                            fileTypes: /^image\\/(gif|jpeg|png)$/\n                        }, {\n                            action: 'resize',\n                            maxWidth: 1920,\n                            maxHeight: 1200\n                        }, {\n                            action: 'save'\n                        }],\n                        formData: {\n                            'form_key': FORM_KEY\n                        },\n                        sequentialUploads: true,\n                        acceptFileTypes: /(\\.|\\/)(gif|jpe?g|png)$/i,\n\n                        /**\n                         * @param {jQuery.Event} e\n                         * @param {Object} data\n                         */\n                        add: function (e, data) {\n                            var progressTmpl = mageTemplate('[data-template=uploader]'),\n                                fileSize,\n                                tmpl;\n\n                            $.each(data.files, function (i, file) {\n                                fileSize = typeof file.size == 'undefined' ?\n                                    $.mage.__('We could not detect a size.') :\n                                    byteConvert(file.size);\n\n                                data.fileId = Math.random().toString(33).substr(2, 18);\n\n                                tmpl = progressTmpl({\n                                    data: {\n                                        name: file.name,\n                                        size: fileSize,\n                                        id: data.fileId\n                                    }\n                                });\n\n                                $(tmpl).appendTo(gallery.find('[data-role=uploader]'));\n                            });\n\n                            $(this).fileupload('process', data).done(function () {\n                                data.submit();\n                            });\n                        },\n\n                        /**\n                         * @param {jQuery.Event} e\n                         * @param {Object} data\n                         */\n                        done: function (e, data) {\n                            if (data.result && !data.result.error) {\n                                gallery.trigger('addItem', data.result);\n                            } else {\n                                $('#' + data.fileId)\n                                    .delay(2000)\n                                    .hide('highlight');\n                                alert({\n                                    content: $.mage.__('We don\\'t recognize or support this file extension type.')\n                                });\n                            }\n                            $('#' + data.fileId).remove();\n                        },\n\n                        /**\n                         * @param {jQuery.Event} e\n                         * @param {Object} data\n                         */\n                        progress: function (e, data) {\n                            var progress = parseInt(data.loaded / data.total * 100, 10),\n                                progressSelector = '#' + data.fileId + ' .progressbar-container .progressbar';\n\n                            $(progressSelector).css('width', progress + '%');\n                        },\n\n                        /**\n                         * @param {jQuery.Event} e\n                         * @param {Object} data\n                         */\n                        fail: function (e, data) {\n                            var progressSelector = '#' + data.fileId;\n\n                            $(progressSelector).removeClass('upload-progress').addClass('upload-failure')\n                                .delay(2000)\n                                .hide('highlight')\n                                .remove();\n                        }\n                    });\n                    gallery.data('gallery-initialized', 1);\n                }\n            });\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/variations/steps/attributes_values.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiComponent',\n    'jquery',\n    'ko',\n    'underscore',\n    'mageUtils',\n    'Magento_Ui/js/lib/collapsible',\n    'mage/translate'\n], function (Component, $, ko, _, utils, Collapsible) {\n    'use strict';\n\n    //connect items with observableArrays\n    ko.bindingHandlers.sortableList = {\n        /** @inheritdoc */\n        init: function (element, valueAccessor) {\n            var list = valueAccessor();\n\n            $(element).sortable({\n                axis: 'y',\n                handle: '[data-role=\"draggable\"]',\n                tolerance: 'pointer',\n\n                /** @inheritdoc */\n                update: function (event, ui) {\n                    var item = ko.contextFor(ui.item[0]).$data,\n                        position = ko.utils.arrayIndexOf(ui.item.parent().children(), ui.item[0]);\n\n                    if (ko.contextFor(ui.item[0]).$index() != position) { //eslint-disable-line eqeqeq\n                        if (position >= 0) {\n                            list.remove(item);\n                            list.splice(position, 0, item);\n                        }\n                        ui.item.remove();\n                    }\n                }\n            });\n        }\n    };\n\n    return Collapsible.extend({\n        defaults: {\n            notificationMessage: {\n                text: null,\n                error: null\n            },\n            createOptionsUrl: null,\n            attributes: [],\n            stepInitialized: false\n        },\n\n        /** @inheritdoc */\n        initialize: function () {\n            this._super();\n            this.createAttribute = _.wrap(this.createAttribute, function () {\n                var args = _.toArray(arguments),\n                    createAttribute = args.shift();\n\n                return this.doInitSavedOptions(createAttribute.apply(this, args));\n            });\n            this.createAttribute = _.memoize(this.createAttribute.bind(this), _.property('id'));\n        },\n\n        /** @inheritdoc */\n        initObservable: function () {\n            this._super().observe(['attributes']);\n\n            return this;\n        },\n\n        /**\n         * Create option.\n         */\n        createOption: function () {\n            // this - current attribute\n            this.options.push({\n                value: 0,\n                label: '',\n                id: utils.uniqueid(),\n                'attribute_id': this.id,\n                'is_new': true\n            });\n        },\n\n        /**\n         * @param {Object} option\n         */\n        saveOption: function (option) {\n            if (!_.isEmpty(option.label)) {\n                this.options.remove(option);\n                this.options.push(option);\n                this.chosenOptions.push(option.id);\n            }\n        },\n\n        /**\n         * @param {Object} option\n         */\n        removeOption: function (option) {\n            this.options.remove(option);\n        },\n\n        /**\n         * @param {String} attribute\n         */\n        removeAttribute: function (attribute) {\n            this.attributes.remove(attribute);\n            this.wizard.setNotificationMessage(\n                $.mage.__('An attribute has been removed. This attribute will no longer appear in your configurations.')\n            );\n        },\n\n        /**\n         * @param {Object} attribute\n         * @param {*} index\n         * @return {Object}\n         */\n        createAttribute: function (attribute, index) {\n            attribute.chosenOptions = ko.observableArray([]);\n            attribute.options = ko.observableArray(_.map(attribute.options, function (option) {\n                option.id = utils.uniqueid();\n\n                return option;\n            }));\n            attribute.opened = ko.observable(this.initialOpened(index));\n            attribute.collapsible = ko.observable(true);\n\n            return attribute;\n        },\n\n        /**\n         * First 3 attribute panels must be open.\n         *\n         * @param {Number} index\n         * @return {Boolean}\n         */\n        initialOpened: function (index) {\n            return index < 3;\n        },\n\n        /**\n         * Save attribute.\n         */\n        saveAttribute: function () {\n            var errorMessage = $.mage.__('Select options for all attributes or remove unused attributes.');\n\n            this.attributes.each(function (attribute) {\n                attribute.chosen = [];\n\n                if (!attribute.chosenOptions.getLength()) {\n                    throw new Error(errorMessage);\n                }\n                attribute.chosenOptions.each(function (id) {\n                    attribute.chosen.push(attribute.options.findWhere({\n                        id: id\n                    }));\n                });\n            });\n\n            if (!this.attributes().length) {\n                throw new Error(errorMessage);\n            }\n        },\n\n        /**\n         * @param {Object} attribute\n         */\n        selectAllAttributes: function (attribute) {\n            this.chosenOptions(_.pluck(attribute.options(), 'id'));\n        },\n\n        /**\n         * @param {Object} attribute\n         */\n        deSelectAllAttributes: function (attribute) {\n            attribute.chosenOptions.removeAll();\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        saveOptions: function () {\n            var options = [];\n\n            this.attributes.each(function (attribute) {\n                attribute.chosenOptions.each(function (id) {\n                    var option = attribute.options.findWhere({\n                        id: id,\n                        'is_new': true\n                    });\n\n                    if (option) {\n                        options.push(option);\n                    }\n                });\n            });\n\n            if (!options.length) {\n                return false;\n            }\n            $.ajax({\n                type: 'POST',\n                url: this.createOptionsUrl,\n                data: {\n                    options: options\n                },\n                showLoader: true\n            }).done(function (savedOptions) {\n                this.attributes.each(function (attribute) {\n                    _.each(savedOptions, function (newOptionId, oldOptionId) {\n                        var option = attribute.options.findWhere({\n                            id: oldOptionId\n                        });\n\n                        if (option) {\n                            attribute.options.remove(option);\n                            option['is_new'] = false;\n                            option.value = newOptionId;\n                            attribute.options.push(option);\n                        }\n                    });\n                });\n\n            }.bind(this));\n        },\n\n        /**\n         * @param {*} attributeIds\n         */\n        requestAttributes: function (attributeIds) {\n            $.ajax({\n                type: 'POST',\n                url: this.optionsUrl,\n                data: {\n                    attributes: attributeIds\n                },\n                showLoader: true\n            }).done(function (attributes) {\n                attributes = _.sortBy(attributes, function (attribute) {\n                    return this.wizard.data.attributesIds.indexOf(attribute.id);\n                }.bind(this));\n                this.attributes(_.map(attributes, this.createAttribute));\n            }.bind(this));\n        },\n\n        /**\n         * @param {*} attribute\n         * @return {*}\n         */\n        doInitSavedOptions: function (attribute) {\n            var selectedOptions, selectedOptionsIds, selectedAttribute = _.findWhere(this.initData.attributes, {\n                id: attribute.id\n            });\n\n            if (selectedAttribute) {\n                selectedOptions = _.pluck(selectedAttribute.chosen, 'value');\n                selectedOptionsIds = _.pluck(_.filter(attribute.options(), function (option) {\n                    return _.contains(selectedOptions, option.value);\n                }), 'id');\n                attribute.chosenOptions(selectedOptionsIds);\n                this.initData.attributes = _.without(this.initData.attributes, selectedAttribute);\n            }\n\n            return attribute;\n        },\n\n        /**\n         * @param {Object} wizard\n         */\n        render: function (wizard) {\n            this.wizard = wizard;\n            this.requestAttributes(wizard.data.attributesIds());\n        },\n\n        /**\n         * @param {Object} wizard\n         */\n        force: function (wizard) {\n            this.saveOptions();\n            this.saveAttribute(wizard);\n\n            wizard.data.attributes = this.attributes;\n        },\n\n        /**\n         * @param {Object} wizard\n         */\n        back: function (wizard) {\n            wizard.data.attributesIds(this.attributes().pluck('id'));\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/components/dynamic-rows-configurable.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'uiRegistry',\n    'Magento_Ui/js/dynamic-rows/dynamic-rows'\n], function (_, registry, dynamicRows) {\n    'use strict';\n\n    return dynamicRows.extend({\n        defaults: {\n            actionsListOpened: false,\n            canEditField: 'canEdit',\n            newProductField: 'newProduct',\n            dataScopeAssociatedProduct: 'data.associated_product_ids',\n            dataProviderFromGrid: '',\n            dataProviderChangeFromGrid: '',\n            insertDataFromGrid: [],\n            changeDataFromGrid: [],\n            dataProviderFromWizard: '',\n            insertDataFromWizard: [],\n            map: null,\n            isEmpty: true,\n            isShowAddProductButton: false,\n            cacheGridData: [],\n            unionInsertData: [],\n            deleteProperty: false,\n            dataLength: 0,\n            identificationProperty: 'id',\n            'attribute_set_id': '',\n            attributesTmp: [],\n            changedFlag: 'was_changed',\n            listens: {\n                'insertDataFromGrid': 'processingInsertDataFromGrid',\n                'insertDataFromWizard': 'processingInsertDataFromWizard',\n                'unionInsertData': 'processingUnionInsertData',\n                'changeDataFromGrid': 'processingChangeDataFromGrid',\n                'isEmpty': 'changeVisibility'\n            },\n            imports: {\n                'attribute_set_id': '${$.provider}:data.product.attribute_set_id'\n            },\n            'exports': {\n                'attribute_set_id': '${$.provider}:data.new-variations-attribute-set-id'\n            },\n            modules: {\n                modalWithGrid: '${ $.modalWithGrid }',\n                gridWithProducts: '${ $.gridWithProducts}'\n            }\n        },\n\n        /**\n         * Invokes initialize method of parent class,\n         * contains initialization logic\n         */\n        initialize: function () {\n            this._super()\n                .changeVisibility(this.isEmpty());\n\n            return this;\n        },\n\n        /**\n         * Change visibility\n         *\n         * When isEmpty = true, then visbible = false\n         *\n         * @param {Boolean} isEmpty\n         */\n        changeVisibility: function (isEmpty) {\n            this.visible(!isEmpty);\n        },\n\n        /**\n         * Open modal with grid.\n         *\n         * @param {String} rowIndex\n         */\n        openModalWithGrid: function (rowIndex) {\n            var productSource = this.source.get(this.dataScope + '.' + this.index + '.' + rowIndex),\n                product = {\n                    'id': productSource.id,\n                    'attributes': productSource['configurable_attribute']\n                };\n\n            this.modalWithGrid().openModal();\n            this.gridWithProducts().showGridChangeProduct(rowIndex, product);\n        },\n\n        /**\n         * Initialize children\n         *\n         * @returns {Object} Chainable.\n         */\n        initChildren: function () {\n            var tmpArray = [];\n\n            this.recordData.each(function (recordData) {\n                tmpArray.push(recordData);\n            }, this);\n\n            this.unionInsertData(tmpArray);\n\n            return this;\n        },\n\n        /**\n         * Delete record\n         *\n         * @param {Number} index - row index\n         */\n        deleteRecord: function (index) {\n            var tmpArray,\n                lastRecord;\n\n            this.reRender = false;\n            tmpArray = this.getUnionInsertData();\n            tmpArray.splice(index, 1);\n\n            if (!tmpArray.length) {\n                this.attributesTmp = this.source.get('data.attributes');\n                this.source.set('data.attributes', []);\n                this.cacheGridData = [];\n            }\n\n            if (parseInt(this.currentPage(), 10) === this.pages()) {\n                lastRecord =\n                    _.findWhere(this.elems(), {\n                        index: this.startIndex + this.getChildItems().length - 1\n                    }) ||\n                    _.findWhere(this.elems(), {\n                        index: (this.startIndex + this.getChildItems().length - 1).toString()\n                    });\n\n                lastRecord.destroy();\n            }\n\n            this.unionInsertData(tmpArray);\n\n            if (this.pages() < parseInt(this.currentPage(), 10)) {\n                this.currentPage(this.pages());\n            }\n\n            this.reRender = true;\n            this.showSpinner(false);\n        },\n\n        /**\n         * Generate associated products\n         */\n        generateAssociatedProducts: function () {\n            var productsIds = [];\n\n            this.getUnionInsertData().forEach(function (data) {\n                if (data.id !== null) {\n                    productsIds.push(data.id);\n                }\n            });\n\n            this.source.set(this.dataScopeAssociatedProduct, productsIds);\n        },\n\n        /**\n         * Calls 'initObservable' of parent\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .observe([\n                    'insertDataFromGrid', 'unionInsertData', 'isEmpty', 'isShowAddProductButton', 'actionsListOpened'\n                ]);\n\n            return this;\n        },\n\n        /**\n         * Get union insert data from source\n         *\n         * @returns {Array}\n         */\n        getUnionInsertData: function () {\n            var source = this.source.get(this.dataScope + '.' + this.index),\n                result = [];\n\n            _.each(source, function (data) {\n                result.push(data);\n            });\n\n            return result;\n        },\n\n        /**\n         * Process union insert data.\n         *\n         * @param {Array} data\n         */\n        processingUnionInsertData: function (data) {\n            var dataCount,\n                elemsCount,\n                tmpData,\n                path,\n                attributeCodes = this.source.get('data.attribute_codes');\n\n            this.isEmpty(data.length === 0);\n            this.isShowAddProductButton(\n                (!attributeCodes || data.length > 0 ? data.length : attributeCodes.length) > 0\n            );\n\n            tmpData = data.slice(this.pageSize * (this.currentPage() - 1),\n                                 this.pageSize * (this.currentPage() - 1) + this.pageSize);\n\n            this.source.set(this.dataScope + '.' + this.index, []);\n\n            _.each(tmpData, function (row, index) {\n                path = this.dataScope + '.' + this.index + '.' + (this.startIndex + index);\n                this.source.set(path, row);\n            }, this);\n\n            this.source.set(this.dataScope + '.' + this.index, data);\n            this.parsePagesData(data);\n\n            // Render\n            dataCount = data.length;\n            elemsCount = this.elems().length;\n\n            if (dataCount > elemsCount) {\n                this.getChildItems().each(function (elemData, index) {\n                    this.addChild(elemData, this.startIndex + index);\n                }, this);\n            } else {\n                for (elemsCount; elemsCount > dataCount; elemsCount--) {\n                    this.elems()[elemsCount - 1].destroy();\n                }\n            }\n\n            this.generateAssociatedProducts();\n        },\n\n        /**\n         * Parsed data\n         *\n         * @param {Array} data - array with data\n         * about selected records\n         */\n        processingInsertDataFromGrid: function (data) {\n            var changes,\n                tmpArray;\n\n            if (!data.length) {\n                return;\n            }\n\n            tmpArray = this.getUnionInsertData();\n\n            changes = this._checkGridData(data);\n            this.cacheGridData = data;\n\n            changes.each(function (changedObject) {\n                var mappedData = this.mappingValue(changedObject);\n\n                mappedData[this.canEditField] = 0;\n                mappedData[this.newProductField] = 0;\n                mappedData.variationKey = this._getVariationKey(changedObject);\n                mappedData['configurable_attribute'] = this._getConfigurableAttribute(changedObject);\n                tmpArray.push(mappedData);\n            }, this);\n\n            // Attributes cannot be changed before regeneration thought wizard\n            if (!this.source.get('data.attributes').length) {\n                this.source.set('data.attributes', this.attributesTmp);\n            }\n            this.unionInsertData(tmpArray);\n        },\n\n        /**\n         * Process changes from grid.\n         *\n         * @param {Object} data\n         */\n        processingChangeDataFromGrid: function (data) {\n            var tmpArray = this.getUnionInsertData(),\n                mappedData = this.mappingValue(data.product);\n\n            mappedData[this.canEditField] = 0;\n            mappedData[this.newProductField] = 0;\n            mappedData.variationKey = this._getVariationKey(data.product);\n            mappedData['configurable_attribute'] = this._getConfigurableAttribute(data.product);\n            tmpArray[data.rowIndex] = mappedData;\n\n            this.unionInsertData(tmpArray);\n        },\n\n        /**\n         * Get variation key.\n         *\n         * @param {Object} data\n         * @returns {String}\n         * @private\n         */\n        _getVariationKey: function (data) {\n            var attrCodes = this.source.get('data.attribute_codes'),\n                key = [];\n\n            attrCodes.each(function (code) {\n                key.push(data[code]);\n            });\n\n            return key.sort().join('-');\n        },\n\n        /**\n         * Get configurable attribute.\n         *\n         * @param {Object} data\n         * @returns {String}\n         * @private\n         */\n        _getConfigurableAttribute: function (data) {\n            var attrCodes = this.source.get('data.attribute_codes'),\n                confAttrs = {};\n\n            attrCodes.each(function (code) {\n                confAttrs[code] = data[code];\n            });\n\n            return JSON.stringify(confAttrs);\n        },\n\n        /**\n         * Process data insertion from wizard\n         *\n         * @param {Object} data\n         */\n        processingInsertDataFromWizard: function (data) {\n            var tmpArray = this.getUnionInsertData(),\n                productIdsToDelete = this.source.get(this.dataScopeAssociatedProduct),\n                index,\n                product = {};\n\n            tmpArray = this.unsetArrayItem(\n                tmpArray,\n                {\n                    id: null\n                }\n            );\n\n            _.each(data, function (row) {\n                var attributesText;\n\n                if (row.productId) {\n                    index = _.indexOf(productIdsToDelete, row.productId);\n\n                    if (index > -1) {\n                        productIdsToDelete.splice(index, 1);\n                        tmpArray = this.unsetArrayItem(\n                            tmpArray,\n                            {\n                                id: row.productId\n                            }\n                        );\n                    }\n                }\n\n                attributesText = '';\n                _.each(row.options, function (attribute) {\n                    if (attributesText) {\n                        attributesText += ', ';\n                    }\n                    attributesText += attribute['attribute_label'] + ': ' + attribute.label;\n                }, this);\n\n                product = {\n                    'id': row.productId,\n                    'product_link': row.productUrl,\n                    'name': row.name,\n                    'sku': row.sku,\n                    'status': row.status,\n                    'price': row.price,\n                    'price_currency': row.priceCurrency,\n                    'price_string': row.priceCurrency + row.price,\n                    'weight': row.weight,\n                    'qty': row.quantity,\n                    'variationKey': row.variationKey,\n                    'configurable_attribute': row.attribute,\n                    'thumbnail_image': row.images.preview,\n                    'media_gallery': row['media_gallery'],\n                    'swatch_image': row['swatch_image'],\n                    'small_image': row['small_image'],\n                    image: row.image,\n                    'thumbnail': row.thumbnail,\n                    'attributes': attributesText\n                };\n                product[this.changedFlag] = true;\n                product[this.canEditField] = row.editable;\n                product[this.newProductField] = row.newProduct;\n                tmpArray.push(product);\n            }, this);\n\n            _.each(productIdsToDelete, function (id) {\n                tmpArray = this.unsetArrayItem(\n                    tmpArray,\n                    {\n                        id: id\n                    }\n                );\n            }, this);\n\n            this.unionInsertData(tmpArray);\n        },\n\n        /**\n         * Remove array items matching condition.\n         *\n         * @param {Array} data\n         * @param {Object} condition\n         * @returns {Array}\n         */\n        unsetArrayItem: function (data, condition) {\n            var objs = _.where(data, condition);\n\n            _.each(objs, function (obj) {\n                var index = _.indexOf(data, obj);\n\n                if (index > -1) {\n                    data.splice(index, 1);\n                }\n            });\n\n            return data;\n        },\n\n        /**\n         * Check changed records\n         *\n         * @param {Array} data - array with records data\n         * @returns {Array} Changed records\n         */\n        _checkGridData: function (data) {\n            var cacheLength = this.cacheGridData.length,\n                curData = data.length,\n                max = cacheLength > curData ? this.cacheGridData : data,\n                changes = [],\n                obj = {};\n\n            max.each(function (record, index) {\n                obj[this.map.id] = record[this.map.id];\n\n                if (!_.where(this.cacheGridData, obj).length) {\n                    changes.push(data[index]);\n                }\n            }, this);\n\n            return changes;\n        },\n\n        /**\n         * Mapped value\n         */\n        mappingValue: function (data) {\n            var result = {};\n\n            _.each(this.map, function (prop, index) {\n                result[index] = data[prop];\n            });\n\n            return result;\n        },\n\n        /**\n         * Toggle actions list.\n         *\n         * @param {Number} rowIndex\n         * @returns {Object} Chainable.\n         */\n        toggleActionsList: function (rowIndex) {\n            var state = false;\n\n            if (rowIndex !== this.actionsListOpened()) {\n                state = rowIndex;\n            }\n            this.actionsListOpened(state);\n\n            return this;\n        },\n\n        /**\n         * Close action list.\n         *\n         * @param {Number} rowIndex\n         * @returns {Object} Chainable\n         */\n        closeList: function (rowIndex) {\n            if (this.actionsListOpened() === rowIndex) {\n                this.actionsListOpened(false);\n            }\n\n            return this;\n        },\n\n        /**\n         * Toggle product status.\n         *\n         * @param {Number} rowIndex\n         */\n        toggleStatusProduct: function (rowIndex) {\n            var tmpArray = this.getUnionInsertData(),\n                status = parseInt(tmpArray[rowIndex].status, 10);\n\n            if (status === 1) {\n                tmpArray[rowIndex].status = 2;\n            } else {\n                tmpArray[rowIndex].status = 1;\n            }\n\n            tmpArray[rowIndex][this.changedFlag] = true;\n            this.unionInsertData(tmpArray);\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/components/price-configurable.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'uiRegistry',\n    'Magento_Ui/js/form/element/abstract'\n], function (_, registry, Abstract) {\n    'use strict';\n\n    return Abstract.extend({\n        defaults: {\n            listens: {\n                isConfigurable: 'handlePriceValue'\n            },\n            imports: {\n                isConfigurable: '!ns = ${ $.ns }, index = configurable-matrix:isEmpty'\n            },\n            modules: {\n                createConfigurableButton: '${$.createConfigurableButton}'\n            }\n        },\n\n        /**\n         * Invokes initialize method of parent class,\n         * contains initialization logic\n         */\n        initialize: function () {\n            this._super();\n\n            return this;\n        },\n\n        /**\n         * Calls 'initObservable' of parent\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .observe(['content']);\n\n            return this;\n        },\n\n        /**\n         * Disable and clear price if product type changed to configurable\n         *\n         * @param {String} isConfigurable\n         */\n        handlePriceValue: function (isConfigurable) {\n            if (isConfigurable) {\n                this.disable();\n                this.clear();\n            }\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/components/custom-options-price-type.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'Magento_Catalog/js/components/custom-options-price-type'\n], function (_, PriceType) {\n    'use strict';\n\n    return PriceType.extend({\n        defaults: {\n            isConfigurable: false,\n            isFiltered: null,\n            defaultOptions: null,\n            filteredOptions: null,\n            bannedOptions: []\n        },\n\n        /**\n         * Updates options.\n         *\n         * @param {Boolean} variationsEmpty\n         * @returns {Boolean}\n         */\n        updateOptions: function (variationsEmpty) {\n            var isFiltered = this.isConfigurable || !variationsEmpty,\n                value;\n\n            if (this.isFiltered !== isFiltered) {\n                value = this.value();\n\n                this.options(isFiltered ? this.getFilteredOptions() : this.getDefaultOptions());\n                this.value(value);\n            }\n\n            return isFiltered;\n        },\n\n        /**\n         * Get default list of options.\n         *\n         * @returns {Array}\n         */\n        getDefaultOptions: function () {\n            if (this.defaultOptions === null) {\n                this.defaultOptions = this.options();\n            }\n\n            return this.defaultOptions;\n        },\n\n        /**\n         * Get filtered list of options.\n         *\n         * @returns {Array}\n         */\n        getFilteredOptions: function () {\n            var defaultOptions;\n\n            if (this.filteredOptions === null) {\n                defaultOptions = this.getDefaultOptions();\n                this.filteredOptions = [];\n\n                _.each(defaultOptions, function (option) {\n                    if (this.bannedOptions.indexOf(option.value) === -1) {\n                        this.filteredOptions.push(option);\n                    }\n                }, this);\n            }\n\n            return this.filteredOptions;\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/components/modal-configurable.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/modal/modal-component',\n    'uiRegistry',\n    'underscore'\n], function (Modal, registry, _) {\n    'use strict';\n\n    return Modal.extend({\n        defaults: {\n            stepWizard: '',\n            modules: {\n                form: '${ $.formName }'\n            }\n        },\n\n        /**\n         * Open modal\n         */\n        openModal: function () {\n            var stepWizard = {};\n\n            this.form().validate();\n\n            if (this.form().source.get('params.invalid') === false) {\n                stepWizard = registry.get('index = ' + this.stepWizard);\n\n                if (!_.isUndefined(stepWizard)) {\n                    stepWizard.open();\n                }\n\n                this._super();\n            }\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/components/associated-product-insert-listing.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'Magento_Ui/js/form/components/insert-listing'\n], function (_, insertListing) {\n    'use strict';\n\n    return insertListing.extend({\n        defaults: {\n            gridInitialized: false,\n            paramsUpdated: false,\n            showMassActionColumn: true,\n            currentProductId: 0,\n            dataScopeAssociatedProduct: 'data.associated_product_ids',\n            typeGrid: '',\n            product: {},\n            rowIndexForChange: undefined,\n            changeProductData: [],\n            modules: {\n                productsProvider: '${ $.productsProvider }',\n                productsColumns: '${ $.productsColumns }',\n                productsMassAction: '${ $.productsMassAction }',\n                modalWithGrid: '${ $.modalWithGrid }',\n                productsFilters: '${ $.productsFilters }'\n            },\n            exports: {\n                externalProviderParams: '${ $.externalProvider }:params'\n            },\n            links: {\n                changeProductData: '${ $.provider }:${ $.changeProductProvider }'\n            },\n            listens: {\n                '${ $.externalProvider }:params': '_setFilters _setVisibilityMassActionColumn',\n                '${ $.productsProvider }:data': '_handleManualGridOpening',\n                '${ $.productsMassAction }:selected': '_handleManualGridSelect'\n            }\n        },\n\n        /**\n         * Initialize observables.\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super().observe(\n                'changeProductData'\n            );\n\n            return this;\n        },\n\n        /**\n         * Get ids of used products.\n         *\n         * @returns {Array}\n         */\n        getUsedProductIds: function () {\n            var usedProductsIds = this.source.get(this.dataScopeAssociatedProduct);\n\n            return usedProductsIds.slice();\n        },\n\n        /**\n         * Request for render content.\n         *\n         * @returns {Object}\n         */\n        doRender: function (showMassActionColumn, typeGrid) {\n            this.typeGrid = typeGrid;\n            this.showMassActionColumn = showMassActionColumn;\n\n            if (this.gridInitialized) {\n                this.paramsUpdated = false;\n                this.productsFilters().clear();\n                this._setFilters(this.externalProviderParams);\n                this._setVisibilityMassActionColumn();\n            }\n\n            return this.render();\n        },\n\n        /**\n         * Show grid with assigned product.\n         *\n         * @returns {Object}\n         */\n        showGridAssignProduct: function () {\n            this.product = {};\n            this.rowIndexForChange = undefined;\n\n            return this.doRender(true, 'assignProduct');\n        },\n\n        /**\n         * Show grid with changed product.\n         *\n         * @param {String} rowIndex\n         * @param {String} product\n         */\n        showGridChangeProduct: function (rowIndex, product) {\n            this.rowIndexForChange = rowIndex;\n            this.product = product;\n            this.doRender(false, 'changeProduct');\n        },\n\n        /**\n         * Select product.\n         *\n         * @param {String} rowIndex\n         */\n        selectProduct: function (rowIndex) {\n            this.changeProductData({\n                rowIndex: this.rowIndexForChange,\n                product: this.productsProvider().data.items[rowIndex]\n            });\n            this.modalWithGrid().closeModal();\n        },\n\n        /**\n         * Set visibility state for mass action column\n         *\n         * @private\n         */\n        _setVisibilityMassActionColumn: function () {\n            this.productsMassAction(function (massActionComponent) {\n                this.productsColumns().elems().each(function (rowElement) {\n                    rowElement.disableAction = this.showMassActionColumn;\n                }, this);\n                massActionComponent.visible = this.showMassActionColumn;\n            }.bind(this));\n        },\n\n        /**\n         * Set filters.\n         *\n         * @param {Object} params\n         * @private\n         */\n        _setFilters: function (params) {\n            var filterModifier = {},\n                attrCodes,\n                usedProductIds,\n                attributes;\n\n            params = _.omit(params);\n\n            if (!this.paramsUpdated) {\n                this.gridInitialized = true;\n                this.paramsUpdated = true;\n\n                attrCodes = this._getAttributesCodes();\n                usedProductIds = this.getUsedProductIds();\n\n                if (this.currentProductId) {\n                    usedProductIds.push(this.currentProductId);\n                }\n\n                filterModifier['entity_id'] = {\n                    'condition_type': 'nin', value: usedProductIds\n                };\n                attrCodes.each(function (code) {\n                    filterModifier[code] = {\n                        'condition_type': 'notnull'\n                    };\n                });\n\n                if (this.typeGrid === 'changeProduct') {\n                    attributes = JSON.parse(this.product.attributes);\n\n                    filterModifier = _.extend(filterModifier, _.mapObject(attributes, function (value) {\n                        return {\n                            'condition_type': 'eq',\n                            'value': value\n                        };\n                    }));\n\n                    params.filters = attributes;\n                } else {\n                    params.filters = {};\n                }\n\n                params['attributes_codes'] = attrCodes;\n\n                this.set('externalProviderParams', params);\n                this.set('externalFiltersModifier', filterModifier);\n            }\n        },\n\n        /**\n         * Get attribute codes.\n         *\n         * @returns {Array}\n         * @private\n         */\n        _getAttributesCodes: function () {\n            var attrCodes = this.source.get('data.attribute_codes');\n\n            return attrCodes ? attrCodes : [];\n        },\n\n        /**\n         * Get product variations.\n         *\n         * @returns {Array}\n         * @private\n         */\n        _getProductVariations: function () {\n            var matrix = this.source.get('data.configurable-matrix');\n\n            return matrix ? matrix : [];\n        },\n\n        /**\n         * Handle manual grid after opening\n         * @private\n         */\n        _handleManualGridOpening: function (data) {\n            if (data.items.length && this.typeGrid === 'assignProduct') {\n                this.productsColumns().elems().each(function (rowElement) {\n                    rowElement.disableAction = true;\n                });\n\n                this._disableRows(data.items);\n            }\n        },\n\n        /**\n         * Handle manual selection.\n         *\n         * @param {Array} selected\n         * @private\n         */\n        _handleManualGridSelect: function (selected) {\n            var selectedRows,\n                selectedVariationKeys;\n\n            if (this.typeGrid === 'assignProduct') {\n                selectedRows = _.filter(this.productsProvider().data.items, function (row) {\n                    return selected.indexOf(row['entity_id']) !== -1;\n                });\n                selectedVariationKeys = _.values(this._getVariationKeyMap(selectedRows));\n                this._disableRows(this.productsProvider().data.items, selectedVariationKeys, selected);\n            }\n        },\n\n        /**\n         * Disable rows in grid for products with the same variation key\n         *\n         * @param {Array} items\n         * @param {Array} selectedVariationKeys\n         * @param {Array} selected\n         * @private\n         */\n        _disableRows: function (items, selectedVariationKeys, selected) {\n            selectedVariationKeys = selectedVariationKeys === undefined ? [] : selectedVariationKeys;\n            selected = selected === undefined ? [] : selected;\n            this.productsMassAction(function (massaction) {\n                var configurableVariationKeys = _.union(\n                    selectedVariationKeys,\n                    _.pluck(this._getProductVariations(), 'variationKey')\n                    ),\n                    variationKeyMap = this._getVariationKeyMap(items),\n                    rowsForDisable = _.keys(_.pick(\n                        variationKeyMap,\n                        function (variationKey) {\n                            return configurableVariationKeys.indexOf(variationKey) !== -1;\n                        }\n                    ));\n\n                massaction.disabled(_.difference(rowsForDisable, selected));\n            }.bind(this));\n        },\n\n        /**\n         * Get variation key map used in manual grid.\n         *\n         * @param {Array} items\n         * @returns {Array} [{entity_id: variation-key}, ...]\n         * @private\n         */\n        _getVariationKeyMap: function (items) {\n            var variationKeyMap = {};\n\n            _.each(items, function (row) {\n                variationKeyMap[row['entity_id']] = _.values(\n                    _.pick(row, this._getAttributesCodes())\n                ).sort().join('-');\n\n            }, this);\n\n            return variationKeyMap;\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/components/file-uploader.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/form/element/file-uploader',\n    'underscore'\n], function (Element, _) {\n    'use strict';\n\n    return Element.extend({\n        processedFile: {},\n        actionsListOpened: false,\n        thumbnailUrl: '',\n        thumbnail: null,\n        smallImage: null,\n        defaults: {\n            fileInputName: ''\n        },\n\n        /**\n         * Initialize observables.\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super().observe(['processedFile', 'actionsListOpened', 'thumbnailUrl', 'thumbnail', 'smallImage']);\n\n            return this;\n        },\n\n        /** @inheritdoc */\n        setInitialValue: function () {\n            var value = this.getInitialValue();\n\n            if (!_.isString(value)) {\n                this._super();\n            }\n\n            return this;\n        },\n\n        /**\n         * Adds provided file to the files list.\n         *\n         * @param {Object} file\n         * @returns {Object} Chainable.\n         */\n        addFile: function (file) {\n            this.processedFile(this.processFile(file));\n\n            this.value(this.processedFile().file);\n\n            return this;\n        },\n\n        /**\n         * Toggle actions list.\n         *\n         * @returns {Object} Chainable.\n         */\n        toggleActionsList: function () {\n            if (this.actionsListOpened()) {\n                this.actionsListOpened(false);\n            } else {\n                this.actionsListOpened(true);\n            }\n\n            return this;\n        },\n\n        /**\n         * Close action list.\n         *\n         * @returns {Object} Chainable\n         */\n        closeList: function () {\n            if (this.actionsListOpened()) {\n                this.actionsListOpened(false);\n            }\n\n            return this;\n        },\n\n        /**\n         * Delete Image\n         *\n         * @returns {Object} Chainable\n         */\n        deleteImage: function () {\n            this.processedFile({});\n            this.value(null);\n            this.thumbnail(null);\n            this.thumbnailUrl(null);\n            this.smallImage(null);\n\n            return this;\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/components/container-configurable-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiComponent'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            listens: {\n                '${ $.provider }:data.is_downloadable': 'handleProductType'\n            },\n            links: {\n                isDownloadable: '${ $.provider }:data.is_downloadable'\n            },\n            modules: {\n                createConfigurableButton: '${$.createConfigurableButton}'\n            }\n        },\n\n        /**\n         * Invokes initialize method of parent class,\n         * contains initialization logic\n         */\n        initialize: function () {\n            this._super();\n            this.handleProductType(this.isDownloadable);\n\n            return this;\n        },\n\n        /**\n         * Calls 'initObservable' of parent\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .observe(['content']);\n\n            return this;\n        },\n\n        /**\n         * Change content for container and visibility for button\n         *\n         * @param {String} isDownloadable\n         */\n        handleProductType: function (isDownloadable) {\n            if (isDownloadable === '1') {\n                this.content(this.content2);\n\n                if (this.createConfigurableButton()) {\n                    this.createConfigurableButton().visible(false);\n                }\n            } else {\n                this.content(this.content1);\n\n                if (this.createConfigurableButton()) {\n                    this.createConfigurableButton().visible(true);\n                }\n            }\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/components/custom-options-warning.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/form/components/html'\n], function (Html) {\n    'use strict';\n\n    return Html.extend({\n        defaults: {\n            isConfigurable: false\n        },\n\n        /**\n         * Updates component visibility state.\n         *\n         * @param {Boolean} variationsEmpty\n         * @returns {Boolean}\n         */\n        updateVisibility: function (variationsEmpty) {\n            var isVisible = this.isConfigurable || !variationsEmpty;\n\n            this.visible(isVisible);\n\n            return isVisible;\n        }\n    });\n});\n","Magento_ConfigurableProduct/js/options/price-type-handler.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/*\ndefine([\n    'jquery',\n    'Magento_Catalog/catalog/type-events',\n    'notification',\n    'mage/translate'\n], function ($, productType) {\n    'use strict';\n\n    return {\n        isConfigurable: false,\n        messageInited: false,\n        messageSelector: '[data-role=product-custom-options-content]',\n        isPercentPriceTypeExist: function () {\n            var productOptionsContainer = $('#product_options_container_top');\n\n            return !!productOptionsContainer.length;\n        },\n        showWarning: function () {\n            if (!this.messageInited) {\n                $(this.messageSelector).notification();\n                this.messageInited = true;\n            }\n            this.hideWarning();\n            $(this.messageSelector).notification('add', {\n                message: $.mage.__('Custom options with price type \"percent\" is not available for ' +\n                    'configurable product.'),\n                error: false,\n                messageContainer: this.messageSelector\n            });\n        },\n        hideWarning: function () {\n            $(this.messageSelector).notification('clear');\n        },\n        init: function () {\n            $(document).on('changeTypeProduct', this._initType.bind(this));\n\n            $('#product-edit-form-tabs').on('change', '.opt-type > select', function () {\n                var selected = $('.opt-type > select :selected'),\n                    optGroup = selected.parent().attr('label');\n\n                if (optGroup === 'Select') {\n                    $('#product-edit-form-tabs').on(\n                        'click',\n                        '[data-ui-id=\"admin-product-options-options-box-select-option-type-add-select-row-button\"]',\n                        function () {\n                            this.percentPriceTypeHandler();\n                        }.bind(this)\n                    );\n                } else {\n                    this.percentPriceTypeHandler();\n                }\n            }.bind(this));\n\n            this._initType();\n        },\n        _initType: function () {\n            this.isConfigurable = productType.type.current === 'configurable';\n            if (this.isPercentPriceTypeExist()) {\n                this.percentPriceTypeHandler();\n            }\n        },\n        percentPriceTypeHandler: function () {\n            var priceType = $('[data-attr=\"price-type\"]'),\n                optionPercentPriceType = priceType.find('option[value=\"percent\"]');\n\n            if (this.isConfigurable) {\n                this.showWarning();\n                optionPercentPriceType.hide();\n                optionPercentPriceType.parent().val() === 'percent' ? optionPercentPriceType.parent().val('fixed') : '';\n            } else {\n                $(this.messageSelector).notification();\n                optionPercentPriceType.show();\n                this.hideWarning();\n            }\n        }\n    };\n});\n*/\n","Ess_M2ePro/js/Common.js":"define([\n    'M2ePro/Plugin/Confirm',\n    'M2ePro/Plugin/Alert',\n    'prototype',\n    'jquery/validate',\n    'mage/backend/form',\n    'mage/backend/validation'\n], function (confirm, alert) {\n\n    window.Common = Class.create();\n    Common.prototype = {\n\n        // ---------------------------------------\n\n        initialize: function() {},\n\n        // ---------------------------------------\n\n        initCommonValidators: function()\n        {\n            var self = this;\n            jQuery.validator.addMethod('M2ePro-required-when-visible', function(value, el) {\n\n                if (self.isElementHiddenFromPage(el)) {\n                    return true;\n                }\n\n                if(typeof value === 'string' ) {\n                    value = value.trim();\n                }\n\n                return value != null && value.length > 0;\n            }, M2ePro.translator.translate('This is a required field.'));\n\n            jQuery.validator.addMethod('M2ePro-required-when-visible-and-enabled', function(value, el) {\n\n                if (self.isElementHiddenFromPage(el)) {\n                    return true;\n                }\n\n                if (!$(el).disabled) {\n                    return true;\n                }\n\n                return value != null && value.length > 0;\n            }, M2ePro.translator.translate('This is a required field.'));\n\n            jQuery.validator.addMethod('M2ePro-validation-float', function(value, element) {\n\n                if (!element.visible()) {\n                    return true;\n                }\n\n                if (element.parentNode && !element.parentNode.visible()) {\n                    return true;\n                }\n\n                if (element.up('tr') && !element.up('tr').visible()) {\n                    return true;\n                }\n\n                if (element.up('.entry-edit') && !element.up('.entry-edit').visible()) {\n                    return true;\n                }\n\n                if (value == '') {\n                    return true;\n                }\n\n                return value.match(/^\\d+[.]?\\d*?$/g);\n            }, M2ePro.translator.translate('Invalid input data. Decimal value required. Example 12.05'));\n\n            jQuery.validator.addMethod('M2ePro-store-switcher-validation', function(value, element) {\n                if (!element.visible()) {\n                    return true;\n                }\n\n                if (!element.up('.admin__field').visible()) {\n                    return true;\n                }\n\n                if (value == -1 || value == null) {\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('You should select Store View'));\n\n            jQuery.validator.addMethod('M2ePro-validate-email', function(value, el) {\n                this.error = Validation.get('validate-email').error;\n                return Validation.get('validate-email').test(value,el);\n            }, M2ePro.translator.translate('Email is not valid.'));\n        },\n\n        initFormValidation: function (selector)\n        {\n            selector = selector || 'form';\n\n            jQuery(selector).each(function (index, form) {\n                jQuery(form).form().validation();\n            });\n        },\n\n        isElementHiddenFromPage: function(el)\n        {\n            var hidden = !$(el).visible();\n\n            while (!hidden) {\n                el = $(el).up();\n                hidden = !el.visible();\n                if ($(el).up() == document || el.hasClassName('entry-edit')) {\n                    break;\n                }\n            }\n\n            return hidden;\n        },\n\n        // ---------------------------------------\n\n        scrollPageToTop: function()\n        {\n            if (location.href[location.href.length-1] != '#') {\n                setLocation(location.href+'#');\n            } else {\n                setLocation(location.href);\n            }\n        },\n\n        backClick: function(url)\n        {\n            setLocation(url.replace(/#$/, ''));\n        },\n\n        // ---------------------------------------\n\n        saveClick: function(url, skipValidation)\n        {\n            if (typeof skipValidation == 'undefined' && !this.isValidForm()) {\n                return;\n            }\n\n            if (typeof url == 'undefined' || url == '') {\n                url = M2ePro.url.get('formSubmit', {'back': base64_encode('list')});\n            }\n            this.submitForm(url);\n        },\n\n        saveAndEditClick: function(url, tabsId, skipValidation)\n        {\n            if (typeof skipValidation == 'undefined' && !this.isValidForm()) {\n                return;\n            }\n\n            if (typeof url == 'undefined' || url == '') {\n\n                var tabsUrl = '';\n                if (typeof tabsId != 'undefined') {\n                    tabsUrl = '|tab=' + jQuery('#' + tabsId).data().tabs.active.find('a').attr('name');\n                }\n\n                url = M2ePro.url.get('formSubmit', {'back': base64_encode('edit' + tabsUrl)});\n            }\n            this.submitForm(url);\n        },\n\n        // ---------------------------------------\n\n        duplicateClick: function($headId, chapter_when_duplicate_text)\n        {\n            $$('.loading-mask').invoke('show');\n\n            M2ePro.url.add({'formSubmit': M2ePro.url.get('formSubmitNew')});\n\n            $('title').value = '';\n\n            $$('.page-title').each(function(o) { o.innerHTML = chapter_when_duplicate_text; });\n            $$('.M2ePro_duplicate_button').each(function(o) { o.hide(); });\n            $$('.M2ePro_delete_button').each(function(o) { o.hide(); });\n\n            window.setTimeout(function() {\n                $$('.loading-mask').invoke('hide')\n            }, 1200);\n        },\n\n        deleteClick: function()\n        {\n            this.confirm({\n                actions: {\n                    confirm: function () {\n                        setLocation(M2ePro.url.get('deleteAction'));\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        isValidForm: function()\n        {\n            return jQuery('#edit_form').valid();\n        },\n\n        submitForm: function(url, newWindow)\n        {\n            if (typeof newWindow == 'undefined') {\n                newWindow = false;\n            }\n\n            var form = $('edit_form');\n\n            var oldAction = form.action;\n\n            form.action = url;\n            form.target = newWindow ? '_blank' : '_self';\n\n            form.submit();\n\n            form.action = oldAction;\n        },\n\n        postForm: function(url, params)\n        {\n            var form = new Element('form', {'method': 'post', 'action': url});\n\n            $H(params).each(function(i) {\n                form.insert(new Element('input', {'name': i.key, 'value': i.value, 'type': 'hidden'}));\n            });\n\n            form.insert(new Element('input', {'name': 'form_key', 'value': FORM_KEY, 'type': 'hidden'}));\n\n            $(document.body).insert(form);\n\n            // chrome ugly hack\n            setTimeout(form.submit.bind(form), 250);\n        },\n\n        // ---------------------------------------\n\n        openWindow: function(url)\n        {\n            var w = window.open(url);\n            w.focus();\n            return w;\n        },\n\n        // ---------------------------------------\n\n        updateHiddenValue : function(elementMode, elementHidden)\n        {\n            elementHidden.value = elementMode.options[elementMode.selectedIndex].getAttribute('attribute_code');\n        },\n\n        hideEmptyOption: function(select)\n        {\n            $(select).select('.empty') && $(select).select('.empty').length && $(select).select('.empty')[0].hide();\n        },\n\n        setRequiried: function(el)\n        {\n            $(el).addClassName('required-entry');\n        },\n\n        setNotRequiried: function(el)\n        {\n            $(el) && $(el).removeClassName('required-entry');\n        },\n\n        // ---------------------------------------\n\n        setConstants: function(data)\n        {\n            //data = eval(data);\n            //for (var i=0;i<data.length;i++) {\n            //    eval('this.'+data[i][0]+'=\\''+data[i][1]+'\\'');\n            //}\n        },\n\n        setValidationCheckRepetitionValue: function(idInput, textError, model, dataField, idField, idValue, component, filterField, filterValue)\n        {\n            component = component || null;\n            filterField = filterField || null;\n            filterValue = filterValue || null;\n\n            jQuery.validator.addMethod(\n                idInput, function(value) {\n                    var checkResult = false;\n\n                    new Ajax.Request(M2ePro.url.get('general/validationCheckRepetitionValue'), {\n                        method: 'post',\n                        asynchronous: false,\n                        parameters: {\n                            model: model,\n                            data_field: dataField,\n                            data_value: value,\n                            id_field: idField,\n                            id_value: idValue,\n                            component: component,\n                            filter_field: filterField,\n                            filter_value: filterValue\n                        },\n                        onSuccess: function(transport) {\n                            checkResult = transport.responseText.evalJSON()['result'];\n                        }\n                    });\n\n                    return checkResult;\n                }, textError\n            );\n        },\n\n        // ---------------------------------------\n\n        autoHeightFix: function()\n        {\n            setTimeout(function() {\n                Windows.getFocusedWindow().content.style.height = '';\n                Windows.getFocusedWindow().content.style.maxHeight = '650px';\n            }, 50);\n        },\n\n        // ---------------------------------------\n\n        updateFloatingHeader: function ()\n        {\n            var data = jQuery('.page-actions').data('floatingHeader');\n\n            if (typeof data === 'undefined') {\n                return;\n            }\n\n            data._offsetTop = data._placeholder.offset().top;\n        },\n\n        // ---------------------------------------\n\n        confirm: function (config)\n        {\n            confirm(config);\n        },\n\n        // ---------------------------------------\n\n        alert: function (text, callback)\n        {\n            alert({\n                actions: {\n                    cancel: callback || function() {}\n                },\n                content: text\n            });\n        },\n\n        // ---------------------------------------\n\n        bindEventAtFirstPosition: function(domElement, eventName, callable)\n        {\n            // bind as you normally would\n            jQuery(domElement).bind(eventName, callable);\n\n            var handlers = jQuery(domElement).data('events')[eventName.split('.')[0]];\n            var handler = handlers.pop();\n\n            handlers.splice(0, 0, handler);\n        }\n\n        // ---------------------------------------\n    }\n});","Ess_M2ePro/js/SynchProgress.js":"define([\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Common'\n], function(MessageObj) {\n\n    window.SynchProgress = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function (progressBarObj, wrapperObj) {\n            this.stateExecuting = 'executing';\n            this.stateInactive = 'inactive';\n\n            this.resultTypeError = 'error';\n            this.resultTypeWarning = 'warning';\n            this.resultTypeSuccess = 'success';\n\n            this.progressBarObj = progressBarObj;\n            this.wrapperObj = wrapperObj;\n        },\n\n        // ---------------------------------------\n\n        start: function (title, status) {\n            title = title || '';\n            status = status || '';\n\n            var self = this;\n\n            self.progressBarObj.reset();\n\n            if (title != '') {\n                self.progressBarObj.setTitle(title);\n            }\n            if (status != '') {\n                self.progressBarObj.setStatus(status);\n            }\n\n            self.progressBarObj.show();\n\n            self.wrapperObj.lock();\n            $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n        },\n\n        end: function () {\n            var self = this;\n\n            self.progressBarObj.reset();\n            self.progressBarObj.hide();\n\n            self.wrapperObj.unlock();\n            $$('.loading-mask').invoke('setStyle', {visibility: 'visible'});\n        },\n\n        // ---------------------------------------\n\n        initPageCheckState: function (callBackWhenEnd) {\n            callBackWhenEnd = callBackWhenEnd || '';\n\n            var self = this;\n            new Ajax.Request(M2ePro.url.get('general/synchCheckState'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == self.stateExecuting) {\n\n                        self.start(\n                            M2ePro.translator.translate('Another Synchronization Is Already Running.'),\n                            M2ePro.translator.translate('Getting information. Please wait ...')\n                        );\n\n                        setTimeout(function () {\n                            self.startGetExecutingInfo(callBackWhenEnd);\n                        }, 2000);\n\n                    } else {\n\n                        self.end();\n\n                        if (callBackWhenEnd != '') {\n                            eval(callBackWhenEnd);\n                        }\n\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        runTask: function (title, url, components, callBackWhenEnd) {\n            title = title || '';\n            url = url || '';\n            components = components || '';\n            callBackWhenEnd = callBackWhenEnd || '';\n\n            if (url == '') {\n                return;\n            }\n\n            var self = this;\n            new Ajax.Request(M2ePro.url.get('general/synchCheckState'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function (transport) {\n\n                    if (transport.responseText == self.stateExecuting) {\n\n                        self.start(\n                            M2ePro.translator.translate('Another Synchronization Is Already Running.'),\n                            M2ePro.translator.translate('Getting information. Please wait ...')\n                        );\n\n                        setTimeout(function () {\n                            self.startGetExecutingInfo('self.runTask(\\'' + title + '\\',\\'' + url + '\\',\\'' + components + '\\',\\'' + callBackWhenEnd + '\\');');\n                        }, 2000);\n\n                    } else {\n\n                        self.start(title, M2ePro.translator.translate('Preparing to start. Please wait ...'));\n\n                        new Ajax.Request(url, {\n                            parameters: {components: components},\n                            method: 'get',\n                            asynchronous: true\n                        });\n\n                        setTimeout(function () {\n                            self.startGetExecutingInfo(callBackWhenEnd);\n                        }, 2000);\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        startGetExecutingInfo: function (callBackWhenEnd) {\n            callBackWhenEnd = callBackWhenEnd || '';\n\n            var self = this;\n            new Ajax.Request(M2ePro.url.get('general/synchGetExecutingInfo'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function (transport) {\n\n                    var data = transport.responseText.evalJSON(true);\n\n                    if (data.ajaxExpired && response.ajaxRedirect) {\n\n                        self.alert(M2ePro.translator.translate('Unauthorized! Please login again.'), function() {\n                            setLocation(response.ajaxRedirect);\n                        });\n                        return;\n                    }\n\n                    if (data.mode == self.stateExecuting) {\n\n                        self.progressBarObj.setTitle(data.title);\n                        if (data.percents <= 0) {\n                            self.progressBarObj.setPercents(0, 0);\n                        } else if (data.percents >= 100) {\n                            self.progressBarObj.setPercents(100, 0);\n                        } else {\n                            self.progressBarObj.setPercents(data.percents, 1);\n                        }\n                        self.progressBarObj.setStatus(data.status);\n\n                        self.wrapperObj.lock();\n                        $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n\n                        setTimeout(function () {\n                            self.startGetExecutingInfo(callBackWhenEnd);\n                        }, 3000);\n\n                    } else {\n\n                        self.progressBarObj.setPercents(100, 0);\n\n                        // ---------------------------------------\n                        setTimeout(function () {\n\n                            if (callBackWhenEnd != '') {\n                                eval(callBackWhenEnd);\n                            } else {\n\n                                new Ajax.Request(M2ePro.url.get('general/synchGetLastResult'), {\n                                    method: 'get',\n                                    asynchronous: true,\n                                    onSuccess: function (transport) {\n                                        self.end();\n                                        self.printFinalMessage(transport.responseText);\n                                        self.addProcessingNowWarning();\n                                    }\n                                });\n                            }\n                        }, 1500);\n                        // ---------------------------------------\n                    }\n                }\n            });\n\n            $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n        },\n\n        // ---------------------------------------\n\n        printFinalMessage: function (resultType) {\n            var self = this;\n            if (resultType == self.resultTypeError) {\n                MessageObj.addErrorMessage(str_replace(\n                    '%url%',\n                    M2ePro.url.get('logViewUrl'),\n                    M2ePro.translator.translate('Synchronization ended with errors. <a target=\"_blank\" href=\"%url%\">View Log</a> for details.')\n                ));\n            } else if (resultType == self.resultTypeWarning) {\n                MessageObj.addWarningMessage(str_replace(\n                    '%url%',\n                    M2ePro.url.get('logViewUrl'),\n                    M2ePro.translator.translate('Synchronization ended with warnings. <a target=\"_blank\" href=\"%url%\">View Log</a> for details.')\n                ));\n            } else {\n                MessageObj.addSuccessMessage(M2ePro.translator.translate('Synchronization has successfully ended.'));\n            }\n        },\n\n        // ---------------------------------------\n\n        addProcessingNowWarning: function () {\n            new Ajax.Request(M2ePro.url.get('synchCheckProcessingNow'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function (transport) {\n\n                    var messages = transport.responseText.evalJSON().messages;\n\n                    if (messages.length < 1) {\n                        return;\n                    }\n\n                    messages.each(function (message) {\n                        MessageObj.addWarningMessage(message);\n                    });\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Synchronization.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Common'\n], function(jQuery, modal, MessageObj) {\n\n    window.Synchronization = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function(synchProgressObj)\n        {\n            this.synchProgressObj = synchProgressObj;\n        },\n\n        // ---------------------------------------\n\n        completeStep: function()\n        {\n            window.opener.completeStep = 1;\n            window.close();\n        },\n\n        saveSettings: function(runSynch, components)\n        {\n            MessageObj.clear();\n            runSynch  = runSynch || '';\n            components = components || '';\n\n            components = Object.isString(components)\n                         ? [components]\n                         : components;\n            components = Object.toJSON(components);\n\n            CommonObj.scrollPageToTop();\n\n            var self = this;\n            new Ajax.Request(M2ePro.url.get('synch_formSubmit'), {\n                method: 'post',\n                parameters: {\n                    components: components,\n                    templates_mode: $('templates_mode').value\n                },\n                asynchronous: true,\n                onSuccess: function(transport) {\n                    MessageObj.addSuccessMessage(M2ePro.translator.translate('Synchronization Settings have been saved.'));\n                    if (runSynch != '') {\n                        self[runSynch](components);\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        runAllEnabledNow: function(components)\n        {\n            this.synchProgressObj.runTask(\n                M2ePro.translator.translate('Running All Enabled Tasks'),\n                M2ePro.url.get('runAllEnabledNow'),\n                components\n            );\n        },\n\n        // ---------------------------------------\n\n        moveChildBlockContent: function(childBlockId, destinationBlockId)\n        {\n            if (childBlockId == '' || destinationBlockId == '') {\n                return;\n            }\n\n            $(destinationBlockId).appendChild($(childBlockId));\n        },\n\n        // ---------------------------------------\n\n        showReviseAllConfirmPopup: function(component)\n        {\n            window.ReviseAllConfirmPopup = modal({\n                title: M2ePro.translator.translate('Revise All'),\n                type: 'popup',\n                buttons: []\n            }, $(component + '_revise_all_confirm_popup'));\n            ReviseAllConfirmPopup.openModal();\n        },\n\n        // ---------------------------------------\n\n        runReviseAll: function(component)\n        {\n            new Ajax.Request(M2ePro.url.get('runReviseAll'), {\n                parameters: {component: component},\n                onSuccess: function(transport) {\n                    this.initReviseAllInfo(\n                        true, transport.responseText.evalJSON()['start_date'],\n                        null, component\n                    );\n                }.bind(this)\n            });\n        },\n\n        initReviseAllInfo: function(inProgress, startDate, endDate, component)\n        {\n            $(component + '_revise_all_end').hide();\n            if (inProgress) {\n                $(component + '_revise_all_start').show();\n                $(component + '_revise_all_start_date').update(startDate);\n            } else {\n                $(component + '_revise_all_start').hide();\n                if (endDate) {\n                    $(component + '_revise_all_end').show();\n                    $(component + '_revise_all_end_date').update(endDate);\n                }\n            }\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/HealthStatus.js":"define([\n    'M2ePro/Common'\n], function () {\n    window.HealthStatus = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            var self = this;\n\n            $('notification_mode').observe('change', self.notificationModeChanged)\n                                  .simulate('change');\n\n            this.initFormValidation();\n        },\n\n        notificationModeChanged: function()\n        {\n            var self = this;\n\n            $('notification_email_value_container').hide();\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\HealthStatus\\\\Notification\\\\Settings::MODE_EMAIL')) {\n                $('notification_email_value_container').show();\n            }\n        }\n\n        // ---------------------------------------\n    })\n});","Ess_M2ePro/js/M2ePro.js":"define([\n    'jquery',\n    'M2ePro/Url',\n    'M2ePro/Php',\n    'M2ePro/Translator',\n    'M2ePro/Common',\n    'prototype',\n    'M2ePro/Plugin/BlockNotice',\n    'M2ePro/Plugin/Prototype/Event.Simulate',\n    'M2ePro/Plugin/Fieldset',\n    'M2ePro/Plugin/Validator',\n    'M2ePro/General/PhpFunctions',\n    'mage/loader_old'\n], function(jQuery, Url, Php, Translator) {\n\n    jQuery('body').loader();\n\n    Ajax.Responders.register({\n        onException: function(event, error) {\n            console.error(error);\n        }\n    });\n\n    return {\n        url: Url,\n        php: Php,\n        translator: Translator\n    };\n\n});\n","Ess_M2ePro/js/Settings.js":"define([\n    'jquery',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Template/Edit',\n    'M2ePro/Common',\n    'Magento_Ui/js/modal/modal'\n], function (jQuery, MessagesObj) {\n    window.Settings = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function() {\n\n            this.messageObj = Object.create(MessagesObj);\n            this.messageObj.setContainer('#anchor-content');\n\n            this.templateEdit = new TemplateEdit();\n\n            this.initFormValidation();\n        },\n\n        // ---------------------------------------\n\n        saveSettingsTab: function()\n        {\n            var tab = jQuery('div[aria-labelledby^=configuration_settings_tabs].ui-tabs-panel:visible');\n\n            var elementId = tab.attr('id').toLowerCase()\n                .replace(/^configuration_settings_tabs_/, '')\n                .replace(/_content$/, ''),\n                form = tab.find('form');\n\n            if (form.length) {\n                if (!form.valid()) {\n                    return false;\n                }\n\n                if (!M2ePro.url.urls[elementId]) {\n                    return false;\n                }\n\n                jQuery('.ui-tabs-active > a').removeClass('_changed _error');\n\n                var formData = form[0].serialize(true);\n                formData.tab = elementId;\n\n                this.submitTab(M2ePro.url.get(elementId), formData);\n            }\n        },\n\n        restoreAllHelpsAndRememberedChoices: function ()\n        {\n            var self = this;\n            var modalDialogMessage = $('modal_interface_dialog');\n\n            if (!modalDialogMessage) {\n                modalDialogMessage = new Element('div', {\n                    id: 'modal_interface_dialog'\n                });\n            }\n\n            jQuery(modalDialogMessage).confirm({\n                title: M2ePro.translator.translate('Are you sure?'),\n                actions: {\n                    confirm: function() {\n\n                        new Ajax.Request(M2ePro.url.get('settings_interface/restoreRememberedChoices'), {\n                            method: 'get',\n                            asynchronous: true,\n                            onSuccess: function(transport) {\n\n                                BlockNoticeObj.deleteAllHashedStorage();\n                                self.templateEdit.forgetSkipSaveConfirmation();\n\n                                self.messageObj.addSuccessMessage(\n                                    M2ePro.translator.translate('Help Blocks have been successfully restored.')\n                                );\n                            }\n                        });\n                    }\n                },\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    class: 'action-secondary action-dismiss',\n                    click: function (event) {\n                        this.closeModal(event);\n                    }\n                }, {\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action-primary action-accept',\n                    click: function (event) {\n                        this.closeModal(event, true);\n                    }\n                }]\n            });\n        },\n\n        // ---------------------------------------\n\n        submitTab: function(url, formData)\n        {\n            var self = this;\n\n            new Ajax.Request(url, {\n                method: 'post',\n                asynchronous: true,\n                parameters: formData || {},\n                onSuccess: function(transport) {\n                    var result = transport.responseText;\n\n                    self.messageObj.clear();\n                    if (!result.isJSON()) {\n                        self.messageObj.addErrorMessage(result);\n                    }\n\n                    result = JSON.parse(result);\n\n                    if (typeof result['block_notices_show'] !== 'undefined') {\n                        BLOCK_NOTICES_SHOW = result['block_notices_show'];\n                        BlockNoticeObj.initializedBlocks = [];\n                        BlockNoticeObj.init();\n                    }\n\n                    if (result.messages && Array.isArray(result.messages) && result.messages.length) {\n                        self.scrollPageToTop();\n                        result.messages.forEach(function(el) {\n                            var key = Object.keys(el).shift();\n                            self.messageObj['add'+key.capitalize()+'Message'](el[key]);\n                        });\n                        return;\n                    }\n\n                    if (result.success) {\n                        self.messageObj.addSuccessMessage(M2ePro.translator.translate('Settings successfully saved'));\n                    } else {\n                        self.messageObj.addErrorMessage(M2ePro.translator.translate('Error'));\n                    }\n\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});\n","Ess_M2ePro/js/TemplateHandler.js":"define([\n    'M2ePro/Common'\n], function() {\n\n    window.TemplateHandler = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function () {\n        },\n\n        // ---------------------------------------\n\n        checkMessages: function (id, nick, data, storeId, marketplaceId, checkAttributesAvailability, container, callback) {\n            var parameters = '';\n\n            parameters += 'id=' + encodeURIComponent(id);\n            parameters += '&nick=' + encodeURIComponent(nick);\n            parameters += '&store_id=' + encodeURIComponent(storeId);\n            parameters += '&marketplace_id=' + encodeURIComponent(marketplaceId);\n            parameters += '&check_attributes_availability=' + encodeURIComponent(checkAttributesAvailability);\n            parameters += '&'+ data;\n\n            new Ajax.Request(M2ePro.url.get('templateCheckMessages'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: parameters,\n                onSuccess: function (transport) {\n\n                    var messages = transport.responseText.evalJSON()['messages'];\n\n                    if (messages.length == 0) {\n                        $(container).innerHTML = '';\n                        return;\n                    }\n\n                    $(container).innerHTML = messages;\n\n                    if (typeof callback == 'function') {\n                        callback();\n                    }\n\n                }.bind(this)\n            });\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Support.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    window.Support = Class.create(Common, {\n\n        initialize: function()\n        {\n            this.initFormValidation();\n\n            $('more_attachments_container').hide();\n        },\n\n        // ---------------------------------------\n\n        toggleMoreButton: function()\n        {\n            $('more_attachments_container').show();\n        },\n\n        // ---------------------------------------\n\n        moreAttachments: function()\n        {\n            var emptyField = false;\n\n            $$('.field-files input').each(function(obj) {\n                if (obj.value == '') {\n                    emptyField = true;\n                }\n            });\n\n            if (emptyField) {\n                return;\n            }\n\n            var newAttachment = jQuery('#more_button_container').clone();\n            newAttachment.removeAttr('id');\n\n            var newAttachmentInput = newAttachment.find('input[type=file]');\n            newAttachmentInput.removeAttr('id');\n            newAttachmentInput.val(\"\");\n\n            newAttachment.insertAfter('.field-files:last');\n\n            $('more_attachments_container').hide();\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Wizard.js":"define([\n    'M2ePro/Plugin/Messages'\n], function (MessageObj) {\n\n    window.Wizard = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function(currentStatus, currentStep, hiddenSteps)\n        {\n            this.currentStatus = currentStatus;\n\n            this.steps = {};\n            this.steps.current = currentStep;\n            this.steps.hidden = hiddenSteps || [];\n            this.steps.nicks = [];\n        },\n\n        // ----------------)-----------------------\n\n        skip: function(url)\n        {\n            this.confirm({\n                content: M2ePro.translator.translate('Note: If you close the Wizard, it never starts again. You will be required to set all Settings manually. Press Cancel to continue working with Wizard.'),\n                actions: {\n                    confirm: function () {\n                        setLocation(url);\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        complete: function()\n        {\n            window.location.reload();\n        },\n\n        // ---------------------------------------\n\n        setStatus: function(status, callback)\n        {\n            new Ajax.Request(M2ePro.url.get('setStatus'), {\n                method: 'get',\n                parameters: {\n                    status: status\n                },\n                asynchronous: true,\n                onSuccess: (function(transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (response.type == 'error') {\n                        CommonObj.scrollPageToTop();\n                        return MessageObj.addError(response.message);\n                    }\n\n                    this.currentStatus = status;\n\n                    if (typeof callback == 'function') {\n                        callback();\n                    }\n\n                }).bind(this)\n            })\n        },\n\n        setStep: function(step, callback)\n        {\n            new Ajax.Request(M2ePro.url.get('setStep'), {\n                method: 'get',\n                parameters: {\n                    step: step\n                },\n                asynchronous: true,\n                onSuccess: (function(transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (response.type == 'error') {\n                        CommonObj.scrollPageToTop();\n                        return MessageObj.addError(response.message);\n                    }\n\n                    this.steps.current = step;\n\n                    if (typeof callback == 'function') {\n                        callback();\n                    }\n\n                }).bind(this)\n            })\n        },\n\n        // ---------------------------------------\n\n        getNextStep: function()\n        {\n            var stepIndex = this.steps.all.indexOf(this.steps.current);\n\n            if (stepIndex == -1) {\n                return null;\n            }\n\n            var nextStepNick = this.steps.all[stepIndex + 1];\n\n            if (typeof nextStepNick == 'undefined') {\n                return null;\n            }\n\n            return nextStepNick;\n        },\n\n        // ---------------------------------------\n\n        disableContinueButton: function ()\n        {\n            jQuery('#continue').prop('disabled', true);\n        },\n\n        // Steps\n        // ---------------------------------------\n\n        registrationStep: function (url)\n        {\n            this.initFormValidation();\n\n            if (!this.isValidForm()) {\n                return false;\n            }\n\n            MessageObj.clear();\n\n            new Ajax.Request(url, {\n                method       : 'post',\n                parameters   : $('edit_form').serialize(),\n                onSuccess: function(transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (!response.status) {\n                        MessageObj.addErrorMessage(response.message);\n                        return CommonObj.scrollPageToTop();\n                    }\n\n                    WizardObj.complete();\n                }\n            });\n        }\n\n    });\n\n});","Ess_M2ePro/js/Order.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    Order = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function(gridIds)\n        {\n            this.gridIds = gridIds ? eval(gridIds) : [];\n        },\n\n        initializeGrids: function()\n        {\n            var self = OrderObj;\n\n            for (var i = 0; i < self.gridIds.length; i++) {\n                var currentGridId = self.gridIds[i];\n\n                var tempGrid = window[currentGridId + 'JsObject'];\n                if (!(tempGrid instanceof varienGrid)) {\n                    continue;\n                }\n\n                if (typeof self[currentGridId] != 'undefined') {\n                    // already initialized\n                    continue;\n                }\n\n                self[currentGridId] = tempGrid.rowClickCallback;\n                tempGrid.rowClickCallback = self.gridRowClickCallback;\n            }\n        },\n\n        disableGridCallback: function(gridId)\n        {\n            var tempGrid = window[gridId + 'JsObject'];\n\n            if (!(tempGrid instanceof varienGrid)) {\n                return;\n            }\n\n            tempGrid.rowClickCallback = '';\n        },\n\n        restoreGridCallback: function(gridId)\n        {\n            var self = OrderObj;\n            var tempGrid = window[gridId + 'JsObject'];\n\n            if (!(tempGrid instanceof varienGrid)) {\n                return;\n            }\n\n            tempGrid.rowClickCallback = self.gridRowClickCallback;\n        },\n\n        gridRowClickCallback: function(grid, event)\n        {\n            if(['a', 'select', 'option'].indexOf(Event.element(event).tagName.toLowerCase())!=-1) {\n                return;\n            }\n\n            var self = OrderObj;\n            var trElement = Event.findElement(event, 'tr');\n            var tdElement = Event.findElement(event, 'td');\n\n            if ($(tdElement).down('input')) {\n                self[grid.containerId](grid, event);\n            } else {\n                setLocation(trElement.title);\n            }\n        },\n\n        // ---------------------------------------\n\n        viewOrderHelp: function(rowId, data)\n        {\n            var row = $('grid_help_icon_open_' + rowId).up('tr');\n            var grid = row.up('table');\n            var gridId = grid.id.replace('_table', '');\n\n            OrderObj.disableGridCallback(gridId);\n\n            $('grid_help_icon_open_'+rowId).hide();\n            $('grid_help_icon_close_'+rowId).show();\n\n            if ($('grid_help_content_'+rowId) !== null) {\n                $('grid_help_content_'+rowId).show();\n\n                // Restore grid callback\n                // ---------------------------------------\n                setTimeout(function() {\n                    OrderObj.restoreGridCallback(gridId);\n                },150);\n                // ---------------------------------------\n                return;\n            }\n\n            var html = OrderObj.createHelpTitleHtml(rowId);\n\n            data = eval(base64_decode(data));\n            for (var i=0;i<data.length;i++) {\n                html += OrderObj.createHelpActionHtml(data[i]);\n            }\n\n            html += OrderObj.createHelpViewAllLogHtml(rowId, gridId);\n\n            row.insert({\n                after: '<tr id=\"grid_help_content_'+rowId+'\" class=\"grid_help_content\"><td class=\"help_line\" colspan=\"'+($(row).childElements().length)+'\">'+html+'</td></tr>'\n            });\n\n            setTimeout(function() {\n                OrderObj.restoreGridCallback(gridId);\n            },150);\n        },\n\n        hideOrderHelp: function(rowId)\n        {\n            var row = $('grid_help_icon_open_' + rowId).up('tr');\n            var grid = row.up('table');\n            var gridId = grid.id.replace('_table', '');\n\n            OrderObj.disableGridCallback(gridId);\n\n            if ($('grid_help_content_'+rowId) != null) {\n                $('grid_help_content_'+rowId).hide().remove();\n            }\n\n            $('grid_help_icon_open_'+rowId).show();\n            $('grid_help_icon_close_'+rowId).hide();\n\n            setTimeout(function() {\n                OrderObj.restoreGridCallback(gridId);\n            },150);\n        },\n\n        createHelpTitleHtml: function(rowId)\n        {\n            var nativeOrderNumber = $('grid_help_icon_open_' + rowId).up('td').next().innerHTML;\n            var orderTitle = nativeOrderNumber.replace(/<[^>]+>/g, '');\n            var closeHtml = '<a href=\"javascript:void(0);\" onclick=\"OrderObj.hideOrderHelp('+rowId+');\" title=\"'+ M2ePro.translator.translate('Close')+'\"><span class=\"hl_close icon-close\"></span></a>';\n\n            return '<div class=\"hl_header\"><span class=\"hl_title\">'+orderTitle+'</span>'+closeHtml+'</div>';\n        },\n\n        createHelpActionHtml: function(action)\n        {\n            var classContainer = 'hl_container';\n            if (action.type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_SUCCESS')) {\n                classContainer += ' hl_container_success';\n            } else if (action.type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_WARNING')) {\n                classContainer += ' hl_container_warning';\n            } else if (action.type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_NOTICE')) {\n                classContainer += ' hl_container_notice';\n            } else if (action.type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_ERROR')) {\n                classContainer += ' hl_container_error';\n            }\n\n            var type = '<span style=\"color: green;\">'+ M2ePro.translator.translate('Success')+'</span>';\n            if (action.type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_NOTICE')) {\n                type = '<span style=\"color: blue;\">'+ M2ePro.translator.translate('Notice')+'</span>';\n            } else if (action.type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_WARNING')) {\n                type = '<span style=\"color: orange;\">'+ M2ePro.translator.translate('Warning')+'</span>';\n            } else if (action.type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_ERROR')) {\n                type = '<span style=\"color: red;\">'+ M2ePro.translator.translate('Error')+'</span>';\n            }\n\n            var html = '<div class=\"'+classContainer+'\">';\n\n            html += '<div class=\"hl_date\">'+action.date+'</div>';\n\n            if (action.initiator != '') {\n                html += '<div class=\"hl_action\">' +\n                    '<strong style=\"color: gray;\">'+action.initiator+'</strong>&nbsp;&nbsp;' +\n                    '</div>';\n            }\n\n            html += '<div style=\"clear: both\"></div>';\n\n            html += '<div style=\"padding-top: 3px;\"><div style=\"margin-top: 7px;\">';\n            html += '<div class=\"hl_messages_type\">'+type+'</div><div class=\"hl_messages_text\">'+action.text+'</div>';\n            html += '</div></div>';\n\n            html += '</div>';\n\n            return html;\n        },\n\n        createHelpViewAllLogHtml: function(rowId, gridId)\n        {\n            var url = '';\n            if (gridId.match(/ebay/i)) {\n                url = M2ePro.url.get('ebay_log_order/index', {id: rowId});\n            } else {\n                url = M2ePro.url.get('amazon_log_order/index', {id: rowId});\n            }\n\n            return '<div class=\"hl_footer\"><a target=\"_blank\" href=\"'+url+'\">'+ M2ePro.translator.translate('View Full Order Log')+'</a></div>';\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/RequirementsPopup.js":"define([\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Common'\n], function (messagesObj) {\n\n    window.RequirementsPopup = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            this.initErrorMessage();\n        },\n\n        initErrorMessage: function()\n        {\n            messagesObj.addGlobalErrorMessage(M2ePro.translator.translate(\n                'System Configuration does not meet minimum requirements. Please check.'\n            ));\n        },\n\n        // ---------------------------------------\n\n        show: function()\n        {\n            var self = this;\n            var modalDialogMessage = $('requirements_popup_content');\n\n            if (!modalDialogMessage) {\n                modalDialogMessage = new Element('div', {id: 'requirements_popup_content'});\n            }\n\n            self.popupObj = jQuery(modalDialogMessage).modal({\n                title: M2ePro.translator.translate('System Requirements'),\n                type: 'popup',\n                modalClass: 'width-50',\n                buttons: [\n                    {\n                        text: M2ePro.translator.translate('Confirm and Close'),\n                        class: 'action primary',\n                        click: function () {\n                            self.close();\n                        }\n                    }\n                ],\n                closed: function() {\n                    self.close();\n                }\n            });\n\n            self.popupObj.modal('openModal');\n        },\n\n        close: function()\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('general/requirementsPopupClose'),\n            {\n                method: 'post',\n                asynchronous : true,\n                onSuccess: function()\n                {\n                    location.reload();\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Developers.js":"define([\n    'M2ePro/Plugin/Messages'\n], function (MessagesObj) {\n    window.Developers = Class.create();\n    Developers.prototype = {\n\n        inspectionModeElement: null,\n        inspectionModeValue: null,\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            var self = this;\n\n            self.inspectionModeElement = $('inspector_mode');\n            self.inspectionModeValue = self.inspectionModeElement.value;\n\n            self.inspectionModeElement.observe('change', function() {\n                var currentValue = self.inspectionModeElement.value;\n\n                if (currentValue != self.inspectionModeValue) {\n                    $('save_inspector_mode').show();\n                } else {\n                    $('save_inspector_mode').hide();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        saveDirectDatabaseChanges: function ()\n        {\n            var self  = this;\n\n            new Ajax.Request(M2ePro.url.get('developers/save'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: {\n                    inspector_mode: $('inspector_mode').value\n                },\n                onSuccess: function(transport) {\n                    var result = transport.responseText;\n\n                    MessagesObj.clear();\n                    if (!result.isJSON()) {\n                        MessagesObj.addErrorMessage(result);\n                    }\n\n                    result = JSON.parse(result);\n\n                    if (result.success) {\n                        MessagesObj.addSuccessMessage(M2ePro.translator.translate('Settings successfully saved'));\n                        $('save_inspector_mode').hide();\n                        self.inspectionModeValue = self.inspectionModeElement.value;\n                    } else {\n                        MessagesObj.addErrorMessage(M2ePro.translator.translate('Error'));\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    }\n});","Ess_M2ePro/js/ControlPanel.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    window.ControlPanel = Class.create(Common, {\n\n        controlPanelUrl: null,\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            var self = this;\n\n            var cmdKeys = [67, 79, 78, 84, 82, 79, 76, 80, 65, 78, 69, 76];\n            var cmdPressedKeys = [];\n\n            window.document.observe('keyup', function(event) {\n\n                if (cmdPressedKeys.length < cmdKeys.length) {\n                    if (cmdKeys[cmdPressedKeys.length] == event.keyCode) {\n                        cmdPressedKeys.push(event.keyCode);\n                    } else {\n                        cmdPressedKeys = [];\n                    }\n                }\n\n                if (cmdPressedKeys.length == cmdKeys.length) {\n\n                    cmdPressedKeys = [];\n\n                    window.location = self.controlPanelUrl;\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        setControlPanelUrl: function(controlPanelUrl) {\n            this.controlPanelUrl = controlPanelUrl;\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Marketplace.js":"define([\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Common'\n], function (MessageObj) {\n\n    window.Marketplace = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function (synchProgressObj, storedStatuses) {\n            this.synchProgressObj = synchProgressObj;\n\n            this.marketplacesForUpdate = new Array();\n            this.marketplacesForUpdateCurrentIndex = 0;\n            this.storedStatuses = storedStatuses || [];\n\n            this.synchErrors = 0;\n            this.synchWarnings = 0;\n            this.synchSuccess = 0;\n        },\n\n        // ---------------------------------------\n\n        getStoredStatuses: function () {\n            return this.storedStatuses;\n        },\n\n        getStoredStatusByMarketplaceId: function (marketplaceId) {\n            if (marketplaceId == '') {\n                return;\n            }\n\n            for (var i = 0; i < this.storedStatuses.length; i++) {\n                if (this.storedStatuses[i].marketplace_id == marketplaceId) {\n                    return this.storedStatuses[i].status;\n                }\n            }\n        },\n\n        getCurrentStatuses: function () {\n            var allStatuses = [];\n            $$('select.marketplace_status_select').each(function (element) {\n                var elementId = element.getAttribute('marketplace_id');\n                allStatuses.push({\n                    marketplace_id: elementId,\n                    status: parseInt(element.value)\n                });\n            });\n\n            return allStatuses;\n        },\n\n        // ---------------------------------------\n\n        moveChildBlockContent: function (childBlockId, destinationBlockId) {\n            if (childBlockId == '' || destinationBlockId == '') {\n                return;\n            }\n\n            $(destinationBlockId).appendChild($(childBlockId));\n            return true;\n        },\n\n        // ---------------------------------------\n\n        saveAction: function () {\n            MessageObj.clear();\n            CommonObj.scrollPageToTop();\n\n            var changedStatuses = this.runEnabledSynchronization();\n            this.saveSettings();\n\n            for (var i = 0; i < changedStatuses.length; i++) {\n                $('changed_' + changedStatuses[i].marketplace_id).style.display = 'none';\n                this.changeStatus($('status_' + changedStatuses[i].marketplace_id));\n            }\n\n            MessageObj.addSuccessMessage(M2ePro.translator.translate('Settings have been saved.'));\n        },\n\n        updateAction: function () {\n            MessageObj.clear();\n            CommonObj.scrollPageToTop();\n            this.runAllSynchronization();\n        },\n\n        completeStepAction: function () {\n            var self = this;\n\n            if (self.runAllSynchronization(self.getCurrentStatuses())) {\n\n                self.saveSettings();\n\n                var intervalId = setInterval(function () {\n                    if (typeof self.marketplacesUpdateFinished != 'undefined' && self.marketplacesUpdateFinished) {\n                        clearInterval(intervalId);\n                        window.opener.completeStep = 1;\n                        window.close();\n                    }\n                }, 1000);\n\n            } else {\n                MessageObj.addErrorMessage(M2ePro.translator.translate('You must select at least one Site you will work with.'));\n            }\n        },\n\n        // ---------------------------------------\n\n        saveSettings: function () {\n            new Ajax.Request(M2ePro.url.get('formSubmit', $('edit_form').serialize(true)), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function (transport) {\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        runSingleSynchronization: function (runNowButton) {\n            MessageObj.clear();\n            CommonObj.scrollPageToTop();\n\n            var self = this;\n            var marketplaceStatusSelect = $(runNowButton).up(2).select('.marketplace_status_select')[0];\n\n            self.marketplacesForUpdate = [marketplaceStatusSelect.readAttribute('marketplace_id')];\n            self.marketplacesForUpdateCurrentIndex = 0;\n\n            self.synchErrors = 0;\n            self.synchWarnings = 0;\n            self.synchSuccess = 0;\n\n            self.runNextMarketplaceNow();\n            return true;\n        },\n\n        runEnabledSynchronization: function () {\n            var currentStatuses = this.getCurrentStatuses();\n            var storedStatuses = this.getStoredStatuses();\n            var changedStatuses = new Array();\n            this.marketplacesForUpdate = new Array();\n\n            for (var i = 0; i < storedStatuses.length; i++) {\n\n                if ((storedStatuses[i].marketplace_id == currentStatuses[i].marketplace_id)\n                    && (storedStatuses[i].status != currentStatuses[i].status)) {\n\n                    this.storedStatuses[i].status = currentStatuses[i].status;\n                    changedStatuses.push({\n                        marketplace_id: currentStatuses[i].marketplace_id,\n                        status: currentStatuses[i].status\n                    });\n\n                    this.changeStatusInfo(currentStatuses[i].marketplace_id, currentStatuses[i].status);\n\n                    if (currentStatuses[i].status) {\n                        this.marketplacesForUpdate[this.marketplacesForUpdate.length] = currentStatuses[i].marketplace_id;\n                    }\n                }\n            }\n            this.marketplacesForUpdateCurrentIndex = 0;\n\n            this.synchErrors = 0;\n            this.synchWarnings = 0;\n            this.synchSuccess = 0;\n\n            this.runNextMarketplaceNow();\n            return changedStatuses;\n        },\n\n        runAllSynchronization: function (statuses) {\n            var statusesForSynch = statuses || this.getStoredStatuses();\n\n            this.marketplacesForUpdate = new Array();\n            this.marketplacesForUpdateCurrentIndex = 0;\n\n            for (var i = 0; i < statusesForSynch.length; i++) {\n\n                var marketplaceId = statusesForSynch[i].marketplace_id;\n                var marketplaceState = statusesForSynch[i].status;\n\n                if (!marketplaceId) {\n                    continue;\n                }\n\n                this.changeStatusInfo(marketplaceId, marketplaceState);\n\n                if (marketplaceState == 1) {\n                    this.marketplacesForUpdate[this.marketplacesForUpdate.length] = marketplaceId;\n                }\n            }\n\n            if (this.marketplacesForUpdate.length == 0) {\n                return false;\n            }\n\n            this.marketplacesForUpdateCurrentIndex = 0;\n\n            this.synchErrors = 0;\n            this.synchWarnings = 0;\n            this.synchSuccess = 0;\n\n            this.runNextMarketplaceNow();\n            return true;\n        },\n\n        // ---------------------------------------\n\n        runNextMarketplaceNow: function () {\n            var self = this;\n\n            if (self.marketplacesForUpdateCurrentIndex > 0) {\n\n                $('synch_info_wait_' + self.marketplacesForUpdate[self.marketplacesForUpdateCurrentIndex - 1]).hide();\n                $('synch_info_process_' + self.marketplacesForUpdate[self.marketplacesForUpdateCurrentIndex - 1]).hide();\n                $('synch_info_complete_' + self.marketplacesForUpdate[self.marketplacesForUpdateCurrentIndex - 1]).show();\n\n                var tempEndFlag = 0;\n                if (self.marketplacesForUpdateCurrentIndex >= self.marketplacesForUpdate.length) {\n                    tempEndFlag = 1;\n                }\n\n                new Ajax.Request(M2ePro.url.get('general/synchGetLastResult'), {\n                    method: 'get',\n                    asynchronous: true,\n                    onSuccess: function (transport) {\n\n                        if (transport.responseText == self.synchProgressObj.resultTypeError) {\n                            self.synchErrors++;\n                        } else if (transport.responseText == self.synchProgressObj.resultTypeWarning) {\n                            self.synchWarnings++;\n                        } else {\n                            self.synchSuccess++;\n                        }\n\n                        if (tempEndFlag == 1) {\n                            if (self.synchErrors > 0) {\n                                self.synchProgressObj.printFinalMessage(self.synchProgressObj.resultTypeError);\n                            } else if (self.synchWarnings > 0) {\n                                self.synchProgressObj.printFinalMessage(self.synchProgressObj.resultTypeWarning);\n                            } else {\n                                self.synchProgressObj.printFinalMessage(self.synchProgressObj.resultTypeSuccess);\n                            }\n                            self.synchErrors = 0;\n                            self.synchWarnings = 0;\n                            self.synchSuccess = 0;\n                        }\n                    }\n                });\n            }\n\n            if (self.marketplacesForUpdateCurrentIndex >= self.marketplacesForUpdate.length) {\n\n                self.marketplacesForUpdate = new Array();\n                self.marketplacesForUpdateCurrentIndex = 0;\n                self.marketplacesUpdateFinished = true;\n\n                self.synchProgressObj.end();\n\n                return;\n            }\n\n            var marketplaceId = self.marketplacesForUpdate[self.marketplacesForUpdateCurrentIndex];\n            self.marketplacesForUpdateCurrentIndex++;\n\n            $('synch_info_wait_' + marketplaceId).hide();\n            $('synch_info_process_' + marketplaceId).show();\n            $('synch_info_complete_' + marketplaceId).hide();\n\n            var titleProgressBar = $('marketplace_title_' + marketplaceId).innerHTML;\n            var marketplaceComponentName = $('status_' + marketplaceId).readAttribute('markeptlace_component_name');\n\n            if (marketplaceComponentName != '') {\n                titleProgressBar = marketplaceComponentName + ' ' + titleProgressBar;\n            }\n\n            self.synchProgressObj.runTask(\n                titleProgressBar,\n                M2ePro.url.get('runSynchNow', {'marketplace_id': marketplaceId}),\n                '', 'MarketplaceObj.runNextMarketplaceNow();'\n            );\n\n            return true;\n        },\n\n        // ---------------------------------------\n\n        changeStatus: function (element) {\n            var marketplaceId = element.readAttribute('marketplace_id');\n            var runSingleButton = $('run_single_button_' + marketplaceId);\n\n            this.markChangedStatus(marketplaceId, element.value);\n\n            if (element.value == '1') {\n                if (this.getStoredStatusByMarketplaceId(marketplaceId) == element.value) {\n                    runSingleButton && runSingleButton.show();\n                }\n\n            } else {\n                $('synch_info_complete_' + marketplaceId).hide();\n                runSingleButton && runSingleButton.hide();\n            }\n        },\n\n        markChangedStatus: function (marketplaceId, status) {\n            var storedStatus = this.getStoredStatusByMarketplaceId(marketplaceId);\n            var changedStatus = $('changed_' + marketplaceId);\n\n            if (storedStatus != status) {\n                changedStatus.style.display = 'inline-block';\n            } else {\n                changedStatus.style.display = 'none';\n            }\n        },\n\n        changeStatusInfo: function (marketplaceId, status) {\n            if (status == 1) {\n                $('synch_info_wait_' + marketplaceId).show();\n                $('synch_info_process_' + marketplaceId).hide();\n                $('synch_info_complete_' + marketplaceId).hide();\n            } else {\n                $('synch_info_wait_' + marketplaceId).hide();\n                $('synch_info_process_' + marketplaceId).hide();\n                $('synch_info_complete_' + marketplaceId).hide();\n            }\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Attribute.js":"define([], function () {\n    window.Attribute = Class.create();\n    Attribute.prototype = {\n\n        // ---------------------------------------\n\n        attrData: '',\n\n        availableAttributes: [],\n\n        // ---------------------------------------\n\n        setAvailableAttributes: function(attributes)\n        {\n            this.availableAttributes = attributes;\n        },\n\n        // ---------------------------------------\n\n        initialize: function(selectId) {},\n\n        // ---------------------------------------\n\n        appendToText: function(ddId, targetId)\n        {\n            if ($(ddId).value == '') {\n                return;\n            }\n\n            var suffix = '#' + $(ddId).value + '#';\n            $(targetId).value = $(targetId).value + suffix;\n        },\n\n        appendToTextarea: function(value)\n        {\n            if (value == '') {\n                return;\n            }\n\n            if (typeof tinymce != 'undefined' && typeof tinymce.get('description_template') != 'undefined') {\n\n                var data = tinymce.get('description_template').getContent();\n                tinymce.get('description_template').setContent(data + value);\n\n                return;\n            }\n\n            var element = $('description_template');\n\n            if (document.selection) {\n\n                /* IE */\n                element.focus();\n                document.selection.createRange().text = value;\n                element.focus();\n\n            } else if (element.selectionStart || element.selectionStart == '0') {\n\n                /* Webkit */\n                var startPos = element.selectionStart;\n                var endPos = element.selectionEnd;\n                var scrollTop = element.scrollTop;\n                element.value = element.value.substring(0, startPos) + value + element.value.substring(endPos, element.value.length);\n                element.focus();\n                element.selectionStart = startPos + value.length;\n                element.selectionEnd = startPos + value.length;\n                element.scrollTop = scrollTop;\n\n            } else {\n\n                element.value += value;\n                element.focus();\n            }\n        },\n\n        // ---------------------------------------\n\n        checkAttributesSelect: function(id, value)\n        {\n            if ($(id)) {\n                if (typeof M2ePro.formData[id] != 'undefined') {\n                    $(id).value = M2ePro.formData[id];\n                }\n                if (value) {\n                    $(id).value = value;\n                }\n            }\n        },\n\n        renderAttributes: function(id, insertTo, value, width)\n        {\n            var style = width ? ' style=\"width: ' + width + 'px;\"' : '';\n            var txt = '<select class=\"select admin__control-select\" name=\"' + id + '\" id=\"' + id + '\"' + style + '>\\n';\n\n            txt += this.attrData;\n            txt += '</select>';\n\n            $(insertTo).innerHTML = txt;\n            this.checkAttributesSelect(id, value);\n        },\n\n        renderAttributesWithEmptyHiddenOption: function(id, insertTo, value, width)\n        {\n            var style = width ? ' style=\"width: ' + width + 'px;\"' : '';\n            var txt = '<select name=\"' + id + '\" id=\"' + id + '\" class=\"M2ePro-required-when-visible select admin__control-select\"' + style + '>\\n';\n\n            txt += '<option style=\"display: none;\"></option>\\n';\n            txt += this.attrData;\n            txt += '</select>';\n\n            $(insertTo).innerHTML = txt;\n            this.checkAttributesSelect(id, value);\n        },\n\n        renderAttributesWithEmptyOption: function(id, insertTo, value, notRequiried)\n        {\n            var classes = 'M2ePro-custom-attribute-can-be-created select admin__control-select';\n\n            if (!notRequiried) {\n                classes += ' M2ePro-required-when-visible';\n            }\n\n            var txt = '<select name=\"' + id + '\" id=\"' + id + '\" class=\"' + classes + '\" allowed_attribute_types=\"text,price,select\">\\n';\n\n            txt += '<option class=\"empty\"></option>\\n';\n            txt += this.attrData;\n            txt += '</select>';\n\n            if ($(insertTo + '_note') != null && $$('#' + insertTo + '_note').length != 0) {\n                $(insertTo).innerHTML = txt + $(insertTo + '_note').innerHTML;\n            } else {\n                $(insertTo).innerHTML = txt;\n            }\n\n            this.checkAttributesSelect(id, value);\n        }\n\n        // ---------------------------------------\n    };\n});","Ess_M2ePro/js/Action.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    window.Action = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function (gridHandler) {\n            this.gridHandler = gridHandler;\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Grid.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    window.Grid = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function(gridId)\n        {\n            this.gridId = gridId;\n            this.prepareActions();\n        },\n\n        // ---------------------------------------\n\n        afterInitPage: function()\n        {\n            var submitButton = $$('#'+this.gridId+'_massaction-form button');\n\n            submitButton.each((function(s) {\n                s.writeAttribute(\"onclick\",'');\n                s.observe('click', (function() {\n                    this.massActionSubmitClick();\n                }).bind(this));\n            }).bind(this));\n        },\n\n        // ---------------------------------------\n\n        getGridObj: function()\n        {\n            return window[this.gridId + 'JsObject'];\n        },\n\n        getGridMassActionObj: function()\n        {\n            return window[this.gridId + '_massactionJsObject'];\n        },\n\n        // ---------------------------------------\n\n        getCellContent: function(rowId,cellIndex)\n        {\n            var rows = this.getGridObj().rows;\n\n            for(var i=0;i<rows.length;i++) {\n                var row = rows[i];\n                var cells = $(row).childElements();\n\n                var checkbox = $(cells[0]).select('input');\n                checkbox = checkbox[0];\n\n                if (checkbox.value == rowId) {\n                    return trim(cells[cellIndex].innerHTML);\n                }\n            }\n\n            return '';\n        },\n\n        // ---------------------------------------\n\n        getProductNameByRowId: function(rowId)\n        {\n            var cellContent = this.getCellContent(rowId,this.productTitleCellIndex);\n            var expr = new RegExp(/<span[^>]*>(.*?)<\\/span>/i);\n            var matches = expr.exec(cellContent);\n\n            return (matches && !Object.isUndefined(matches[1])) ? matches[1] : '';\n        },\n\n        // ---------------------------------------\n\n        selectAll: function()\n        {\n            this.getGridMassActionObj().selectAll();\n        },\n\n        unselectAll: function()\n        {\n            this.getGridMassActionObj().unselectAll();\n        },\n\n        unselectAllAndReload: function()\n        {\n            this.unselectAll();\n            this.getGridObj().reload();\n        },\n\n        // ---------------------------------------\n\n        selectByRowId: function(rowId)\n        {\n            this.unselectAll();\n\n            var rows = this.getGridObj().rows;\n            for(var i=0;i<rows.length;i++) {\n                var row = rows[i];\n                var cells = $(row).childElements();\n\n                var checkbox = $(cells[0]).select('input');\n                checkbox = checkbox[0];\n\n                if (checkbox.value == rowId) {\n                    checkbox.checked = true;\n                    this.getGridMassActionObj().checkedString = rowId.toString();\n                    break;\n                }\n            }\n        },\n\n        // ---------------------------------------\n\n        getSelectedProductsString: function()\n        {\n            return this.getGridMassActionObj().checkedString\n        },\n\n        getSelectedProductsArray: function()\n        {\n            return this.getSelectedProductsString().split(',');\n        },\n\n        getOrderedSelectedProductsArray: function()\n        {\n            var selectedProductsArray = this.getSelectedProductsArray();\n            var checkboxesValuesArray = this.getGridMassActionObj().getCheckboxesValuesAsString().split(',');\n\n            var orderedSelectedProductArray = [];\n\n            checkboxesValuesArray.forEach(function (value) {\n                if (selectedProductsArray.indexOf(value) >= 0) {\n                    orderedSelectedProductArray.push(value);\n                }\n            });\n\n            return orderedSelectedProductArray;\n        },\n\n        // ---------------------------------------\n\n        massActionSubmitClick: function()\n        {\n            var self = this;\n\n            if (self.getSelectedProductsString() == '' || self.getSelectedProductsArray().length == 0) {\n                self.alert(M2ePro.translator.translate('Please select Items.'));\n                return;\n            }\n\n            var selectAction = true;\n            $$('select#'+self.gridId+'_massaction-select option').each(function(o) {\n                if (o.selected && o.value == '') {\n                    self.alert(M2ePro.translator.translate('Please select Action.'));\n                    selectAction = false;\n                    return;\n                }\n            });\n\n            if (!selectAction) {\n                return;\n            }\n\n            self.scrollPageToTop();\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        $$('select#'+self.gridId+'_massaction-select option').each(function(o) {\n\n                            if (!o.selected) {\n                                return;\n                            }\n\n                            if (!o.value || !self.actions[o.value + 'Action']) {\n                                self.alert(M2ePro.translator.translate('Please select Action.'));\n                                return;\n                            }\n\n                            self.actions[o.value + 'Action']();\n\n                        });\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        viewItemHelp: function(rowId, data, hideViewLog)\n        {\n            $('grid_help_icon_open_'+rowId).hide();\n            $('grid_help_icon_close_'+rowId).show();\n\n            if ($('grid_help_content_'+rowId) != null) {\n                $('grid_help_content_'+rowId).show();\n                return;\n            }\n\n            var html = this.createHelpTitleHtml(rowId);\n\n            var synchNote = $('synch_template_list_rules_note_'+rowId);\n            if (synchNote) {\n                html += this.createSynchNoteHtml(synchNote.innerHTML)\n            }\n\n            data = eval(base64_decode(data));\n            for (var i=0;i<data.length;i++) {\n                html += this.createHelpActionHtml(data[i]);\n            }\n\n            if (!hideViewLog) {\n                html += this.createHelpViewAllLogHtml(rowId);\n            }\n\n            var rows = this.getGridObj().rows;\n            for(var i=0;i<rows.length;i++) {\n                var row = rows[i];\n                var cels = $(row).childElements();\n\n                var checkbox = $(cels[0]).childElements();\n                checkbox = checkbox[0].firstElementChild;\n\n                if (checkbox.value == rowId) {\n                    row.insert({\n                      after: '<tr id=\"grid_help_content_'+rowId+'\" class=\"grid_help_content\"><td class=\"help_line\" colspan=\"'+($(row).childElements().length)+'\">'+html+'</td></tr>'\n                    });\n                }\n            }\n            var self = this;\n            $('hide_item_help_' + rowId).observe('click', function() {\n                self.hideItemHelp(rowId);\n            });\n        },\n\n        hideItemHelp: function(rowId)\n        {\n            if ($('grid_help_content_'+rowId) != null) {\n                $('grid_help_content_'+rowId).hide().remove();\n            }\n\n            $('grid_help_icon_open_'+rowId).show();\n            $('grid_help_icon_close_'+rowId).hide();\n        },\n\n        // ---------------------------------------\n\n        createHelpTitleHtml: function(rowId)\n        {\n            var productTitle = this.getProductNameByRowId(rowId);\n            var closeHtml = '<a href=\"javascript:void(0);\" id=\"hide_item_help_' + rowId + '\" title=\"'+M2ePro.translator.translate('Close')+'\"><span class=\"hl_close icon-close\"></span></a>';\n            return '<div class=\"hl_header\"><span class=\"hl_title\">'+productTitle+'</span>'+closeHtml+'</div>';\n        },\n\n        createSynchNoteHtml: function(synchNote)\n        {\n                return '<div class=\"messages m2epro-messages a-left\">' +\n                    '<div class=\"message message-warning error\">' + synchNote+\n                    '</div></div></div>';\n        },\n\n        createHelpActionHtml: function(action)\n        {\n            var self = this;\n            var classContainer = 'hl_container';\n\n            if (action.type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_SUCCESS')) {\n                classContainer += ' hl_container_success';\n            } else if (action.type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_WARNING')) {\n                classContainer += ' hl_container_warning';\n            } else if (action.type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_ERROR')) {\n                classContainer += ' hl_container_error';\n            } else {\n                classContainer += ' hl_container_notice';\n            }\n\n            var html = '<div class=\"'+classContainer+'\">';\n                html += '<div class=\"hl_date\">'+action.date+'</div>' +\n                        '<div class=\"hl_action\">';\n\n            if (action.initiator != '') {\n                html += '<strong style=\"color: gray;\">'+action.initiator+'</strong>&nbsp;&nbsp;';\n            }\n\n            html += '<strong>'+action.action+'</strong>';\n\n            if(action.action_in_progress) {\n                html += '<span style=\"color: gray\"> (' + M2ePro.translator.translate('In Progress') + ')</span>';\n            }\n\n            html += '</div>' +\n                '<div style=\"clear: both\"></div>' +\n                '<div style=\"padding-top: 3px;\">';\n\n            for (var i=0;i<action.items.length;i++) {\n\n                var type;\n\n                if (action.items[i].type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_SUCCESS')) {\n                    if (action.items[i].count) {\n                        type = '<span style=\"color: green;\"> ' + action.items[i].count + ' ' +\n                            M2ePro.translator.translate('Product(s)') +\n                        '</span>';\n                    } else {\n                        type = '<span style=\"color: green;\">' +\n                            M2ePro.translator.translate('Success') +\n                        '</span>';\n                    }\n                } else if (action.items[i].type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_WARNING')) {\n                    if (action.items[i].count) {\n                        type = '<span style=\"color: orange;\"> ' + action.items[i].count + ' ' +\n                            M2ePro.translator.translate('Product(s)') +\n                        '</span>';\n                    } else {\n                        type = '<span style=\"color: orange;\">' +\n                            M2ePro.translator.translate('Warning') +\n                        '</span>';\n                    }\n                } else if (action.items[i].type == M2ePro.php.constant('Ess_M2ePro_Model_Log_AbstractModel::TYPE_ERROR')) {\n                    if (action.items[i].count) {\n                        type = '<span style=\"color: red;\"> ' + action.items[i].count + ' ' +\n                            M2ePro.translator.translate('Product(s)') +\n                        '</span>';\n                    } else {\n                        type = '<span style=\"color: red;\">' +\n                            M2ePro.translator.translate('Error') +\n                        '</span>';\n                    }\n                } else {\n                    if (action.items[i].count) {\n                        type = '<span style=\"color: #444;\"> ' + action.items[i].count + ' ' +\n                            M2ePro.translator.translate('Product(s)') +\n                            '</span>';\n                    } else {\n                        type = '<span style=\"color: #444;\">' +\n                            M2ePro.translator.translate('Notice') +\n                            '</span>';\n                    }\n                }\n\n                var description = action.items[i].description;\n                if (description.indexOf('code:64') !== -1) {\n                    description = description.replace(/^(.*?)(\\(code\\:64,\\s*amount_due\\:(.*?)\\s*,\\s*currency\\:(.*?)\\s*)(\\))(.*?)$/gi,\n                        '$1$2, <a href=\"#\" onclick=\"EbayListingTransferringPaymentHandlerObj.payNowAction(\\'$3\\', \\'$4\\', \\'\\')\">Add Funds</a>$5$6'\n\n                    );\n                }\n\n                html += '<div style=\"margin-top: 7px;\"><div class=\"hl_messages_type\">'+type+'</div><div class=\"hl_messages_text\">'+description+'</div></div>';\n            }\n\n            html +=     '</div>' +\n                    '</div>';\n\n            return html;\n        },\n\n        // ---------------------------------------\n\n        createHelpViewAllLogHtml: function(rowId)\n        {\n            return '<div class=\"hl_footer\"><a target=\"_blank\" href=\"'+this.getLogViewUrl(rowId)+'\">'+\n                   M2ePro.translator.translate('View Full Product Log')+\n                   '</a></div>';\n        },\n\n        // ---------------------------------------\n\n        getLogViewUrl: function(rowId)\n        {\n            alert('abstract getLogViewUrl');\n        },\n\n        // ---------------------------------------\n\n        prepareActions: function()\n        {\n            alert('abstract prepareActions');\n        },\n\n        // ---------------------------------------\n\n        getComponent: function()\n        {\n            alert('abstract getComponent');\n        }\n\n        // ---------------------------------------\n    });\n\n});\n","Ess_M2ePro/js/Log.js":"define([\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Common'\n], function (modal) {\n\n    window.Log = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function() {},\n\n        // ---------------------------------------\n\n        showFullText: function(element, title)\n        {\n            var content = '<div class=\"log-description-full\">' +\n                element.next().innerHTML +\n                '</div>';\n\n            title = title || M2ePro.translator.translate('Message');\n\n            modal({\n                title: title,\n                type: 'popup',\n                modalClass: 'width-800',\n                buttons: [{\n                    text: M2ePro.translator.translate('Close'),\n                    class: 'action-secondary',\n                    click: function () {\n                        this.closeModal();\n                    }\n                }]\n            }, content).openModal();\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/ControlPanel/Database/Grid.js":"define([\n    'jquery',\n    'M2ePro/Grid',\n    'Magento_Ui/js/modal/modal'\n], function (jquery, grid, modal) {\n\n    window.ControlPanelDatabaseGrid = Class.create(Grid, {\n\n        mergeModeCookieKey: null,\n\n        // ---------------------------------------\n\n        setMergeModeCookieKey: function (key)\n        {\n            this.mergeModeCookieKey = key;\n        },\n\n        prepareActions: function()\n        {\n            this.actions = {\n                deleteTableRowsAction: function(id) { this.deleteTableRows(id); }.bind(this),\n                updateTableCellsAction: function() { this.openTableCellsPopup('update'); }.bind(this)\n            }\n        },\n\n        // ---------------------------------------\n\n        switchMergeMode: function()\n        {\n            this.isMergeModeEnabled() ? this.setMergeMode('0') : this.setMergeMode('1');\n            window.location = M2ePro.url.get('controlPanel/manageTable');\n        },\n\n        isMergeModeEnabled: function()\n        {\n            var cookieValue = getCookie(this.mergeModeCookieKey);\n            return cookieValue != null && cookieValue != ''  && cookieValue != '0';\n        },\n\n        setMergeMode: function(value)\n        {\n            setCookie(this.mergeModeCookieKey, value, 3*365, '/');\n        },\n\n        mergeParentTable: function(component)\n        {\n            this.setMergeMode('1');\n            window.location = M2ePro.url.get('controlPanel/manageTable', {component: component});\n        },\n\n        // ---------------------------------------\n\n        deleteTableRows: function(id)\n        {\n            var self = this,\n                confirmAction,\n                selectedIds = id ? id : self.getSelectedProductsString();\n\n            confirmAction = function() {\n                new Ajax.Request(M2ePro.url.get('controlPanel/deleteTableRows'), {\n                    method:'post',\n                    parameters: {\n                        ids: selectedIds\n                    },\n                    onSuccess: function(transport) {\n                        self.unselectAllAndReload();\n                    }\n                });\n            };\n\n            if (id) {\n                self.confirm({\n                    actions: {\n                        confirm: function () {\n                            confirmAction();\n                        },\n                        cancel: function () {\n                            return false;\n                        }\n                    }\n                });\n            } else {\n                confirmAction();\n            }\n        },\n\n        openTableCellsPopup: function(mode)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('controlPanel/getTableCellsPopupHtml'), {\n                method: 'post',\n                parameters: {\n                    ids:  self.getSelectedProductsString(),\n                    mode: mode\n                },\n                onSuccess: function(transport) {\n\n                    var containerEl = jQuery('#controlPanel_manage_row_popup_content').get(0);\n                    if (!containerEl) {\n                        containerEl = document.createElement('div');\n                        containerEl.id = 'controlPanel_manage_row_popup_content';\n                    }\n\n                    containerEl.update(transport.responseText);\n\n                    self.popup = jQuery(containerEl);\n\n                    modal({\n                        title: mode == 'update' ? 'Edit Table Records' : 'Add Table Row',\n                        modalClass: 'width-50',\n                        type: 'popup',\n                        buttons: [\n                            {\n                                text: 'Close',\n                                class: 'action',\n                                click: function () {\n                                    self.popup.modal('closeModal');\n                                }\n                            },\n                            {\n                                text: 'Confirm',\n                                class: 'action primary',\n                                click: function () {\n                                    mode == 'update' ? self.confirmUpdateCells()\n                                                     : self.confirmAddRow();\n                                }\n                            }\n                        ]\n                    }, self.popup);\n\n                    self.popup.modal('openModal');\n                }\n            });\n        },\n\n        confirmUpdateCells: function()\n        {\n            var self = this;\n\n            if (!this.isAnySwitcherEnabled()) {\n\n                self.alert('You should select columns.');\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('controlPanel/updateTableCells'), {\n                method: 'post',\n                asynchronous: false,\n                parameters: Form.serialize($('controlPanel_tabs_database_table_cells_popup_form')),\n                onSuccess: function(transport) {\n                    self.unselectAllAndReload();\n                    self.popup && self.popup.modal('closeModal');\n                }\n            });\n        },\n\n        confirmAddRow: function()\n        {\n            var self = this;\n\n            if (!this.isAnySwitcherEnabled()) {\n\n                self.alert('You should select columns.');\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('controlPanel/addTableRow'), {\n                method: 'post',\n                asynchronous: false,\n                parameters: Form.serialize($('controlPanel_tabs_database_table_cells_popup_form')),\n                onSuccess: function(transport) {\n                    self.getGridObj().reload();\n                    self.popup && self.popup.modal('closeModal');\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        mouseOverCell: function()\n        {\n            var cellId = this.id;\n\n            if ($(cellId + '_save_link').getStyle('display') != 'none') {\n                return;\n            }\n\n            $(cellId + '_edit_link').show();\n            $(cellId + '_view_link').hide();\n            $(cellId + '_save_link').hide();\n        },\n\n        mouseOutCell: function()\n        {\n            var cellId = this.id;\n\n            if ($(cellId + '_save_link').getStyle('display') != 'none') {\n                return;\n            }\n\n            $(cellId + '_edit_link').hide();\n            $(cellId + '_view_link').hide();\n            $(cellId + '_save_link').hide();\n        },\n\n        // ---------------------------------------\n\n        switchCellToView: function(cellId)\n        {\n            $(cellId + '_edit_link').show();\n            $(cellId + '_view_link').hide();\n            $(cellId + '_save_link').hide();\n\n            $(cellId + '_edit_container').hide();\n            $(cellId + '_view_container').show();\n        },\n\n        switchCellToEdit: function(cellId)\n        {\n            $(cellId + '_edit_link').hide();\n            $(cellId + '_view_link').show();\n            $(cellId + '_save_link').show();\n\n            $(cellId + '_edit_container').show();\n            $(cellId + '_view_container').hide();\n        },\n\n        saveTableCell: function(rowId, columnName)\n        {\n            var self = this;\n            var params = {\n                ids:   rowId,\n                cells: columnName\n            };\n\n            var cellId = 'table_row_cell_' + columnName + '_' + rowId;\n            params['value_'+ columnName] = $(cellId + '_edit_input').value;\n\n            new Ajax.Request(M2ePro.url.get('controlPanel/updateTableCells'), {\n                method: 'post',\n                asynchronous: false,\n                parameters: params,\n                onSuccess: function(transport) {\n                    self.switchCellToView(cellId);\n                    self.getGridObj().reload();\n                }\n            });\n        },\n\n        onKeyDownEdit: function(rowId, columnName, event)\n        {\n            if (event.keyCode != 13) {\n                return false;\n            }\n\n            this.saveTableCell(rowId, columnName);\n            return false;\n        },\n\n        // ---------------------------------------\n\n        switcherStateChange: function()\n        {\n            var inputElement = $(this.id.replace('switcher','input'));\n\n            inputElement.removeAttribute('disabled');\n\n            if (!this.checked) {\n                inputElement.value = '';\n                inputElement.setAttribute('disabled', 'disabled');\n            }\n        },\n\n        isAnySwitcherEnabled: function()\n        {\n            var result = false;\n\n            $$('#controlPanel_tabs_database_table_cells_popup .input_switcher').each(function(el) {\n                if (el.checked) {\n                    result = true;\n                    return true;\n                }\n            });\n\n            return result;\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Wizard/InstallationEbay.js":"define([\n    'M2ePro/Plugin/Messages',\n], function (MessageObj) {\n\n    window.WizardInstallationEbay = Class.create(Common, {\n\n        continueStep: function ()\n        {\n            if (WizardObj.steps.current.length) {\n                this[WizardObj.steps.current + 'Step']();\n            }\n        },\n\n        // Steps\n        // ---------------------------------------\n\n        registrationStep: function ()\n        {\n            WizardObj.registrationStep(M2ePro.url.get('wizard_installationEbay/createLicense'));\n        },\n\n        accountStep: function ()\n        {\n            if (!this.isValidForm()) {\n                return false;\n            }\n\n            new Ajax.Request(M2ePro.url.get('wizard_installationEbay/beforeToken'), {\n                method       : 'post',\n                asynchronous : true,\n                parameters   : $('edit_form').serialize(),\n                onSuccess: function(transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (response && response['message']) {\n                        MessageObj.addErrorMessage(response['message']);\n                        return CommonObj.scrollPageToTop();\n                    }\n\n                    if (!response['url']) {\n                        MessageObj.addErrorMessage(M2ePro.translator.translate('An error during of account creation.'));\n                        return CommonObj.scrollPageToTop();\n                    }\n\n                    return setLocation(response['url']);\n                }\n            });\n        },\n\n        listingTutorialStep: function ()\n        {\n            WizardObj.setStep(WizardObj.getNextStep(), function (){\n                WizardObj.complete();\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Wizard/InstallationAmazon.js":"define([\n    'M2ePro/Plugin/Messages'\n], function (MessagesObj) {\n\n    window.WizardInstallationAmazon = Class.create(Common, {\n\n        // ---------------------------------------\n\n        continueStep: function ()\n        {\n            if (WizardObj.steps.current.length) {\n                this[WizardObj.steps.current + 'Step']();\n            }\n        },\n\n        // Steps\n        // ---------------------------------------\n\n        registrationStep: function ()\n        {\n            WizardObj.registrationStep(M2ePro.url.get('wizard_installationAmazon/createLicense'));\n        },\n\n        marketplaceChange: function()\n        {\n            var marketplaceId = $('marketplace_id').value;\n            if (!marketplaceId) {\n                return;\n            }\n\n            if (!$('manual_authorization_marketplace_developer_key_container_'+marketplaceId)) {\n                $$('.manual-authorization').each(function (el) {\n                    el.hide();\n                });\n                return;\n            }\n\n            $('amazon_wizard_installation_account_manual_authorization').show();\n            $('manual_authorization_marketplace_application_name_container').show();\n            $('manual_authorization_marketplace_developer_key_container_'+marketplaceId).show();\n            $('manual_authorization_marketplace_register_url_container_'+marketplaceId).show();\n            $('manual_authorization_marketplace_merchant_id_container_'+marketplaceId).show();\n            $('manual_authorization_marketplace_token_container_'+marketplaceId).show();\n        },\n\n        accountStep: function ()\n        {\n            if (!$('marketplace_id').value) {\n                this.alert(M2ePro.translator.translate('Please select Marketplace first.'));\n                return;\n            }\n\n            var marketplaceId = $('marketplace_id').value;\n\n            if ($('manual_authorization_marketplace_developer_key_container_'+marketplaceId)) {\n\n                var merchantId = $('manual_authorization_marketplace_merchant_id_'+marketplaceId).value;\n                var token      = $('manual_authorization_marketplace_token_'+marketplaceId).value;\n\n                if (!merchantId || !token) {\n                    this.alert(M2ePro.translator.translate('Please fill Merchant ID and MWS Auth Token fields.'));\n                    return;\n                }\n\n                var checkResult = false;\n                var checkReason = null;\n\n                new Ajax.Request(M2ePro.url.get('amazon_account/checkAuth'), {\n                    method: 'post',\n                    asynchronous: false,\n                    parameters: {\n                        merchant_id    : merchantId,\n                        token          : token,\n                        marketplace_id : marketplaceId\n                    },\n                    onSuccess: function(transport) {\n                        var response = transport.responseText.evalJSON();\n                        checkResult = response['result'];\n                        checkReason = response['reason'];\n                    }\n                });\n\n                if (!checkResult) {\n                    if (checkReason) {\n                        this.alert(M2ePro.translator.translate('M2E Pro was not able to get access to the Amazon Account. Reason: %error_message%').replace('%error_message%', checkReason));\n                        return;\n                    }\n\n                    this.alert(M2ePro.translator.translate('M2E Pro was not able to get access to the Amazon Account. Please, make sure, that you choose correct Option on MWS Authorization Page and enter correct Merchant ID.'));\n                    return;\n                }\n\n                return setLocation(M2ePro.url.get('wizard_installationAmazon/afterGetTokenManual', {\"merchant_id\": merchantId, \"token\": token, \"marketplace_id\": marketplaceId}));\n            }\n\n            new Ajax.Request(M2ePro.url.get('wizard_installationAmazon/beforeToken'), {\n                method       : 'post',\n                asynchronous : true,\n                parameters   : $('edit_form').serialize(),\n                onSuccess: function(transport) {\n\n                    var response = transport.responseText.evalJSON();\n\n                    if (response && response['message']) {\n                        MessagesObj.addErrorMessage(response['message']);\n                        return CommonObj.scrollPageToTop();\n                    }\n\n                    if (!response['url']) {\n                        MessagesObj.addErrorMessage(M2ePro.translator.translate('An error during of account creation.'));\n                        return CommonObj.scrollPageToTop();\n                    }\n\n                    return setLocation(response['url']);\n                }\n            });\n        },\n\n        listingTutorialStep: function ()\n        {\n            WizardObj.setStep(WizardObj.getNextStep(), setLocation.bind(window, location.href))\n        }\n    });\n\n});","Ess_M2ePro/js/Wizard/MigrationFromMagento1.js":"define(function () {\n\n    window.MigrationFromMagento1 = Class.create(Common, {\n\n        continueStep: function ()\n        {\n            if (WizardObj.steps.current.length) {\n                this[WizardObj.steps.current + 'Step']();\n            }\n        },\n\n        // Steps\n        // ---------------------------------------\n\n        synchronizationStep: function ()\n        {\n            jQuery('#continue').prop('disabled', true);\n\n            var nextMarketplace = jQuery('.marketplace-id:not([synchronized]):first');\n\n            if (!nextMarketplace.length) {\n                MarketplaceSynchProgressObj.end();\n                return;\n            }\n\n            nextMarketplace.attr('synchronized', 1);\n            this.synchronizeMarketplace(nextMarketplace.attr('component'), nextMarketplace.val());\n        },\n\n        congratulationStep: function ()\n        {\n            WizardObj.setStatus(M2ePro.php.constant('Ess_M2ePro_Helper_Module_Wizard::STATUS_COMPLETED'), function() {\n                setLocation(M2ePro.url.get('complete'));\n            });\n        },\n\n        // ---------------------------------------\n\n        synchronizeMarketplace: function(component, marketplaceId)\n        {\n            var title = component + ' ' + $('marketplace_' + marketplaceId).innerHTML;\n\n            MarketplaceSynchProgressObj.runTask(\n                title,\n                M2ePro.url.get('wizard_migrationFromMagento1/runSynchNow') + 'marketplace_id/' + marketplaceId,\n                '', 'MigrationFromMagento1Obj.synchronizationStep()'\n            );\n        }\n    });\n\n});","Ess_M2ePro/js/Wizard/MigrationFromMagento1/MarketplaceSynchProgress.js":"define([\n    'M2ePro/SynchProgress'\n], function () {\n    MigrationFromMagento1MarketplaceSynchProgress = Class.create(SynchProgress, {\n\n        // ---------------------------------------\n\n        start: function (title, status) {\n            title = title || '';\n            status = status || '';\n\n            var self = this;\n\n            self.progressBarObj.reset();\n\n            if (title != '') {\n                self.progressBarObj.setTitle(title);\n            }\n            if (status != '') {\n                self.progressBarObj.setStatus(status);\n            }\n\n            self.progressBarObj.show();\n            $$('.loading-mask').invoke('setStyle', {visibility: 'hidden'});\n        },\n\n        end: function () {\n            var self = this;\n\n            self.progressBarObj.reset();\n            self.progressBarObj.hide();\n\n            $$('.loading-mask').invoke('setStyle', {visibility: 'visible'});\n\n            WizardObj.setStep(WizardObj.getNextStep(), function (){\n                WizardObj.complete();\n            });\n        },\n\n        startGetExecutingInfo: function (callBackWhenEnd) {\n            callBackWhenEnd = callBackWhenEnd || '';\n\n            var self = this;\n            new Ajax.Request(M2ePro.url.get('general/synchGetExecutingInfo'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function (transport) {\n\n                    var data = transport.responseText.evalJSON(true);\n\n                    if (data.mode == self.stateExecuting) {\n\n                        self.progressBarObj.setTitle(data.title);\n                        if (data.percents <= 0) {\n                            self.progressBarObj.setPercents(0, 0);\n                        } else if (data.percents >= 100) {\n                            self.progressBarObj.setPercents(100, 0);\n                        } else {\n                            self.progressBarObj.setPercents(data.percents, 1);\n                        }\n                        self.progressBarObj.setStatus(data.status);\n\n                        setTimeout(function () {\n                            self.startGetExecutingInfo(callBackWhenEnd);\n                        }, 3000);\n\n                    } else {\n\n                        self.progressBarObj.setPercents(100, 0);\n\n                        // ---------------------------------------\n                        setTimeout(function () {\n\n                            if (callBackWhenEnd != '') {\n                                eval(callBackWhenEnd);\n                            } else {\n                                self.end();\n                            }\n\n                        }, 1500);\n                        // ---------------------------------------\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Wizard/Amazon/Custom.js":"define(function () {\n\n    window.WizardAmazonCustom = Class.create();\n    WizardAmazonCustom.prototype = {\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            this.marketplaces = [];\n            this.index = 0;\n            this.marketplacesLastIndex = 0;\n            this.percent = 0;\n        },\n\n        // ---------------------------------------\n\n        marketplacesSynchronizationAction: function(obj)\n        {\n            obj.hide();\n            var self = this;\n\n            self.progressBarStartLoad(0);\n            setTimeout(function() { self.synchronizeMarketplaces(); }, 0);\n        },\n\n        // ---------------------------------------\n\n        setNextStep: function(nextStep)\n        {\n            var currentStep = WizardObj.steps.current;\n            WizardObj.setStep(nextStep, function() {\n                WizardObj.renderStep(currentStep);\n            });\n\n            return this;\n        },\n\n        setMarketplacesData: function(marketplaces)\n        {\n            this.marketplaces = marketplaces;\n            this.marketplacesLastIndex = marketplaces.length - 1;\n            return this;\n        },\n\n        getMarketplacesData: function()\n        {\n            return this.marketplaces;\n        },\n\n        completeStep: function(step)\n        {\n            WizardObj.skipStep(step);\n            $('wizard_complete').show();\n        },\n\n        // ---------------------------------------\n\n        synchronizeMarketplaces: function()\n        {\n            if (this.index > this.marketplacesLastIndex) {\n                $('custom-progressbar').hide();\n\n                this.completeStep('marketplacesSynchronization');\n                return;\n            }\n\n            var self = this,\n                marketplaces = this.getMarketplacesData(),\n                marketplaceId = marketplaces[self.index] != undefined ?\n                    marketplaces[self.index].id : 0,\n                current = $$('.code-'+ marketplaces[self.index].code)[0];\n\n            if (marketplaceId <= 0) {\n                this.completeStep('marketplacesSynchronization');\n            }\n\n            ++this.index;\n\n            var startPercent = self.percent;\n            self.percent += Math.round(100 / marketplaces.length);\n            self.marketplaceSynchProcess(current);\n\n            new Ajax.Request(M2ePro.url.get('marketplacesSynchronization'), {\n                method: 'get',\n                parameters: {\n                    id: marketplaceId\n                },\n                asynchronous: true,\n                onSuccess: (function(transport) {\n\n                    if (transport.responseText == 'success') {\n                        self.progressBarStartLoad(\n                            startPercent + 1, self.percent,\n                            function() {\n                                self.marketplaceSynchComplete(current);\n                                self.synchronizeMarketplaces();\n                            }\n                        );\n                    }\n\n                    return false;\n                }).bind(this)\n            })\n        },\n\n        // ---------------------------------------\n\n        progressBarStartLoad: function(from, to, callback)\n        {\n            var self = this,\n                progressBar = $('custom-progressbar'),\n                progressBarLoad = $('custom-progressbar-load'),\n                progressBarPercent = $('custom-progressbar-percentage'),\n                step = 2,\n                total = from;\n\n            if (from == 0 || to == 0) {\n                progressBarLoad.style.width = '0px';\n                progressBarPercent.innerHTML = '0%';\n                progressBar.show();\n                return;\n            }\n\n            progressBarLoad.style.width = 0 + 'px';\n            progressBarPercent.innerHTML = 0 + '%';\n            progressBar.show();\n\n            var interval = setInterval(function() {\n                progressBarLoad.style.width = total * 3 + 'px';\n                progressBarPercent.innerHTML = total + '%';\n\n                total += step;\n\n                if (total >= to) {\n                    clearInterval(interval);\n                    callback && callback();\n                }\n            }, 100);\n        },\n\n        marketplaceSynchComplete: function(element)\n        {\n            var span = new Element('span', {class: 'synchComplete'});\n            span.innerHTML = ' (Completed)';\n\n            $$('.status-process').each(function(el) {\n                el.hide();\n            });\n\n            element.appendChild(span);\n            element.removeClassName('synchProcess');\n            element.addClassName('synchComplete');\n        },\n\n        marketplaceSynchProcess: function(element)\n        {\n            var span = new Element('span', { class: 'synchProcess status-process'});\n            span.innerHTML = ' (In Progress)';\n            element.appendChild(span);\n            element.addClassName('synchProcess');\n        }\n\n        // ---------------------------------------\n    };\n});","Ess_M2ePro/js/Wizard/Amazon/Marketplace.js":"define([\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Marketplace'\n], function (MessageObj) {\n\n    window.WizardAmazonMarketplace = Class.create(Marketplace, {\n\n        // ---------------------------------------\n\n        proceedAction: function()\n        {\n            MessageObj.clear();\n\n            if (!this.checkAllOptions()) {\n                return;\n            }\n\n            var changedStatuses = this.saveWizardSettings(this.runAllSynchronization.bind(this));\n\n            for (var i = 0; i < changedStatuses.length; i++) {\n                $('changed_' + changedStatuses[i].marketplace_id).style.display = 'none';\n                this.changeStatus($('status_' + changedStatuses[i].marketplace_id));\n            }\n\n            var waitingForEnd = setInterval(function() {\n                if (this.completeStatus === true) {\n                    this.disableAllOptions();\n\n                    WizardObj.setStep(WizardObj.getNextStep());\n                    WizardObj.complete();\n\n                    clearInterval(waitingForEnd);\n                }\n            }.bind(this), 300);\n        },\n\n        // ---------------------------------------\n\n        saveWizardSettings: function(callback)\n        {\n            var currentStatuses = this.getCurrentStatuses();\n            var storedStatuses = this.getStoredStatuses();\n            var changedStatuses = new Array();\n            this.marketplacesForUpdate = new Array();\n\n            for (var i =0; i < storedStatuses.length; i++) {\n\n                if ((storedStatuses[i].marketplace_id == currentStatuses[i].marketplace_id)\n                    && (storedStatuses[i].status != currentStatuses[i].status)) {\n\n                    this.storedStatuses[i].status = currentStatuses[i].status;\n                    changedStatuses.push({\n                        marketplace_id: currentStatuses[i].marketplace_id,\n                        status: currentStatuses[i].status\n                    });\n\n                    this.changeStatusInfo(currentStatuses[i].marketplace_id, currentStatuses[i].status);\n\n                    if (currentStatuses[i].status) {\n                        this.marketplacesForUpdate[this.marketplacesForUpdate.length] = currentStatuses[i].marketplace_id;\n                    }\n                }\n            }\n            this.marketplacesForUpdateCurrentIndex = 0;\n\n            this.synchErrors = 0;\n            this.synchWarnings = 0;\n            this.synchSuccess = 0;\n\n            new Ajax.Request(M2ePro.url.get('formSubmit', $('edit_form').serialize(true)), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function(transport) {\n                    if (callback) {\n                        callback();\n                    }\n                }\n            });\n\n            return changedStatuses;\n        },\n\n        runNextMarketplaceNow: function()\n        {\n            var self = this;\n\n            if (self.marketplacesForUpdateCurrentIndex > 0) {\n\n                $('synch_info_wait_'+self.marketplacesForUpdate[self.marketplacesForUpdateCurrentIndex-1]).hide();\n                $('synch_info_process_'+self.marketplacesForUpdate[self.marketplacesForUpdateCurrentIndex-1]).hide();\n                $('synch_info_complete_'+self.marketplacesForUpdate[self.marketplacesForUpdateCurrentIndex-1]).show();\n\n                var tempEndFlag = 0;\n                if (self.marketplacesForUpdateCurrentIndex >= self.marketplacesForUpdate.length) {\n                    tempEndFlag = 1;\n                }\n\n                new Ajax.Request(M2ePro.url.get('general/synchGetLastResult'), {\n                    method:'get',\n                    asynchronous: true,\n                    onSuccess: function(transport) {\n\n                        if (transport.responseText == self.synchProgressObj.resultTypeError) {\n                            self.synchErrors++;\n                        } else if (transport.responseText == self.synchProgressObj.resultTypeWarning) {\n                            self.synchWarnings++;\n                        } else {\n                            self.synchSuccess++;\n                        }\n\n                        if (tempEndFlag == 1) {\n                            if (self.synchErrors > 0) {\n                                self.synchProgressObj.printFinalMessage(self.synchProgressObj.resultTypeError);\n                            } else if (self.synchWarnings > 0) {\n                                self.synchProgressObj.printFinalMessage(self.synchProgressObj.resultTypeWarning);\n                            } else {\n                                self.synchProgressObj.printFinalMessage(self.synchProgressObj.resultTypeSuccess);\n                            }\n                            self.synchErrors = 0;\n                            self.synchWarnings = 0;\n                            self.synchSuccess = 0;\n                        }\n                    }\n                });\n            }\n\n            if (self.marketplacesForUpdateCurrentIndex >= self.marketplacesForUpdate.length) {\n\n                self.marketplacesForUpdate = new Array();\n                self.marketplacesForUpdateCurrentIndex = 0;\n                self.marketplacesUpdateFinished = true;\n\n                self.synchProgressObj.end();\n                self.completeStatus = true;\n\n                return;\n            }\n\n            var marketplaceId = self.marketplacesForUpdate[self.marketplacesForUpdateCurrentIndex];\n            self.marketplacesForUpdateCurrentIndex++;\n\n            $('synch_info_wait_'+marketplaceId).hide();\n            $('synch_info_process_'+marketplaceId).show();\n            $('synch_info_complete_'+marketplaceId).hide();\n\n            var titleProgressBar = $('marketplace_title_'+marketplaceId).innerHTML;\n            var marketplaceComponentName = $('status_'+marketplaceId).readAttribute('markeptlace_component_name');\n\n            if (marketplaceComponentName != '') {\n                titleProgressBar = marketplaceComponentName + ' ' + titleProgressBar;\n            }\n\n            self.synchProgressObj.runTask(\n                titleProgressBar,\n                M2ePro.url.get('runSynchNow', {'marketplace_id': marketplaceId}),\n                '', 'WizardAmazonMarketplaceObj.runNextMarketplaceNow();'\n            );\n\n            return true;\n        },\n\n        // ---------------------------------------\n\n        checkAllOptions: function()\n        {\n            var isAnyOptionsEnabled = $$('select[id*=\"status_\"]').some(function(element) {\n                return element.value == 1;\n            });\n\n            if (!isAnyOptionsEnabled) {\n                MessageObj.addErrorMessage(\n                    M2ePro.translator.translate('You must select at least one Marketplace you will work with.')\n                );\n                CommonObj.scrollPageToTop();\n                return false;\n            }\n\n            return true;\n        },\n\n        disableAllOptions: function()\n        {\n            var allSelect = $$('select[id*=\"status_\"]');\n\n            if (allSelect.length) {\n                allSelect.each(function(element) {\n                    element.disabled = true;\n                });\n            }\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/General/Common.js":"define([\n    'underscore'\n], function (_) {\n    return {\n        extend: function(extendBy) {\n            return _.extend({}, this, extendBy);\n        },\n        init: function() {\n\n        }\n    };\n});","Ess_M2ePro/js/General/PhpFunctions.js":"define([], function(){\n\n    window.implode = function implode(glue, pieces)\n    {\n        return ((pieces instanceof Array) ? pieces.join (glue) : pieces);\n    };\n\n    window.explode = function explode(delimiter, string)\n    {\n        var emptyArray = { 0: '' };\n\n        if (arguments.length != 2\n            || typeof arguments[0] == 'undefined'\n            || typeof arguments[1] == 'undefined'\n        ) {\n            return null;\n        }\n\n        if (delimiter === ''\n            || delimiter === false\n            || delimiter === null\n        ) {\n            return false;\n        }\n\n        if (typeof delimiter == 'function'\n            || typeof delimiter == 'object'\n            || typeof string == 'function'\n            || typeof string == 'object'\n        ) {\n            return emptyArray;\n        }\n\n        if (delimiter === true) {\n            delimiter = '1';\n        }\n\n        return string.toString().split (delimiter.toString());\n    };\n\n    window.array_unique = function array_unique(array)\n    {\n        var p, i, j;\n        for (i = array.length; i;) {\n            for (p = --i; p > 0;) {\n                if (array[i] === array[--p]) {\n                    for (j = p; --p && array[i] === array[p];);\n                    i -= array.splice(p + 1, j - p).length;\n                }\n            }\n        }\n\n        return true;\n    };\n\n    window.trim = function trim(value)\n    {\n        var re = /\\s*((\\S+\\s*)*)/;\n        value = value.replace(re, \"$1\");\n\n        var re = /((\\s*\\S+)*)\\s*/;\n        value = value.replace(re, \"$1\");\n\n        return value;\n    };\n\n    window.ltrim = function ltrim(str, charlist)\n    {\n        charlist = !charlist ? ' \\\\s\\u00A0' : (charlist+'').replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^\\:])/g, '$1');\n        var re = new RegExp('^[' + charlist + ']+', 'g');\n        return (str+'').replace(re, '');\n    };\n\n    window.rtrim = function rtrim(str, charlist)\n    {\n        charlist = !charlist ? ' \\\\s\\u00A0' : (charlist+'').replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^\\:])/g, '\\\\$1');\n        var re = new RegExp('[' + charlist + ']+$', 'g');\n        return (str+'').replace(re, '');\n    };\n\n    window.getCookie = function getCookie(c_name)\n    {\n        if (document.cookie.length>0) {\n            c_start = document.cookie.indexOf(c_name + \"=\");\n            if (c_start != -1) {\n                c_start = c_start + c_name.length+1;\n                c_end=document.cookie.indexOf(\";\",c_start);\n                if (c_end==-1) c_end=document.cookie.length;\n                return unescape(document.cookie.substring(c_start,c_end));\n            }\n        }\n        return \"\";\n    };\n\n    window.setCookie = function setCookie(name, value, expires, path, domain, secure)\n    {\n        document.cookie = name + \"=\" + escape(value) +\n            ((expires) ? \"; expires=\" + \"Mon, 01-Jan-2020 00:00:00 GMT\" : \"\") +\n            ((path) ? \"; path=\" + path : \"\") +\n            ((domain) ? \"; domain=\" + domain : \"\") +\n            ((secure) ? \"; secure\" : \"\");\n    };\n\n    window.deleteCookie = function deleteCookie(name, path, domain)\n    {\n        if (getCookie(name)) {\n            document.cookie = name + \"=\" +\n                ((path) ? \";path=\" + path : \"\") +\n                ((domain) ? \";domain=\" + domain : \"\") +\n                \";expires=Thu, 01-Jan-1970 00:00:01 GMT\";\n        }\n    };\n\n    window.ucwords = function ucwords(str)\n    {\n        return (str + '').replace(/^([a-z])|\\s+([a-z])/g, function($1) {\n            return $1.toUpperCase();\n        });\n    };\n\n    window.strip_tags = function strip_tags(input, allowed)\n    {\n        allowed = (((allowed || \"\") + \"\").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join(''); // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)\n        var tags = /<\\/?([a-z][a-z0-9]*)\\b[^>]*>/gi,\n            commentsAndPhpTags = /<!--[\\s\\S]*?-->|<\\?(?:php)?[\\s\\S]*?\\?>/gi;\n        return input.replace(commentsAndPhpTags, '').replace(tags, function($0, $1) {        return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';\n        });\n    };\n\n    window.sha1 = function sha1(str)\n    {\n        var rotate_left = function(n,s) {\n            var t4 = (n<<s) | (n>>>(32-s));\n            return t4;\n        };\n\n        var lsb_hex = function(val) {\n            var str=\"\";\n            var i;\n            var vh;\n            var vl;\n\n            for(i=0; i<=6; i+=2) {\n                vh = (val>>>(i*4+4))&0x0f;\n                vl = (val>>>(i*4))&0x0f;\n                str += vh.toString(16) + vl.toString(16);\n            }\n            return str;\n        };\n\n        var cvt_hex = function(val) {\n            var str=\"\";\n            var i;\n            var v;\n\n            for(i=7; i>=0; i--) {\n                v = (val>>>(i*4))&0x0f;\n                str += v.toString(16);\n            }\n            return str;\n        };\n\n        var blockstart;\n        var i, j;\n        var W = new Array(80);\n        var H0 = 0x67452301;\n        var H1 = 0xEFCDAB89;\n        var H2 = 0x98BADCFE;\n        var H3 = 0x10325476;\n        var H4 = 0xC3D2E1F0;\n        var A, B, C, D, E;\n        var temp;\n\n        str = this.utf8_encode(str);\n        var str_len = str.length;\n\n        var word_array = new Array();\n        for(i=0; i<str_len-3; i+=4) {\n            j = str.charCodeAt(i)<<24 | str.charCodeAt(i+1)<<16 |\n                str.charCodeAt(i+2)<<8 | str.charCodeAt(i+3);\n            word_array.push(j);\n        }\n\n        switch (str_len % 4) {\n            case 0:\n                i = 0x080000000;\n                break;\n            case 1:\n                i = str.charCodeAt(str_len-1)<<24 | 0x0800000;\n                break;\n            case 2:\n                i = str.charCodeAt(str_len-2)<<24 | str.charCodeAt(str_len-1)<<16 | 0x08000;\n                break;\n            case 3:\n                i = str.charCodeAt(str_len-3)<<24 | str.charCodeAt(str_len-2)<<16 | str.charCodeAt(str_len-1)<<8    | 0x80;\n                break;\n        }\n\n        word_array.push(i);\n\n        while((word_array.length % 16) != 14) word_array.push(0);\n\n        word_array.push(str_len>>>29);\n        word_array.push((str_len<<3)&0x0ffffffff);\n\n        for (blockstart=0; blockstart<word_array.length; blockstart+=16) {\n            for(i=0; i<16; i++) W[i] = word_array[blockstart+i];\n            for(i=16; i<=79; i++) W[i] = rotate_left(W[i-3] ^ W[i-8] ^ W[i-14] ^ W[i-16], 1);\n\n            A = H0;\n            B = H1;\n            C = H2;\n            D = H3;\n            E = H4;\n\n            for(i= 0; i<=19; i++) {\n                temp = (rotate_left(A,5) + ((B&C) | (~B&D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = rotate_left(B,30);\n                B = A;\n                A = temp;\n            }\n\n            for(i=20; i<=39; i++) {\n                temp = (rotate_left(A,5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = rotate_left(B,30);\n                B = A;\n                A = temp;\n            }\n\n            for(i=40; i<=59; i++) {\n                temp = (rotate_left(A,5) + ((B&C) | (B&D) | (C&D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = rotate_left(B,30);\n                B = A;\n                A = temp;\n            }\n\n            for(i=60; i<=79; i++) {\n                temp = (rotate_left(A,5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = rotate_left(B,30);\n                B = A;\n                A = temp;\n            }\n\n            H0 = (H0 + A) & 0x0ffffffff;\n            H1 = (H1 + B) & 0x0ffffffff;\n            H2 = (H2 + C) & 0x0ffffffff;\n            H3 = (H3 + D) & 0x0ffffffff;\n            H4 = (H4 + E) & 0x0ffffffff;\n        }\n\n        var temp = cvt_hex(H0) + cvt_hex(H1) + cvt_hex(H2) + cvt_hex(H3) + cvt_hex(H4);\n        return temp.toLowerCase();\n    };\n\n    window.utf8_encode = function utf8_encode(str_data)\n    {\n        str_data = str_data.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n\n        for (var n = 0; n < str_data.length; n++) {\n            var c = str_data.charCodeAt(n);\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    };\n\n    window.utf8_decode = function utf8_decode(utftext)\n    {\n        var string = \"\";\n        var i = 0;\n        var c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i+1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i+1);\n                c3 = utftext.charCodeAt(i+2);\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n        }\n\n        return string;\n    };\n\n    window.md5 = function md5(str)\n    {\n        var RotateLeft = function(lValue, iShiftBits) {\n            return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));\n        };\n\n        var AddUnsigned = function(lX,lY) {\n            var lX4,lY4,lX8,lY8,lResult;\n            lX8 = (lX & 0x80000000);\n            lY8 = (lY & 0x80000000);\n            lX4 = (lX & 0x40000000);\n            lY4 = (lY & 0x40000000);\n            lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);\n            if (lX4 & lY4) {\n                return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n            }\n            if (lX4 | lY4) {\n                if (lResult & 0x40000000) {\n                    return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n                } else {\n                    return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n                }\n            } else {\n                return (lResult ^ lX8 ^ lY8);\n            }\n        };\n\n        var F = function(x,y,z) { return (x & y) | ((~x) & z); };\n        var G = function(x,y,z) { return (x & z) | (y & (~z)); };\n        var H = function(x,y,z) { return (x ^ y ^ z); };\n        var I = function(x,y,z) { return (y ^ (x | (~z))); };\n\n        var FF = function(a,b,c,d,x,s,ac) {\n            a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));\n            return AddUnsigned(RotateLeft(a, s), b);\n        };\n\n        var GG = function(a,b,c,d,x,s,ac) {\n            a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));\n            return AddUnsigned(RotateLeft(a, s), b);\n        };\n\n        var HH = function(a,b,c,d,x,s,ac) {\n            a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));\n            return AddUnsigned(RotateLeft(a, s), b);\n        };\n\n        var II = function(a,b,c,d,x,s,ac) {\n            a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));\n            return AddUnsigned(RotateLeft(a, s), b);\n        };\n\n        var ConvertToWordArray = function(str) {\n            var lWordCount;\n            var lMessageLength = str.length;\n            var lNumberOfWords_temp1=lMessageLength + 8;\n            var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;\n            var lNumberOfWords = (lNumberOfWords_temp2+1)*16;\n            var lWordArray=Array(lNumberOfWords-1);\n            var lBytePosition = 0;\n            var lByteCount = 0;\n            while (lByteCount < lMessageLength) {\n                lWordCount = (lByteCount-(lByteCount % 4))/4;\n                lBytePosition = (lByteCount % 4)*8;\n                lWordArray[lWordCount] = (lWordArray[lWordCount] | (str.charCodeAt(lByteCount)<<lBytePosition));\n                lByteCount++;\n            }\n            lWordCount = (lByteCount-(lByteCount % 4))/4;\n            lBytePosition = (lByteCount % 4)*8;\n            lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);\n            lWordArray[lNumberOfWords-2] = lMessageLength<<3;\n            lWordArray[lNumberOfWords-1] = lMessageLength>>>29;\n            return lWordArray;\n        };\n\n        var WordToHex = function(lValue) {\n            var WordToHexValue=\"\",WordToHexValue_temp=\"\",lByte,lCount;\n            for (lCount = 0;lCount<=3;lCount++) {\n                lByte = (lValue>>>(lCount*8)) & 255;\n                WordToHexValue_temp = \"0\" + lByte.toString(16);\n                WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);\n            }\n            return WordToHexValue;\n        };\n\n        var x=Array();\n        var k,AA,BB,CC,DD,a,b,c,d;\n        var S11=7, S12=12, S13=17, S14=22;\n        var S21=5, S22=9 , S23=14, S24=20;\n        var S31=4, S32=11, S33=16, S34=23;\n        var S41=6, S42=10, S43=15, S44=21;\n\n        str = this.utf8_encode(str);\n        x = ConvertToWordArray(str);\n        a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\n\n        for (k=0;k<x.length;k+=16) {\n            AA=a; BB=b; CC=c; DD=d;\n            a=FF(a,b,c,d,x[k+0], S11,0xD76AA478);\n            d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);\n            c=FF(c,d,a,b,x[k+2], S13,0x242070DB);\n            b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);\n            a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);\n            d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);\n            c=FF(c,d,a,b,x[k+6], S13,0xA8304613);\n            b=FF(b,c,d,a,x[k+7], S14,0xFD469501);\n            a=FF(a,b,c,d,x[k+8], S11,0x698098D8);\n            d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);\n            c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);\n            b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);\n            a=FF(a,b,c,d,x[k+12],S11,0x6B901122);\n            d=FF(d,a,b,c,x[k+13],S12,0xFD987193);\n            c=FF(c,d,a,b,x[k+14],S13,0xA679438E);\n            b=FF(b,c,d,a,x[k+15],S14,0x49B40821);\n            a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);\n            d=GG(d,a,b,c,x[k+6], S22,0xC040B340);\n            c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);\n            b=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);\n            a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);\n            d=GG(d,a,b,c,x[k+10],S22,0x2441453);\n            c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);\n            b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);\n            a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);\n            d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);\n            c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);\n            b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);\n            a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);\n            d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);\n            c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);\n            b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);\n            a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);\n            d=HH(d,a,b,c,x[k+8], S32,0x8771F681);\n            c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);\n            b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);\n            a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);\n            d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);\n            c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);\n            b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);\n            a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);\n            d=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);\n            c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);\n            b=HH(b,c,d,a,x[k+6], S34,0x4881D05);\n            a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);\n            d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);\n            c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);\n            b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);\n            a=II(a,b,c,d,x[k+0], S41,0xF4292244);\n            d=II(d,a,b,c,x[k+7], S42,0x432AFF97);\n            c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);\n            b=II(b,c,d,a,x[k+5], S44,0xFC93A039);\n            a=II(a,b,c,d,x[k+12],S41,0x655B59C3);\n            d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);\n            c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);\n            b=II(b,c,d,a,x[k+1], S44,0x85845DD1);\n            a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);\n            d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);\n            c=II(c,d,a,b,x[k+6], S43,0xA3014314);\n            b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);\n            a=II(a,b,c,d,x[k+4], S41,0xF7537E82);\n            d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);\n            c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);\n            b=II(b,c,d,a,x[k+9], S44,0xEB86D391);\n            a=AddUnsigned(a,AA);\n            b=AddUnsigned(b,BB);\n            c=AddUnsigned(c,CC);\n            d=AddUnsigned(d,DD);\n        }\n\n        var temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);\n\n        return temp.toLowerCase();\n    };\n\n    window.base64_encode = function base64_encode(input)\n    {\n        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n        var output = \"\";\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n        var i = 0;\n\n        input = utf8_encode(input);\n\n        while (i < input.length) {\n\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n\n            output = output +\n                keyStr.charAt(enc1) + keyStr.charAt(enc2) +\n                keyStr.charAt(enc3) + keyStr.charAt(enc4);\n\n        }\n\n        return output;\n    };\n\n    window.base64_decode = function base64_decode(input)\n    {\n        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64) {\n                output = output + String.fromCharCode(chr2);\n            }\n            if (enc4 != 64) {\n                output = output + String.fromCharCode(chr3);\n            }\n        }\n\n        output = utf8_decode(output);\n\n        return output;\n\n    };\n\n    window.strpos = function strpos(haystack, needle, offset)\n    {\n        var i = haystack.indexOf(needle, offset); // returns -1\n        return i >= 0 ? i : false;\n    };\n\n    window.str_replace = function str_replace(search, replace, subject)\n    {\n        if(!(replace instanceof Array)) {\n            replace=new Array(replace);\n            if(search instanceof Array) {\n                while(search.length>replace.length) {\n                    replace[replace.length]=replace[0];\n                }\n            }\n        }\n\n        if(!(search instanceof Array))search=new Array(search);\n        while(search.length>replace.length) {\n            replace[replace.length]='';\n        }\n\n        if(subject instanceof Array) {\n            for(k in subject) {\n                subject[k]=str_replace(search,replace,subject[k]);\n            }\n            return subject;\n        }\n\n        for(var k=0; k<search.length; k++) {\n            var i = subject.indexOf(search[k]);\n            while(i>-1) {\n                subject = subject.replace(search[k], replace[k]);\n                i = subject.indexOf(search[k],i);\n            }\n        }\n\n        return subject;\n    };\n\n    window.substr_count = function substr_count(haystack, needle, offset, length)\n    {\n        var pos = 0,\n            cnt = 0;\n\n        haystack += '';\n        needle += '';\n        if (isNaN(offset)) {\n            offset = 0;\n        }\n        if (isNaN(length)) {\n            length = 0;\n        }\n        offset--;\n\n        while ((offset = haystack.indexOf(needle, offset + 1)) != -1) {\n            if (length > 0 && (offset + needle.length) > length) {\n                return false;\n            } else {\n                cnt++;\n            }\n        }\n\n        return cnt;\n    };\n\n    window.htmlentities = function htmlentities(s)\n    {\n        var div = document.createElement('div');\n        var text = document.createTextNode(s);\n        div.appendChild(text);\n\n        return div.innerHTML;\n    };\n\n    window.decodeHtmlentities = function decodeHtmlentities(s)\n    {\n        var y = document.createElement('textarea');\n        y.innerHTML = s;\n        return y.value;\n    };\n\n    window.version_compare = function version_compare(a, b)\n    {\n        if (a === b) {\n            return 0;\n        }\n\n        var a_components = a.split(\".\");\n        var b_components = b.split(\".\");\n\n        var len = Math.min(a_components.length, b_components.length);\n\n        // loop while the components are equal\n        for (var i = 0; i < len; i++)\n        {\n            // A bigger than B\n            if (parseInt(a_components[i]) > parseInt(b_components[i])) {\n                return 1;\n            }\n\n            // B bigger than A\n            if (parseInt(a_components[i]) < parseInt(b_components[i])) {\n                return -1;\n            }\n        }\n\n        // If one's a prefix of the other, the longer one is greater.\n        if (a_components.length > b_components.length) {\n            return 1;\n        }\n\n        if (a_components.length < b_components.length) {\n            return -1;\n        }\n\n        // Otherwise they are the same.\n        return 0;\n    };\n\n    window.array_intersect = function array_intersect(arr1)\n    {\n        var retArr = [],\n            argl = arguments.length,\n            arglm1 = argl - 1,\n            k1 = '',\n            arr = {},\n            i = 0,\n            k = '';\n\n        arr1keys: for (k1 in arr1) {\n            arrs: for (i = 1; i < argl; i++) {\n                arr = arguments[i];\n                for (k in arr) {\n                    if (arr[k] === arr1[k1]) {\n                        if (i === arglm1) {\n                            retArr[k1] = arr1[k1];\n                        }\n                        // If the innermost loop always leads at least once to an equal value, continue the loop until done\n                        continue arrs;\n                    }\n                }\n                // If it reaches here, it wasn't found in at least one array, so try next value\n                continue arr1keys;\n            }\n        }\n\n        return retArr;\n    };\n\n    // Quote string with slashes\n    window.addslashes = function addslashes(str)\n    {\n        return (str + '').replace(/[\\\\\"']/g, '\\\\$&').replace(/\\u0000/g, '\\\\0');\n    };\n\n    window.wait = function wait(conditionCallback, callback, time)\n    {\n        setTimeout(function run() {\n            if (conditionCallback()) {\n                callback();\n                return;\n            }\n\n            setTimeout(run, time);\n        }, time);\n    }\n});","Ess_M2ePro/js/General/Php.js":"define(['M2ePro/General/Common', 'underscore'], function(Common, _) {\n\n    return Common.extend({\n        constants: {},\n\n        add: function(constants)\n        {\n            _.extend(this.constants, constants);\n        },\n\n        constant: function(name)\n        {\n            var nameParts = name.split(/::/);\n            var className = nameParts[0];\n\n            if (className.indexOf('_') > -1) {\n                className = className.replace(/_/g, '\\\\');\n                name = '\\\\' + className + '::' + nameParts[1];\n            }\n\n            if (typeof this.constants[name] == 'undefined') {\n                alert('Constant not found : \"' + name + '\"');\n                throw new Error('Constant not found : \"' + name + '\"');\n            }\n\n            return this.constants[name];\n        }\n    });\n\n});","Ess_M2ePro/js/General/Translator.js":"define(['M2ePro/General/Common', 'underscore'], function(Common, _) {\n\n    return Common.extend({\n        translations: {},\n\n        add: function(translations)\n        {\n            _.extend(this.translations, translations);\n        },\n\n        translate: function(text)\n        {\n            if (!this.translations[text]) {\n                alert('Translation not found : \"' + text + '\"');\n                throw new Error('Translation not found : \"' + text + '\"');\n            }\n\n            var textValue = this.translations[text],\n                values = Array.prototype.slice.call(arguments).slice(1),\n                placeholders = textValue.match(/%\\w*%/g);\n\n            if (!placeholders) {\n                return textValue;\n            }\n\n            _.each(placeholders, function(placeholder) {\n                var value = values.shift();\n\n                if (!value) {\n                    return;\n                }\n                textValue = textValue.replace(placeholder, value);\n            });\n\n            return textValue;\n        }\n    });\n\n});","Ess_M2ePro/js/General/Url.js":"define(['M2ePro/General/Common', 'underscore'], function(Common, _) {\n\n    return Common.extend({\n        urls: {},\n\n        add: function(urls)\n        {\n            _.extend(this.urls, urls);\n        },\n\n        get: function(route, params)\n        {\n            params = params || {};\n\n            if (!this.urls[route]) {\n                alert('Route \"' + route +'\" not found');\n                throw new Error('Route \"' + route +'\" not found');\n            }\n\n            var returnUrl = this.urls[route];\n\n            for (var key in params) {\n                if (!params.hasOwnProperty(key)) {\n                    continue\n                }\n                returnUrl += key + '/' + params[key] + '/';\n            }\n\n            return returnUrl;\n        }\n    });\n\n});","Ess_M2ePro/js/Configuration/Components.js":"define(function () {\n\n    window.ConfigurationComponents = Class.create(Common, {\n\n        // ---------------------------------------\n\n        componentsTitles: [],\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            jQuery.validator.addMethod('M2ePro-check-default-component', function(value) {\n\n                var componentDefault        = $('view_common_component_default').value.toLowerCase(),\n                    componentsEnabledNumber = 0;\n\n                $$('.M2ePro-component-other').each(function(el) {\n                    if ($(el).value == 1) {\n                        componentsEnabledNumber++;\n                    }\n                });\n\n                if (componentsEnabledNumber <= 1) {\n                    return true;\n                }\n\n                return $('component_' + componentDefault + '_mode') &&\n                    $('component_' + componentDefault + '_mode').value == 1;\n            }, M2ePro.translator.translate('Default Component should be enabled.'));\n        },\n\n        // ---------------------------------------\n\n        component_mode_change: function()\n        {\n            var enabledComponents = 0;\n\n            $$('.M2ePro-component-other').each(function(el) {\n                if ($(el).value == 1) {\n                    enabledComponents++;\n                }\n            });\n\n            ComponentsObj.updateDefaultComponentSelect();\n\n            if (enabledComponents >= 2) {\n                $('view_common_component_default_tr').show();\n            } else {\n\n                var defaultComponent = M2ePro.php.constant('Ess_M2ePro_Helper_Component_Amazon::NICK');\n                if ($('component_amazon_mode').value == 1) {\n                    defaultComponent = M2ePro.php.constant('Ess_M2ePro_Helper_Component_Amazon::NICK');\n                } else if ($('component_buy_mode').value == 1) {\n                    defaultComponent = M2ePro.php.constant('Ess_M2ePro_Helper_Component_Buy::NICK');\n                }\n\n                $('view_common_component_default').value = defaultComponent;\n                $('view_common_component_default_tr').hide();\n            }\n        },\n\n        updateDefaultComponentSelect: function()\n        {\n            var self = this;\n\n            var html       = '',\n                selected   = '',\n\n                components = [\n                    M2ePro.php.constant('Ess_M2ePro_Helper_Component_Amazon::NICK'),\n                    M2ePro.php.constant('Ess_M2ePro_Helper_Component_Buy::NICK')\n                ];\n\n            components.each(function(nick) {\n\n                if ($('component_' + nick + '_mode').value == 1) {\n\n                    $('view_common_component_default').value == nick\n                        ? selected = ' selected=\"selected\"'\n                        : selected = '';\n\n                    html += '<option value=\"' + nick + '\"' + selected + '>' +\n                        self.componentsTitles[nick] +\n                        '</option>';\n                }\n            });\n\n            $('view_common_component_default').innerHTML = html;\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Template/Edit.js":"define([\n        'jquery',\n        'Magento_Ui/js/modal/confirm',\n        'M2ePro/Plugin/Storage',\n        'M2ePro/Common',\n        'M2ePro/General/PhpFunctions'\n],\nfunction(jQuery, confirm, localStorage) {\n    window.TemplateEdit = Class.create(Common, {\n\n        // ---------------------------------------\n\n        showConfirmMsg: true,\n        skipSaveConfirmationPostFix: '_skip_save_confirmation',\n\n        // ---------------------------------------\n\n        getComponent: function()\n        {\n            alert('abstract getComponent');\n        },\n\n        // ---------------------------------------\n\n        confirm: function(templateNick, confirmText, okCallback)\n        {\n            var self = this;\n            var skipConfirmation = localStorage.get(this.getComponent()+'_template_'+templateNick+self.skipSaveConfirmationPostFix);\n\n            if (!confirmText || skipConfirmation) {\n                okCallback();\n                return;\n            }\n\n            confirm({\n                title: M2ePro.translator.translate('Save Policy'),\n                content: confirmText + '<div class=\"admin__field admin__field-option\" style=\"position: absolute; bottom: 43px; left: 28px;\">' +\n                '<input class=\"admin__control-checkbox\" type=\"checkbox\" id=\"do_not_show_again\" name=\"do_not_show_again\">&nbsp;' + '<label for=\"do_not_show_again\" class=\"admin__field-label\"><span>'+ M2ePro.translator.translate('Do not show any more') + '</span></label>' + '</div>',\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    class: 'action-secondary action-dismiss',\n                    click: function (event) {\n                        this.closeModal(event);\n                    }\n                }, {\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action-primary action-accept',\n                    click: function (event) {\n                        this.closeModal(event, true);\n                    }\n                }],\n                actions: {\n                    confirm: function () {\n                        if ($('do_not_show_again').checked) {\n                            localStorage.set(self.getComponent()+'_template_'+templateNick+self.skipSaveConfirmationPostFix, 1);\n                        }\n\n                        okCallback();\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        deleteClick: function()\n        {\n            Common.prototype.confirm({\n                actions: {\n                    confirm: function () {\n                        setLocation(M2ePro.url.get('deleteAction'));\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        duplicateClick: function($super, $headId, chapter_when_duplicate_text)\n        {\n            this.showConfirmMsg = false;\n\n            $super($headId, chapter_when_duplicate_text);\n        },\n\n        saveClick: function($super, url, confirmText, templateNick)\n        {\n            if (!this.isValidForm()) {\n                return;\n            }\n\n            if (confirmText && this.showConfirmMsg) {\n                this.confirm(templateNick, confirmText, function() { $super(url, true); });\n                return;\n            }\n\n            $super(url, true);\n        },\n\n        saveAndEditClick: function($super, url, tabsId, confirmText, templateNick)\n        {\n            if (!this.isValidForm()) {\n                return;\n            }\n\n            if (confirmText && this.showConfirmMsg) {\n                this.confirm(templateNick, confirmText, function() { $super(url, tabsId, true); });\n                return;\n            }\n\n            $super(url, tabsId, true)\n        },\n\n        // ---------------------------------------\n\n        forgetSkipSaveConfirmation: function()\n        {\n            localStorage.removeAllByPostfix(this.skipSaveConfirmationPostFix);\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Magento/Product/Grid.js":"define([\n    'jquery',\n    'M2ePro/Common',\n    'M2ePro/General/PhpFunctions'\n], function (jQuery) {\n\n    window.MagentoProductGrid = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function (AddListingHandlerObj) {\n            this.addListingHandlerObj = AddListingHandlerObj || null;\n        },\n\n        // ---------------------------------------\n\n        saveClick: function (back) {\n            var selected = this.getSelectedProducts();\n            if (selected) {\n                this.addListingHandlerObj.add(selected, false, back, '');\n            }\n        },\n\n        // ---------------------------------------\n\n        save_and_list_click: function (back) {\n            if (this.getSelectedProducts()) {\n                this.addListingHandlerObj.add(this.getSelectedProducts(), back, 'yes');\n            }\n        },\n\n        // ---------------------------------------\n\n        setFilter: function (event) {\n            if (event != undefined) {\n                Event.stop(event);\n            }\n\n            var filters = $$('#' + this.containerId + ' .data-grid-filters input',\n                             '#' + this.containerId + ' .data-grid-filters select');\n            var elements = [];\n            filters.forEach(function(el) {\n                if (el.value && el.value.length)\n                    elements.push(el);\n            });\n            if (!this.doFilterCallback || (this.doFilterCallback && this.doFilterCallback())) {\n                var ruleForm = $('rule_form'),\n                    ruleParams = {};\n\n                if (ruleForm) {\n                    ruleParams = ruleForm.serialize(true);\n                }\n\n                var numParams = 0;\n                for (var param in ruleParams) {\n                    numParams++;\n                }\n\n                this.reloadParams = this.reloadParams || {};\n\n                for (var reloadParam in this.reloadParams) {\n                    reloadParam.match('^rule|^hide') && delete this.reloadParams[reloadParam];\n                }\n\n                if (numParams > 5) {\n                    this.reloadParams = Object.extend(this.reloadParams, ruleParams);\n                } else {\n\n                    if (ruleParams['hide_products_others_listings'] == 0) {\n                        this.reloadParams.hide_products_others_listings = 0;\n                    }\n\n                    this.reloadParams.rule = \"\";\n                }\n\n                this.reload(this.addVarToUrl(this.filterVar, base64_encode(Form.serializeElements(elements))));\n            }\n        },\n\n        resetFilter: function () {\n            if (!this.reloadParams) {\n                this.reloadParams = Object.extend({});\n            }\n\n            for (var reloadParam in this.reloadParams) {\n                reloadParam.match('^rule|^hide') && delete this.reloadParams[reloadParam];\n            }\n            this.reloadParams.rule = \"\";\n\n            this.reload(this.addVarToUrl(this.filterVar, ''));\n        },\n\n        advancedFilterToggle: function () {\n            var $gridObj = jQuery('#' + ProductGridObj.getGridId().replace(/JsObject$/, '')),\n                $massactionEl = $gridObj.find('.admin__data-grid-header-row:last-child'),\n                $massSelectWrap = $massactionEl.find('.mass-select-wrap');\n\n            if (jQuery('#listing_product_rules:visible').length) {\n\n                jQuery('#listing_product_rules').hide();\n                $('advanced_filter_button').removeClassName('advanced-filter-button-active');\n\n                if (!ProductGridObj.isMassActionExists) {\n                    $massactionEl.css({'width': ''});\n                    $massSelectWrap.css({'margin-left': '-63.6%'});\n                }\n\n                if ($$('#advanced_filter_button span span span').length > 0) {\n                    $$('#advanced_filter_button span span span')[0].innerHTML = M2ePro.translator.translate('Show Advanced Filter');\n                } else {\n                    $$('#advanced_filter_button span')[0].innerHTML = M2ePro.translator.translate('Show Advanced Filter');\n                }\n            } else {\n\n                jQuery('#listing_product_rules').show();\n                $('advanced_filter_button').addClassName('advanced-filter-button-active');\n\n                if (!ProductGridObj.isMassActionExists) {\n                    $massactionEl.css({'width': '100%'});\n                    $massSelectWrap.css({'margin-left': '-1.3em'});\n                }\n\n                if ($$('#advanced_filter_button span span span').length > 0) {\n                    $$('#advanced_filter_button span span span')[0].innerHTML = M2ePro.translator.translate('Hide Advanced Filter');\n                } else {\n                    $$('#advanced_filter_button span')[0].innerHTML = M2ePro.translator.translate('Hide Advanced Filter');\n                }\n            }\n        },\n\n        massactionMassSelectStyleFix: function () {\n            var $gridObj = jQuery('#' + ProductGridObj.getGridId().replace(/JsObject$/, '')),\n                $massactionEl = $gridObj.find('.admin__data-grid-header-row:last-child'),\n                $massSelectWrap = $massactionEl.find('.mass-select-wrap');\n\n            if (jQuery('#listing_product_rules:visible').length) {\n                $massSelectWrap.css({'margin-left': '-1.3em'});\n            } else {\n                $massSelectWrap.css({'margin-left': '-63.6%'});\n            }\n        },\n\n        // ---------------------------------------\n\n        setGridId: function (id) {\n            this.gridId = id;\n        },\n\n        getGridId: function () {\n            return this.gridId;\n        },\n\n        // ---------------------------------------\n\n        getSelectedProducts: function () {\n            var selectedProducts = window[this.getGridId() + '_massactionJsObject'].checkedString;\n\n            if (!selectedProducts) {\n                this.alert(M2ePro.translator.translate('Please select the Products you want to perform the Action on.'));\n                return false;\n            }\n            return selectedProducts;\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Settings/LogClearing.js":"define([\n    'M2ePro/Common'\n], function () {\n    window.SettingsLogClearing = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            jQuery.validator.addMethod('M2ePro-logs-clearing-interval', function(value, el) {\n\n                if (jQuery.validator.methods['M2ePro-required-when-visible'](null, el)) {\n                    return true;\n                }\n\n                if (isNaN(parseInt(value))) {\n                    return false;\n                }\n\n                if (parseInt(value) < 14) {\n                    return false;\n                }\n\n                if (parseInt(value) > 90) {\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('logs_clearing_keep_for_days_validation_message'));\n        },\n\n        // ---------------------------------------\n\n        clearAllLog: function(log, el)\n        {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        var form = el.up('form'),\n                            formData = form.serialize(true);\n                        SettingsObj.submitTab(M2ePro.url.get('formSubmit', {'task': 'clear_all','log': log}), formData);\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        changeModeLog: function(log)\n        {\n            var value = $(log+'_log_mode').value,\n                button = $$('.clear_all_'+log).shift();\n\n            if (value == '1') {\n                $(log+'_log_days_container').style.display = '';\n                button && button.show();\n            } else {\n                $(log+'_log_days_container').style.display = 'none';\n                button && button.hide();\n            }\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Settings/License.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Common'\n], function (jQuery, modal, MessagesObj) {\n    window.License = Class.create(Common, {\n\n        // ---------------------------------------\n\n        changeLicenseKeyPopup: function()\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('settings_license/change'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function(transport) {\n\n                    var content = transport.responseText;\n                    var title = M2ePro.translator.translate('Use Existing License');\n\n                    LicenseObj.openPopup(title, content, LicenseObj.confirmLicenseKey.bind(self));\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        confirmLicenseKey: function()\n        {\n            var self = this;\n\n            if (!this.isValidForm()) {\n                return false;\n            }\n\n            var formData = $('edit_form').serialize(true);\n\n            new Ajax.Request(M2ePro.url.get('settings_license/change'), {\n                method: 'post',\n                asynchronous: false,\n                parameters: formData,\n                onSuccess: function(transport) {\n                    var result = transport.responseText;\n\n                    if (!result.isJSON()) {\n                        MessagesObj.addErrorMessage(result);\n                    }\n\n                    result = JSON.parse(result);\n\n                    MessagesObj.clear();\n                    self.appendGlobalMessages();\n\n                    if (result.success) {\n                        MessagesObj.addSuccessMessage(result.message);\n                    } else {\n                        MessagesObj.addErrorMessage(result.message);\n                    }\n                    CommonObj.scrollPageToTop();\n                    self.reloadLicenseTab();\n                }\n            });\n\n            return true;\n        },\n\n        // ---------------------------------------\n\n        newLicenseKeyPopup: function()\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('settings_license/create'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function(transport) {\n\n                    var content = transport.responseText;\n                    var title = M2ePro.translator.translate('Create New License');\n\n                    LicenseObj.openPopup(title, content, LicenseObj.newLicenseKey.bind(self), 'slide');\n                }\n            });\n        },\n\n        newLicenseKey: function()\n        {\n            var self = this;\n\n            if (!this.isValidForm()) {\n                return false;\n            }\n\n            new Ajax.Request(M2ePro.url.get('settings_license/create'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: $('edit_form').serialize(true),\n                onSuccess: function(transport) {\n                    var result = transport.responseText;\n\n                    if (!result.isJSON()) {\n                        MessagesObj.addErrorMessage(result);\n                    }\n\n                    result = JSON.parse(result);\n\n                    MessagesObj.clear();\n                    self.appendGlobalMessages();\n\n                    if (result.success) {\n                        if (typeof result.license_key !== 'undefined') {\n                            $('license_text_key_container').innerHTML = result.license_key;\n                        }\n                        MessagesObj.addSuccessMessage(result.message);\n                    } else {\n                        MessagesObj.addErrorMessage(result.message);\n                    }\n                    CommonObj.scrollPageToTop();\n                    self.reloadLicenseTab();\n                }\n            });\n\n            return true;\n        },\n\n        // ---------------------------------------\n\n        completeStep: function()\n        {\n            var self = this;\n            var checkResult = false;\n\n            new Ajax.Request(M2ePro.url.get('adminhtml_configuration_license/checkLicense'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function(transport) {\n                    checkResult = transport.responseText.evalJSON()['ok'];\n                    if (checkResult) {\n                        window.opener.completeStep = 1;\n                        window.close();\n                    } else {\n                        MagentoMessageObj.addError(M2ePro.translator.translate('You must get valid Trial or Live License Key.'));\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        openPopup: function(title, content, confirmCallback, type)\n        {\n            var type = type || 'popup';\n            if ($('modal_popup')) {\n                $('modal_popup').remove();\n            }\n\n            var modalDialogMessage = new Element('div', {\n                id: 'modal_popup'\n            });\n\n            var popup = jQuery(modalDialogMessage).modal({\n                title: title,\n                modalClass: type == 'popup' ? 'width-500' : '',\n                type: type,\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    class: type == 'popup' ? 'action-secondary action-dismiss' : 'action-default action-dismiss',\n                    click: function () {\n                        this.closeModal();\n                    }\n                },{\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action-primary action-accept',\n                    id: 'save_popup_button',\n                    click: function () {\n\n                        if (confirmCallback) {\n                            var result = confirmCallback();\n                            result && this.closeModal();\n                        } else {\n                            this.closeModal();\n                        }\n                    }\n                }],\n                closed: function() {\n                    modalDialogMessage.innerHTML = '';\n\n                    return true;\n                }\n            });\n            popup.modal('openModal');\n\n            modalDialogMessage.insert(content);\n            modalDialogMessage.innerHTML.evalScripts();\n\n            this.initFormValidation(popup.find('form'));\n\n            return popup;\n        },\n\n        // ---------------------------------------\n\n        refreshStatus: function()\n        {\n            var self = this;\n            new Ajax.Request(M2ePro.url.get('settings_license/refreshStatus'), {\n                method: 'post',\n                asynchronous: true,\n                onSuccess: function(transport) {\n                    var result = transport.responseText;\n\n                    if (!result.isJSON()) {\n                        MessagesObj.addErrorMessage(result);\n                    }\n\n                    result = JSON.parse(result);\n                    MessagesObj.clear();\n                    self.appendGlobalMessages();\n\n                    if (result.success) {\n                        MessagesObj.addSuccessMessage(result.message);\n                    } else {\n                        MessagesObj.addErrorMessage(result.message);\n                    }\n\n                    CommonObj.scrollPageToTop();\n                    self.reloadLicenseTab();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        appendGlobalMessages: function()\n        {\n            new Ajax.Request(M2ePro.url.get('getGlobalMessages'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function(transport) {\n                    var result = transport.responseText;\n\n                    if (!result.isJSON()) {\n                        return;\n                    }\n\n                    result = JSON.parse(result);\n\n                    if (result && Array.isArray(result)) {\n                        MessagesObj.clearGlobal();\n                        result.forEach(function(item) {\n                            var key = Object.keys(item)[0];\n                            MessagesObj['addGlobal'+key.capitalize()+'Message'](item[key]);\n                        });\n                    }\n                }\n            });\n        },\n\n        reloadLicenseTab: function()\n        {\n            BlockNoticeObj.removeInitializedBlock('block_notice_configuration_license');\n\n            new Ajax.Request(M2ePro.url.get('licenseTab'), {\n                method: 'get',\n                asynchronous: true,\n                onSuccess: function(transport) {\n                    var result = transport.responseText;\n\n                    $('configuration_settings_tabs_license_content').innerHTML = result;\n                    $('configuration_settings_tabs_license_content').innerHTML.evalScripts();\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Log/View.js":"define([\n    'M2ePro/Plugin/RandomColor',\n    'M2ePro/Plugin/Messages'\n], function (RandomColor, MessagesObj) {\n\n    window.LogView = Class.create(Common, {\n\n        notificationWasAdded: false,\n\n        processColorMapping: function () {\n\n            if (\n                !LogViewObj.notificationWasAdded\n                && !_.isUndefined(M2ePro.formData.maxAllowedLogsCountExceededNotification)\n            ) {\n                LogViewObj.notificationWasAdded = true;\n                MessagesObj.addNoticeMessage(M2ePro.formData.maxAllowedLogsCountExceededNotification);\n            }\n\n            jQuery('.data-grid tbody tr:not(.data-grid-tr-no-data)').each(function () {\n\n                var row = jQuery(this);\n                var logHash = row.find('.log-hash').text().trim();\n\n                if (!logHash.length) {\n                    return;\n                }\n\n                var color = RandomColor({\n                    seed: +logHash\n                });\n\n                row.find('td:first').css({\n                    borderLeftWidth: '7px',\n                    borderLeftColor: '#' + color\n                });\n            });\n        }\n    });\n\n});","Ess_M2ePro/js/Plugin/RandomColor.js":"// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n    // Support AMD\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n\n        // Support CommonJS\n    } else if (typeof exports === 'object') {\n        var randomColor = factory();\n\n        // Support NodeJS & Component, which allow module.exports to be a function\n        if (typeof module === 'object' && module && module.exports) {\n            exports = module.exports = randomColor;\n        }\n\n        // Support CommonJS 1.1.1 spec\n        exports.randomColor = randomColor;\n\n        // Support vanilla script loading\n    } else {\n        root.randomColor = factory();\n    }\n\n}(this, function() {\n\n    // Seed to get repeatable colors\n    var seed = null;\n\n    // Shared color dictionary\n    var colorDictionary = {};\n\n    // Populate the color dictionary\n    loadColorBounds();\n\n    var randomColor = function (options) {\n\n        options = options || {};\n\n        // Check if there is a seed and ensure it's an\n        // integer. Otherwise, reset the seed value.\n        if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n            seed = options.seed;\n\n            // A string was passed as a seed\n        } else if (typeof options.seed === 'string') {\n            seed = stringToInteger(options.seed);\n\n            // Something was passed as a seed but it wasn't an integer or string\n        } else if (options.seed !== undefined && options.seed !== null) {\n            throw new TypeError('The seed value must be an integer or string');\n\n            // No seed, reset the value outside.\n        } else {\n            seed = null;\n        }\n\n        var H,S,B;\n\n        // Check if we need to generate multiple colors\n        if (options.count !== null && options.count !== undefined) {\n\n            var totalColors = options.count,\n                colors = [];\n\n            options.count = null;\n\n            while (totalColors > colors.length) {\n\n                // Since we're generating multiple colors,\n                // incremement the seed. Otherwise we'd just\n                // generate the same color each time...\n                if (seed && options.seed) options.seed += 1;\n\n                colors.push(randomColor(options));\n            }\n\n            options.count = totalColors;\n\n            return colors;\n        }\n\n        // First we pick a hue (H)\n        H = pickHue(options);\n\n        // Then use H to determine saturation (S)\n        S = pickSaturation(H, options);\n\n        // Then use S and H to determine brightness (B).\n        B = pickBrightness(H, S, options);\n\n        // Then we return the HSB color in the desired format\n        return setFormat([H,S,B], options);\n    };\n\n    function pickHue (options) {\n\n        var hueRange = getHueRange(options.hue),\n            hue = randomWithin(hueRange);\n\n        // Instead of storing red as two seperate ranges,\n        // we group them, using negative numbers\n        if (hue < 0) {hue = 360 + hue;}\n\n        return hue;\n\n    }\n\n    function pickSaturation (hue, options) {\n\n        if (options.luminosity === 'random') {\n            return randomWithin([0,100]);\n        }\n\n        if (options.hue === 'monochrome') {\n            return 0;\n        }\n\n        var saturationRange = getSaturationRange(hue);\n\n        var sMin = saturationRange[0],\n            sMax = saturationRange[1];\n\n        switch (options.luminosity) {\n\n            case 'bright':\n                sMin = 55;\n                break;\n\n            case 'dark':\n                sMin = sMax - 10;\n                break;\n\n            case 'light':\n                sMax = 55;\n                break;\n        }\n\n        return randomWithin([sMin, sMax]);\n\n    }\n\n    function pickBrightness (H, S, options) {\n\n        var bMin = getMinimumBrightness(H, S),\n            bMax = 100;\n\n        switch (options.luminosity) {\n\n            case 'dark':\n                bMax = bMin + 20;\n                break;\n\n            case 'light':\n                bMin = (bMax + bMin)/2;\n                break;\n\n            case 'random':\n                bMin = 0;\n                bMax = 100;\n                break;\n        }\n\n        return randomWithin([bMin, bMax]);\n    }\n\n    function setFormat (hsv, options) {\n\n        switch (options.format) {\n\n            case 'hsvArray':\n                return hsv;\n\n            case 'hslArray':\n                return HSVtoHSL(hsv);\n\n            case 'hsl':\n                var hsl = HSVtoHSL(hsv);\n                return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n            case 'hsla':\n                var hslColor = HSVtoHSL(hsv);\n                var alpha = options.alpha || Math.random();\n                return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n            case 'rgbArray':\n                return HSVtoRGB(hsv);\n\n            case 'rgb':\n                var rgb = HSVtoRGB(hsv);\n                return 'rgb(' + rgb.join(', ') + ')';\n\n            case 'rgba':\n                var rgbColor = HSVtoRGB(hsv);\n                var alpha = options.alpha || Math.random();\n                return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n            default:\n                return HSVtoHex(hsv);\n        }\n\n    }\n\n    function getMinimumBrightness(H, S) {\n\n        var lowerBounds = getColorInfo(H).lowerBounds;\n\n        for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n            var s1 = lowerBounds[i][0],\n                v1 = lowerBounds[i][1];\n\n            var s2 = lowerBounds[i+1][0],\n                v2 = lowerBounds[i+1][1];\n\n            if (S >= s1 && S <= s2) {\n\n                var m = (v2 - v1)/(s2 - s1),\n                    b = v1 - m*s1;\n\n                return m*S + b;\n            }\n\n        }\n\n        return 0;\n    }\n\n    function getHueRange (colorInput) {\n\n        if (typeof parseInt(colorInput) === 'number') {\n\n            var number = parseInt(colorInput);\n\n            if (number < 360 && number > 0) {\n                return [number, number];\n            }\n\n        }\n\n        if (typeof colorInput === 'string') {\n\n            if (colorDictionary[colorInput]) {\n                var color = colorDictionary[colorInput];\n                if (color.hueRange) {return color.hueRange;}\n            }\n        }\n\n        return [0,360];\n\n    }\n\n    function getSaturationRange (hue) {\n        return getColorInfo(hue).saturationRange;\n    }\n\n    function getColorInfo (hue) {\n\n        // Maps red colors to make picking hue easier\n        if (hue >= 334 && hue <= 360) {\n            hue-= 360;\n        }\n\n        for (var colorName in colorDictionary) {\n            var color = colorDictionary[colorName];\n            if (color.hueRange &&\n                hue >= color.hueRange[0] &&\n                hue <= color.hueRange[1]) {\n                return colorDictionary[colorName];\n            }\n        } return 'Color not found';\n    }\n\n    function randomWithin (range) {\n        if (seed === null) {\n            return Math.floor(range[0] + Math.random()*(range[1] + 1 - range[0]));\n        } else {\n            //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n            var max = range[1] || 1;\n            var min = range[0] || 0;\n            seed = (seed * 9301 + 49297) % 233280;\n            var rnd = seed / 233280.0;\n            return Math.floor(min + rnd * (max - min));\n        }\n    }\n\n    function HSVtoHex (hsv){\n\n        var rgb = HSVtoRGB(hsv);\n\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length == 1 ? '0' + hex : hex;\n        }\n\n        var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n        return hex;\n\n    }\n\n    function defineColor (name, hueRange, lowerBounds) {\n\n        var sMin = lowerBounds[0][0],\n            sMax = lowerBounds[lowerBounds.length - 1][0],\n\n            bMin = lowerBounds[lowerBounds.length - 1][1],\n            bMax = lowerBounds[0][1];\n\n        colorDictionary[name] = {\n            hueRange: hueRange,\n            lowerBounds: lowerBounds,\n            saturationRange: [sMin, sMax],\n            brightnessRange: [bMin, bMax]\n        };\n\n    }\n\n    function loadColorBounds () {\n\n        defineColor(\n            'monochrome',\n            null,\n            [[0,0],[100,0]]\n        );\n\n        defineColor(\n            'red',\n            [-26,18],\n            [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n        );\n\n        defineColor(\n            'orange',\n            [19,46],\n            [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n        );\n\n        defineColor(\n            'yellow',\n            [47,62],\n            [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n        );\n\n        defineColor(\n            'green',\n            [63,178],\n            [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n        );\n\n        defineColor(\n            'blue',\n            [179, 257],\n            [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n        );\n\n        defineColor(\n            'purple',\n            [258, 282],\n            [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n        );\n\n        defineColor(\n            'pink',\n            [283, 334],\n            [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n        );\n\n    }\n\n    function HSVtoRGB (hsv) {\n\n        // this doesn't work for the values of 0 and 360\n        // here's the hacky fix\n        var h = hsv[0];\n        if (h === 0) {h = 1;}\n        if (h === 360) {h = 359;}\n\n        // Rebase the h,s,v values\n        h = h/360;\n        var s = hsv[1]/100,\n            v = hsv[2]/100;\n\n        var h_i = Math.floor(h*6),\n            f = h * 6 - h_i,\n            p = v * (1 - s),\n            q = v * (1 - f*s),\n            t = v * (1 - (1 - f)*s),\n            r = 256,\n            g = 256,\n            b = 256;\n\n        switch(h_i) {\n            case 0: r = v; g = t; b = p;  break;\n            case 1: r = q; g = v; b = p;  break;\n            case 2: r = p; g = v; b = t;  break;\n            case 3: r = p; g = q; b = v;  break;\n            case 4: r = t; g = p; b = v;  break;\n            case 5: r = v; g = p; b = q;  break;\n        }\n\n        var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n        return result;\n    }\n\n    function HSVtoHSL (hsv) {\n        var h = hsv[0],\n            s = hsv[1]/100,\n            v = hsv[2]/100,\n            k = (2-s)*v;\n\n        return [\n            h,\n            Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n            k/2 * 100\n        ];\n    }\n\n    function stringToInteger (string) {\n        var total = 0\n        for (var i = 0; i !== string.length; i++) {\n            if (total >= Number.MAX_SAFE_INTEGER) break;\n            total += string.charCodeAt(i)\n        }\n        return total\n    }\n\n    return randomColor;\n}));","Ess_M2ePro/js/Plugin/Validator.js":"define([\n    'jquery',\n    'jquery/validate',\n    'mage/validation'\n], function(jQuery) {\n\n    jQuery.validator.prototype.showLabel = function (element, message) {\n        var label = this.errorsFor(element),\n            close = jQuery('<a />');\n\n        close.on('click', function () {\n            jQuery(this).parent().remove();\n        });\n        if (label.length) {\n            // refresh error/success class\n            label.removeClass(this.settings.validClass).addClass(this.settings.errorClass);\n\n            // check if we have a generated label, replace the message then\n            if (label.attr(\"generated\")) {\n                label.hide().html(message);\n            }\n        } else {\n            var currentElement = jQuery(element);\n\n            if (!element.visible()) {\n                currentElement = currentElement.parent();\n            }\n\n            var MIN_WIDTH = 110,\n                width = +currentElement.outerWidth();\n\n            width < MIN_WIDTH && (width = MIN_WIDTH);\n\n            // create label\n            label = jQuery(\"<\" + this.settings.errorElement + \"/>\")\n                .attr({\n                    \"for\": this.idOrName(element),\n                    generated: true,\n                    style: 'position: absolute;' +\n                    'width: ' + width + 'px;' +\n                    'left: ' + currentElement.position().left + 'px;' +\n                    'z-index: 300'\n                })\n                .addClass(this.settings.errorClass)\n                .html(message || \"\");\n\n            if (this.settings.wrapper) {\n                // make sure the element is visible, even in IE\n                // actually showing the wrapped element is handled elsewhere\n                label = label.hide().show().wrap(\"<\" + this.settings.wrapper + \"/>\").parent();\n            }\n            if (!this.labelContainer.append(label).length) {\n                if (this.settings.errorPlacement) {\n                    this.settings.errorPlacement(label, jQuery(element));\n                } else {\n                    label.insertAfter(element);\n                }\n            }\n        }\n        if (!message && this.settings.success) {\n            label.text(\"\");\n            if (typeof this.settings.success === \"string\") {\n                label.addClass(this.settings.success);\n            } else {\n                this.settings.success(label, element);\n            }\n        }\n\n        label.append(close);\n        this.toShow = this.toShow.add(label);\n    };\n\n});","Ess_M2ePro/js/Plugin/ProgressBar.js":"define([], function () {\n\n    window.ProgressBar = Class.create();\n    ProgressBar.prototype = {\n\n        // ---------------------------------------\n\n        initialize: function (progressBarId) {\n            if (typeof progressBarId == 'undefined') {\n                progressBarId = '';\n            }\n\n            this.progressBarId = progressBarId;\n\n            this.title = '';\n            this.percents = 0;\n            this.status = '';\n\n            this.hide();\n            this.makeAndFillHtml();\n            this.reset();\n        },\n\n        // ---------------------------------------\n\n        makeAndFillHtml: function () {\n            if ($$('#' + this.progressBarId).length == 0) {\n                return false;\n            }\n\n            if (!$(this.progressBarId).hasClassName('progress_bar_container')) {\n                $(this.progressBarId).addClassName('progress_bar_container');\n            }\n\n            var html = ' <div id=\"' + this.progressBarId + '_title\" class=\"progress_bar_title\"></div>' +\n                ' <div id=\"' + this.progressBarId + '_control\" class=\"progress_bar_control\">' +\n                '     <div id=\"' + this.progressBarId + '_fill\" class=\"progress_bar_fill\">&nbsp;</div>' +\n                '     <div id=\"' + this.progressBarId + '_percents\" class=\"progress_bar_percents\"></div>' +\n                ' </div>' +\n                ' <div id=\"' + this.progressBarId + '_status\" class=\"progress_bar_status\"></div>';\n\n            $(this.progressBarId).innerHTML = html;\n        },\n\n        reset: function () {\n            this.setTitle('');\n            this.setPercents(0, 0);\n            this.setStatus('');\n        },\n\n        // ---------------------------------------\n\n        show: function (title, percents, status) {\n            if (typeof title == 'undefined') {\n                title = this.title;\n            }\n\n            if (typeof percents == 'undefined') {\n                percents = this.percents;\n            }\n\n            percents = parseInt(percents);\n\n            if (typeof status == 'undefined') {\n                status = this.status;\n            }\n\n            this.setTitle(title);\n            this.setPercents(percents, 0);\n            this.setStatus(status);\n\n            $(this.progressBarId).show();\n        },\n\n        hide: function () {\n            $(this.progressBarId).hide();\n        },\n\n        // ---------------------------------------\n\n        getTitle: function () {\n            return this.title;\n        },\n\n        setTitle: function (string) {\n            if (typeof string == 'undefined') {\n                string = '&nbsp;';\n            }\n\n            this.title = string;\n\n            $(this.progressBarId + '_title').innerHTML = this.title;\n        },\n\n        // ---------------------------------------\n\n        getPercents: function () {\n            return this.percents;\n        },\n\n        setPercents: function (value, animation) {\n            this.animationWorking = false;\n\n            if (typeof value == 'undefined') {\n                value = 0;\n            }\n\n            value = parseInt(value);\n\n            if (value < 0) {\n                value = 0;\n            }\n            if (value > 100) {\n                value = 100;\n            }\n\n            if (typeof animation == 'undefined') {\n                animation = 1;\n            }\n\n            animation = parseInt(animation);\n\n            if (value == 0 || value == 100) {\n                animation = 0;\n            }\n\n            if (value != 0 && value < this.percents) {\n                animation = 0;\n            }\n\n            if (animation == 1) {\n                this.animationWorking = true;\n                this.animatePercents(value);\n            } else {\n                this.percents = value;\n                this.setHtmlPercents();\n            }\n        },\n\n        animatePercents: function (needleValue) {\n            if (!this.animationWorking) {\n                return;\n            }\n\n            if (this.percents == needleValue) {\n                this.setHtmlPercents();\n                return;\n            }\n\n            var interval = 0;\n            if (needleValue > this.percents) {\n                this.percents++;\n                interval = needleValue - this.percents;\n            } else {\n                this.percents--;\n                interval = this.percents - needleValue;\n            }\n\n            this.setHtmlPercents();\n\n            var speed = 80;\n\n            if (interval < 70) {\n                speed = speed - interval;\n            } else {\n                speed = 10;\n            }\n\n            var self = this;\n            setTimeout(function () {\n                self.animatePercents(needleValue);\n            }, speed);\n        },\n\n        setHtmlPercents: function () {\n            $(this.progressBarId + '_fill').setStyle({width: this.percents + '%'});\n\n            if (this.percents < 53) {\n                if ($(this.progressBarId + '_percents').hasClassName('progress_bar_percents_after_50')) {\n                    $(this.progressBarId + '_percents').removeClassName('progress_bar_percents_after_50');\n                }\n                if (!$(this.progressBarId + '_percents').hasClassName('progress_bar_percents_before_50')) {\n                    $(this.progressBarId + '_percents').addClassName('progress_bar_percents_before_50');\n                }\n            } else {\n                if ($(this.progressBarId + '_percents').hasClassName('progress_bar_percents_before_50')) {\n                    $(this.progressBarId + '_percents').removeClassName('progress_bar_percents_before_50');\n                }\n                if (!$(this.progressBarId + '_percents').hasClassName('progress_bar_percents_after_50')) {\n                    $(this.progressBarId + '_percents').addClassName('progress_bar_percents_after_50');\n                }\n            }\n\n            $(this.progressBarId + '_percents').innerHTML = this.percents + '&nbsp;%';\n        },\n\n        // ---------------------------------------\n\n        getStatus: function () {\n            return this.status;\n        },\n\n        setStatus: function (string) {\n            if (typeof string == 'undefined') {\n                string = '&nbsp;';\n            }\n\n            this.status = string;\n\n            $(this.progressBarId + '_status').innerHTML = this.status;\n        }\n\n        // ---------------------------------------\n    };\n});","Ess_M2ePro/js/Plugin/Storage.js":"define([\n    'jquery',\n    'underscore',\n    'jquery/jquery-storageapi'\n], function (jQuery, _) {\n    var M2EPRO_STORAGE_KEY = 'm2epro_data',\n        _storage = jQuery.localStorage;\n\n    function initStorage() {\n        var data = _storage.get(M2EPRO_STORAGE_KEY);\n\n        if (!_.isNull(data) && _.isObject(data)) {\n            return data;\n        }\n\n        return _storage.set(M2EPRO_STORAGE_KEY, {});\n    }\n\n    return {\n\n        set: function(key, value) {\n            var data = initStorage();\n\n            data[key] = value;\n            return _storage.set(M2EPRO_STORAGE_KEY, data);\n        },\n\n        get: function (key) {\n            var data = initStorage();\n\n            if (_.isUndefined(data[key])) {\n                return;\n            }\n\n            return data[key];\n        },\n\n        remove: function(key) {\n            var data = initStorage();\n\n            if (_.isUndefined(data[key])) {\n                return false\n            }\n\n            delete data[key];\n            _storage.set(M2EPRO_STORAGE_KEY, data);\n            return true;\n        },\n\n        removeAllByPrefix: function(prefix) {\n            var data = initStorage();\n\n            _.each(data, function(value, key) {\n                if (key.indexOf(prefix) === -1) {\n                    return;\n                }\n\n                delete data[key];\n            });\n\n            _storage.set(M2EPRO_STORAGE_KEY, data);\n        },\n\n        removeAllByPostfix: function(postfix) {\n            var data = initStorage();\n\n            _.each(data, function(value, key) {\n                if (key.indexOf(postfix) === -1) {\n                    return;\n                }\n\n                delete data[key];\n            });\n\n            _storage.set(M2EPRO_STORAGE_KEY, data);\n        },\n\n        removeAll: function () {\n            _storage.set(M2EPRO_STORAGE_KEY, {});\n            return true;\n        }\n    };\n});","Ess_M2ePro/js/Plugin/BlockNotice.js":"define([\n    'jquery',\n    'M2ePro/Plugin/Storage',\n    'M2ePro/Common'\n], function (jQuery, localStorage) {\n\n    window.BlockNotice = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initializedBlocks: [],\n\n        storageKeys: {\n            prefix: 'm2e_bn_',\n            shown: '_was_shown',\n            closed: '_closed',\n            hiddenContent: '_hidden_content',\n            expandedContent: '_expanded_content',\n        },\n\n        getHashedStorage: function(id)\n        {\n            var hashedStorageKey = this.storageKeys.prefix + md5(id).substr(0, 10);\n            var resultStorage = localStorage.get(hashedStorageKey);\n\n            if (resultStorage === null) {\n                return '';\n            }\n\n            return resultStorage;\n        },\n\n        setHashedStorage: function(id)\n        {\n            var hashedStorageKey = this.storageKeys.prefix + md5(id).substr(0, 10);\n            localStorage.set(hashedStorageKey, 1);\n        },\n\n        deleteHashedStorage: function(id)\n        {\n            var hashedStorageKey = this.storageKeys.prefix + md5(id).substr(0, 10);\n\n            localStorage.remove(hashedStorageKey);\n            localStorage.remove(id);\n        },\n\n        deleteAllHashedStorage: function()\n        {\n            localStorage.removeAllByPrefix(this.storageKeys.prefix);\n        },\n\n        // ---------------------------------------\n\n        showContent: function (id, storage) {\n\n            id = id || '';\n            if (id == '') {\n                return false;\n            }\n\n            if (typeof storage === 'undefined') {\n                storage = true;\n            }\n\n            var block = jQuery('#' + id);\n            var hasTitle = block.find('.title').hasClass('title-expand');\n\n            if (!block.is(':visible')) {\n                block.show();\n            }\n\n            block.find('.content').show(0, this.updateFloatingHeader);\n\n            if (hasTitle) {\n                block.find('.title .icon').removeClass('icon-expand').addClass('icon-shrink');\n                var onclick = block.find('.title a').attr('onclick');\n                onclick = onclick.replace(/expandTitledContent/, 'shrinkTitledContent');\n                block.find('.title a').attr('onclick', onclick);\n            } else {\n                block.find('.shrink').show();\n                block.find('.expand').hide();\n            }\n\n            storage && this.deleteHashedStorage(id + this.storageKeys.hiddenContent);\n\n            return true;\n        },\n\n        hideContent: function (id, storage) {\n\n            id = id || '';\n            if (id == '') {\n                return false;\n            }\n\n            if (typeof storage === 'undefined') {\n                storage = true;\n            }\n\n            var block = jQuery('#' + id);\n\n            block.find('.content').hide(0, this.updateFloatingHeader);\n            block.find('.shrink').hide();\n            block.find('.expand').show();\n\n            storage && this.setHashedStorage(id + this.storageKeys.hiddenContent);\n\n            return true;\n        },\n\n        shrinkContent: function (id, storage) {\n            var self = this;\n            id = id || '';\n            if (id == '') {\n                return false;\n            }\n\n            if (typeof storage === 'undefined') {\n                storage = true;\n            }\n\n            var block = jQuery('#' + id);\n\n            block.find('.content').animate({\n                height: 'toggle',\n                opacity: 'toggle'\n            }, 200, function() {\n                block.find('.shrink').fadeOut(100, function() {\n                    block.find('.expand').fadeIn(100, self.updateFloatingHeader);\n                });\n            });\n\n            storage && this.deleteHashedStorage(id + this.storageKeys.expandedContent);\n        },\n\n        expandContent: function (id, storage) {\n            var self = this;\n            id = id || '';\n            if (id == '') {\n                return false;\n            }\n\n            if (typeof storage === 'undefined') {\n                storage = true;\n            }\n\n            var block = jQuery('#' + id);\n\n            block.find('.expand').fadeOut(100, function() {\n                block.find('.shrink').fadeIn(100, function(){\n                    block.find('.content').animate({\n                        height: 'toggle',\n                        opacity: 'toggle'\n                    }, 200, self.updateFloatingHeader);\n                });\n            });\n\n            storage && this.setHashedStorage(id + this.storageKeys.expandedContent);\n        },\n\n        shrinkTitledContent: function (id, storage) {\n            var self = this;\n            id = id || '';\n            if (id == '') {\n                return false;\n            }\n\n            if (typeof storage === 'undefined') {\n                storage = true;\n            }\n\n            var block = jQuery('#' + id);\n\n            block.find('.title .icon').removeClass('icon-shrink').addClass('icon-expand');\n\n            block.find('.content').animate({\n                height: 'toggle',\n                opacity: 'toggle'\n            }, 200, function() {\n                var onclick = block.find('.title a').attr('onclick');\n                onclick = onclick.replace(/shrinkTitledContent/, 'expandTitledContent');\n                block.find('.title a').attr('onclick', onclick);\n                block.find('.title a').attr('title', M2ePro.translator.translate('Expand'));\n\n                self.updateFloatingHeader();\n            });\n\n            storage && this.deleteHashedStorage(id + this.storageKeys.expandedContent);\n        },\n\n        expandTitledContent: function (id, storage) {\n            var self = this;\n            id = id || '';\n            if (id == '') {\n                return false;\n            }\n\n            if (typeof storage === 'undefined') {\n                storage = true;\n            }\n\n            var block = jQuery('#' + id);\n\n            block.find('.title .icon').removeClass('icon-expand').addClass('icon-shrink');\n\n            block.find('.content').animate({\n                height: 'toggle',\n                opacity: 'toggle'\n            }, 200, function() {\n                var onclick = block.find('.title a').attr('onclick');\n                onclick = onclick.replace(/expandTitledContent/, 'shrinkTitledContent');\n                block.find('.title a').attr('onclick', onclick);\n                block.find('.title a').attr('title', M2ePro.translator.translate('Collapse'));\n\n                self.updateFloatingHeader();\n            });\n\n            storage && this.setHashedStorage(id + this.storageKeys.expandedContent);\n        },\n\n        // ---------------------------------------\n\n        showBlock: function (id) {\n            id = id || '';\n            if (id == '') {\n                return false;\n            }\n            $(id).show();\n            this.deleteHashedStorage(id + this.storageKeys.closed);\n            return true;\n        },\n\n        hideBlock: function (id) {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        id = id || '';\n                        if (id == '') {\n                            return false;\n                        }\n                        var block = jQuery('#' + id);\n                        block.hide(0, function(){\n                            self.updateFloatingHeader();\n                            block.remove();\n                        });\n                        self.setHashedStorage(id + self.storageKeys.closed);\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        hideFieldsetIcon: function (id)\n        {\n            var fieldsetId = id.split('help_block_')[1];\n            jQuery('#' + fieldsetId + '-wrapper').find('.m2epro-fieldset-tooltip').hide();\n        },\n\n        // ---------------------------------------\n\n        init: function (reinit) {\n\n            if (typeof reinit === 'undefined') {\n                reinit = false;\n            }\n\n            var blockNotices = jQuery('.block_notices');\n\n            if (!blockNotices.length) {\n                return;\n            }\n\n            if (typeof BLOCK_NOTICES_SHOW !== 'undefined' && !BLOCK_NOTICES_SHOW) {\n                blockNotices.hide();\n                return;\n            }\n\n            var self = this;\n\n            blockNotices.each(function(index, block){\n\n                var id = block.id;\n\n                if (self.initializedBlocks.indexOf(id) > -1) {\n                    return;\n                }\n\n                !reinit && self.initializedBlocks.push(id);\n\n                var noCollapse = jQuery(block).hasClass('no_collapse');\n\n                if (noCollapse) {\n                    self.showContent(id, false);\n                    return;\n                }\n\n                var wasShown = self.getHashedStorage(id + self.storageKeys.shown);\n                var tooltiped = jQuery(block).hasClass('tooltiped');\n                var expanded = self.getHashedStorage(id + self.storageKeys.expandedContent);\n                var closed = self.getHashedStorage(id + self.storageKeys.closed);\n\n                if (!wasShown) {\n                    self.showContent(id, false);\n                    self.setHashedStorage(id + self.storageKeys.shown);\n                    tooltiped && self.hideFieldsetIcon(id);\n                } else if (tooltiped) {\n                    jQuery(block).hide();\n                } else if (closed) {\n                    jQuery(block).remove();\n                } else if (expanded) {\n                    self.showContent(id, false);\n                } else {\n                    jQuery(block).show();\n                }\n            });\n        },\n\n        /**\n         * Gives ability to reinitialize already initialized help block, when init() will be called\n         * @param block\n         */\n        removeInitializedBlock: function (block)\n        {\n            var index = this.initializedBlocks.indexOf(block);\n            if (index > -1) {\n                this.initializedBlocks.splice(index, 1);\n            }\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Plugin/AreaWrapper.js":"define([], function () {\n\n    window.AreaWrapper = Class.create();\n    AreaWrapper.prototype = {\n\n        // ---------------------------------------\n\n        initialize: function (containerId) {\n            if (typeof containerId == 'undefined') {\n                containerId = '';\n            }\n\n            this.containerId = containerId;\n            this.containerPosition = $(this.containerId).getStyle('position');\n\n            this.wrapperId = this.containerId + '_wrapper';\n\n            this.makeWrapperHtml();\n        },\n\n        // ---------------------------------------\n\n        makeWrapperHtml: function () {\n            var html = '<div id=\"' + this.wrapperId + '\" class=\"area_wrapper\" style=\"display: none;\">&nbsp;</div>';\n            $(this.containerId).insert({'top': html});\n        },\n\n        addDivClearBothToContainer: function () {\n            $(this.containerId).innerHTML += '<div style=\"clear: both;\"></div>';\n        },\n\n        // ---------------------------------------\n\n        lock: function () {\n            $(this.containerId).setStyle({position: 'relative'});\n            $(this.wrapperId).show();\n        },\n\n        unlock: function () {\n            $(this.wrapperId).hide();\n            $(this.containerId).setStyle({position: this.containerPosition});\n        }\n\n        // ---------------------------------------\n    };\n});","Ess_M2ePro/js/Plugin/Fieldset.js":"define([\n    'jquery',\n    'M2ePro/Plugin/Storage',\n    \"jquery/ui\"\n], function (jQuery, localStorage) {\n\n    var PREFIX = 'm2e_bn_',\n        storageWrapper = {\n            set: function(key, value) {\n                localStorage.set(PREFIX+key, value);\n                return this;\n            },\n            get: function(key) {\n                return localStorage.get(PREFIX+key);\n            },\n            remove: function(key) {\n                localStorage.remove(PREFIX+key);\n                return this;\n            }\n        };\n\n    jQuery.widget('mage.collapsable', {\n        options: {\n            parent: null,\n            openedClass: 'opened',\n            wrapper: '.fieldset-wrapper'\n        },\n\n        _create: function () {\n            this._events();\n        },\n\n        _events: function () {\n            var self = this;\n\n            this.element\n                .on('show', function (e) {\n                    var fieldsetWrapper = jQuery(this).closest(self.options.wrapper);\n                    storageWrapper.set(this.id, 1);\n\n                    fieldsetWrapper.addClass(self.options.openedClass);\n                    e.stopPropagation();\n                })\n                .on('hide', function (e) {\n                    var fieldsetWrapper = jQuery(this).closest(self.options.wrapper);\n                    storageWrapper.set(this.id, 0);\n\n                    fieldsetWrapper.removeClass(self.options.openedClass);\n                    e.stopPropagation();\n                });\n        }\n    });\n\n    window.initCollapsable = function()\n    {\n        jQuery('.collapse').collapsable();\n        jQuery.each(jQuery('.entry-edit'), function (i, entry) {\n            jQuery('.collapse', entry).each(function () {\n                var $self = jQuery(this),\n                    isOpened = storageWrapper.get(this.id);\n\n                if (isOpened === 0) {\n                    $self.collapse('hide');\n                    $self.data('collapsed', true);\n                } else {\n                    $self.collapse('show');\n                    $self.data('collapsed', false);\n                }\n            });\n        });\n    }\n});","Ess_M2ePro/js/Plugin/Messages.js":"define([\n    'jquery',\n    'mage/template'\n], function (jQuery, mageTemplate) {\n\n    var SCOPE_CONTEXT  = 1,\n        SCOPE_GLOBAL   = 2,\n        SUCCESS = 1,\n        WARNING = 2,\n        ERROR   = 3,\n        _templateContainer = '<div id=\"messages\"><div class=\"messages m2epro-messages\"></div></div>',\n        _templates = {\n            global: '<div class=\"message\"><div><%= data %></div></div>',\n            success: '<div class=\"message message-success success\"><div data-ui-id=\"messages-message-success\"><%= data %></div></div>',\n            warning: '<div class=\"message message-warning warning\"><div data-ui-id=\"messages-message-warning\"><%= data %></div></div>',\n            error: '<div class=\"message message-error error\"><div data-ui-id=\"messages-message-error\"><%= data %></div></div>'\n        };\n\n    return {\n        _container: '#anchor-content',\n\n        _globalContainer: '#globalMessages',\n\n        setContainer: function(container) {\n            this._container = container;\n        },\n\n        add: function (message, scope, type) {\n\n            var templateContainer;\n\n            if (scope == SCOPE_GLOBAL) {\n                templateContainer = jQuery(this._globalContainer).find('#messages');\n\n                if (!templateContainer.length) {\n                    jQuery(this._globalContainer).prepend(_templateContainer);\n                    templateContainer = jQuery(this._globalContainer).find('#messages');\n                }\n            } else {\n                templateContainer = jQuery(this._container).find('#messages');\n\n                if (!templateContainer.length) {\n                    var pageActions = jQuery(this._container).find('.page-main-actions');\n                    if (pageActions.length) {\n                        pageActions.after(_templateContainer);\n                    } else {\n                        jQuery(this._container).prepend(_templateContainer);\n                    }\n                    templateContainer = jQuery(this._container).find('#messages');\n                }\n            }\n\n            var template = _templates.global;\n\n            if (type == SUCCESS) {\n                template = _templates.success;\n            } else if (type == WARNING) {\n                template = _templates.warning;\n            } else if (type == ERROR) {\n                template = _templates.error;\n            }\n\n            var messageBlock = mageTemplate(template, {\n                data: message\n            });\n\n            templateContainer.find('.messages').prepend(messageBlock);\n\n            if (scope == SCOPE_GLOBAL) {\n                CommonObj.updateFloatingHeader();\n            }\n\n            return this;\n        },\n\n        addSuccessMessage: function (message) {\n            return this.add(message, SCOPE_CONTEXT, SUCCESS);\n        },\n\n        addNoticeMessage: function (message) {\n            return this.add(message, SCOPE_CONTEXT);\n        },\n\n        addWarningMessage: function (message) {\n            return this.add(message, SCOPE_CONTEXT, WARNING);\n        },\n\n        addErrorMessage: function (message) {\n            return this.add(message, SCOPE_CONTEXT, ERROR);\n        },\n\n        addGlobalSuccessMessage: function (message) {\n            return this.add(message, SCOPE_GLOBAL, SUCCESS);\n        },\n\n        addGlobalNoticeMessage: function (message) {\n            return this.add(message, SCOPE_GLOBAL);\n        },\n\n        addGlobalWarningMessage: function (message) {\n            return this.add(message, SCOPE_GLOBAL, WARNING);\n        },\n\n        addGlobalErrorMessage: function (message) {\n            return this.add(message, SCOPE_GLOBAL, ERROR);\n        },\n\n        clear: function () {\n            jQuery(this._container).find('#messages > .messages').empty();\n        },\n\n        clearGlobal: function () {\n            jQuery(this._globalContainer).find('.messages').empty();\n            CommonObj.updateFloatingHeader();\n        }\n    };\n});","Ess_M2ePro/js/Plugin/Confirm.js":"define([\n    'jquery',\n    'underscore',\n    'jquery/ui',\n    'Magento_Ui/js/modal/confirm'\n], function ($, _) {\n    'use strict';\n\n    $.widget('mage.m2e-confirm', $.mage.confirm);\n\n    return function (config) {\n\n        config = _.extend({\n            title: M2ePro.translator.translate('Confirmation'),\n            content: M2ePro.translator.translate('Are you sure?'),\n            buttons: [{\n                text: M2ePro.translator.translate('Cancel'),\n                class: 'action-secondary action-dismiss',\n                click: function (event) {\n                    this.closeModal(event);\n                }\n            }, {\n                text: M2ePro.translator.translate('Confirm'),\n                class: 'action-primary action-accept',\n                click: function (event) {\n                    this.closeModal(event, true);\n                }\n            }]\n        }, config);\n\n        return $('<div></div>').html(config.content).confirm(config);\n    };\n});\n","Ess_M2ePro/js/Plugin/Alert.js":"define([\n    'jquery',\n    'underscore',\n    'jquery/ui',\n    'Magento_Ui/js/modal/confirm'\n], function ($, _) {\n    'use strict';\n\n    $.widget('mage.m2eAlert', $.mage.confirm, {\n        options: {\n            modalClass: 'confirm',\n            title: $.mage.__('Attention'),\n            actions: {\n\n                /**\n                 * Callback always - called on all actions.\n                 */\n                always: function () {}\n            },\n            buttons: [{\n                text: $.mage.__('OK'),\n                class: 'action-primary action-accept',\n\n                /**\n                 * Click handler.\n                 */\n                click: function () {\n                    this.closeModal(true);\n                }\n            }]\n        },\n\n        /**\n         * Close modal window.\n         */\n        closeModal: function () {\n            this.options.actions.always();\n            this.element.bind('alertclosed', _.bind(this._remove, this));\n\n            return this._super();\n        }\n    });\n\n    return function (config) {\n        return $('<div></div>').html(config.content).m2eAlert(config);\n    };\n});\n","Ess_M2ePro/js/Plugin/Magento/AttributeCreator.js":"define([\n    'M2ePro/Plugin/Messages',\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'prototype'\n], function (MessagesObj, jQuery, modal) {\n\n    window.AttributeCreator = Class.create();\n    AttributeCreator.prototype = {\n\n        id: null,\n\n        popupObj: null,\n        selectObj: null,\n\n        delayTimer: null,\n        selectIndexBeforeCreation: 0,\n\n        // it is for close callback [in order to rest selected option for selectObj]\n        attributeWasCreated: false,\n\n        formId: 'edit_form',\n        modalId: 'modal_create_magento_attribute',\n        addOptionValue: 'new-one-attribute',\n\n        onSuccessCallback: null,\n        onFailedCallback: null,\n\n        // ---------------------------------------\n\n        initialize: function (id)\n        {\n            id = 'AttributeCreator_' + id + '_Obj';\n\n            this.id = id;\n            window[id] = this;\n\n            MessagesObj.setContainer('.modal-slide:has(#'+this.modalId+')');\n        },\n\n        // ---------------------------------------\n\n        setSelectObj: function (selectObj)\n        {\n            this.selectObj = selectObj;\n        },\n\n        setSelectIndexBeforeCreation: function (index)\n        {\n            this.selectIndexBeforeCreation = index;\n        },\n\n        // ---------------------------------------\n\n        setOnSuccessCallback: function (funct)\n        {\n            this.onSuccessCallback = funct;\n        },\n\n        setOnFailedCallback: function (funct)\n        {\n            this.onFailedCallback = funct;\n        },\n\n        // ---------------------------------------\n\n        showPopup: function (params)\n        {\n            var self = this;\n            params = params || {};\n\n            if (self.selectObj && self.selectObj.getAttribute('allowed_attribute_types')) {\n                params['allowed_attribute_types'] = self.selectObj.getAttribute('allowed_attribute_types');\n            }\n\n            if (self.selectObj && self.selectObj.getAttribute('apply_to_all_attribute_sets') == 'false') {\n                params['apply_to_all_attribute_sets'] = '0';\n            }\n\n            params['handler_id'] = self.id;\n\n            new Ajax.Request(M2ePro.url.get('general/getCreateAttributeHtmlPopup'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: params,\n                onSuccess: function (transport) {\n\n                    var modalDialogMessage = $(self.modalId);\n\n                    if (!modalDialogMessage) {\n                        modalDialogMessage = new Element('div', {\n                            id: self.modalId\n                        });\n                    }\n\n                    self.popupObj = jQuery(modalDialogMessage).modal({\n                        title: M2ePro.translator.translate('Creation of New Magento Attribute'),\n                        type: 'slide',\n                        buttons: [\n                            {\n                                text: M2ePro.translator.translate('Cancel'),\n                                attr: {id: 'magento_attribute_creation_cancel_button'},\n                                class: 'action-dismiss',\n                                click: function () {}\n                            },{\n                                text: M2ePro.translator.translate('Confirm'),\n                                attr: {id: 'magento_attribute_creation_confirm_button'},\n                                class: 'action primary',\n                                click: function () {}\n                            }\n                        ],\n                        closed: function() {\n                            MessagesObj.clear();\n                        }\n                    });\n\n                    var closeCallback = function (e) {\n                        self.onClosePopupCallback();\n                    };\n                    self.popupObj.data().modal.modal.find('.action-close')\n                        .off('click', closeCallback)\n                        .on('click', closeCallback);\n\n                    $('magento_attribute_creation_cancel_button')\n                        .stopObserving()\n                        .observe('click', function (e) {\n                            self.onCancelPopupCallback();\n                            self.popupObj.modal('closeModal');\n                        });\n\n                    $('magento_attribute_creation_confirm_button')\n                        .stopObserving()\n                        .observe('click', function (e) {\n                            self.onOkPopupCallback();\n                        });\n\n                    self.popupObj.modal('openModal');\n                    self.attributeWasCreated = false;\n\n                    modalDialogMessage.innerHTML = transport.responseText;\n                    modalDialogMessage.innerHTML.evalScripts();\n\n                    modalDialogMessage.down('#store_label')\n                        .stopObserving()\n                        .observe('keyup', self.onChangeLabel.bind(self));\n                    modalDialogMessage.down('#code')\n                        .stopObserving()\n                        .observe('change', self.onChangeCode.bind(self));\n                }\n            });\n        },\n\n        create: function (attributeParams)\n        {\n            var self = this;\n\n            MessagesObj.clear();\n\n            new Ajax.Request(M2ePro.url.get('general/createAttribute'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: attributeParams,\n                onSuccess: function (transport) {\n\n                    var result = transport.responseText.evalJSON();\n                    if (!result || !result['result']) {\n\n                        typeof self.onFailedCallback == 'function'\n                            ? self.onFailedCallback.call(self, attributeParams, result)\n                            : self.defaultOnFailedCallback(attributeParams, result);\n\n                        return;\n                    }\n\n                    typeof self.onSuccessCallback == 'function'\n                        ? self.onSuccessCallback.call(self, attributeParams, result)\n                        : self.defaultOnSuccessCallback(attributeParams, result);\n\n                    self.popupObj.modal('closeModal');\n                    self.onClosePopupCallback();\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        defaultOnSuccessCallback: function (attributeParams, result)\n        {\n            MessagesObj.addSuccessMessage(M2ePro.translator.translate('Attribute has been created.'));\n            this.chooseNewlyCreatedAttribute(attributeParams, result);\n        },\n\n        defaultOnFailedCallback: function (attributeParams, result)\n        {\n            MessagesObj.addErrorMessage(result['error']);\n            this.onCancelPopupCallback();\n        },\n\n        // ---------------------------------------\n\n        onOkPopupCallback: function ()\n        {\n            if (!jQuery('#'+this.modalId+' #'+this.formId).validation().valid()) {\n                return false;\n            }\n\n            this.create($$('#'+this.modalId+' #'+this.formId)[0].serialize(true));\n            this.attributeWasCreated = true;\n\n            return true;\n        },\n\n        onCancelPopupCallback: function ()\n        {\n            if (!this.selectObj) {\n                return true;\n            }\n\n            this.selectObj.selectedIndex = this.selectIndexBeforeCreation;\n            this.selectObj.simulate('change');\n\n            return true;\n        },\n\n        onClosePopupCallback: function ()\n        {\n            if (this.attributeWasCreated || !this.selectObj) {\n                return true;\n            }\n\n            this.onCancelPopupCallback();\n            return true;\n        },\n\n        chooseNewlyCreatedAttribute: function (attributeParams, result)\n        {\n            var self = this;\n\n            var newOption = new Element('option');\n\n            if (this.haveOptgroup()) {\n                newOption.setAttribute('attribute_code', attributeParams['code']);\n            }\n\n            newOption.update(attributeParams['store_label']);\n            newOption.setAttribute('value', self.getNewlyCreatedAttributeValue(attributeParams));\n            newOption.setAttribute('selected', 'selected');\n\n            $$('select[id=\"' + self.selectObj.id + '\"] option').each(function (el) {\n                el.removeAttribute('selected');\n            });\n\n            var existedOptionsCollection = self.haveOptgroup() ? $$('select[id=\"' + self.selectObj.id + '\"] optgroup.M2ePro-custom-attribute-optgroup option')\n                : $$('select[id=\"' + self.selectObj.id + '\"] option');\n\n            var titles = [];\n            existedOptionsCollection.each(function (el) {\n                titles.push(trim(el.innerHTML));\n            });\n\n            titles.push(attributeParams['store_label']);\n            titles.sort();\n\n            var neededIndex = titles.indexOf(attributeParams['store_label']),\n                beforeOptionTitle = titles[neededIndex - 1];\n\n            existedOptionsCollection.each(function (el) {\n\n                if (typeof beforeOptionTitle == 'undefined') {\n                    $(el).insert({before: newOption});\n                    throw $break;\n                }\n\n                if (trim(el.innerHTML) == beforeOptionTitle) {\n                    $(el).insert({after: newOption});\n                    throw $break;\n                }\n            });\n\n            self.selectObj.simulate('change');\n        },\n\n        getNewlyCreatedAttributeValue: function (attributeParams)\n        {\n            if (!this.haveOptgroup()) {\n                return attributeParams['code'];\n            }\n\n            var optGroupObj = $$('select[id=\"' + this.selectObj.id + '\"] optgroup.M2ePro-custom-attribute-optgroup').first();\n\n            if (optGroupObj.hasAttribute('new_option_value')) {\n                return optGroupObj.getAttribute('new_option_value');\n            }\n\n            return $$('select[id=\"' + this.selectObj.id + '\"] optgroup.M2ePro-custom-attribute-optgroup option').first().value;\n        },\n\n        // ---------------------------------------\n\n        injectAddOption: function ()\n        {\n            var self = this;\n\n            if (self.selectObj.getAttribute('option_injected')) {\n                return;\n            }\n\n            // -- if select is empty -> inject each one empty option\n            if ($$('select[id=\"' + self.selectObj.id + '\"] option').length == 0) {\n\n                self.selectObj.insertBefore(\n                    new Element('option', {style: 'display: none;'}),\n                    self.selectObj.firstChild\n                );\n            }\n            // --\n\n            var option = new Element('option', {\n                style: 'color: brown;',\n                value: this.addOptionValue\n            }).update(M2ePro.translator.translate('Create a New One...'));\n\n            if (self.haveOptgroup()) {\n                $$('select[id=\"' + this.selectObj.id + '\"] optgroup.M2ePro-custom-attribute-optgroup').first().appendChild(option);\n            } else {\n                self.selectObj.appendChild(option);\n            }\n\n            $(self.selectObj).observe('focus', function (event) {\n                this.value != self.addOptionValue && self.setSelectIndexBeforeCreation(this.selectedIndex);\n            });\n\n            $(self.selectObj).observe('change', function (event) {\n\n                this.value == self.addOptionValue\n                    ? self.showPopup()\n                    : self.setSelectIndexBeforeCreation(this.selectedIndex);\n            });\n\n            self.selectObj.setAttribute('option_injected' , '1');\n        },\n\n        validateAttributeCode: function (value, el)\n        {\n            if (!value.match(/^[a-z][a-z_0-9]{1,254}$/)) {\n                return false;\n            }\n\n            return true;\n        },\n\n        validateAttributeCodeToBeUnique: function (value, el)\n        {\n            var result = false;\n\n            new Ajax.Request(M2ePro.url.get('general/isAttributeCodeUnique'), {\n                method: 'post',\n                asynchronous: false,\n                parameters: {\n                    code: value\n                },\n                onSuccess: function (transport) {\n\n                    var response = transport.responseText.evalJSON();\n                    result = response.status;\n                }\n            });\n\n            return result;\n        },\n\n        // ---------------------------------------\n\n        onChangeCode: function (event)\n        {\n            if (!$('code').hasClassName('changed-by-user')) {\n                $('code').addClassName('changed-by-user');\n            }\n        },\n\n        onChangeLabel: function (event)\n        {\n            var self = this;\n\n            if ($('code').hasClassName('changed-by-user')) {\n                return;\n            }\n\n            self.delayTimer && clearTimeout(self.delayTimer);\n            self.delayTimer = setTimeout(function () {\n                self.updateCode(event.target.value);\n            }, 600);\n        },\n\n        updateCode: function (label)\n        {\n            new Ajax.Request(M2ePro.url.get('general/generateAttributeCodeByLabel'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: {\n                    store_label: label\n                },\n                onSuccess: function (transport) {\n                    if ($('code').hasClassName('changed-by-user')) {\n                        return;\n                    }\n\n                    $('code').value = transport.responseText;\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        haveOptgroup: function ()\n        {\n            var obj = $$('select[id=\"' + this.selectObj.id + '\"] optgroup.M2ePro-custom-attribute-optgroup').first();\n            return typeof obj != 'undefined';\n        },\n\n        alreadyHaveAddedOption: function ()\n        {\n            var obj = $$('select[id=\"' + this.selectObj.id + '\"] option[value=\"' + this.addOptionValue + '\"]').first();\n            return typeof obj != 'undefined';\n        }\n\n        // ---------------------------------------\n    };\n\n});","Ess_M2ePro/js/Plugin/Magento/Attribute/Button.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'underscore',\n    'M2ePro/Plugin/Magento/AttributeCreator',\n    'M2ePro/Attribute'\n], function (jQuery, modal, _) {\n\n    window.MagentoAttributeButton = Class.create();\n    MagentoAttributeButton.prototype = {\n        _id: '',\n        _destinationId: '',\n        _magentoAttributes: {},\n        _selectCustomAttributes: {},\n        _template: \"<fieldset class='fieldset admin__fieldset  m2epro-fieldset'>\" +\n                   \"<legend class='admin__legend legend'><span>&nbsp</span></legend><br>\" +\n                   \"<div class='admin__field field'>\" +\n                   \"<label class='label admin__field-label' for='<%= id %>'><span><%= title %></span></label> \" +\n                   \"<div class='admin__field-control control'> <%= select%> </div></div></fieldset>\",\n\n        initialize: function() {\n            if (typeof AttributeObj === 'undefined') {\n                window.AttributeObj = new Attribute();\n            }\n        },\n\n        setDestinationId: function(id)\n        {\n            this._destinationId = id;\n            return this;\n        },\n\n        getDestinationId: function()\n        {\n            return this._destinationId;\n        },\n\n        setMagentoAttributes: function(magentoAttributes)\n        {\n            this._magentoAttributes = magentoAttributes;\n            return this;\n        },\n\n        getMagentoAttributes: function()\n        {\n            return this._magentoAttributes;\n        },\n\n        setSelectCustomAttributes: function(selectCustomAttributes)\n        {\n            this._selectCustomAttributes = selectCustomAttributes;\n            return this;\n        },\n\n        getSelectCustomAttributes: function()\n        {\n            return this._selectCustomAttributes;\n        },\n\n        init: function(element, callback)\n        {\n            var self = this;\n\n            this._id = element.id;\n            var popupElement = $('magento-attribute-button-popup'+self._id),\n                isFirstCreation = !popupElement;\n\n            if (!popupElement) {\n                popupElement = new Element('div', {\n                    id: 'magento-attribute-button-popup'+self._id\n                })\n            }\n\n            this._renderMagentoAttributes(popupElement);\n\n            var popup = jQuery(popupElement).modal({\n                title: M2ePro.translator.translate(\n                    \"Insert Magento Attribute in %s%\",\n                    self._getFieldTitle(self.getDestinationId())\n                ),\n                type: 'popup',\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    class: 'action-secondary action-dismiss',\n                    click: function () {\n                        this.closeModal();\n                    }\n                },{\n                    text: M2ePro.translator.translate('Insert'),\n                    class: 'action-primary action-accept',\n                    id: 'save_popup_button',\n                    click: function () {\n                        AttributeObj.appendToText(\n                            'magento-attribute-select-'+self._id,\n                            self.getDestinationId()\n                        );\n                        callback && callback();\n                        this.closeModal();\n                    }\n                }]\n            });\n\n            if (isFirstCreation) {\n                var handlerObj = new AttributeCreator('magento-attribute-select-'+this._id);\n                handlerObj.setSelectObj($('magento-attribute-select-'+this._id));\n                handlerObj.injectAddOption();\n            }\n\n            popup.modal('openModal');\n        },\n\n        _getFieldTitle: function(elementId)\n        {\n            var label = $(elementId).up('div.admin__field.field').down('label span');\n            return label ? label.innerHTML : '';\n        },\n\n        _renderMagentoAttributes: function(containerElement)\n        {\n            if (containerElement.down('select')) {\n                return;\n            }\n\n            var select = new Element('select',\n                _.extend({\n                    id: 'magento-attribute-select-'+this._id,\n                    class: 'select admin__control-select M2ePro-custom-attribute-can-be-created',\n\n                }, this.getSelectCustomAttributes())\n            );\n\n            _.each(this.getMagentoAttributes(), function(obj) {\n                var option = new Element('option', {\n                    value: obj.value\n                });\n                option.innerHTML = obj.label;\n\n                select.appendChild(option);\n            });\n\n            containerElement.innerHTML = _.template(this._template)( {\n                id: 'magento-attribute-select-'+this._id,\n                title: M2ePro.translator.translate('Attribute'),\n                select: select.outerHTML\n            });\n        }\n    };\n});","Ess_M2ePro/js/Plugin/Prototype/Event.Simulate.js":"define([\n  'prototype'\n], function(){\n\n  var eventMatchers = {\n    'HTMLEvents': /^(?:load|unload|abort|error|select|change|submit|reset|focus|blur|resize|scroll)$/,\n    'MouseEvents': /^(?:click|mouse(?:down|up|over|move|out))$/\n  };\n  var defaultOptions = {\n    pointerX: 0,\n    pointerY: 0,\n    button: 0,\n    ctrlKey: false,\n    altKey: false,\n    shiftKey: false,\n    metaKey: false,\n    bubbles: true,\n    cancelable: true\n  };\n\n  Event.simulate = function(element, eventName) {\n    var options = Object.extend(defaultOptions, arguments[2] || { });\n    var oEvent, eventType = null;\n\n    element = $(element);\n\n    for (var name in eventMatchers) {\n      if (eventMatchers[name].test(eventName)) { eventType = name; break; }\n    }\n\n    if (!eventType)\n      throw new SyntaxError('Only HTMLEvents and MouseEvents interfaces are supported');\n\n    if (document.createEvent) {\n      oEvent = document.createEvent(eventType);\n      if (eventType == 'HTMLEvents') {\n        oEvent.initEvent(eventName, options.bubbles, options.cancelable);\n      }\n      else {\n        oEvent.initMouseEvent(eventName, options.bubbles, options.cancelable, document.defaultView,\n            options.button, options.pointerX, options.pointerY, options.pointerX, options.pointerY,\n            options.ctrlKey, options.altKey, options.shiftKey, options.metaKey, options.button, element);\n      }\n      element.dispatchEvent(oEvent);\n    }\n    else {\n      options.clientX = options.pointerX;\n      options.clientY = options.pointerY;\n      oEvent = Object.extend(document.createEventObject(), options);\n      element.fireEvent('on' + eventName, oEvent);\n    }\n    return element;\n  };\n\n  Element.addMethods({ simulate: Event.simulate });\n});\n","Ess_M2ePro/js/Order/Debug.js":"define(function () {\n\n    var debugKeys = [68, 69, 66, 85, 71];\n    var debugPressedKeys = [];\n\n    document.observe('keydown', function(event) {\n\n        if (debugPressedKeys.length < debugKeys.length) {\n            if (debugKeys[debugPressedKeys.length] == event.keyCode) {\n                debugPressedKeys.push(event.keyCode);\n                if (debugPressedKeys.length == debugKeys.length) {\n\n                    if (!$('magento_block_debug_information')) {\n                        new Ajax.Request(M2ePro.url.get('order/getDebugInformation'), {\n                            method: 'get',\n                            asynchronous: true,\n                            onSuccess: function(transport)\n                            {\n                                $$('.content-header')[0].insert({\n                                    after: transport.responseText\n                                });\n                            }\n                        });\n                    }\n\n                    debugPressedKeys = [];\n                }\n            } else {\n                debugPressedKeys = [];\n            }\n        }\n    });\n});","Ess_M2ePro/js/Order/Edit/Item.js":"define([\n    'M2ePro/Plugin/Messages',\n    'M2ePro/Common',\n    'Magento_Ui/js/modal/modal'\n], function (MessageObj) {\n\n    OrderEditItem = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            this.popUp = null;\n            this.gridId = null;\n            this.orderItemId = null;\n        },\n\n        // ---------------------------------------\n\n        openPopUpMappingProduct: function(title, content)\n        {\n            var self = this;\n            var mappingProductModal = $('mapping_product_modal');\n\n            if (!mappingProductModal) {\n                mappingProductModal = new Element('div', {\n                    id: 'mapping_product_modal'\n                });\n            }\n\n            mappingProductModal.innerHTML = '';\n\n            this.mappingProductPopUp = jQuery(mappingProductModal).modal({\n                closed: function () {\n                    self.reloadGrid();\n                    self.orderItemId = null;\n                    self.gridId = null;\n                    self.mappingProductPopUp = null;\n                },\n                title: title,\n                type: 'slide',\n                buttons: []\n            });\n\n            this.mappingProductPopUp.modal('openModal');\n\n            mappingProductModal.insert(content);\n        },\n\n        openPopUpMappingOptions: function(title, content)\n        {\n            var self = this;\n            var mappingOptions = $('mapping_product_options');\n\n            if (!mappingOptions) {\n                mappingOptions = new Element('div', {\n                    id: 'mapping_product_options'\n                });\n            }\n\n            mappingOptions.innerHTML = '';\n\n            this.mappingOptionsPopUp = jQuery(mappingOptions).modal({\n                closed: function () {\n                    if (self.mappingProductPopUp) {\n                        self.mappingProductPopUp.modal('closeModal');\n                        return;\n                    }\n                    self.reloadGrid();\n                    self.orderItemId = null;\n                    self.gridId = null;\n                    self.mappingOptionsPopUp = null;\n                },\n                title: title,\n                type: 'slide',\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    click: function () {\n                        self.closePopUp();\n                    }\n                },{\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'primary',\n                    click: function () {\n                        self.assignProductDetails();\n                    }\n                }]\n            });\n\n            this.mappingOptionsPopUp.modal('openModal');\n\n            mappingOptions.insert(content);\n            self.initMappingOptionsPopUp();\n        },\n\n        initMappingOptionsPopUp: function()\n        {\n            $$('.form-element').each(function (element) {\n                element.observe('change', function() {\n                    if (element.selectedIndex != 0) {\n                        CommonObj.hideEmptyOption(element);\n                    }\n\n                    var hasEmptyOptions = $$('.form-element').any(function(element) { return element.value == '' });\n                    if (hasEmptyOptions) {\n                        return;\n                    }\n\n                    new Ajax.Request(M2ePro.url.get('order/checkProductOptionStockAvailability'), {\n                        method: 'get',\n                        parameters: Form.serialize('mapping_product_options'),\n                        onSuccess: function(transport) {\n                            var isInStock = transport.responseText.evalJSON()['is_in_stock'];\n\n                            if (!isInStock) {\n                                $('selected_product_option_is_out_of_stock').show();\n                            } else {\n                                $('selected_product_option_is_out_of_stock').hide();\n                            }\n                        }\n                    });\n                });\n                element.simulate('change');\n            });\n        },\n\n        closePopUp: function()\n        {\n            if (this.mappingProductPopUp) {\n                this.mappingProductPopUp.modal('closeModal');\n            }\n            if (this.mappingOptionsPopUp) {\n                this.mappingOptionsPopUp.modal('closeModal');\n            }\n        },\n\n        reloadGrid: function()\n        {\n            var grid = window[this.gridId + 'JsObject'];\n\n            if (grid) {\n                grid.doFilter();\n            }\n        },\n\n        edit: function(gridId, orderItemId)\n        {\n            var self = this;\n\n            self.gridId = gridId;\n            self.orderItemId = orderItemId;\n\n            self.getItemEditHtml(orderItemId, function(transport) {\n                var response = transport.responseText.evalJSON();\n\n                if (response.error) {\n                    if (self.popUp) {\n                        self.alert(response.error, function () {\n                            self.closePopUp();\n                        });\n                    } else {\n                        MessageObj.addErrorMessage(response.error);\n                    }\n\n                    return;\n                }\n\n                var title = response.title;\n                var content = response.html;\n\n                if (response.type == M2ePro.php.constant('Ess_M2ePro_Controller_Adminhtml_Order_EditItem::MAPPING_PRODUCT')) {\n                    self.openPopUpMappingProduct(title, content);\n                } else if (response.type == M2ePro.php.constant('Ess_M2ePro_Controller_Adminhtml_Order_EditItem::MAPPING_OPTIONS')) {\n                    self.openPopUpMappingOptions(title, content);\n                }\n            });\n        },\n\n        getItemEditHtml: function(itemId, callback)\n        {\n            new Ajax.Request(M2ePro.url.get('order/editItem'), {\n                method: 'get',\n                parameters: {\n                    item_id: itemId\n                },\n                onSuccess: function(transport) {\n                    if (typeof callback == 'function') {\n                        callback(transport);\n                    }\n                }\n            });\n        },\n\n        afterActionCallback: function(transport)\n        {\n            var self = this;\n            var response = transport.responseText.evalJSON();\n\n            if (response.error) {\n                MessageObj.addErrorMessage(response.error);\n                return;\n            }\n\n            if (response.continue) {\n                self.edit(self.gridId, self.orderItemId);\n                return;\n            }\n\n            if (response.success) {\n                self.closePopUp();\n                self.scrollPageToTop();\n                MessageObj.addSuccessMessage(response.success);\n            }\n        },\n\n        // ---------------------------------------\n\n        assignProduct: function(id, productSku)\n        {\n            var self = this;\n            var productId = +id || '';\n            var sku = productSku || '';\n            var orderItemId = self.orderItemId;\n\n            MessageObj.clear();\n\n            if (orderItemId == '' || (/^\\s*(\\d)*\\s*$/i).test(orderItemId) == false) {\n                return;\n            }\n\n            if (sku == '' && productId == '') {\n                self.alert(M2ePro.translator.translate('Please enter correct Product ID or SKU.'));\n                return;\n            }\n\n            if (((/^\\s*(\\d)*\\s*$/i).test(productId) == false)) {\n                self.alert(M2ePro.translator.translate('Please enter correct Product ID.'));\n                return;\n            }\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        new Ajax.Request(M2ePro.url.get('order/assignProduct'), {\n                            method: 'post',\n                            parameters: {\n                                product_id: productId,\n                                sku: sku,\n                                order_item_id: orderItemId\n                            },\n                            onSuccess: self.afterActionCallback.bind(self)\n                        });\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        assignProductDetails: function()\n        {\n            var self = this,\n                confirmAction,\n                validationResult = $$('.form-element').collect(Validation.validate);\n\n            if (validationResult.indexOf(false) != -1) {\n                return;\n            }\n\n            confirmAction = function () {\n                new Ajax.Request(M2ePro.url.get('order/assignProductDetails'), {\n                    method: 'post',\n                    parameters: Form.serialize('mapping_product_options'),\n                    onSuccess: self.afterActionCallback.bind(self)\n                });\n            };\n\n            if ($('save_repair') && $('save_repair').checked) {\n                self.confirm({\n                    actions: {\n                        confirm: function () {\n                            confirmAction();\n                        },\n                        cancel: function () {\n                            return false;\n                        }\n                    }\n                });\n            } else {\n                confirmAction();\n            }\n        },\n\n        // ---------------------------------------\n\n        unassignProduct: function(gridId, orderItemId)\n        {\n            var self = this;\n\n            self.confirm({\n                actions: {\n                    confirm: function () {\n                        self.gridId = gridId;\n                        self.orderItemId = orderItemId;\n\n                        new Ajax.Request(M2ePro.url.get('order/unassignProduct'), {\n                            method: 'post',\n                            parameters: {\n                                order_item_id: orderItemId\n                            },\n                            onSuccess: function(transport) {\n                                self.afterActionCallback(transport);\n                                self.reloadGrid();\n                                self.gridId = null;\n                                self.orderItemId = null;\n                            }\n                        });\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        openEditShippingAddressPopup: function (orderId)\n        {\n            var self = this;\n            var shippingAddressModal = $('shipping_address_modal');\n\n            if (!shippingAddressModal) {\n                shippingAddressModal = new Element('div', {\n                    id: 'shipping_address_modal'\n                });\n            }\n\n            shippingAddressModal.innerHTML = '';\n\n            this.editShippingAddressPopUp = jQuery(shippingAddressModal).modal({\n                closed: function () {\n\n                },\n                title: M2ePro.translator.translate('Edit Shipping Address'),\n                type: 'slide',\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    click: function () {\n                        self.editShippingAddressPopUp.modal('closeModal');\n                    }\n                },{\n                    text: M2ePro.translator.translate('Save'),\n                    class: 'primary',\n                    click: function () {\n                        self.saveShippingAddress();\n                    }\n                }]\n            });\n\n            new Ajax.Request(M2ePro.url.get('getEditShippingAddressForm'), {\n                method: 'post',\n                parameters: {\n                    id: orderId\n                },\n                onSuccess: function(transport) {\n                    shippingAddressModal.insert(transport.responseText);\n\n                    self.initFormValidation('#edit_form');\n                    self.editShippingAddressPopUp.modal('openModal');\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        saveShippingAddress: function ()\n        {\n            var self = this;\n\n            if (!self.isValidForm()) {\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('saveShippingAddress'), {\n                method: 'post',\n                parameters: Form.serialize($('edit_form')),\n                onSuccess: function(transport) {\n                    var result = transport.responseText.evalJSON();\n\n                    if (result.success) {\n                        $('shipping_address_container').update(result.html);\n                        self.editShippingAddressPopUp.modal('closeModal');\n                    }\n                }\n            });\n        }\n    });\n});\n","Ess_M2ePro/js/Order/Edit/ShippingAddress.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    OrderEditShippingAddress = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function(countryElementId, regionContainerElementId, regionElementName)\n        {\n            this.countryElementId = countryElementId;\n            this.regionContainerElementId = regionContainerElementId;\n            this.regionElementName = regionElementName;\n        },\n\n        initObservers: function()\n        {\n            $('country_code')\n                .observe('change', OrderEditShippingAddressObj.countryCodeChange)\n                .simulate('change');\n        },\n\n        // ---------------------------------------\n\n        countryCodeChange: function()\n        {\n            var self = OrderEditShippingAddressObj;\n\n            new Ajax.Request(M2ePro.url.get('order/getCountryRegions'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    country: $(self.countryElementId).value\n                },\n                onSuccess: function(transport) {\n                    self.renderRegions(transport.responseText.evalJSON(true));\n                }\n            });\n        },\n\n        renderRegions: function(data)\n        {\n            var self = OrderEditShippingAddressObj,\n                regionContainer = $(self.regionContainerElementId).select('.control')[0],\n                html = '';\n\n            if (data.length == 0) {\n                html = '<input type=\"text\" name=\"%name%\" class=\"input-text admin__control-text\" value=\"%value%\" />'\n                    .replace(/%name%/, self.regionElementName)\n                    .replace(/%value%/, M2ePro.formData.region);\n            } else {\n                html += '<select class=\"admin__control-select\" name=\"'+self.regionElementName+'\">';\n                data.each(function(item) {\n                    var selected = (item.value == M2ePro.formData.region) ? 'selected=\"selected\"' : '';\n                    html += '<option value=\"'+item.value+'\" '+selected+'>'+item.label+'</option>';\n                });\n                html += '</select>';\n            }\n\n            regionContainer.innerHTML = html;\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Account.js":"define([\n    'M2ePro/Common'\n], function(){\n\n    window.AmazonAccount = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            this.setValidationCheckRepetitionValue('M2ePro-account-title',\n                M2ePro.translator.translate('The specified Title is already used for other Account. Account Title must be unique.'),\n                'Account', 'title', 'id',\n                M2ePro.formData.id,\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Amazon::NICK'));\n\n            jQuery.validator.addMethod('M2ePro-marketplace-merchant', function(value, el) {\n\n                if (jQuery.validator.methods['M2ePro-required-when-visible'](null, el)) {\n                    return true;\n                }\n\n                // reset error message to the default\n                this.error = M2ePro.translator.translate('M2E Pro was not able to get access to the Amazon Account. Please, make sure, that you choose correct Option on MWS Authorization Page and enter correct Merchant ID.');\n\n                var merchant_id    = $('merchant_id').value;\n                var token          = $('token').value;\n                var marketplace_id = $('marketplace_id').value;\n\n                var pattern = /^[A-Z0-9]*$/;\n                if (!pattern.test(merchant_id)) {\n                    return false;\n                }\n\n                var checkResult = false;\n                var checkReason = null;\n\n                new Ajax.Request(M2ePro.url.get('amazon_account/checkAuth'), {\n                    method: 'post',\n                    asynchronous: false,\n                    parameters: {\n                        merchant_id    : merchant_id,\n                        token          : token,\n                        marketplace_id : marketplace_id\n                    },\n                    onSuccess: function(transport) {\n                        var response = transport.responseText.evalJSON();\n                        checkResult = response['result'];\n                        checkReason = response['reason'];\n                    }\n                });\n\n                if (checkReason != null) {\n                    this.error = M2ePro.translator.translate('M2E Pro was not able to get access to the Amazon Account. Reason: %error_message%').replace('%error_message%', checkReason);\n                }\n\n                return checkResult;\n\n            }, M2ePro.translator.translate('M2E Pro was not able to get access to the Amazon Account. Please, make sure, that you choose correct Option on MWS Authorization Page and enter correct Merchant ID.'));\n\n            jQuery.validator.addMethod('M2ePro-account-customer-id', function(value) {\n\n                var checkResult = false;\n\n                if ($('magento_orders_customer_id_container').getStyle('display') == 'none') {\n                    return true;\n                }\n\n                new Ajax.Request(M2ePro.url.get('general/checkCustomerId'), {\n                    method: 'post',\n                    asynchronous: false,\n                    parameters: {\n                        customer_id: value,\n                        id         : M2ePro.formData.id\n                    },\n                    onSuccess: function(transport) {\n                        checkResult = transport.responseText.evalJSON()['ok'];\n                    }\n                });\n\n                return checkResult;\n            }, M2ePro.translator.translate('No Customer entry is found for specified ID.'));\n\n            jQuery.validator.addMethod('M2ePro-account-order-number-prefix', function(value) {\n\n                if ($('magento_orders_number_prefix_mode').value == 0) {\n                    return true;\n                }\n\n                return value.length <= 5;\n            }, M2ePro.translator.translate('Prefix length should not be greater than 5 characters.'));\n\n            jQuery.validator.addMethod('M2ePro-require-select-attribute', function(value, el) {\n\n                if ($('other_listings_mapping_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MAPPING_MODE_NO')) {\n                    return true;\n                }\n\n                var isAttributeSelected = false;\n\n                $$('.attribute-mode-select').forEach(function(obj) {\n                    if (obj.value != 0) {\n                        isAttributeSelected = true;\n                    }\n                });\n\n                return isAttributeSelected;\n            }, M2ePro.translator.translate('If Yes is chosen, you must select at least one Attribute for Product Mapping.'));\n\n            jQuery.validator.addMethod('M2ePro-account-repricing-price-value', function(value, el) {\n\n                if (!el.up('div.admin__field.field').visible()) {\n                    return true;\n                }\n\n                if (!value.match(/^\\d+[.]?\\d*?$/g)) {\n                    return false;\n                }\n\n                if (value <= 0) {\n                    return false;\n                }\n\n                return true;\n\n            }, M2ePro.translator.translate('Invalid input data. Decimal value required. Example 12.05'));\n\n            jQuery.validator.addMethod('M2ePro-account-repricing-price-percent', function(value, el) {\n\n                if (!el.up('div.admin__field.field').visible()) {\n                    return true;\n                }\n\n                if (!value.match(/^\\d+$/g)) {\n                    return false;\n                }\n\n                if (value <= 0 || value > 100) {\n                    return false;\n                }\n\n                return true;\n\n            }, M2ePro.translator.translate('Please enter correct value.'));\n\n        },\n\n        initObservers: function()\n        {\n            //tab listingOther\n            $('other_listings_synchronization')\n                .observe('change', AmazonAccountObj.other_listings_synchronization_change)\n                .simulate('change');\n            $('other_listings_mapping_mode')\n                .observe('change', AmazonAccountObj.other_listings_mapping_mode_change)\n                .simulate('change');\n\n            $('mapping_general_id_mode')\n                .observe('change', AmazonAccountObj.mapping_general_id_mode_change)\n                .simulate('change');\n            $('mapping_sku_mode')\n                .observe('change', AmazonAccountObj.mapping_sku_mode_change)\n                .simulate('change');\n            $('mapping_title_mode')\n                .observe('change', AmazonAccountObj.mapping_title_mode_change)\n                .simulate('change');\n            $('other_listings_move_mode')\n                .observe('change', AmazonAccountObj.move_mode_change)\n                .simulate('change');\n\n            //$('amazonAccountEditTabs_listingOther').removeClassName('changed');\n\n            if ($('is_vat_calculation_service_enabled')) {\n                $('is_vat_calculation_service_enabled')\n                    .observe('change', AmazonAccountObj.vatCalculationModeChange)\n                    .simulate('change');\n            }\n\n            //tab order\n            $('magento_orders_listings_mode').observe('change', AmazonAccountObj.magentoOrdersListingsModeChange).simulate('change');\n            $('magento_orders_listings_store_mode').observe('change', AmazonAccountObj.magentoOrdersListingsStoreModeChange).simulate('change');\n\n            $('magento_orders_listings_other_mode').observe('change', AmazonAccountObj.magentoOrdersListingsOtherModeChange).simulate('change');\n            $('magento_orders_listings_other_product_mode').observe('change', AmazonAccountObj.magentoOrdersListingsOtherProductModeChange);\n\n            $('magento_orders_number_source').observe('change', AmazonAccountObj.magentoOrdersNumberSourceChange).simulate('change');\n            $('magento_orders_number_prefix_mode').observe('change', AmazonAccountObj.magentoOrdersNumberPrefixModeChange).simulate('change');\n            $('magento_orders_number_prefix_prefix').observe('keyup', AmazonAccountObj.magentoOrdersNumberPrefixPrefixChange).simulate('change');\n            AmazonAccountObj.renderOrderNumberExample();\n\n            $('magento_orders_fba_mode').observe('change', AmazonAccountObj.magentoOrdersFbaModeChange).simulate('change');\n\n            $('magento_orders_customer_mode').observe('change', AmazonAccountObj.magentoOrdersCustomerModeChange).simulate('change');\n            $('magento_orders_status_mapping_mode').observe('change', AmazonAccountObj.magentoOrdersStatusMappingModeChange);\n\n            $('order_number_example-note').previous().remove();\n        },\n\n        // ---------------------------------------\n\n        deleteClick: function()\n        {\n            this.confirm({\n                content: M2ePro.translator.translate('Be attentive! By Deleting Account you delete all information on it from M2E Pro Server. This will cause inappropriate work of all Accounts\\' copies.'),\n                actions: {\n                    confirm: function () {\n                        setLocation(M2ePro.url.get('deleteAction'));\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        getToken: function(marketplaceId) {\n            var title = $('title');\n\n            title.removeClassName('required-entry M2ePro-account-title');\n            $('merchant_id').removeClassName('M2ePro-marketplace-merchant');\n            $('token').removeClassName('M2ePro-marketplace-merchant');\n            $('other_listings_mapping_mode').removeClassName('M2ePro-require-select-attribute');\n\n            this.submitForm(M2ePro.url.get(\n                'amazon_account/beforeGetToken',\n                {\n                    'id': M2ePro.formData.id,\n                    'title': title.value,\n                    'marketplace_id': marketplaceId\n                }\n            ));\n\n            return false;\n        },\n\n        // ---------------------------------------\n\n        changeMarketplace: function(id)\n        {\n            var self = AmazonAccountObj;\n\n            $$('[id^=\"marketplaces_developer_key_container_\"],[id^=\"marketplaces_register_url_container_\"]').invoke('hide');\n\n            $('marketplaces_related_store_id_container').show();\n            $('marketplaces_merchant_id_container').show();\n            $('marketplaces_token_container').show();\n\n            self.showGetAccessData(id);\n        },\n\n        showGetAccessData: function(id)\n        {\n            $('marketplaces_application_name_container').show();\n\n            $('marketplaces_developer_key_container_'+id).show();\n            $('marketplaces_register_url_container_'+id).show();\n        },\n\n        // ---------------------------------------\n\n        other_listings_synchronization_change: function()\n        {\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_SYNCHRONIZATION_YES')) {\n                $('other_listings_mapping_mode_tr').show();\n                $('marketplaces_related_store_id_container').show();\n            } else {\n                $('other_listings_mapping_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MAPPING_MODE_NO');\n                $('other_listings_mapping_mode').simulate('change');\n                $('other_listings_mapping_mode_tr').hide();\n                $('marketplaces_related_store_id_container').hide();\n            }\n        },\n\n        other_listings_mapping_mode_change: function()\n        {\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MAPPING_MODE_YES')) {\n                $('magento_block_amazon_accounts_other_listings_product_mapping').show();\n                $('magento_block_amazon_accounts_other_listings_move_mode').show();\n            } else {\n                $('magento_block_amazon_accounts_other_listings_product_mapping').hide();\n                $('magento_block_amazon_accounts_other_listings_move_mode').hide();\n\n                $('other_listings_move_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MOVE_TO_LISTINGS_DISABLED');\n                $('mapping_general_id_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MAPPING_GENERAL_ID_MODE_NONE');\n                $('mapping_sku_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MAPPING_SKU_MODE_NONE');\n                $('mapping_title_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MAPPING_TITLE_MODE_NONE');\n            }\n\n            $('mapping_general_id_mode').simulate('change');\n            $('mapping_sku_mode').simulate('change');\n            $('mapping_title_mode').simulate('change');\n\n            $('other_listings_move_mode').simulate('change');\n        },\n\n        // ---------------------------------------\n\n        mapping_general_id_mode_change: function()\n        {\n            var self = AmazonAccountObj;\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MAPPING_GENERAL_ID_MODE_NONE')) {\n                $('mapping_general_id_priority_td').hide();\n            } else {\n                $('mapping_general_id_priority_td').show();\n            }\n\n            $('mapping_general_id_attribute').value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MAPPING_GENERAL_ID_MODE_CUSTOM_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('mapping_general_id_attribute'));\n            }\n        },\n\n        mapping_sku_mode_change: function()\n        {\n            var self = AmazonAccountObj;\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MAPPING_SKU_MODE_NONE')) {\n                $('mapping_sku_priority_td').hide();\n            } else {\n                $('mapping_sku_priority_td').show();\n            }\n\n            $('mapping_sku_attribute').value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MAPPING_SKU_MODE_CUSTOM_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('mapping_sku_attribute'));\n            }\n        },\n\n        mapping_title_mode_change: function()\n        {\n            var self = AmazonAccountObj;\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MAPPING_TITLE_MODE_NONE')) {\n                $('mapping_title_priority_td').hide();\n            } else {\n                $('mapping_title_priority_td').show();\n            }\n\n            $('mapping_title_attribute').value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MAPPING_TITLE_MODE_CUSTOM_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('mapping_title_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n\n        move_mode_change: function()\n        {\n            if ($('other_listings_move_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::OTHER_LISTINGS_MOVE_TO_LISTINGS_ENABLED')) {\n                $('other_listings_move_synch_tr').show();\n            } else {\n                $('other_listings_move_synch_tr').hide();\n            }\n        },\n\n        // ---------------------------------------\n\n        magentoOrdersListingsModeChange: function()\n        {\n            var self = AmazonAccountObj;\n\n            if ($('magento_orders_listings_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_LISTINGS_MODE_YES')) {\n                $('magento_orders_listings_store_mode_container').show();\n            } else {\n                $('magento_orders_listings_store_mode_container').hide();\n                $('magento_orders_listings_store_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_LISTINGS_STORE_MODE_DEFAULT');\n            }\n\n            self.magentoOrdersListingsStoreModeChange();\n            self.changeVisibilityForOrdersModesRelatedBlocks();\n        },\n\n        magentoOrdersListingsStoreModeChange: function()\n        {\n            if ($('magento_orders_listings_store_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_LISTINGS_STORE_MODE_CUSTOM')) {\n                $('magento_orders_listings_store_id_container').show();\n            } else {\n                $('magento_orders_listings_store_id_container').hide();\n                $('magento_orders_listings_store_id').value = '';\n            }\n        },\n\n        magentoOrdersListingsOtherModeChange: function()\n        {\n            var self = AmazonAccountObj;\n\n            if ($('magento_orders_listings_other_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_LISTINGS_OTHER_MODE_YES')) {\n                $('magento_orders_listings_other_product_mode_container').show();\n                $('magento_orders_listings_other_store_id_container').show();\n            } else {\n                $('magento_orders_listings_other_product_mode_container').hide();\n                $('magento_orders_listings_other_store_id_container').hide();\n                $('magento_orders_listings_other_product_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_LISTINGS_OTHER_PRODUCT_MODE_IGNORE');\n                $('magento_orders_listings_other_store_id').value = '';\n            }\n\n            self.magentoOrdersListingsOtherProductModeChange();\n            self.changeVisibilityForOrdersModesRelatedBlocks();\n        },\n\n        magentoOrdersListingsOtherProductModeChange: function()\n        {\n            if ($('magento_orders_listings_other_product_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_LISTINGS_OTHER_PRODUCT_MODE_IGNORE')) {\n                $('magento_orders_listings_other_product_mode_note').hide();\n                $('magento_orders_listings_other_product_tax_class_id_container').hide();\n            } else {\n                $('magento_orders_listings_other_product_mode_note').show();\n                $('magento_orders_listings_other_product_tax_class_id_container').show();\n            }\n        },\n\n        magentoOrdersNumberSourceChange: function()\n        {\n            var self = AmazonAccountObj;\n            self.renderOrderNumberExample();\n        },\n\n        magentoOrdersNumberPrefixModeChange: function()\n        {\n            var self = AmazonAccountObj;\n\n            if ($('magento_orders_number_prefix_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_NUMBER_PREFIX_MODE_YES')) {\n                $('magento_orders_number_prefix_container').show();\n            } else {\n                $('magento_orders_number_prefix_container').hide();\n                $('magento_orders_number_prefix_prefix').value = '';\n            }\n\n            self.renderOrderNumberExample();\n        },\n\n        magentoOrdersNumberPrefixPrefixChange: function()\n        {\n            var self = AmazonAccountObj;\n            self.renderOrderNumberExample();\n        },\n\n        renderOrderNumberExample: function()\n        {\n            var orderNumber = $('sample_magento_order_id').value;\n            if ($('magento_orders_number_source').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_NUMBER_SOURCE_CHANNEL')) {\n                orderNumber = $('sample_amazon_order_id').value;\n            }\n\n            if ($('magento_orders_number_prefix_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_NUMBER_PREFIX_MODE_YES')) {\n                orderNumber = $('magento_orders_number_prefix_prefix').value + orderNumber;\n            }\n\n            $('order_number_example_container').update(orderNumber);\n        },\n\n        magentoOrdersFbaModeChange: function()\n        {\n            if ($('magento_orders_fba_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_FBA_MODE_NO')) {\n                $('magento_orders_fba_stock_mode_container').hide();\n                $('magento_orders_fba_stock_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_FBA_STOCK_MODE_NO');\n            } else {\n                $('magento_orders_fba_stock_mode_container').show();\n            }\n        },\n\n        magentoOrdersCustomerModeChange: function()\n        {\n            var customerMode = $('magento_orders_customer_mode').value;\n\n            if (customerMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_CUSTOMER_MODE_PREDEFINED')) {\n                $('magento_orders_customer_id_container').show();\n                $('magento_orders_customer_id').addClassName('M2ePro-account-product-id');\n            } else {  // M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::ORDERS_CUSTOMER_MODE_GUEST') || M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::ORDERS_CUSTOMER_MODE_NEW')\n                $('magento_orders_customer_id_container').hide();\n                $('magento_orders_customer_id').value = '';\n                $('magento_orders_customer_id').removeClassName('M2ePro-account-product-id');\n            }\n\n            var action = (customerMode == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_CUSTOMER_MODE_NEW')) ? 'show' : 'hide';\n            $('magento_orders_customer_new_website_id_container')[action]();\n            $('magento_orders_customer_new_group_id_container')[action]();\n            $('magento_orders_customer_new_notifications_container')[action]();\n\n            if(action == 'hide') {\n                $('magento_orders_customer_new_website_id').value = '';\n                $('magento_orders_customer_new_group_id').value = '';\n                $('magento_orders_customer_new_notifications').value = '';\n            }\n        },\n\n        magentoOrdersStatusMappingModeChange: function()\n        {\n            // Reset dropdown selected values to default\n            $('magento_orders_status_mapping_processing').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_STATUS_MAPPING_PROCESSING');\n            $('magento_orders_status_mapping_shipped').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_STATUS_MAPPING_SHIPPED');\n            // Default auto create invoice & shipment\n            $('magento_orders_invoice_mode').checked = true;\n            $('magento_orders_shipment_mode').checked = true;\n            var disabled = $('magento_orders_status_mapping_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_STATUS_MAPPING_MODE_DEFAULT');\n            $('magento_orders_status_mapping_processing').disabled = disabled;\n            $('magento_orders_status_mapping_shipped').disabled = disabled;\n            $('magento_orders_invoice_mode').disabled = disabled;\n            $('magento_orders_shipment_mode').disabled = disabled;\n        },\n\n        changeVisibilityForOrdersModesRelatedBlocks: function()\n        {\n            var self = AmazonAccountObj;\n\n            if ($('magento_orders_listings_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_LISTINGS_MODE_NO') &&\n                $('magento_orders_listings_other_mode').value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_LISTINGS_OTHER_MODE_NO')) {\n\n                $('magento_block_amazon_accounts_magento_orders_number-wrapper').hide();\n                $('magento_orders_number_source').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_NUMBER_SOURCE_MAGENTO');\n                $('magento_orders_number_prefix_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_NUMBER_PREFIX_MODE_NO');\n                self.magentoOrdersNumberPrefixModeChange();\n\n                $('magento_block_amazon_accounts_magento_orders_fba-wrapper').hide();\n                $('magento_orders_fba_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_FBA_MODE_YES');\n                $('magento_orders_fba_stock_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_FBA_STOCK_MODE_YES');\n\n                $('magento_block_amazon_accounts_magento_orders_refund_and_cancellation-wrapper').hide();\n                $('magento_orders_refund').value = 1;\n\n                $('magento_block_amazon_accounts_magento_orders_customer-wrapper').hide();\n                $('magento_orders_customer_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_CUSTOMER_MODE_GUEST');\n                self.magentoOrdersCustomerModeChange();\n\n                $('magento_block_amazon_accounts_magento_orders_status_mapping-wrapper').hide();\n                $('magento_orders_status_mapping_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_STATUS_MAPPING_MODE_DEFAULT');\n                self.magentoOrdersStatusMappingModeChange();\n\n                $('magento_block_amazon_accounts_magento_orders_rules-wrapper').hide();\n                $('magento_orders_qty_reservation_days').value = 1;\n\n                $('magento_block_amazon_accounts_magento_orders_tax-wrapper').hide();\n                $('magento_orders_tax_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_TAX_MODE_MIXED');\n\n                $('magento_orders_customer_billing_address_mode').value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Account::MAGENTO_ORDERS_BILLING_ADDRESS_MODE_SHIPPING_IF_SAME_CUSTOMER_AND_RECIPIENT');\n            } else {\n                $('magento_block_amazon_accounts_magento_orders_number-wrapper').show();\n                $('magento_block_amazon_accounts_magento_orders_fba-wrapper').show();\n                $('magento_block_amazon_accounts_magento_orders_refund_and_cancellation-wrapper').show();\n                $('magento_block_amazon_accounts_magento_orders_customer-wrapper').show();\n                $('magento_block_amazon_accounts_magento_orders_status_mapping-wrapper').show();\n                $('magento_block_amazon_accounts_magento_orders_tax-wrapper').show();\n                $('magento_block_amazon_accounts_magento_orders_rules-wrapper').show();\n            }\n        },\n\n        vatCalculationModeChange: function()\n        {\n            $('is_magento_invoice_creation_disabled_tr').hide();\n\n            if ($('is_vat_calculation_service_enabled').value == 1) {\n                $('is_magento_invoice_creation_disabled_tr').show();\n            }\n        },\n\n        // Repricing Integration\n        // ---------------------------------------\n\n        linkOrRegisterRepricing: function()\n        {\n            return setLocation(M2ePro.url.get('amazon_account_repricing/linkOrRegister'));\n        },\n\n        unlinkRepricing: function()\n        {\n            this.confirm({\n                actions: {\n                    confirm: function () {\n                        AmazonAccountObj.openUnlinkPage();\n                    },\n                    cancel: function () {\n                        return false;\n                    }\n                }\n            });\n        },\n\n        openUnlinkPage: function()\n        {\n            return setLocation(M2ePro.url.get('amazon_account_repricing/openUnlinkPage'));\n        },\n\n        openManagement: function()\n        {\n            window.open(M2ePro.url.get('amazon_account_repricing/openManagement'));\n        },\n\n        regular_price_mode_change: function()\n        {\n            var self = AmazonAccountObj,\n                regularPriceAttr = $('regular_price_attribute'),\n                regularPriceCoeficient = $('regular_price_coefficient_td'),\n                variationRegularPrice = $('regular_price_variation_mode_tr');\n\n            regularPriceAttr.value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::PRICE_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, regularPriceAttr);\n            }\n\n            regularPriceCoeficient.hide();\n            variationRegularPrice.hide();\n\n            if (this.value != M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::PRICE_MODE_MANUAL') &&\n                this.value != M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::REGULAR_PRICE_MODE_PRODUCT_POLICY')) {\n\n                regularPriceCoeficient.show();\n                variationRegularPrice.show();\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::PRICE_MODE_MANUAL')) {\n                $$('.repricing-min-price-mode-regular-depended').each(function (element) {\n                    if (element.selected) {\n                        element.up().selectedIndex = M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::PRICE_MODE_MANUAL');\n                        element.simulate('change');\n                    }\n\n                    element.hide();\n                });\n\n                $$('.repricing-max-price-mode-regular-depended').each(function (element) {\n                    if (element.selected) {\n                        element.up().selectedIndex = M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::PRICE_MODE_MANUAL');\n                        element.simulate('change');\n                    }\n\n                    element.hide();\n                });\n            } else {\n                $$('.repricing-min-price-mode-regular-depended').each(function (element) {\n                    element.show();\n                });\n\n                $$('.repricing-max-price-mode-regular-depended').each(function (element) {\n                    element.show();\n                });\n            }\n        },\n\n        min_price_mode_change: function()\n        {\n            var self = AmazonAccountObj,\n                minPriceValueTr = $('min_price_value_tr'),\n                minPricePercentTr = $('min_price_percent_tr'),\n                minPriceWarning = $('min_price_warning_tr'),\n                minPriceAttr = $('min_price_attribute'),\n                minPriceCoeficient = $('min_price_coefficient_td'),\n                variationMinPrice = $('min_price_variation_mode_tr');\n\n            minPriceWarning.hide();\n            if (this.value != M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::PRICE_MODE_MANUAL')) {\n                minPriceWarning.show();\n            }\n\n            minPriceCoeficient.hide();\n            variationMinPrice.hide();\n\n            minPriceAttr.value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::PRICE_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, minPriceAttr);\n\n                minPriceCoeficient.show();\n                variationMinPrice.show();\n            }\n\n            minPriceValueTr.hide();\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::MIN_PRICE_MODE_REGULAR_VALUE')) {\n                minPriceValueTr.show();\n            }\n\n            minPricePercentTr.hide();\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::MIN_PRICE_MODE_REGULAR_PERCENT')) {\n                minPricePercentTr.show();\n            }\n        },\n\n        max_price_mode_change: function()\n        {\n            var self = AmazonAccountObj,\n                maxPriceValueTr = $('max_price_value_tr'),\n                maxPricePercentTr = $('max_price_percent_tr'),\n                maxPriceWarning = $('max_price_warning_tr'),\n                maxPriceAttr = $('max_price_attribute'),\n                maxPriceCoeficient = $('max_price_coefficient_td'),\n                variationMaxPrice = $('max_price_variation_mode_tr');\n\n            maxPriceWarning.hide();\n            if (this.value != M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::PRICE_MODE_MANUAL')) {\n                maxPriceWarning.show();\n            }\n\n            maxPriceCoeficient.hide();\n            variationMaxPrice.hide();\n\n            maxPriceAttr.value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::PRICE_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, maxPriceAttr);\n\n                maxPriceCoeficient.show();\n                variationMaxPrice.show();\n            }\n\n            maxPriceValueTr.hide();\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::MAX_PRICE_MODE_REGULAR_VALUE')) {\n                maxPriceValueTr.show();\n            }\n\n            maxPricePercentTr.hide();\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::MAX_PRICE_MODE_REGULAR_PERCENT')) {\n                maxPricePercentTr.show();\n            }\n        },\n\n        disable_mode_change: function()\n        {\n            var self = AmazonAccountObj,\n                disableModeAttr = $('disable_mode_attribute');\n\n            disableModeAttr.value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Account_Repricing::DISABLE_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, disableModeAttr);\n            }\n        },\n\n        // ---------------------------------------\n\n        saveAndClose: function()\n        {\n            var self = this,\n                url = typeof M2ePro.url.urls.formSubmit == 'undefined' ?\n                    M2ePro.url.formSubmit + 'back/'+base64_encode('list')+'/' :\n                    M2ePro.url.get('formSubmit', {'back': base64_encode('list')});\n\n            if (!self.isValidForm()) {\n                return;\n            }\n\n            new Ajax.Request(url, {\n                method: 'post',\n                parameters: Form.serialize($('edit_form')),\n                onSuccess: function(transport) {\n                    transport = transport.responseText.evalJSON();\n\n                    if (transport.success) {\n                        window.close();\n                    } else {\n                        self.alert(transport.message);\n                        return;\n                    }\n                }\n            });\n        },\n\n    });\n\n});","Ess_M2ePro/js/Amazon/Template/Synchronization.js":"define([\n    'M2ePro/Amazon/Template/Edit',\n    'Magento_Ui/js/modal/confirm'\n], function () {\n\n    window.AmazonTemplateSynchronization = Class.create(AmazonTemplateEdit, {\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            this.setValidationCheckRepetitionValue('M2ePro-synchronization-tpl-title',\n                                                    M2ePro.translator.translate('The specified Title is already used for other Policy. Policy Title must be unique.'),\n                                                    'Template\\\\Synchronization', 'title', 'id',\n                                                    M2ePro.formData.id,\n                                                    M2ePro.php.constant('Ess_M2ePro_Helper_Component_Amazon::NICK'));\n\n            jQuery.validator.addMethod('M2ePro-input-time', function(value) {\n                return value.match(/^\\d{2}:\\d{2}$/g);\n            }, M2ePro.translator.translate('Wrong time format string.'));\n\n            jQuery.validator.addMethod('validate-qty', function(value, el) {\n\n                if (!el.up('.admin__field').visible()) {\n                    return true;\n                }\n\n                if (value.match(/[^\\d]+/g)) {\n                    return false;\n                }\n\n                if (value <= 0) {\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('Wrong value. Only integer numbers.'));\n\n            // ---------------------------------------\n            jQuery.validator.addMethod('M2ePro-validate-conditions-between', function(value, el) {\n\n                var minValue = $(el.id.replace('_max','')).value;\n\n                if (!el.up('.admin__field').visible()) {\n                    return true;\n                }\n\n                return parseInt(value) > parseInt(minValue);\n            }, M2ePro.translator.translate('Must be greater than \"Min\".'));\n            // ---------------------------------------\n\n            // ---------------------------------------\n            jQuery.validator.addMethod('M2ePro-validate-stop-relist-conditions-product-status', function(value, el) {\n\n                if (AmazonTemplateSynchronizationObj.isRelistModeDisabled()) {\n                    return true;\n                }\n\n                if ($('stop_status_disabled').value == 1 && $('relist_status_enabled').value == 0) {\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('Inconsistent Settings in Relist and Stop Rules.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-stop-relist-conditions-stock-availability', function(value, el) {\n\n                if (AmazonTemplateSynchronizationObj.isRelistModeDisabled()) {\n                    return true;\n                }\n\n                if ($('stop_out_off_stock').value == 1 && $('relist_is_in_stock').value == 0) {\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('Inconsistent Settings in Relist and Stop Rules.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-stop-relist-conditions-item-qty', function(value, el) {\n\n                if (AmazonTemplateSynchronizationObj.isRelistModeDisabled()) {\n                    return true;\n                }\n\n                var stopMaxQty = 0,\n                    relistMinQty = 0;\n\n                var qtyType = el.getAttribute('qty_type');\n\n                switch (parseInt($('stop_qty_' + qtyType).value)) {\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::STOP_QTY_NONE'):\n                        return true;\n                        break;\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::STOP_QTY_LESS'):\n                        stopMaxQty = parseInt($('stop_qty_' + qtyType + '_value').value);\n                        break;\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::STOP_QTY_BETWEEN'):\n                        stopMaxQty = parseInt($('stop_qty_' + qtyType + '_value_max').value);\n                        break;\n                }\n\n                switch (parseInt($('relist_qty_' + qtyType).value)) {\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::RELIST_QTY_NONE'):\n                        return false;\n                        break;\n\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::RELIST_QTY_MORE'):\n                    case M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::RELIST_QTY_BETWEEN'):\n                        relistMinQty = parseInt($('relist_qty_' + qtyType + '_value').value);\n                        break;\n                }\n\n                if (relistMinQty <= stopMaxQty) {\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('Inconsistent Settings in Relist and Stop Rules.'));\n            // ---------------------------------------\n        },\n\n        initObservers: function()\n        {\n            //list\n            $('list_mode').observe('change', AmazonTemplateSynchronizationObj.listMode_change).simulate('change');\n            $('list_qty_magento').observe('change', AmazonTemplateSynchronizationObj.listQty_change).simulate('change');\n            $('list_qty_calculated').observe('change', AmazonTemplateSynchronizationObj.listQty_change).simulate('change');\n            $('list_advanced_rules_mode').observe('change', AmazonTemplateSynchronizationObj.listAdvancedRules_change).simulate('change');\n\n            //relist\n            $('relist_mode').observe('change', AmazonTemplateSynchronizationObj.relistMode_change).simulate('change');\n            $('relist_qty_magento').observe('change', AmazonTemplateSynchronizationObj.relistQty_change).simulate('change');\n            $('relist_qty_calculated').observe('change', AmazonTemplateSynchronizationObj.relistQty_change).simulate('change');\n            $('relist_advanced_rules_mode').observe('change', AmazonTemplateSynchronizationObj.relistAdvancedRules_change).simulate('change');\n\n            //revise\n            $('revise_update_qty')\n                .observe('change', AmazonTemplateSynchronizationObj.reviseQty_change)\n                .simulate('change');\n\n            $('revise_update_qty_max_applied_value_mode')\n                .observe('change', AmazonTemplateSynchronizationObj.reviseQtyMaxAppliedValueMode_change)\n                .simulate('change');\n\n            $('revise_update_price').observe('change', AmazonTemplateSynchronizationObj.revisePrice_change)\n                .simulate('change');\n\n            $('revise_update_price_max_allowed_deviation_mode').observe('change', AmazonTemplateSynchronizationObj.revisePriceMaxAllowedDeviationMode_change)\n                .simulate('change');\n\n            //stop\n            $('stop_qty_magento').observe('change', AmazonTemplateSynchronizationObj.stopQty_change).simulate('change');\n            $('stop_qty_calculated').observe('change', AmazonTemplateSynchronizationObj.stopQty_change).simulate('change');\n            $('stop_advanced_rules_mode').observe('change', AmazonTemplateSynchronizationObj.stopAdvancedRules_change).simulate('change');\n        },\n\n        // ---------------------------------------\n\n        isRelistModeDisabled: function()\n        {\n            return $('relist_mode').value == 0;\n        },\n\n        // ---------------------------------------\n\n        duplicateClick: function($super, $headId)\n        {\n            this.setValidationCheckRepetitionValue('M2ePro-synchronization-tpl-title',\n                                                    M2ePro.translator.translate('The specified Title is already used for other Policy. Policy Title must be unique.'),\n                                                    'Template\\\\Synchronization', 'title', '','',\n                                                    M2ePro.php.constant('Ess_M2ePro_Helper_Component_Amazon::NICK'));\n\n            $super($headId, M2ePro.translator.translate('Add Synchronization Policy'));\n        },\n\n        // ---------------------------------------\n\n        stopQty_change: function()\n        {\n            var qtyType = this.getAttribute('qty_type');\n\n            var valueContainer    = $('stop_qty_' + qtyType + '_value_container'),\n                valueMaxContainer = $('stop_qty_' + qtyType + '_value_max_container'),\n                item              = valueContainer.select('label span')[0];\n\n            valueContainer.hide();\n            valueMaxContainer.hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::STOP_QTY_LESS') ||\n                this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::STOP_QTY_MORE')) {\n                item.innerHTML = M2ePro.translator.translate('Quantity');\n                valueContainer.show();\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::STOP_QTY_BETWEEN')) {\n                item.innerHTML = M2ePro.translator.translate('Min Quantity');\n                valueContainer.show();\n                valueMaxContainer.show();\n            }\n        },\n\n        stopAdvancedRules_change: function()\n        {\n            var rulesContainer = $('stop_advanced_rules_filters_container'),\n                warningContainer = $('stop_advanced_rules_filters_warning');\n\n            rulesContainer.hide();\n            warningContainer.hide();\n\n            if (this.value == 1) {\n                rulesContainer.show();\n                warningContainer.show();\n            }\n        },\n\n        // ---------------------------------------\n\n        listMode_change: function()\n        {\n            var rulesContainer         = $('magento_block_amazon_template_synchronization_list_rules'),\n                advancedRulesContainer = $('magento_block_amazon_template_synchronization_list_advanced_filters');\n\n            if ($('list_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::LIST_MODE_NONE')) {\n                rulesContainer.hide();\n                advancedRulesContainer.hide();\n            } else if ($('list_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::LIST_MODE_YES')) {\n                rulesContainer.show();\n                advancedRulesContainer.show();\n            } else {\n                rulesContainer.hide();\n                advancedRulesContainer.hide();\n            }\n        },\n\n        listQty_change: function()\n        {\n            var qtyType = this.getAttribute('qty_type');\n\n            var valueContainer    = $('list_qty_' + qtyType + '_value_container'),\n                valueMaxContainer = $('list_qty_' + qtyType + '_value_max_container'),\n                item              = valueContainer.select('label span')[0];\n\n            valueContainer.hide();\n            valueMaxContainer.hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::LIST_QTY_LESS') ||\n                this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::LIST_QTY_MORE')) {\n                item.innerHTML = M2ePro.translator.translate('Quantity');\n                valueContainer.show();\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::LIST_QTY_BETWEEN')) {\n                item.innerHTML = M2ePro.translator.translate('Min Quantity');\n                valueContainer.show();\n                valueMaxContainer.show();\n            }\n        },\n\n        listAdvancedRules_change: function()\n        {\n            var rulesContainer = $('list_advanced_rules_filters_container'),\n                warningContainer = $('list_advanced_rules_filters_warning');\n\n            rulesContainer.hide();\n            warningContainer.hide();\n\n            if (this.value == 1) {\n                rulesContainer.show();\n                warningContainer.show();\n            }\n        },\n\n        // ---------------------------------------\n\n        relistMode_change: function()\n        {\n            var rulesContainer         = $('magento_block_amazon_template_synchronization_relist_rules'),\n                advancedRulesContainer = $('magento_block_amazon_template_synchronization_relist_advanced_filters'),\n                userLockContainer      = $('relist_filter_user_lock_tr_container'),\n                sendDataContainer      = $('relist_send_data_tr_container');\n\n            if ($('relist_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::RELIST_MODE_NONE')) {\n                userLockContainer.hide();\n                sendDataContainer.hide();\n                rulesContainer.hide();\n                advancedRulesContainer.hide();\n            } else if ($('relist_mode').value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::RELIST_MODE_YES')) {\n                userLockContainer.show();\n                sendDataContainer.show();\n                rulesContainer.show();\n                advancedRulesContainer.show();\n            } else {\n                userLockContainer.hide();\n                sendDataContainer.hide();\n                rulesContainer.hide();\n                advancedRulesContainer.hide();\n            }\n        },\n\n        relistQty_change: function()\n        {\n            var qtyType = this.getAttribute('qty_type');\n\n            var valueContainer    = $('relist_qty_' + qtyType + '_value_container'),\n                valueMaxContainer = $('relist_qty_' + qtyType + '_value_max_container'),\n                item              = valueContainer.select('label span')[0];\n\n            valueContainer.hide();\n            valueMaxContainer.hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::RELIST_QTY_LESS') ||\n                this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::RELIST_QTY_MORE')) {\n                item.innerHTML = M2ePro.translator.translate('Quantity');\n                valueContainer.show();\n            }\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::RELIST_QTY_BETWEEN')) {\n                item.innerHTML = M2ePro.translator.translate('Min Quantity');\n                valueContainer.show();\n                valueMaxContainer.show();\n            }\n        },\n\n        relistAdvancedRules_change: function()\n        {\n            var rulesContainer = $('relist_advanced_rules_filters_container'),\n                warningContainer = $('relist_advanced_rules_filters_warning');\n\n            rulesContainer.hide();\n            warningContainer.hide();\n\n            if (this.value == 1) {\n                rulesContainer.show();\n                warningContainer.show();\n            }\n        },\n\n        // ---------------------------------------\n\n        reviseQty_change: function()\n        {\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::REVISE_UPDATE_QTY_YES')) {\n                $('revise_update_qty_max_applied_value_mode_tr').show();\n                $('revise_update_qty_max_applied_value_line_tr').show();\n                $('revise_update_qty_max_applied_value_mode').simulate('change');\n            } else {\n                $('revise_update_qty_max_applied_value_mode_tr').hide();\n                $('revise_update_qty_max_applied_value_line_tr').hide();\n                $('revise_update_qty_max_applied_value_tr').hide();\n                $('revise_update_qty_max_applied_value_mode').value = M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::REVISE_MAX_AFFECTED_QTY_MODE_OFF');\n            }\n        },\n\n        reviseQtyMaxAppliedValueMode_change: function(event)\n        {\n            var self = AmazonTemplateSynchronizationObj;\n\n            $('revise_update_qty_max_applied_value_tr').hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::REVISE_MAX_AFFECTED_QTY_MODE_ON')) {\n                $('revise_update_qty_max_applied_value_tr').show();\n            } else if (!event.cancelable) {\n                self.openReviseMaxAppliedQtyDisableConfirmationPopUp();\n            }\n        },\n\n        openReviseMaxAppliedQtyDisableConfirmationPopUp: function()\n        {\n            var self = this;\n\n            var element = jQuery('#revise_qty_max_applied_value_confirmation_popup_template').clone();\n\n            element.confirm({\n                title: M2ePro.translator.translate('Are you sure?'),\n                actions: {\n                    confirm: self.reviseQtyMaxAppliedValueDisableConfirm,\n                    cancel: self.reviseQtyMaxAppliedValueDisableCancel\n                },\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    class: 'action-secondary action-dismiss',\n                    click: function (event) {\n                        this.closeModal(event);\n                    }\n                }, {\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action-primary action-accept',\n                    click: function (event) {\n                        this.closeModal(event, true);\n                    }\n                }]\n            });\n        },\n\n        reviseQtyMaxAppliedValueDisableCancel: function()\n        {\n            $('revise_update_qty_max_applied_value_mode').selectedIndex = 1;\n            $('revise_update_qty_max_applied_value_mode').simulate('change');\n        },\n\n        reviseQtyMaxAppliedValueDisableConfirm: function()\n        {\n            $('revise_update_qty_max_applied_value_mode').selectedIndex = 0;\n            $('revise_update_qty_max_applied_value_mode').simulate('change');\n        },\n\n        // ---------------------------------------\n\n        revisePrice_change: function()\n        {\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::REVISE_UPDATE_PRICE_YES')) {\n                $('revise_update_price_max_allowed_deviation_mode_tr').show();\n                $('revise_update_price_max_allowed_deviation_tr').show();\n                $('revise_update_price_line').show();\n                $('revise_update_price_max_allowed_deviation_mode').simulate('change');\n            } else {\n                $('revise_update_price_max_allowed_deviation_mode_tr').hide();\n                $('revise_update_price_max_allowed_deviation_tr').hide();\n                $('revise_update_price_line').hide();\n                $('revise_update_price_max_allowed_deviation_mode').value = M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::REVISE_MAX_ALLOWED_PRICE_DEVIATION_MODE_OFF');\n            }\n        },\n\n        revisePriceMaxAllowedDeviationMode_change: function(event)\n        {\n            var self = AmazonTemplateSynchronizationObj;\n\n            $('revise_update_price_max_allowed_deviation_tr').hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_Synchronization::REVISE_MAX_ALLOWED_PRICE_DEVIATION_MODE_ON')) {\n                $('revise_update_price_max_allowed_deviation_tr').show();\n            } else if (!event.cancelable) {\n                self.openReviseMaxAllowedDeviationPriceDisableConfirmationPopUp();\n            }\n        },\n\n        openReviseMaxAllowedDeviationPriceDisableConfirmationPopUp: function()\n        {\n            var self = this;\n\n            var element = jQuery('#revise_price_max_max_allowed_deviation_confirmation_popup_template').clone();\n\n            element.confirm({\n                title: M2ePro.translator.translate('Are you sure?'),\n                actions: {\n                    confirm: self.revisePriceMaxAllowedDeviationDisableConfirm,\n                    cancel: self.revisePriceMaxAllowedDeviationDisableCancel\n                },\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    class: 'action-secondary action-dismiss',\n                    click: function (event) {\n                        this.closeModal(event);\n                    }\n                }, {\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action-primary action-accept',\n                    click: function (event) {\n                        this.closeModal(event, true);\n                    }\n                }]\n            });\n        },\n\n        revisePriceMaxAllowedDeviationDisableCancel: function()\n        {\n            $('revise_update_price_max_allowed_deviation_mode').selectedIndex = 1;\n            $('revise_update_price_max_allowed_deviation_mode').simulate('change');\n        },\n\n        revisePriceMaxAllowedDeviationDisableConfirm: function()\n        {\n            $('revise_update_price_max_allowed_deviation_mode').selectedIndex = 0;\n            $('revise_update_price_max_allowed_deviation_mode').simulate('change');\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Template/Edit.js":"define([\n    'M2ePro/Template/Edit'\n], function () {\n\n    window.AmazonTemplateEdit = Class.create(TemplateEdit, {\n\n        // ---------------------------------------\n\n        getComponent: function()\n        {\n            return 'amazon';\n        },\n\n        // ---------------------------------------\n\n        saveAndCloseClick: function(confirmText, templateNick)\n        {\n            if (!this.isValidForm()) {\n                return;\n            }\n\n            if (confirmText && this.showConfirmMsg) {\n                this.confirm(templateNick, confirmText, this.saveFormUsingAjax);\n                return;\n            }\n\n            this.saveFormUsingAjax();\n        },\n\n        saveFormUsingAjax: function ()\n        {\n            new Ajax.Request(M2ePro.url.get('formSubmit'), {\n                method: 'post',\n                parameters: Form.serialize($('edit_form')),\n                onSuccess: function(transport) {\n                    var result = transport.responseText.evalJSON();\n\n                    if (result.status) {\n                        window.close();\n                    } else {\n                        console.error('Policy Saving Error');\n                    }\n                }\n            });\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Template/SellingFormat.js":"define([\n    'jquery',\n    'M2ePro/Amazon/Template/Edit'\n], function (jQuery) {\n\n    window.AmazonTemplateSellingFormat = Class.create(AmazonTemplateEdit, {\n\n        discountRulesCount: 0,\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            var self = this;\n            this.setValidationCheckRepetitionValue('M2ePro-price-tpl-title',\n                                                    M2ePro.translator.translate('The specified Title is already used for other Policy. Policy Title must be unique.'),\n                                                    'Template\\\\SellingFormat', 'title', 'id',\n                                                    M2ePro.formData.id,\n                                                    M2ePro.php.constant('Ess_M2ePro_Helper_Component_Amazon::NICK'));\n\n            jQuery.validator.addMethod('M2ePro-validate-price-coefficient', function(value) {\n\n                if (value == '') {\n                    return true;\n                }\n\n                if (value == '0' || value == '0%') {\n                    return false;\n                }\n\n                return value.match(/^[+-]?\\d+[.]?\\d*[%]?$/g);\n            }, M2ePro.translator.translate('Coefficient is not valid.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-qty', function(value, el) {\n\n                if (self.isElementHiddenFromPage(el)) {\n                    return true;\n                }\n\n                if (value.match(/[^\\d]+/g)) {\n                    return false;\n                }\n\n                if (value <= 0) {\n                    return false;\n                }\n\n                return true;\n            }, M2ePro.translator.translate('Wrong value. Only integer numbers.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-vat-percent', function(value) {\n\n                if (value.length > 6) {\n                    return false;\n                }\n\n                if (value < 0) {\n                    return false;\n                }\n\n                value = Math.ceil(value);\n\n                return value > 0 && value <= 30;\n            }, M2ePro.translator.translate('Wrong value. Must be no more than 30. Max applicable length is 6 characters, including the decimal (e.g., 12.345).'));\n\n            jQuery.validator.addMethod('M2ePro-date-range-to', function(value) {\n\n                var fromTime = $('regular_sale_price_start_date_value'),\n                    toTime = $('regular_sale_price_end_date_value');\n\n                if (fromTime.value == '' || toTime.value == '' ||\n                    !jQuery(fromTime).is(':visible') || !jQuery(toTime).is(':visible')) {\n                    return true;\n                }\n\n                fromTime = new Date(fromTime.value);\n                toTime = new Date(toTime.value);\n\n                if (!fromTime || !toTime) {\n                    return true;\n                }\n\n                return toTime.getTime() > fromTime.getTime();\n            }, M2ePro.translator.translate('Wrong date range.'));\n\n            jQuery.validator.addMethod('M2ePro-customer-allowed-types', function(value, element) {\n                return !(\n                    $('is_regular_customer_allowed').value == 0 &&\n                    $('is_business_customer_allowed').value == 0\n                );\n            }, M2ePro.translator.translate('At least one Selling Type should be enabled.'));\n\n            jQuery.validator.addMethod('M2ePro-business-discount-availability', function(value, element) {\n                if (!$('is_business_customer_allowed') || $('is_business_customer_allowed').value == 0 ||\n                    element.value != M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_SellingFormat::BUSINESS_DISCOUNTS_MODE_CUSTOM_VALUE')\n                ) {\n                    return true;\n                }\n\n                return $$('#business_discounts_custom_value_discount_table_tbody .business-discount-rule').length > 0;\n            }, M2ePro.translator.translate('You should add at least one Discount Rule.'));\n\n            jQuery.validator.addMethod('M2ePro-business-discount-qty-unique', function(value, element) {\n                return !(element.up('tbody').select('.M2ePro-business-discount-qty-unique[value=\"' + value + '\"]').length > 1);\n            }, M2ePro.translator.translate('The Quantity value should be unique.'));\n\n            jQuery.validator.addMethod('M2ePro-business-discount-attribute-coefficient-unique', function(value, element) {\n                if (Validation.get('IsEmpty').test(value)) {\n                    return true;\n                }\n\n                var similarValues;\n\n                if (value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                    var attribute = element.up('tr').down('.business-discount-attribute').value;\n                    similarValues = element.up('tbody').select('.business-discount-attribute[value=\"' + attribute + '\"]');\n                } else {\n                    similarValues = element.up('tbody').select('.M2ePro-business-discount-attribute-coefficient-unique[value=\"' + value + '\"]');\n                }\n\n                if (similarValues.length === 1) {\n                    return true;\n                }\n\n                var coefficientValue = element.up('tr').down('.business-discount-coefficient').value;\n                var similarValues = similarValues.filter(function(el) {\n                    return el.up('tr').down('.business-discount-coefficient').value == coefficientValue\n                });\n\n                return !(similarValues.length > 1);\n            }, M2ePro.translator.translate('You should specify a unique pair of Magento Attribute and Price Change value for each Discount Rule.'));\n        },\n\n        initObservers: function()\n        {\n            if ($('is_regular_customer_allowed')) {\n                $('is_regular_customer_allowed')\n                    .observe('change', AmazonTemplateSellingFormatObj.is_regular_customer_allowed_change)\n                    .simulate('change');\n            }\n\n            if ($('is_business_customer_allowed')) {\n                $('is_business_customer_allowed')\n                    .observe('change', AmazonTemplateSellingFormatObj.is_business_customer_allowed_change)\n                    .simulate('change');\n            }\n\n            $('qty_mode')\n                .observe('change', AmazonTemplateSellingFormatObj.qty_mode_change)\n                .simulate('change');\n\n            $('qty_modification_mode')\n                .observe('change', AmazonTemplateSellingFormatObj.qtyPostedMode_change)\n                .simulate('change');\n\n            if ($('regular_price_mode')) {\n                $('regular_price_mode')\n                    .observe('change', AmazonTemplateSellingFormatObj.regular_price_mode_change)\n                    .simulate('change');\n            }\n\n            if ($('regular_map_price_mode')) {\n                $('regular_map_price_mode')\n                    .observe('change', AmazonTemplateSellingFormatObj.regular_map_price_mode_change)\n                    .simulate('change');\n            }\n\n            if ($('regular_sale_price_start_date_mode')) {\n                $('regular_sale_price_start_date_mode')\n                    .observe('change', AmazonTemplateSellingFormatObj.regular_sale_price_start_date_mode_change)\n                    .simulate('change');\n            }\n\n            if ($('regular_sale_price_end_date_mode')) {\n                $('regular_sale_price_end_date_mode')\n                    .observe('change', AmazonTemplateSellingFormatObj.regular_sale_price_end_date_mode_change)\n                    .simulate('change');\n            }\n\n            if ($('regular_sale_price_mode')) {\n                $('regular_sale_price_mode')\n                    .observe('change', AmazonTemplateSellingFormatObj.regular_sale_price_mode_change)\n                    .simulate('change');\n            }\n\n            if ($('regular_price_increase_vat_percent')) {\n                $('regular_price_increase_vat_percent')\n                    .observe('change', AmazonTemplateSellingFormatObj.regular_price_increase_vat_percent_mode_change)\n                    .simulate('change');\n            }\n\n            if ($('business_price_mode')) {\n                $('business_price_mode')\n                    .observe('change', AmazonTemplateSellingFormatObj.business_price_mode_change)\n                    .simulate('change');\n            }\n\n            if ($('business_price_increase_vat_percent')) {\n                $('business_price_increase_vat_percent')\n                    .observe('change', AmazonTemplateSellingFormatObj.business_price_increase_vat_percent_mode_change)\n                    .simulate('change');\n            }\n\n            if ($('business_discounts_mode')) {\n                $('business_discounts_mode')\n                    .observe('change', AmazonTemplateSellingFormatObj.business_discounts_mode_change)\n                    .simulate('change');\n            }\n\n            if ($('business_discounts_custom_value_discount_table_tbody')) {\n                $('business_discounts_custom_value_discount_table_tbody').on(\n                    'change', 'select.business-discount-mode', AmazonTemplateSellingFormatObj.business_discount_price_mode_change\n                );\n            }\n\n            if ($('business_discounts_mode')) {\n                AmazonTemplateSellingFormatObj.renderDiscountRules(M2ePro.formData.discount_rules);\n            }\n        },\n\n        // ---------------------------------------\n\n        duplicateClick: function($super, $headId)\n        {\n            this.setValidationCheckRepetitionValue('M2ePro-price-tpl-title',\n                                                    M2ePro.translator.translate('The specified Title is already used for other Policy. Policy Title must be unique.'),\n                                                    'Template\\\\SellingFormat', 'title', '','',\n                                                    M2ePro.php.constant('Ess_M2ePro_Helper_Component_Amazon::NICK'));\n\n            $super($headId, M2ePro.translator.translate('Add Price, Quantity and Format Policy'));\n        },\n\n        // ---------------------------------------\n\n        qty_mode_change: function()\n        {\n            $('qty_custom_value_tr', 'qty_percentage_tr', 'qty_modification_mode_tr').invoke('hide');\n\n            $('qty_custom_attribute').value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::QTY_MODE_NUMBER')) {\n                $('qty_custom_value_tr').show();\n            } else if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::QTY_MODE_ATTRIBUTE')) {\n                AmazonTemplateSellingFormatObj.updateHiddenValue(this, $('qty_custom_attribute'));\n            }\n\n            $('qty_modification_mode').value = M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_SellingFormat::QTY_MODIFICATION_MODE_OFF');\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::QTY_MODE_PRODUCT') ||\n                this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::QTY_MODE_ATTRIBUTE') ||\n                this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::QTY_MODE_PRODUCT_FIXED')) {\n\n                $('qty_modification_mode_tr').show();\n\n                $('qty_modification_mode').value = M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_SellingFormat::QTY_MODIFICATION_MODE_ON');\n\n                if (M2ePro.formData.qty_mode == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::QTY_MODE_PRODUCT') ||\n                    M2ePro.formData.qty_mode == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::QTY_MODE_ATTRIBUTE') ||\n                    M2ePro.formData.qty_mode == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::QTY_MODE_PRODUCT_FIXED')) {\n                    $('qty_modification_mode').value = M2ePro.formData.qty_modification_mode;\n                }\n            }\n\n            $('qty_modification_mode').simulate('change');\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::QTY_MODE_PRODUCT') ||\n                this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::QTY_MODE_ATTRIBUTE') ||\n                this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::QTY_MODE_PRODUCT_FIXED')) {\n\n                $('qty_percentage_tr').show();\n            }\n        },\n\n        qtyPostedMode_change: function()\n        {\n            $('qty_min_posted_value_tr').hide();\n            $('qty_max_posted_value_tr').hide();\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_SellingFormat::QTY_MODIFICATION_MODE_ON')) {\n                $('qty_min_posted_value_tr').show();\n                $('qty_max_posted_value_tr').show();\n            }\n        },\n\n        // ---------------------------------------\n\n        regular_price_mode_change: function()\n        {\n            var self = AmazonTemplateSellingFormatObj;\n\n            $('regular_price_custom_attribute').value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('regular_price_custom_attribute'));\n            }\n\n            $('regular_price_note').innerHTML = M2ePro.translator.translate('Product Price for Amazon Listing(s).');\n        },\n\n        regular_map_price_mode_change: function()\n        {\n            var self = AmazonTemplateSellingFormatObj;\n\n            $('regular_map_price_custom_attribute').value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('regular_map_price_custom_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n\n        regular_sale_price_mode_change: function()\n        {\n            var self = AmazonTemplateSellingFormatObj;\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::PRICE_MODE_NONE')) {\n\n                $('regular_sale_price_start_date_mode_tr', 'regular_sale_price_end_date_mode_tr', 'regular_sale_price_coefficient_td').invoke('hide');\n                $('regular_sale_price_start_date_value_tr', 'regular_sale_price_end_date_value_tr').invoke('hide');\n            } else if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::PRICE_MODE_SPECIAL')) {\n                $('regular_sale_price_coefficient_td').show();\n                $('regular_sale_price_start_date_mode_tr', 'regular_sale_price_end_date_mode_tr').invoke('hide');\n                $('regular_sale_price_start_date_value_tr', 'regular_sale_price_end_date_value_tr').invoke('hide');\n            } else {\n                $('regular_sale_price_start_date_mode_tr', 'regular_sale_price_end_date_mode_tr', 'regular_sale_price_coefficient_td').invoke('show');\n                $('regular_sale_price_start_date_mode').simulate('change');\n                $('regular_sale_price_end_date_mode').simulate('change');\n            }\n\n            $('regular_sale_price_custom_attribute').value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('regular_sale_price_custom_attribute'));\n            }\n\n            $('regular_sale_price_note').innerHTML = M2ePro.translator.translate('The Price, at which you want to sell your Product(s) at specific time.');\n        },\n\n        regular_sale_price_start_date_mode_change: function()\n        {\n            $('regular_sale_price_start_date_custom_attribute').value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_SellingFormat::DATE_VALUE')) {\n                $('regular_sale_price_start_date_value_tr').show();\n            } else {\n                $('regular_sale_price_start_date_value_tr').hide();\n                AmazonTemplateSellingFormatObj.updateHiddenValue(this, $('regular_sale_price_start_date_custom_attribute'));\n            }\n\n        },\n\n        regular_sale_price_end_date_mode_change: function()\n        {\n            $('regular_sale_price_end_date_custom_attribute').value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_SellingFormat::DATE_VALUE')) {\n                $('regular_sale_price_end_date_value_tr').show();\n            } else {\n                $('regular_sale_price_end_date_value_tr').hide();\n                AmazonTemplateSellingFormatObj.updateHiddenValue(this, $('regular_sale_price_end_date_custom_attribute'));\n            }\n\n        },\n\n        // ---------------------------------------\n\n        regular_price_increase_vat_percent_mode_change: function()\n        {\n            var vatPercentTr = $('regular_price_vat_percent_tr'),\n                vatPercent = $('regular_price_vat_percent');\n\n            vatPercentTr.hide();\n            vatPercent.removeClassName('M2ePro-validate-vat-percent');\n            vatPercent.removeClassName('required-entry');\n\n            if (+this.value) {\n                vatPercentTr.show();\n                vatPercent.addClassName('M2ePro-validate-vat-percent');\n                vatPercent.addClassName('required-entry');\n            } else {\n                vatPercent.value = '';\n            }\n        },\n\n        // ---------------------------------------\n\n        // Business ------------------------------\n        // ---------------------------------------\n\n        is_regular_customer_allowed_change: function ()\n        {\n            var regularCustomer = $('is_regular_customer_allowed'),\n                businessCustomer = $('is_regular_customer_allowed'),\n                regularBlock = $('magento_block_amazon_template_selling_format_prices');\n\n            regularBlock.hide();\n            if (regularCustomer.value == 1){\n                regularBlock.show();\n            }\n        },\n\n        is_business_customer_allowed_change: function ()\n        {\n            var businessCustomer = $('is_business_customer_allowed'),\n                businessBlock = $('magento_block_amazon_template_selling_format_business_prices');\n\n            businessBlock.hide();\n            if (businessCustomer.value == 1){\n                businessBlock.show();\n            }\n        },\n\n        business_price_mode_change: function()\n        {\n            var self = AmazonTemplateSellingFormatObj;\n\n            $('business_price_custom_attribute').value = '';\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('business_price_custom_attribute'));\n            }\n\n            $('business_price_note').innerHTML = M2ePro.translator.translate('Business Product Price for Amazon Listing(s).');\n        },\n\n        business_price_increase_vat_percent_mode_change: function()\n        {\n            var vatPercentTr = $('business_price_vat_percent_tr'),\n                vatPercent = $('business_price_vat_percent');\n\n            vatPercentTr.hide();\n            vatPercent.removeClassName('M2ePro-validate-vat-percent');\n            vatPercent.removeClassName('required-entry');\n\n            if (+this.value) {\n                vatPercentTr.show();\n                vatPercent.addClassName('M2ePro-validate-vat-percent');\n                vatPercent.addClassName('required-entry');\n            } else {\n                vatPercent.value = '';\n            }\n        },\n\n        business_discounts_mode_change: function()\n        {\n            var qtyPriceMode = $('business_discounts_mode');\n\n            $(\n                'business_discounts_tier_customer_group_id_tr', 'business_discounts_tier_coefficient_td',\n                'business_discounts_custom_value_discount_table', 'business_discounts_not_set_table'\n            ).invoke('hide');\n\n            $('business_discounts_custom_value_discount_table_tbody').update();\n\n            AmazonTemplateSellingFormatObj.discountRulesCount = 0;\n\n            $$('.add_discount_rule_button').each(function (el) {\n                el.show();\n            });\n\n            if (qtyPriceMode.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_SellingFormat::BUSINESS_DISCOUNTS_MODE_TIER')) {\n                $('business_discounts_tier_customer_group_id_tr').show();\n                $('business_discounts_tier_coefficient_td').show();\n                return;\n            }\n\n            if (qtyPriceMode.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_SellingFormat::BUSINESS_DISCOUNTS_MODE_CUSTOM_VALUE')) {\n                $('business_discounts_not_set_table').show();\n                return;\n            }\n        },\n\n        addRow: function()\n        {\n            $('business_discounts_custom_value_discount_table').show();\n            $('business_discounts_not_set_table').hide();\n\n            var id = 'business_discounts_custom_value_discount_table_tbody';\n            var i = AmazonTemplateSellingFormatObj.discountRulesCount;\n\n            // ---------------------------------------\n            var tpl = $$('#business_discounts_custom_value_discount_table_row_template tbody')[0].innerHTML;\n            tpl = tpl.replace(/%i%/g, i);\n            $(id).insert(tpl);\n            // ---------------------------------------\n\n            AmazonTemplateSellingFormatObj.discountRulesCount++;\n\n            if (AmazonTemplateSellingFormatObj.discountRulesCount >= 5) {\n                $$('.add_discount_rule_button').each(function (el) {\n                    el.hide();\n                });\n            }\n\n            var handlerObj = new AttributeCreator('business_discount[mode][' + i + ']');\n            handlerObj.setSelectObj($(id).select('select[name=\"business_discount[mode][' + i + ']\"]').first());\n            handlerObj.injectAddOption();\n\n            return $('custom_value_discount_rule_' + i + '_tr');\n        },\n\n        removeRow: function(btnEl)\n        {\n            btnEl.up('tr').remove();\n\n            AmazonTemplateSellingFormatObj.discountRulesCount--;\n\n            if (AmazonTemplateSellingFormatObj.discountRulesCount < 5) {\n                $$('.add_discount_rule_button').each(function (el) {\n                    el.show();\n                });\n            }\n\n            if (AmazonTemplateSellingFormatObj.discountRulesCount == 0) {\n                $('business_discounts_custom_value_discount_table').hide();\n                $('business_discounts_not_set_table').show();\n            }\n        },\n\n        renderDiscountRules: function(discountRules)\n        {\n            if (discountRules.length === 0) {\n                return;\n            }\n\n            if ($('business_discounts_mode').value != M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_SellingFormat::BUSINESS_DISCOUNTS_MODE_CUSTOM_VALUE')) {\n                return;\n            }\n\n            discountRules.each(function(rule, i) {\n                var row = AmazonTemplateSellingFormatObj.addRow();\n\n                row.down('.business-discount-qty').value = rule.qty;\n\n                if (rule.mode == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                    var modeOption = row.down('.business-discount-mode option[attribute_code=\"' + rule.attribute + '\"]');\n                    if (modeOption) modeOption.selected = true;\n                    row.down('.business-discount-attribute').value = rule.attribute;\n                } else {\n                    row.down('.business-discount-mode').value = rule.mode;\n                }\n\n                row.down('.business-discount-coefficient').value = rule.coefficient;\n            });\n        },\n\n        business_discount_price_mode_change: function(event,target)\n        {\n            var self = AmazonTemplateSellingFormatObj;\n\n            target.previous().value = '';\n            if (target.value == M2ePro.php.constant('Ess_M2ePro_Model_Template_SellingFormat::PRICE_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(target, target.previous());\n            }\n        }\n\n    });\n});","Ess_M2ePro/js/Amazon/Template/ShippingTemplate.js":"define([\n    'M2ePro/Amazon/Template/Edit'\n], function () {\n\n    window.AmazonTemplateShippingTemplate = Class.create(AmazonTemplateEdit,  {\n\n        initialize: function()\n        {\n            this.setValidationCheckRepetitionValue('M2ePro-shipping-tpl-title',\n                M2ePro.translator.translate('The specified Title is already used for other Policy. Policy Title must be unique.'),\n                'Amazon\\\\Template\\\\ShippingTemplate', 'title', 'id',\n                M2ePro.formData.id\n            );\n        },\n\n        initObservers: function()\n        {\n            $('template_name_mode')\n                .observe('change', this.templateNameModeChange)\n                .simulate('change');\n        },\n\n        // ---------------------------------------\n\n        duplicateClick: function($headId)\n        {\n            this.setValidationCheckRepetitionValue('M2ePro-shipping-tpl-title',\n                M2ePro.translator.translate('The specified Title is already used for other Policy. Policy Title must be unique.'),\n                'Amazon\\\\Template\\\\ShippingTemplate', 'title', 'id', ''\n            );\n\n            CommonObj.duplicateClick($headId, M2ePro.translator.translate('Add Shipping Template Policy'));\n        },\n\n        // ---------------------------------------\n\n        templateNameModeChange: function()\n        {\n            $('template_name_custom_value_tr').hide();\n            $('template_name_attribute').value = '';\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_ShippingTemplate::TEMPLATE_NAME_VALUE')) {\n                $('template_name_custom_value_tr').show();\n            } else if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_ShippingTemplate::TEMPLATE_NAME_ATTRIBUTE')) {\n                CommonObj.updateHiddenValue(this, $('template_name_attribute'));\n            }\n        }\n\n        // ---------------------------------------\n    });\n\n});","Ess_M2ePro/js/Amazon/Template/ShippingOverride.js":"define([\n    'M2ePro/Amazon/Template/Edit'\n], function () {\n\n    window.AmazonTemplateShippingOverride = Class.create(AmazonTemplateEdit,  {\n\n        rulesIndex: 0,\n\n        // ---------------------------------------\n\n        initialize: function () {\n            this.setValidationCheckRepetitionValue('M2ePro-shipping-override-tpl-title',\n                M2ePro.translator.translate('The specified Title is already used for other Policy. Policy Title must be unique.'),\n                'Amazon\\\\Template\\\\ShippingOverride', 'title', 'id',\n                M2ePro.formData.id);\n        },\n\n        // ---------------------------------------\n\n        duplicateClick: function ($super, $headId) {\n            this.setValidationCheckRepetitionValue('M2ePro-shipping-override-tpl-title',\n                M2ePro.translator.translate('The specified Title is already used for other Policy. Policy Title must be unique.'),\n                'Amazon\\\\Template\\\\ShippingOverride', 'title', 'id', '');\n\n            $super($headId, M2ePro.translator.translate('Add Shipping Override Policy'));\n        },\n\n        // ---------------------------------------\n\n        addRow: function (ruleData) {\n            var self = this,\n                marketplaceId = $('marketplace_id').value;\n\n            ruleData = ruleData || {};\n            this.rulesIndex++;\n\n            var tpl = $('shipping_override_rule_table_row_template').down('tbody').innerHTML;\n            tpl = tpl.replace(/%i%/g, this.rulesIndex);\n            $('shipping_override_rules_table_tbody').insert(tpl);\n\n            var row = $('shipping_override_rule_' + this.rulesIndex + '_tr');\n            row.show();\n\n            var serviceEl = row.down('.shipping-override-service');\n\n            var option = new Element('option', {\n                class: 'empty',\n                value: ''\n            });\n            serviceEl.insert({bottom: option});\n\n            var services = [];\n            $H(self.overrideServicesData).each(function (data) {\n                if (data.value.marketplace_id == marketplaceId && services.indexOf(data.value.service) == -1) {\n                    services.push(data.value.service);\n                }\n            });\n\n            services.each(function (service) {\n                var option = new Element('option', {\n                    value: service\n                });\n                option.innerHTML = service;\n                serviceEl.insert(option);\n            });\n\n            if (ruleData.service) {\n                serviceEl.value = ruleData.service;\n                self.ruleServiceChange.call(self, serviceEl, ruleData);\n            }\n\n            var attributeEl = row.down('.shipping-override-cost-custom-attribute');\n            attributeEl.addClassName('M2ePro-custom-attribute-can-be-created');\n            attributeEl.id = 'shipping_override_cost_custom_attribute_' + this.rulesIndex;\n            attributeEl.setAttribute('allowed_attribute_types', 'text,price,select');\n\n            var handlerObj = new AttributeCreator('shipping_override_cost_custom_attribute_' + this.rulesIndex);\n            handlerObj.setSelectObj(attributeEl);\n            handlerObj.injectAddOption();\n        },\n\n        // ---------------------------------------\n\n        removeRow: function (el) {\n            el.up('.shipping-override-rule').remove();\n\n            if ($('shipping_override_rules_table_tbody').select('tr').length == 0) {\n                AmazonTemplateShippingOverrideObj.addRow();\n            }\n        },\n\n        // ---------------------------------------\n\n        renderRules: function (data) {\n            var self = this;\n\n            $('magento_block_amazon_template_shipping_override_rules').show();\n\n            data.each(function (rule) {\n                self.addRow(rule);\n            });\n        },\n\n        // ---------------------------------------\n\n        marketplaceChange: function () {\n            if (this.value != '') {\n                if (this.down('.empty-option')) {\n                    this.down('.empty-option').hide();\n                }\n                $('magento_block_amazon_template_shipping_override_rules').show();\n            }\n\n            $('shipping_override_rules_table_tbody').update();\n            if (this.type == 'select-one') {\n                $('shipping_override_rule_table_row_template').down('.shipping-override-rule-currency')\n                    .update(this[this.selectedIndex].getAttribute('currency'));\n            }\n            AmazonTemplateShippingOverrideObj.addRow();\n        },\n\n        // ---------------------------------------\n\n        ruleServiceChange: function (el, ruleData) {\n            var self = this,\n                location = el.up('tr').down('.shipping-override-location'),\n                marketplaceId = $('marketplace_id').value;\n\n            ruleData = ruleData || {};\n\n            if (el.value == '') {\n                location.value = '';\n                location.simulate('change');\n                location.disable().hide();\n\n                return;\n            }\n            location.update().enable().show();\n\n            var option = new Element('option', {\n                class: 'empty',\n                value: ''\n            });\n            location.insert({bottom: option});\n\n            $H(self.overrideServicesData).each(function (data) {\n                if (data.value.marketplace_id == marketplaceId && data.value.service == el.value) {\n                    var option = new Element('option', {\n                        value: data.value.location\n                    });\n\n                    option.innerHTML = data.value.location;\n                    location.insert(option);\n                }\n            });\n\n            if (ruleData.location) {\n                location.value = ruleData.location;\n                self.ruleLocationChange.call(self, location, ruleData);\n            }\n        },\n\n        ruleLocationChange: function (el, ruleData) {\n            var self = this,\n                service = el.up('tr').down('.shipping-override-service'),\n                location = el.up('tr').down('.shipping-override-location'),\n                type = el.up('tr').down('.shipping-override-type'),\n                option = el.up('tr').down('.shipping-override-option');\n\n            ruleData = ruleData || {};\n\n            if (el.value == '') {\n                type.value = '';\n                type.simulate('change');\n                type.disable().hide();\n\n                option.value = '';\n\n                return;\n            }\n            type.enable().show();\n\n            $H(self.overrideServicesData).each(function (data) {\n                if (service.value == data.value.service && location.value == data.value.location) {\n                    option.value = data.value.option;\n                    throw $break;\n                }\n            });\n\n            if (ruleData.type) {\n                type.value = ruleData.type;\n                self.ruleTypeChange.call(self, type, ruleData);\n            }\n        },\n\n        ruleTypeChange: function (el, ruleData) {\n            var self = this,\n                costMode = el.up('tr').down('.shipping-override-cost-mode');\n\n            ruleData = ruleData || {};\n\n            if (el.value == '' || el.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_ShippingOverride_Service::TYPE_RESTRICTIVE')) {\n                costMode.value = '';\n                costMode.simulate('change');\n                costMode.disable().hide();\n\n                return;\n            }\n            costMode.enable().show();\n\n            if (ruleData.cost_mode) {\n                costMode.value = ruleData.cost_mode;\n                self.ruleCostModeChange.call(self, costMode, ruleData);\n            }\n        },\n\n        ruleCostModeChange: function (el, ruleData) {\n            var self = this,\n                costCustomValue = el.up('tr').down('.shipping-override-cost-custom-value'),\n                costCustomAttribute = el.up('tr').down('.shipping-override-cost-custom-attribute');\n\n            ruleData = ruleData || {};\n\n            costCustomValue.removeAttribute('readonly');\n\n            if (el.value == '' || el.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_ShippingOverride_Service::COST_MODE_FREE')) {\n                costCustomValue.disable().hide();\n                costCustomAttribute.disable().hide();\n\n                costCustomValue.value = '';\n                costCustomAttribute.value = '';\n\n                if (el.value != '' && el.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_ShippingOverride_Service::COST_MODE_FREE')) {\n                    costCustomValue.enable().show();\n                    costCustomValue.value = 0;\n                    costCustomValue.setAttribute('readonly', 'readonly');\n                }\n\n                return;\n            }\n\n            if (el.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_ShippingOverride_Service::COST_MODE_CUSTOM_VALUE')) {\n                costCustomValue.enable().show();\n                costCustomAttribute.disable().hide();\n\n                if (ruleData.cost_value) {\n                    costCustomValue.value = ruleData.cost_value;\n                }\n            } else if (el.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_ShippingOverride_Service::COST_MODE_CUSTOM_ATTRIBUTE')) {\n                costCustomValue.disable().hide();\n                costCustomAttribute.enable().show();\n\n                if (ruleData.cost_value) {\n                    costCustomAttribute.value = ruleData.cost_value;\n                }\n            }\n        }\n\n        // ---------------------------------------\n\n    });\n});","Ess_M2ePro/js/Amazon/Template/ProductTaxCode.js":"define([\n    'M2ePro/Amazon/Template/Edit'\n], function () {\n\n    window.AmazonTemplateProductTaxCode = Class.create(AmazonTemplateEdit, {\n\n        rulesIndex: 0,\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            this.setValidationCheckRepetitionValue('M2ePro-tpl-title',\n                M2ePro.translator.translate('The specified Title is already used for other Policy. Policy Title must be unique.'),\n                'Amazon\\\\Template\\\\ProductTaxCode', 'title', 'id',\n                M2ePro.formData.id);\n        },\n\n        // ---------------------------------------\n\n        duplicateClick: function($headId)\n        {\n            this.setValidationCheckRepetitionValue('M2ePro-tpl-title',\n                M2ePro.translator.translate('The specified Title is already used for other Policy. Policy Title must be unique.'),\n                'Amazon\\\\Template\\\\ProductTaxCode', 'title', 'id', '');\n\n            CommonObj.duplicateClick($headId, M2ePro.translator.translate('Add Product Tax Code Policy'));\n        },\n\n        // ---------------------------------------\n\n        initObservers: function()\n        {\n            $('product_tax_code_mode')\n                .observe('change', AmazonTemplateProductTaxCodeObj.productTaxCodeModeChange)\n                .simulate('change');\n        },\n\n        productTaxCodeModeChange: function()\n        {\n            $('product_tax_code_custom_value_tr').hide();\n            $('product_tax_code_attribute').value = '';\n\n            if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_ProductTaxCode::PRODUCT_TAX_CODE_MODE_VALUE')) {\n                $('product_tax_code_custom_value_tr').show();\n            } else if (this.value == M2ePro.php.constant('Ess_M2ePro_Model_Amazon_Template_ProductTaxCode::PRODUCT_TAX_CODE_MODE_ATTRIBUTE')) {\n                AmazonTemplateProductTaxCodeObj.updateHiddenValue(this, $('product_tax_code_attribute'));\n            }\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Template/Description/Description.js":"define([\n    'jquery',\n    'underscore',\n    'M2ePro/Amazon/Template/Edit'\n], function (jQuery, _) {\n\n    window.AmazonTemplateDescription = Class.create(AmazonTemplateEdit, {\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            var self = this;\n\n            self.specificHandler = null;\n\n            // ---------------------------------------\n            self.categoryInfo = {};\n\n            self.categoryPathHiddenInput            = $('category_path');\n            self.categoryNodeIdHiddenInput          = $('browsenode_id');\n\n            self.categoryProductDataNickHiddenInput = $('product_data_nick');\n            // ---------------------------------------\n\n            self.productDataNicksInfo = {};\n            self.variationThemes      = [];\n\n            // ---------------------------------------\n\n            self.initValidation();\n        },\n\n        initValidation: function()\n        {\n            var self = this;\n\n            self.setValidationCheckRepetitionValue('M2ePro-description-template-title',\n                M2ePro.translator.translate('The specified Title is already used for another Policy. Policy Title must be unique.'),\n                'Template\\\\Description', 'title', 'id',\n                M2ePro.formData.id,\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Amazon::NICK'));\n\n            jQuery.validator.addMethod('M2ePro-validate-greater-than', function(value, el) {\n\n                if (!el.up('div.admin__field').visible()) {\n                    return true;\n                }\n\n                value = str_replace(',', '.', value);\n\n                if (value.match(/[^\\d.]+/g) || value < 0) {\n                    return false;\n                }\n\n                return value >= el.getAttribute('min_value');\n            }, M2ePro.translator.translate('Please enter a valid number value in a specified range.'));\n\n            jQuery.validator.addMethod('M2ePro-validate-category', function(value) {\n\n                if (!self.isNewAsinAccepted()) {\n                    return true;\n                }\n\n                return $('category_path').value != '';\n            }, M2ePro.translator.translate('You should select Category and Product Type first'));\n        },\n\n        initObservers: function()\n        {\n            $('marketplace_id').observe('change', AmazonTemplateDescriptionObj.onChangeMarketplace);\n\n            $('new_asin_accepted').observe('change', AmazonTemplateDescriptionObj.onChangeNewAsinAccepted);\n\n            $('edit_category_link').observe('click', AmazonTemplateDescriptionObj.onClickEditCategory);\n            $('product_data_nick_select').observe('change', AmazonTemplateDescriptionObj.onChangeProductDataNick);\n\n            $('worldwide_id_mode')\n                .observe('change', AmazonTemplateDescriptionObj.onChangeWorldwideId)\n                .simulate('change');\n\n            $('registered_parameter')\n                .observe('change', AmazonTemplateDescriptionObj.onChangeRegisteredParameter)\n                .simulate('change');\n\n            $('amazonTemplateDescriptionEditTabs_specifics').observe('click', AmazonTemplateDescriptionObj.checkSpecificsReady);\n        },\n\n        // ---------------------------------------\n\n        setSpecificHandler: function(object)\n        {\n            var self = this;\n            self.specificHandler = object;\n        },\n\n        // ---------------------------------------\n\n        isNewAsinAccepted: function()\n        {\n            return $('new_asin_accepted').value == 1;\n        },\n\n        checkMarketplaceSelection: function()\n        {\n            return $('marketplace_id').value != '';\n        },\n\n        checkSpecificsReady: function()\n        {\n            var self = AmazonTemplateDescriptionObj;\n\n            if (!self.specificHandler.isReady()) {\n                alert(M2ePro.translator.translate('You should select Category and Product Type first'));\n                self.goToGeneralTab();\n            }\n        },\n\n        //########################################\n\n        duplicateClick: function($super, $headId)\n        {\n            this.setValidationCheckRepetitionValue('M2ePro-description-template-title',\n                M2ePro.translator.translate('The specified Title is already used for another Policy. Policy Title must be unique.'),\n                'Template\\\\Description', 'title', '','',\n                M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Helper\\\\Component\\\\Amazon::NICK'));\n\n            if (M2ePro.customData.category_locked) {\n\n                M2ePro.customData.category_locked = false;\n                this.hideCategoryWarning('category_locked_warning_message');\n                $('edit_category_link').show();\n\n                $('product_data_nick_select').removeAttribute('disabled');\n            }\n\n            if (M2ePro.customData.marketplace_locked) {\n\n                M2ePro.customData.marketplace_locked = false;\n                $('marketplace_locked_warning_message').remove();\n\n                if (!M2ePro.customData.marketplace_force_set) {\n                    $('marketplace_hidden_input').remove();\n                    $('marketplace_id').removeAttribute('disabled');\n                }\n            }\n\n            if (M2ePro.customData.new_asin_switcher_locked) {\n\n                M2ePro.customData.new_asin_switcher_locked = false;\n                $('new_asin_locked_warning_message').remove();\n\n                if (!M2ePro.customData.new_asin_switcher_force_set) {\n                    $('new_asin_accepted_hidden_input').remove();\n                    $('new_asin_accepted').removeAttribute('disabled');\n                }\n            }\n\n            $super($headId, M2ePro.translator.translate('Add Description Policy'));\n        },\n\n        // ---------------------------------------\n\n        saveClick: function($super, url, confirmText, templateNick)\n        {\n            var self = AmazonTemplateDescriptionObj;\n\n            self.specificHandler.prepareSpecificsDataToPost();\n            $super(url, confirmText, templateNick);\n        },\n\n        saveAndEditClick: function($super, url, tabsId, confirmText, templateNick)\n        {\n            var self = AmazonTemplateDescriptionObj;\n\n            self.specificHandler.prepareSpecificsDataToPost();\n            $super(url, tabsId, confirmText, templateNick);\n        },\n\n        saveAndCloseClick: function($super, confirmText, templateNick)\n        {\n            var self = AmazonTemplateDescriptionObj;\n\n            self.specificHandler.prepareSpecificsDataToPost();\n            $super(confirmText, templateNick);\n        },\n\n        //########################################\n\n        onChangeMarketplace: function()\n        {\n            var self = AmazonTemplateDescriptionObj;\n            self.resetCategory();\n        },\n\n        onClickEditCategory: function()\n        {\n            var self = AmazonTemplateDescriptionObj;\n\n            if (!self.checkMarketplaceSelection()) {\n                self.alert(M2ePro.translator.translate('You should select Marketplace first.'));\n                return;\n            }\n\n            AmazonTemplateDescriptionCategoryChooserObj.showEditCategoryPopUp();\n        },\n\n        onChangeProductDataNick: function()\n        {\n            var self = AmazonTemplateDescriptionObj;\n\n            self.saveRecentProductDataNick(this.value);\n\n            self.resetRequiredAttributesForProductType();\n            self.setProductDataNick(this.value);\n        },\n\n        onChangeNewAsinAccepted: function()\n        {\n            var self = AmazonTemplateDescriptionObj;\n\n            // ---------------------------------------\n            var onlyAsinBlocks = $$('.hide-when-asin-is-disabled');\n\n            onlyAsinBlocks.invoke('hide');\n            if (this.value == 1) {\n\n                onlyAsinBlocks.invoke('show');\n\n                var worldWideIdMode = $('worldwide_id_mode');\n                worldWideIdMode.simulate('change');\n\n                if ($('registered_parameter').value == '' &&\n                    $('worldwide_id_custom_attribute').value == '') {\n                    worldWideIdMode.value = -1;\n                }\n\n                $('item_package_quantity_mode').simulate('change');\n                $('number_of_items_mode').simulate('change');\n            }\n            // ---------------------------------------\n\n            // set is required\n            parseInt(this.value) ? $('category_path').addClassName('M2ePro-required-when-visible')\n                : $('category_path').removeClassName('M2ePro-required-when-visible');\n            self.updateSpanRequirements($('template_description_edit_category_container'), this.value);\n\n            self.updateFieldRequirements($('manufacturer_mode'), this.value);\n            self.updateFieldRequirements($('brand_mode'), this.value);\n            self.updateFieldRequirements($('image_main_mode'), this.value);\n\n            var chooser = $('number_of_items_mode');\n            if (chooser.getAttribute('required_attribute_for_new_asin')) {\n                if(this.value == 0) chooser.value = '';\n                self.updateFieldRequirements(chooser, this.value, 'M2ePro-required-when-visible');\n            }\n\n            chooser = $('item_package_quantity_mode');\n            if (chooser.getAttribute('required_attribute_for_new_asin')) {\n                if(this.value == 0) chooser.value = '';\n                self.updateFieldRequirements(chooser, this.value, 'M2ePro-required-when-visible');\n            }\n            // ---------------------------------------\n        },\n\n        // ---------------------------------------\n\n        onChangeWorldwideId: function()\n        {\n            var target = $('worldwide_id_custom_attribute');\n\n            target.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description::WORLDWIDE_ID_MODE_CUSTOM_ATTRIBUTE')) {\n                AmazonTemplateDescriptionObj.updateHiddenValue(this, target);\n            }\n        },\n\n        onChangeRegisteredParameter: function()\n        {\n            var worldwideIdMode = $('worldwide_id_mode'),\n                noneOption      = worldwideIdMode.down('option'),\n                currentValue    = worldwideIdMode.getAttribute('data-current-value');\n\n            if (!this.value) {\n                noneOption.hide();\n                worldwideIdMode.simulate('change');\n\n                if ($('worldwide_id_custom_attribute').value == '') {\n                    worldwideIdMode.selectedIndex = -1;\n                }\n            } else {\n                noneOption.show();\n                if (currentValue == '') {\n                    worldwideIdMode.value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description::WORLDWIDE_ID_MODE_NONE');\n                }\n                $('worldwide_id_custom_attribute').value = ''\n            }\n            worldwideIdMode.setAttribute('data-current-value', '');\n        },\n\n        // ---------------------------------------\n\n        setCategory: function(categoryInfo, notSetProductTypeForceIfOnlyOne)\n        {\n            var self = this;\n            notSetProductTypeForceIfOnlyOne = notSetProductTypeForceIfOnlyOne || false;\n\n            this.categoryInfo = categoryInfo;\n\n            this.categoryPathHiddenInput.value   = this.getInterfaceCategoryPath(categoryInfo);\n            this.categoryNodeIdHiddenInput.value = categoryInfo.browsenode_id;\n\n            this.updateCategoryPathSpan(this.getInterfaceCategoryPath(categoryInfo, true));\n\n            this.updateAvailableProductTypes();\n\n            if (self.categoryInfo.product_data_nicks.length == 1 && !notSetProductTypeForceIfOnlyOne) {\n                self.setProductDataNickFromTree(self.categoryInfo.product_data_nicks[0]);\n            }\n\n            this.hideCategoryWarning('category_is_not_accessible_message');\n        },\n\n        setProductDataNickFromTree: function(productDataNick)\n        {\n            $$('#product_data_nick_select option').each(function(el) {\n\n                var optGroup = $(el).up('optgroup');\n\n                if (el.value == productDataNick && optGroup &&\n                    optGroup.getAttribute('is_recent') === null && optGroup.getAttribute('is_recommended') === null)\n                {\n                    el.setAttribute('selected', 'selected');\n                    return true;\n                }\n            });\n\n            AmazonTemplateDescriptionObj.setProductDataNick(productDataNick);\n        },\n\n        setProductDataNick: function(productDataNick)\n        {\n            var self = this;\n\n            this.categoryProductDataNickHiddenInput.value = productDataNick;\n\n            self.categoryInfo['required_attributes'] = {};\n\n            $H(this.productDataNicksInfo).each(function(item){\n\n                if (item.key == productDataNick) {\n                    self.categoryInfo['required_attributes'] = item.value.required_attributes;\n                    return true;\n                }\n            });\n\n            this.updateRequiredAttributesForProductType();\n            this.updateWarningMessagesVisibility();\n\n            this.specificHandler.reset();\n            this.specificHandler.run(this.categoryInfo, productDataNick);\n        },\n\n        saveRecentProductDataNick: function(productDataNick)\n        {\n            if (productDataNick == '') {\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/saveRecentProductDataNick'), {\n                method     : 'post',\n                parameters : {\n                    marketplace_id:    $('marketplace_id').value,\n                    product_data_nick: productDataNick\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        resetCategory: function()\n        {\n            this.categoryInfo = {};\n\n            this.categoryPathHiddenInput.value   = '';\n            this.categoryNodeIdHiddenInput.value = '';\n\n            this.resetCategoryPathSpan();\n            this.resetProductDataNick();\n\n            this.hideCategoryWarning('category_variation_warning_message');\n        },\n\n        resetProductDataNick: function()\n        {\n            this.categoryProductDataNickHiddenInput.value = '';\n\n            this.resetRequiredAttributesForProductType();\n\n            $('product_data_nick_tr').hide();\n            $('product_data_nick_select').update();\n\n            this.specificHandler.reset();\n        },\n\n        // ---------------------------------------\n\n        prepareEditMode: function()\n        {\n            var self = AmazonTemplateDescriptionObj;\n\n            if (M2ePro.formData.product_data_nick == '' ||\n                M2ePro.formData.browsenode_id == '' ||\n                M2ePro.formData.category_path == '') {\n\n                return;\n            }\n\n            var callback = function(transport) {\n\n                if (!transport.responseText) {\n\n                    self.resetCategory();\n                    self.showCategoryWarning('category_is_not_accessible_message');\n\n                } else {\n\n                    var categoryInfo = transport.responseText.evalJSON();\n\n                    self.setCategory(categoryInfo, true);\n                    var isProductTypeAvailable = self.isProductTypeAvailable(M2ePro.formData.product_data_nick);\n\n                    if (isProductTypeAvailable) {\n                        self.setProductDataNickFromTree(M2ePro.formData.product_data_nick);\n                    } else {\n                        self.specificHandler.resetFormDataSpecifics();\n                    }\n\n                    if (M2ePro.customData.category_locked) {\n\n                        self.showCategoryWarning('category_locked_warning_message');\n                        $('edit_category_link').hide();\n\n                        $('product_data_nick_select').setAttribute('disabled', 'disabled');\n                    }\n\n                    if (!isProductTypeAvailable) {\n                        self.showCategoryWarning('category_is_not_accessible_message');\n                        $('product_data_nick_select').removeAttribute('disabled');\n                    }\n                }\n            };\n\n            AmazonTemplateDescriptionCategoryChooserObj.getCategoryInfoFromDictionaryBrowseNodeId(\n                M2ePro.formData.browsenode_id,\n                M2ePro.formData.category_path,\n                callback\n            );\n        },\n\n        // ---------------------------------------\n\n        showCategoryWarning: function(item)\n        {\n            var me = $(item);\n\n            var atLeastOneWarningShown = $$('#category_warning_messages .category-warning-item').any(function(obj) {\n                return $(obj).id != me.id && $(obj).visible();\n            });\n\n            if (atLeastOneWarningShown && me.previous('span.additional-br')) {\n                me.previous('span.additional-br').show();\n            }\n\n            $(item).show();\n            $('category_warning_messages').show();\n        },\n\n        hideCategoryWarning: function(item)\n        {\n            var me = $(item);\n            $(item).hide();\n\n            var atLeastOneWarningShown = $$('#category_warning_messages .category-warning-item').any(function(obj) {\n                return $(obj).visible();\n            });\n\n            if (me.previous('span.additional-br')) {\n                me.previous('span.additional-br').hide();\n            }\n\n            !atLeastOneWarningShown && $('category_warning_messages').hide();\n        },\n\n        // ---------------------------------------\n\n        updateCategoryPathSpan: function(path)\n        {\n            $('category_path_span').update(path);\n        },\n\n        resetCategoryPathSpan: function()\n        {\n            var span = $('category_path_span');\n            span.innerHTML = '<span style=\"color: grey; font-style: italic\">' + M2ePro.translator.translate('Not Selected') + '</span>';\n        },\n\n        resetRequiredAttributesForProductType: function()\n        {\n            this.resetManufacturerPartNumberRequired();\n            this.resetTargetAudienceRequired();\n            this.resetItemDimensionWeightRequired();\n            this.resetItemPackageQuantityRequired();\n            this.resetNumberOfItemsRequired();\n        },\n\n        updateRequiredAttributesForProductType: function()\n        {\n            this.updateManufacturerPartNumberRequired();\n            this.updateTargetAudienceRequired();\n            this.updateItemDimensionWeightRequired();\n            this.updateItemPackageQuantityRequired();\n            this.updateNumberOfItemsRequired();\n        },\n\n        updateWarningMessagesVisibility: function()\n        {\n            var self = AmazonTemplateDescriptionObj;\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/getVariationThemes'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    marketplace_id:     $('marketplace_id').value,\n                    product_data_nick: self.categoryProductDataNickHiddenInput.value\n                },\n                onSuccess: function(transport) {\n\n                    self.variationThemes = transport.responseText.evalJSON();\n\n                    _.isEmpty(self.variationThemes) ? self.showCategoryWarning('category_variation_warning_message')\n                        : self.hideCategoryWarning('category_variation_warning_message');\n                }\n            });\n        },\n\n        //########################################\n\n        resetManufacturerPartNumberRequired: function()\n        {\n            this.updateFieldRequirements($('manufacturer_part_number_mode'), 0);\n        },\n\n        resetItemDimensionWeightRequired: function()\n        {\n            var chooser = $('item_dimensions_weight_mode');\n            chooser.down('option').show(); // 'None' option\n        },\n\n        resetTargetAudienceRequired: function()\n        {\n            var targetAudienceChooser = $('target_audience_mode');\n            targetAudienceChooser.removeAttribute('disabled');\n\n            var hiddenInput = targetAudienceChooser.up('div.admin__field-control').down('input[type=\"hidden\"]');\n            hiddenInput && hiddenInput.remove();\n\n            AmazonTemplateDescriptionDefinitionObj.forceClearElements('target_audience');\n        },\n\n        resetItemPackageQuantityRequired: function()\n        {\n            var chooser = $('item_package_quantity_mode');\n\n            this.updateFieldRequirements(chooser, 0);\n            chooser.removeAttribute('required_attribute_for_new_asin');\n        },\n\n        resetNumberOfItemsRequired: function()\n        {\n            var chooser = $('number_of_items_mode');\n\n            this.updateFieldRequirements(chooser, 0);\n            chooser.removeAttribute('required_attribute_for_new_asin');\n        },\n\n        // ---------------------------------------\n\n        updateManufacturerPartNumberRequired: function()\n        {\n            if (!this.categoryInfo.required_attributes.hasOwnProperty('/DescriptionData/MfrPartNumber')) {\n                return;\n            }\n\n            this.updateFieldRequirements($('manufacturer_part_number_mode'), 1);\n        },\n\n        updateTargetAudienceRequired: function()\n        {\n            if (!this.categoryInfo.required_attributes.hasOwnProperty('/DescriptionData/TargetAudience')) {\n                return;\n            }\n\n            var targetAudienceChooser = $('target_audience_mode');\n\n            targetAudienceChooser.value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::TARGET_AUDIENCE_MODE_CUSTOM');\n            targetAudienceChooser.simulate('change');\n            targetAudienceChooser.setAttribute('disabled', 'disabled');\n\n            targetAudienceChooser.up('.admin__field').appendChild(new Element('input', {\n                name  : targetAudienceChooser.name,\n                type  : 'hidden',\n                value : M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::TARGET_AUDIENCE_MODE_CUSTOM')\n            }));\n\n            this.categoryInfo.required_attributes['/DescriptionData/TargetAudience'].each(function(value) {\n                AmazonTemplateDescriptionDefinitionObj.forceFillUpElement('target_audience', value);\n            });\n        },\n\n        updateItemDimensionWeightRequired: function()\n        {\n            if (!this.categoryInfo.required_attributes.hasOwnProperty('/DescriptionData/ItemDimensions/Weight')) {\n                return;\n            }\n\n            var chooser = $('item_dimensions_weight_mode');\n            chooser.down('option').hide(); // 'None' option\n            if (chooser.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::WEIGHT_MODE_NONE')) {\n                chooser.value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::WEIGHT_MODE_CUSTOM_VALUE');\n            }\n\n            chooser.simulate('change');\n        },\n\n        updateItemPackageQuantityRequired: function()\n        {\n            if (!this.categoryInfo.required_attributes.hasOwnProperty('/ItemPackageQuantity')) {\n                return;\n            }\n\n            var chooser = $('item_package_quantity_mode');\n\n            chooser.setAttribute('required_attribute_for_new_asin', 'true');\n\n            if (this.isNewAsinAccepted()) {\n                this.updateFieldRequirements(chooser, 1, 'M2ePro-required-when-visible');\n            }\n        },\n\n        updateNumberOfItemsRequired: function()\n        {\n            if (!this.categoryInfo.required_attributes.hasOwnProperty('/NumberOfItems')) {\n                return;\n            }\n\n            var chooser = $('number_of_items_mode');\n\n            chooser.setAttribute('required_attribute_for_new_asin', 'true');\n\n            if (this.isNewAsinAccepted()) {\n                this.updateFieldRequirements(chooser, 1, 'M2ePro-required-when-visible');\n            }\n        },\n\n        //########################################\n\n        updateAvailableProductTypes: function()\n        {\n            var self = AmazonTemplateDescriptionObj;\n\n            $('product_data_nick_tr').show();\n\n            var renderingCallback = function(transport) {\n\n                var response = transport.responseText.evalJSON();\n\n                if (!response) {\n                    return;\n                }\n\n                var html = '';\n\n                $H(response['grouped_data']).each(function(data) {\n\n                    var group            = data.key,\n                        productDataNicks = data.value;\n\n                    html += '<optgroup label=\"' + group + '\">';\n\n                    $H(productDataNicks).each(function(el) {\n                        html += '<option value=\"' + el.value.product_data_nick + '\">' + el.value.title + '</option>';\n                    });\n\n                    html += '</optgroup>';\n                });\n\n                var recommendedHtml = '';\n\n                if (self.categoryInfo.product_data_nicks.length > 0) {\n\n                    recommendedHtml += '<optgroup is_recommended=\"1\" label=\"' + M2ePro.translator.translate('Recommended') + '\">';\n\n                    self.categoryInfo.product_data_nicks.each(function(el){\n\n                        var title = typeof response['product_data'][el] != 'undefined' ? response['product_data'][el]['group'] + ' > ' + response['product_data'][el]['title']\n                            : el;\n\n                        recommendedHtml += '<option value=\"' + el + '\">' + title + '</option>';\n                    });\n\n                    recommendedHtml += '</optgroup>';\n                }\n\n                var recentHtml = '';\n\n                if (Object.keys(response['recent_data']).length > 0) {\n\n                    recentHtml += '<optgroup is_recent=\"1\" label=\"' + M2ePro.translator.translate('Recent') + '\">';\n\n                    $H(response['recent_data']).each(function(data) {\n\n                        var title = data.value['group'] + ' > ' + data.value['title'];\n                        recentHtml += '<option value=\"' + data.key + '\">' + title + '</option>';\n                    });\n\n                    recentHtml += '</optgroup>';\n                }\n\n                html = '<option style=\"display: none;\"></option>' + recommendedHtml + recentHtml + html;\n                $('product_data_nick_select').update(html);\n            };\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/getAvailableProductTypes'), {\n                method: 'post',\n                asynchronous: false,\n                parameters: {\n                    marketplace_id: $('marketplace_id').value,\n                    browsenode_id:  self.categoryNodeIdHiddenInput.value\n                },\n                onSuccess: function(transport) {\n\n                    self.productDataNicksInfo = transport.responseText.evalJSON()['product_data'];\n                    renderingCallback.call(self, transport);\n                }\n            });\n        },\n\n        isProductTypeAvailable: function(productType)\n        {\n            var result = false;\n\n            $H(this.productDataNicksInfo).each(function(el){\n\n                if (productType == el.key) {\n                    result = true;\n                    return true;\n                }\n            });\n\n            return result;\n        },\n\n        //########################################\n\n        updateSpanRequirements: function(element, dependence)\n        {\n            parseInt(dependence) ? element.up('.field').addClassName('_required')\n                : element.up('.field').removeClassName('_required');\n        },\n\n        updateFieldRequirements: function(element, dependence, className)\n        {\n            className = className || 'required-entry';\n\n            // ---------------------------------------\n            var firstOption = element.select('option').first();\n            if (firstOption.value == '0') {\n\n                firstOption.show();\n\n                var hiddenOpt = element.select('option.hidden-opt').first();\n                hiddenOpt && hiddenOpt.remove();\n\n                if (parseInt(dependence)) {\n\n                    firstOption.hide();\n\n                    element.appendChild(new Element('option', {\n                        style: 'display: none;',\n                        class: 'hidden-opt'\n                    }));\n                }\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            if (parseInt(dependence) && element.value == 0) {\n                element.value = '';\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            parseInt(dependence) ? element.addClassName(className)\n                : element.removeClassName(className);\n            // ---------------------------------------\n\n            element.simulate('change');\n            this.updateSpanRequirements(element, dependence);\n        },\n\n        // ---------------------------------------\n\n        getInterfaceCategoryPath: function(categoryInfo, withBrowseNodeId)\n        {\n            withBrowseNodeId = withBrowseNodeId || false;\n\n            var path = categoryInfo.path != null ? categoryInfo.path.replace(/>/g,' > ') + ' > ' + categoryInfo.title\n                : categoryInfo.title;\n\n            return !withBrowseNodeId ? path : path + ' ('+categoryInfo.browsenode_id+')';\n        },\n\n        // ---------------------------------------\n\n        goToGeneralTab: function()\n        {\n            jQuery('#amazonTemplateDescriptionEditTabs').tabs('option', 'active', 0);\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Template/Description/Definition.js":"define([\n    'M2ePro/Common'\n], function () {\n\n    window.AmazonTemplateDescriptionDefinition = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function() { },\n\n        initObservers: function()\n        {\n            $('title_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.title_mode_change)\n                .simulate('change');\n\n            $('brand_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.brand_mode_change)\n                .simulate('change');\n\n            $('manufacturer_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.manufacturer_mode_change)\n                .simulate('change');\n\n            $('manufacturer_part_number_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.manufacturer_part_number_mode_change)\n                .simulate('change');\n\n            // ---\n\n            $('item_package_quantity_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.onChangeItemPackageQuantityMode)\n                .simulate('change');\n\n            $('number_of_items_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.onChangeNumberOfItemsMode)\n                .simulate('change');\n\n            // ---\n\n            $('item_dimensions_volume_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.item_dimensions_volume_mode_change)\n                .simulate('change');\n\n            $('item_dimensions_volume_unit_of_measure_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.item_dimensions_volume_unit_of_measure_mode_change)\n                .simulate('change');\n\n            $('item_dimensions_weight_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.item_dimensions_weight_mode_change)\n                .simulate('change');\n\n            $('item_dimensions_weight_unit_of_measure_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.item_dimensions_weight_unit_of_measure_mode_change)\n                .simulate('change');\n\n            // ---\n\n            $('package_dimensions_volume_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.package_dimensions_volume_mode_change)\n                .simulate('change');\n\n            $('package_dimensions_volume_unit_of_measure_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.package_dimensions_volume_unit_of_measure_mode_change)\n                .simulate('change');\n\n            // ---\n\n            $('package_weight_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.package_weight_mode_change)\n                .simulate('change');\n\n            $('package_weight_unit_of_measure_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.package_weight_unit_of_measure_mode_change)\n                .simulate('change');\n\n            $('shipping_weight_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.shipping_weight_mode_change)\n                .simulate('change');\n\n            $('shipping_weight_unit_of_measure_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.shipping_weight_unit_of_measure_mode_change)\n                .simulate('change');\n\n            // ---\n\n            $('target_audience_mode')\n                .observe('change', function () {\n                    AmazonTemplateDescriptionDefinitionObj.multi_element_mode_change.call(this,'target_audience',4);\n                })\n                .simulate('change');\n\n            $('bullet_points_mode')\n                .observe('change', function () {\n                    AmazonTemplateDescriptionDefinitionObj.multi_element_mode_change.call(this,'bullet_points',5);\n                })\n                .simulate('change');\n\n            $('search_terms_mode')\n                .observe('change', function () {\n                    AmazonTemplateDescriptionDefinitionObj.multi_element_mode_change.call(this,'search_terms',5);\n                })\n                .simulate('change');\n\n            $('description_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.description_mode_change)\n                .simulate('change');\n\n            $('image_main_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.image_main_mode_change)\n                .simulate('change');\n\n            $('image_variation_difference_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.image_variation_difference_mode_change)\n                .simulate('change');\n\n            $('gallery_images_mode')\n                .observe('change', AmazonTemplateDescriptionDefinitionObj.gallery_images_mode_change)\n                .simulate('change');\n\n            AmazonTemplateDescriptionObj.onChangeNewAsinAccepted.bind($('new_asin_accepted'))();\n        },\n\n        // ---------------------------------------\n\n        title_mode_change: function()\n        {\n            var customTitle = $('custom_title_tr');\n            this.value == 1 ? customTitle.show() : customTitle.hide();\n        },\n\n        brand_mode_change: function()\n        {\n            var customAttribute = $('brand_custom_attribute'),\n                customValueTr   = $('brand_custom_value_tr');\n\n            customValueTr.hide();\n\n            customAttribute.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::BRAND_MODE_CUSTOM_VALUE')) {\n                customValueTr.show();\n            }\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::BRAND_MODE_CUSTOM_ATTRIBUTE')) {\n                AmazonTemplateDescriptionDefinitionObj.updateHiddenValue(this, customAttribute);\n            }\n        },\n\n        manufacturer_mode_change: function()\n        {\n            var customAttribute = $('manufacturer_custom_attribute'),\n                customValueTr   = $('manufacturer_custom_value_tr');\n\n            customValueTr.hide();\n\n            customAttribute.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::MANUFACTURER_MODE_CUSTOM_VALUE')) {\n                customValueTr.show();\n            }\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::MANUFACTURER_MODE_CUSTOM_ATTRIBUTE')) {\n                AmazonTemplateDescriptionDefinitionObj.updateHiddenValue(this, customAttribute);\n            }\n        },\n\n        manufacturer_part_number_mode_change: function()\n        {\n            var customAttribute = $('manufacturer_part_number_custom_attribute'),\n                customValueTr   = $('manufacturer_part_number_custom_value_tr');\n\n            customValueTr.hide();\n\n            customAttribute.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::MANUFACTURER_PART_NUMBER_MODE_CUSTOM_VALUE')) {\n                customValueTr.show();\n            }\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::MANUFACTURER_PART_NUMBER_MODE_CUSTOM_ATTRIBUTE')) {\n                AmazonTemplateDescriptionDefinitionObj.updateHiddenValue(this, customAttribute);\n            }\n        },\n\n        onChangeItemPackageQuantityMode: function()\n        {\n            var targetCustomValue     = $('item_package_quantity_custom_value_tr'),\n                targetCustomAttribute = $('item_package_quantity_custom_attribute');\n\n            targetCustomValue.hide();\n\n            targetCustomAttribute.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::ITEM_PACKAGE_QUANTITY_MODE_CUSTOM_VALUE')) {\n                targetCustomValue.show();\n            }\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::ITEM_PACKAGE_QUANTITY_MODE_CUSTOM_ATTRIBUTE')) {\n                AmazonTemplateDescriptionObj.updateHiddenValue(this, targetCustomAttribute);\n            }\n        },\n\n        onChangeNumberOfItemsMode: function()\n        {\n            var targetCustomValue     = $('number_of_items_custom_value_tr'),\n                targetCustomAttribute = $('number_of_items_custom_attribute');\n\n            targetCustomValue.hide();\n\n            targetCustomAttribute.value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::NUMBER_OF_ITEMS_MODE_CUSTOM_VALUE')) {\n                targetCustomValue.show();\n            }\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::NUMBER_OF_ITEMS_MODE_CUSTOM_ATTRIBUTE')) {\n                AmazonTemplateDescriptionObj.updateHiddenValue(this, targetCustomAttribute);\n            }\n        },\n\n        // ---------------------------------------\n\n        volumeModeChange: function(customValueTr, customAttributeTr, weightUnitTr, weightUnitMode, value)\n        {\n            customValueTr.hide();\n            customAttributeTr.hide();\n            weightUnitTr.hide();\n\n            if (value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::DIMENSION_VOLUME_MODE_NONE')) {\n                weightUnitMode.value = '';\n            }\n\n            if (value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::DIMENSION_VOLUME_MODE_CUSTOM_VALUE')) {\n                customValueTr.show();\n                weightUnitTr.show();\n            }\n\n            if (value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::DIMENSION_VOLUME_MODE_CUSTOM_ATTRIBUTE')) {\n                customAttributeTr.show();\n                weightUnitTr.show();\n            }\n\n            weightUnitMode.simulate('change');\n        },\n\n        weightModeChange: function(customValueTr, customAttribute, weightUnitTr, weightUnitMode, value)\n        {\n            customValueTr.hide();\n            weightUnitTr.hide();\n\n            customAttribute.value = '';\n            if (value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::DIMENSION_VOLUME_MODE_NONE')) {\n                weightUnitMode.value = '';\n            }\n\n            if (value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::DIMENSION_VOLUME_MODE_CUSTOM_VALUE')) {\n                customValueTr.show();\n                weightUnitTr.show();\n            }\n\n            if (value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::DIMENSION_VOLUME_MODE_CUSTOM_ATTRIBUTE')) {\n                AmazonTemplateDescriptionDefinitionObj.updateHiddenValue(this, customAttribute);\n                weightUnitTr.show();\n            }\n\n            weightUnitMode.simulate('change');\n        },\n\n        weightUnitOfMeasureChangeAll: function(customValue, customAttribute, value)\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n\n            customValue.value = '';\n            customAttribute.value = '';\n            if (value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::WEIGHT_UNIT_OF_MEASURE_MODE_CUSTOM_VALUE')) {\n                self.updateHiddenValue(this, customValue);\n            }\n\n            if (value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::WEIGHT_UNIT_OF_MEASURE_MODE_CUSTOM_ATTRIBUTE')) {\n                self.updateHiddenValue(this, customAttribute);\n            }\n        },\n\n        // ---------------------------------------\n\n        item_dimensions_volume_mode_change: function()\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n\n            self.volumeModeChange(\n                $('item_dimensions_volume_custom_value_tr'), $('item_dimensions_volume_custom_attribute_tr'),\n                $('item_dimensions_volume_unit_of_measure_mode_tr'), $('item_dimensions_volume_unit_of_measure_mode'),\n                this.value\n            );\n        },\n\n        item_dimensions_volume_unit_of_measure_mode_change: function()\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n            self.weightUnitOfMeasureChangeAll.call(\n                this,\n                $('item_dimensions_volume_unit_of_measure_custom_value'),\n                $('item_dimensions_volume_unit_of_measure_custom_attribute'),\n                this.value\n            );\n        },\n\n        item_dimensions_weight_mode_change: function()\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n            self.weightModeChange.call(\n                this,\n                $('item_dimensions_weight_custom_value_tr'),\n                $('item_dimensions_weight_custom_attribute'),\n                $('item_dimensions_weight_unit_of_measure_mode_tr'),\n                $('item_dimensions_weight_unit_of_measure_mode'),\n                this.value\n            );\n        },\n\n        item_dimensions_weight_unit_of_measure_mode_change: function()\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n            self.weightUnitOfMeasureChangeAll.call(\n                this,\n                $('item_dimensions_weight_unit_of_measure_custom_value'),\n                $('item_dimensions_weight_unit_of_measure_custom_attribute'),\n                this.value\n            );\n        },\n\n        // ---------------------------------------\n\n        package_dimensions_volume_mode_change: function()\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n\n            self.volumeModeChange(\n                $('package_dimensions_volume_custom_value_tr'), $('package_dimensions_volume_custom_attribute_tr'),\n                $('package_dimensions_volume_unit_of_measure_mode_tr'), $('package_dimensions_volume_unit_of_measure_mode'),\n                this.value\n            );\n        },\n\n        package_dimensions_volume_unit_of_measure_mode_change: function()\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n\n            self.weightUnitOfMeasureChangeAll.call(\n                this,\n                $('package_dimensions_volume_unit_of_measure_custom_value'),\n                $('package_dimensions_volume_unit_of_measure_custom_attribute'),\n                this.value\n            );\n        },\n\n        // ---------------------------------------\n\n        package_weight_mode_change: function()\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n\n            self.weightModeChange.call(\n                this,\n                $('package_weight_custom_value_tr'),\n                $('package_weight_custom_attribute'),\n                $('package_weight_unit_of_measure_mode_tr'),\n                $('package_weight_unit_of_measure_mode'),\n                this.value\n            );\n        },\n\n        package_weight_unit_of_measure_mode_change: function()\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n\n            self.weightUnitOfMeasureChangeAll.call(\n                this,\n                $('package_weight_unit_of_measure_custom_value'),\n                $('package_weight_unit_of_measure_custom_attribute'),\n                this.value\n            );\n        },\n\n        shipping_weight_mode_change: function()\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n\n            self.weightModeChange.call(\n                this,\n                $('shipping_weight_custom_value_tr'),\n                $('shipping_weight_custom_attribute'),\n                $('shipping_weight_unit_of_measure_mode_tr'),\n                $('shipping_weight_unit_of_measure_mode'),\n                this.value\n            );\n        },\n\n        shipping_weight_unit_of_measure_mode_change: function()\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n\n            self.weightUnitOfMeasureChangeAll.call(\n                this,\n                $('shipping_weight_unit_of_measure_custom_value'),\n                $('shipping_weight_unit_of_measure_custom_attribute'),\n                this.value\n            );\n        },\n\n        // ---------------------------------------\n\n        multi_element_mode_change: function(type, max)\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::' + type.toUpperCase() + '_MODE_NONE')) {\n\n                $$('.' + type + '_tr').invoke('hide');\n                $$('input[name^=\"definition[' + type + ']\"]').each(function(obj) {\n                    obj.value = '';\n                });\n                $(type + '_actions_tr').hide();\n\n            } else {\n\n                var visibleElementsCounter = 0,\n                    emptyVisibleElements   = 0;\n\n                $$('.' + type + '_tr').each(function(obj) {\n                    if (visibleElementsCounter == 0 || $(obj).select('input[name^=\"definition[' + type + ']\"]')[0].value != '') {\n                        $(obj).show();\n                        visibleElementsCounter++;\n                    }\n                });\n\n                $(type + '_actions_tr').show();\n\n                if (visibleElementsCounter > 1) {\n                    $('hide_' + type + '_action').removeClassName('action-disabled');\n                }\n\n                visibleElementsCounter < max ? $('show_' + type + '_action').removeClassName('action-disabled')\n                    : $('show_' + type + '_action').addClassName('action-disabled');\n\n                if (visibleElementsCounter == 1 && $(type + '_0').value == '') {\n                    $('show_' + type + '_action').addClassName('action-disabled');\n                }\n            }\n        },\n\n        multi_element_keyup: function(type,element)\n        {\n            if (!element.value) {\n                return $('show_' + type + '_action').addClassName('action-disabled');\n            }\n\n            var hiddenElements = $$('.' + type + '_tr').findAll(function(obj) {\n                return !$(obj).visible();\n            });\n\n            if (hiddenElements.size() != 0) {\n                $('show_' + type + '_action').removeClassName('action-disabled');\n            }\n        },\n\n        description_mode_change: function()\n        {\n            this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::DESCRIPTION_MODE_CUSTOM')\n                ? $$('.c-custom_description_tr').invoke('show')\n                : $$('.c-custom_description_tr').invoke('hide');\n        },\n\n        image_main_mode_change: function()\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::IMAGE_MAIN_MODE_NONE')) {\n                $('gallery_images_mode_tr').hide();\n                $('gallery_images_mode').value = 0;\n                $('gallery_images_mode').simulate('change');\n            } else {\n                $('gallery_images_mode_tr').show();\n            }\n\n            $('image_main_attribute').value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::IMAGE_MAIN_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('image_main_attribute'));\n            }\n        },\n\n        image_variation_difference_mode_change: function()\n        {\n            var self = AmazonTemplateDescriptionDefinitionObj;\n\n            $('image_variation_difference_attribute').value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::IMAGE_VARIATION_DIFFERENCE_MODE_ATTRIBUTE')) {\n                self.updateHiddenValue(this, $('image_variation_difference_attribute'));\n            }\n        },\n\n        gallery_images_mode_change: function()\n        {\n            $('gallery_images_limit').value = '';\n            $('gallery_images_attribute').value = '';\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::GALLERY_IMAGES_MODE_PRODUCT')) {\n                AmazonTemplateDescriptionDefinitionObj.updateHiddenValue(this, $('gallery_images_limit'));\n            }\n\n            if (this.value == M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::GALLERY_IMAGES_MODE_ATTRIBUTE')) {\n                AmazonTemplateDescriptionDefinitionObj.updateHiddenValue(this, $('gallery_images_attribute'));\n            }\n        },\n\n        // ---------------------------------------\n\n        showElement: function(type)\n        {\n            var emptyVisibleElementsExist = $$('.' + type + '_tr').any(function(obj) {\n                return $(obj).visible() && $(obj).select('input[name^=\"definition[' + type + ']\"]')[0].value == '';\n            });\n\n            if (emptyVisibleElementsExist) {\n                return;\n            }\n\n            var hiddenElements = $$('.' + type + '_tr').findAll(function(obj) {\n                return !$(obj).visible();\n            });\n\n            if (hiddenElements.size() == 0) {\n                return;\n            }\n\n            hiddenElements.shift().show();\n\n            $('hide_' + type + '_action').removeClassName('action-disabled');\n            $('show_' + type + '_action').addClassName('action-disabled');\n        },\n\n        hideElement: function(type, force)\n        {\n            force = force || false;\n\n            var visibleElements = [];\n            $$('.' + type + '_tr').each(function(el) {\n                if(el.visible()) visibleElements.push(el);\n            });\n\n            if (visibleElements.length <= 0 || (!force && visibleElements[visibleElements.length - 1].getAttribute('undeletable'))) {\n                return;\n            }\n\n            if (visibleElements.length == 1) {\n                var elementMode = $(type + '_mode');\n                elementMode.value = M2ePro.php.constant('\\\\Ess\\\\M2ePro\\\\Model\\\\Amazon\\\\Template\\\\Description\\\\Definition::' + type.toUpperCase() + '_MODE_NONE');\n                elementMode.simulate('change');\n            }\n\n            if (visibleElements.size() > 1) {\n\n                var lastVisibleElement = visibleElements.pop();\n                lastVisibleElement.select('input[name^=\"definition[' + type + ']\"]')[0].value = '';\n                lastVisibleElement.hide();\n\n                var nextVisibleElement = visibleElements.pop();\n                if(!force && nextVisibleElement.getAttribute('undeletable')) {\n                    $('hide_' + type + '_action').addClassName('action-disabled');\n                }\n            }\n\n            $('show_' + type + '_action').removeClassName('action-disabled');\n        },\n\n        forceFillUpElement: function(type, value)\n        {\n            // check if already rendered. render if need.\n            var neededTr = null;\n            $$('.' + type + '_tr').each(function(obj) {\n                if ($(obj).visible() && $(obj).select('input[name^=\"definition[' + type + ']\"]')[0].value == value) {\n                    neededTr = obj;\n                    return false;\n                }\n            });\n\n            if (!neededTr) {\n\n                this.showElement(type);\n\n                var emptyVisibleTrs = $$('.' + type + '_tr').findAll(function(obj) {\n                    return $(obj).visible() && $(obj).select('input[name^=\"definition[' + type + ']\"]')[0].value == '';\n                });\n\n                neededTr = emptyVisibleTrs.pop();\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            var input = neededTr.down('input[type=\"text\"]');\n\n            input.setAttribute('disabled', 'disabled');\n            input.value = value;\n\n            neededTr.down('.admin__field').appendChild(new Element('input', {\n                name  : input.name,\n                type  : 'hidden',\n                value : value\n            }));\n\n            neededTr.setAttribute('undeletable', '1');\n            neededTr.down('.attributes-container-td').hide();\n            // ---------------------------------------\n\n            $('hide_' + type + '_action').addClassName('action-disabled');\n            this.multi_element_keyup(type, {value:' '});\n        },\n\n        forceClearElements: function(type)\n        {\n            var self = this;\n\n            var visibleTrs = $$('.' + type + '_tr').findAll(function(obj) {\n                return $(obj).visible();\n            });\n\n            visibleTrs.each(function(el) {\n\n                el.removeAttribute('undeletable');\n                el.down('input[type=\"text\"]').removeAttribute('disabled');\n                el.down('.attributes-container-td').show();\n\n                var hiddenInput = el.down('input[type=\"hidden\"]');\n                hiddenInput && hiddenInput.remove();\n\n                self.hideElement(type, true);\n            });\n\n            $('hide_' + type + '_action').removeClassName('action-disabled');\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Template/Description/Category/Specific.js":"define([\n    'jquery',\n    'M2ePro/Common'\n], function (jQuery) {\n\n    window.AmazonTemplateDescriptionCategorySpecific = Class.create(Common, {\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            var self = this;\n\n            self.dictionaryHelper = new AmazonTemplateDescriptionCategorySpecificDictionary();\n\n            self.specificsContainer   = $('specifics_container');\n            self.specificsHiddenInput = $('encoded_specifics_data');\n\n            // ---------------------------------------\n\n            self.categoryInfo    = null;\n            self.productDataNick = null;\n\n            self.formDataSpecifics = [];\n            self.selectedSpecifics = {};\n            self.renderedSpecifics = [];\n\n            self.themeAttributes  = [];\n\n            // ---------------------------------------\n\n            self.initValidation();\n        },\n\n        initValidation: function()\n        {\n            var self = this;\n\n            jQuery.validator.addMethod('M2ePro-specifics-validation', function(value, element) {\n\n                if (!element.visible()) {\n                    return true;\n                }\n\n                var params = self.dictionaryHelper.dictionarySpecifics[element.getAttribute('specific_id')].params;\n\n                if (params.type == 'int') return self.intTypeValidator(value, params, element);\n                if (params.type == 'float') return self.floatTypeValidator(value, params, element);\n                if (params.type == 'string') return self.stringTypeValidator(value, params, element);\n                if (params.type == 'date_time') return self.dateTimeTypeValidator(value, params, element);\n\n                return true;\n            }, M2ePro.translator.translate('The value is incorrect.'));\n\n            jQuery.validator.addMethod('M2ePro-specificAttributes-validation', function(value, element) {\n\n                if (!element.visible()) {\n                    return true;\n                }\n\n                var specific = self.dictionaryHelper.dictionarySpecifics[element.getAttribute('specific_id')];\n                var params   = specific.params.attributes[element.getAttribute('attribute_index')];\n\n                if (params.type == 'int') return self.intTypeValidator(value, params, element);\n                if (params.type == 'float') return self.floatTypeValidator(value, params, element);\n                if (params.type == 'string') return self.stringTypeValidator(value, params, element);\n                if (params.type == 'date_time') return self.dateTimeTypeValidator(value, params, element);\n\n                return true;\n            }, M2ePro.translator.translate('The value is incorrect.'));\n        },\n\n        intTypeValidator: function(value, params, element) {\n\n            value = value.replace(',', '.');\n\n            if (isNaN(parseInt(value)) || substr_count(value, '.') > 0) {\n                return false;\n            }\n\n            var validators = {\n                'min_value': function(value, restriction) {\n                    return parseInt(value) >= parseInt(restriction);\n                },\n                'max_value': function(value, restriction) {\n                    return parseInt(value) <= parseInt(restriction);\n                },\n                'total_digits': function(value, restriction) {\n                    return value.length <= parseInt(restriction);\n                }\n            };\n\n            for (var paramName in params) {\n                if (params.hasOwnProperty(paramName) && validators[paramName]) {\n                    if (!validators[paramName](value, params[paramName])) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        },\n\n        floatTypeValidator: function(value, params, element) {\n\n            value = value.replace(',', '.');\n\n            if (isNaN(parseFloat(value)) || substr_count(value, '.') > 1 || value.substr(-1) == '.') {\n                return false;\n            }\n\n            var validators = {\n                'min_value': function(value, restriction) {\n                    return parseFloat(value) >= parseFloat(restriction);\n                },\n                'max_value': function(value, restriction) {\n                    return parseFloat(value) <= parseFloat(restriction);\n                },\n                'total_digits': function(value, restriction) {\n                    return value.replace('.', '').length <= restriction;\n                },\n                'decimal_places': function(value, restriction) {\n                    return value.indexOf('.') != -1 ? (value.replace(/\\d*\\./,'').length <= restriction.value) : true;\n                }\n            };\n\n            for (var paramName in params) {\n                if (params.hasOwnProperty(paramName) && validators[paramName]) {\n                    if (!validators[paramName](value, params[paramName])) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        },\n\n        dateTimeTypeValidator: function(value, params, element) {\n            return /^\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}$/g.test(value);\n        },\n\n        stringTypeValidator: function(value, params, element) {\n\n            var validators = {\n                'min_length': function(value, restriction) {\n                    return value.length >= parseInt(restriction);\n                },\n                'max_length': function(value, restriction) {\n                    return value.length <= parseInt(restriction);\n                },\n                'pattern': function(value, restriction) {\n                    return value.match(new RegExp('^' + restriction + '$'));\n                }\n            };\n\n            for (var paramName in params) {\n                if (params.hasOwnProperty(paramName) && validators[paramName]) {\n                    if (!validators[paramName](value, params[paramName])) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        },\n\n        // ---------------------------------------\n\n        setFormDataSpecifics: function(values)\n        {\n            this.formDataSpecifics = values;\n        },\n\n        resetFormDataSpecifics: function()\n        {\n            this.formDataSpecifics = [];\n        },\n\n        //########################################\n\n        run: function(categoryInfo, productDataNick)\n        {\n            this.specificsContainer.update();\n\n            this.categoryInfo    = categoryInfo;\n            this.productDataNick = productDataNick;\n\n            this.initThemeAttributes();\n            this.initSpecifics();\n        },\n\n        reset: function()\n        {\n            this.categoryInfo    = null;\n            this.productDataNick = null;\n\n            this.selectedSpecifics = {};\n            this.renderedSpecifics = [];\n\n            this.themeAttributes = {};\n\n            this.specificsContainer.update();\n        },\n\n        isReady: function()\n        {\n            return this.categoryInfo != null && this.productDataNick != null;\n        },\n\n        //########################################\n\n        initThemeAttributes: function()\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/getVariationThemeAttributes'), {\n                method: 'get',\n                asynchronous: false,\n                parameters: {\n                    marketplace_id:    $('marketplace_id').value,\n                    product_data_nick: self.productDataNick\n                },\n                onSuccess: function(transport) {\n                    self.themeAttributes = transport.responseText.evalJSON();\n                }\n            });\n        },\n\n        initSpecifics: function()\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/getAllSpecifics'), {\n                method: 'get',\n                asynchronous: true,\n                parameters: {\n                    marketplace_id:     $('marketplace_id').value,\n                    product_data_nick:  self.productDataNick\n                },\n                onSuccess: function(transport) {\n                    try {\n                        self.dictionaryHelper.setDictionarySpecifics(transport.responseText.evalJSON());\n\n                        self.renderRootContainer();\n                        self.renderRequiredSpecifics();\n                        self.renderSpecifics(self.formDataSpecifics);\n\n                    } catch (e) {\n                        console.log(e.message);\n                        console.log(e.stack);\n                        self.alert(e.name + ': ' + e.message);\n                    }\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        renderRootContainer: function()\n        {\n            var specifics = this.dictionaryHelper.getChildSpecifics({'parent_specific_id': null});\n\n            if (specifics.length <= 0) {\n                return;\n            }\n\n            this.renderSpecific(specifics[0].xpath +'-1');\n        },\n\n        renderRequiredSpecifics: function()\n        {\n            var self      = this,\n                specifics = [];\n\n            if (this.categoryInfo.required_attributes.length <= 0) {\n                return;\n            }\n\n            $H(this.categoryInfo.required_attributes).each(function(spInfo) {\n\n                var xpath = spInfo.key;\n\n                if (!xpath.match('/ProductData')) {\n                    return false;\n                }\n\n                xpath = xpath.replace(/^\\/ProductData\\//, '').split('/');\n                xpath = '/' + xpath.join('-1/');\n\n                if (spInfo.value.length <= 0) {\n                    specifics.push({xpath: xpath + '-1', value: ''});\n                }\n\n                spInfo.value.each(function(spValue, index) {\n                    specifics.push({xpath: xpath + '-' + (index + 1), value: spValue});\n                });\n            });\n\n            specifics.each(function(sp) {\n                self.renderSpecific(sp.xpath, {force_value: sp.value});\n            });\n        },\n\n        // ---------------------------------------\n\n        renderSpecifics: function(specifics)\n        {\n            var self = this;\n\n            if (specifics <= 0) {\n                return '';\n            }\n\n            specifics.sort(function(spA, spB) {\n                return spA.xpath == spB.xpath ? 0 : (spA.xpath > spB.xpath) ? 1 : -1;\n            });\n\n            specifics.each(function(specific) {\n                self.renderSpecific(specific.xpath);\n            });\n        },\n\n        renderSpecific: function(indexedXpath, params)\n        {\n            params = params || {};\n            var renderer = null;\n\n            var dictionarySpecific = this.dictionaryHelper.getDictionarySpecific(indexedXpath);\n            if (!dictionarySpecific) {\n                console.log('Specific not found in dictionary. ' + indexedXpath);\n                return;\n            }\n\n            if (this.dictionaryHelper.isSpecificTypeContainer(dictionarySpecific)) {\n                renderer = new AmazonTemplateDescriptionCategorySpecificBlockRenderer();\n            }\n\n            if (this.dictionaryHelper.isSpecificTypeSelect(dictionarySpecific) ||\n                this.dictionaryHelper.isSpecificTypeText(dictionarySpecific)) {\n                renderer = new AmazonTemplateDescriptionCategorySpecificGridRowRenderer();\n            }\n\n            try {\n                renderer.setSpecificsHandler(this);\n                renderer.setIndexedXpath(indexedXpath);\n                renderer.setParams(params);\n\n                renderer.process();\n            } catch (e) {\n                console.log(e.message);\n                console.log(e.stack);\n                this.alert(e.name + ' ' + e.message);\n            }\n        },\n\n        //########################################\n\n        isSpecificRendered: function(xPathWithIndex)\n        {\n            return (this.renderedSpecifics.indexOf(xPathWithIndex) >= 0);\n        },\n\n        markSpecificAsRendered: function(xPathWithIndex)\n        {\n            this.renderedSpecifics.push(xPathWithIndex);\n        },\n\n        unMarkSpecificAsRendered: function(xPathWithIndex)\n        {\n            var regexpObj = new RegExp('^' + xPathWithIndex);\n\n            for (var i = 0; i < this.renderedSpecifics.length; i++) {\n\n                if (this.renderedSpecifics[i].match(regexpObj)) {\n                    this.renderedSpecifics.splice(i, 1);\n                    i--;\n                }\n            }\n        },\n\n        getRealXpathesOfRenderedSpecifics: function()\n        {\n            var realRenderedXpathes = [];\n            this.renderedSpecifics.each(function(sp) {\n\n                var realPath = sp.replace(/\\-\\d*/g, '');\n                if (realRenderedXpathes.indexOf(realPath) >= 0) {\n                    return true;\n                }\n\n                realRenderedXpathes.push(realPath);\n            });\n\n            return realRenderedXpathes;\n        },\n\n        getXpathesOfTheSameRenderedSpecific: function(xPathWithIndex)\n        {\n            var xpathes = [];\n\n            var tempXpath = xPathWithIndex.replace(/-\\d+$/,'');\n            this.renderedSpecifics.each(function(xPath) {\n\n                if (tempXpath == xPath.replace(/-\\d+$/, '')) {\n                    xpathes.push(xPath);\n                }\n            });\n\n            return xpathes;\n        },\n\n        getLatestXpathFromTheSame: function(xPathWithIndex)\n        {\n            var latestIndex = 0;\n\n            this.getXpathesOfTheSameRenderedSpecific(xPathWithIndex).each(function(xpath) {\n                var index = parseInt(xpath.replace(/^.*-/, ''));\n                if (index > latestIndex) {\n                    latestIndex = index;\n                }\n            });\n\n            return xPathWithIndex.replace(/\\d+$/, '') + latestIndex;\n        },\n\n        // ---------------------------------------\n\n        markSpecificAsSelected: function(xPathWithIndex, data)\n        {\n            var self = this;\n\n            if (!this.selectedSpecifics.hasOwnProperty(xPathWithIndex)) {\n                this.selectedSpecifics[xPathWithIndex] = data;\n                return '';\n            }\n\n            $H(data).each(function(dataItem) {\n                self.selectedSpecifics[xPathWithIndex][dataItem.key] = dataItem.value;\n            });\n        },\n\n        unMarkSpecificAsSelected: function(xPathWithIndex)\n        {\n            var self = this;\n            var regexpObj = new RegExp('^' + xPathWithIndex);\n\n            // for removing all child specifics\n            $H(this.selectedSpecifics).each(function(el) {\n\n                var specificKey = el.key;\n                if (specificKey.match(regexpObj)) delete self.selectedSpecifics[specificKey];\n            });\n        },\n\n        isMarkedAsSelected: function(xPathWithIndex)\n        {\n            return this.selectedSpecifics.hasOwnProperty(xPathWithIndex);\n        },\n\n        getSelectionInfo: function(xPathWithIndex)\n        {\n            if (this.isMarkedAsSelected(xPathWithIndex)) {\n                return this.selectedSpecifics[xPathWithIndex];\n            }\n\n            return this.isInFormData(xPathWithIndex);\n        },\n\n        isInFormData: function(xPathWithIndex)\n        {\n            var searchResult = false;\n            this.formDataSpecifics.each(function(el) {\n\n                if (el.xpath == xPathWithIndex) {\n                    searchResult = el;\n                    return false;\n                }\n            });\n\n            return searchResult;\n        },\n\n        // ---------------------------------------\n\n        prepareSpecificsDataToPost: function()\n        {\n            this.specificsHiddenInput.value = Object.toJSON(this.selectedSpecifics);\n        },\n\n        //########################################\n\n        canSpecificBeOverwrittenByVariationTheme: function(specific)\n        {\n            return typeof this.themeAttributes[specific.xml_tag] != 'undefined' &&\n                this.themeAttributes[specific.xml_tag].length > 0;\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Template/Description/Category/Chooser.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Common'\n], function (jQuery, modal) {\n\n    window.AmazonTemplateDescriptionCategoryChooser = Class.create(Common, {\n\n        // ---------------------------------------\n\n        specificHandler: null,\n\n        selectedCategoryIdBefore     : null,\n        selectedCategoryId           : null,\n        preloadedSelectedCategoryObj : null,\n\n        variationThemes: {},\n\n        // ---------------------------------------\n\n        initialize: function()\n        {\n            this.categoryNodeIdHiddenInput = $('browsenode_id');\n            this.categoryPathHiddenInput   = $('category_path');\n        },\n\n        // ---------------------------------------\n\n        setSpecificHandler: function(object)\n        {\n            this.specificHandler = object;\n        },\n\n        // ---------------------------------------\n\n        showEditCategoryPopUp: function()\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/getCategoryChooserHtml'), {\n                method: 'post',\n                parameters: {\n                    marketplace_id: $('marketplace_id').value,\n                    browsenode_id:  self.categoryNodeIdHiddenInput.value,\n                    category_path:  self.categoryPathHiddenInput.value\n                },\n                onSuccess: function(transport) {\n\n                    if (typeof self.popUp != 'undefined') {\n                        self.popUp.modal('closeModal');\n                    }\n\n                    var html = transport.responseText;\n                    var callback = function(transport) {\n\n                        var categoryInfo = transport.responseText.evalJSON();\n\n                        self.selectedCategoryId           = null;\n                        self.selectedCategoryIdBefore     = null;\n                        self.preloadedSelectedCategoryObj = null;\n\n                        if (typeof categoryInfo.category_id != 'undefined') {\n\n                            self.selectedCategoryId           = categoryInfo.category_id;\n                            self.selectedCategoryIdBefore     = categoryInfo.category_id;\n                            self.preloadedSelectedCategoryObj = categoryInfo;\n                        }\n                    };\n\n                    self.openPopUp(html);\n\n                    if (self.categoryNodeIdHiddenInput.value && self.categoryPathHiddenInput.value) {\n                        self.getCategoryInfoFromDictionaryBrowseNodeId(self.categoryNodeIdHiddenInput.value,\n                            self.categoryPathHiddenInput.value,\n                            callback);\n                    }\n                }\n            });\n        },\n\n        openPopUp: function(html)\n        {\n            var self = this,\n                modalDialogMessage = $('modal_dialog_message');\n\n            if (self.popUp) {\n                self.popUp.modal('openModal');\n                modalDialogMessage.innerHTML = '';\n                modalDialogMessage.insert(html);\n                modalDialogMessage.innerHTML.evalScripts();\n                AmazonTemplateDescriptionCategoryChooserObj.renderTopLevelCategories('chooser_browser');\n                return;\n            }\n\n            modalDialogMessage = new Element('div', {\n                id: 'modal_dialog_message'\n            });\n            modalDialogMessage.insert(html);\n            modalDialogMessage.innerHTML.evalScripts();\n\n            self.popUp = jQuery(modalDialogMessage).modal({\n                title: M2ePro.translator.translate('Change Category'),\n                type: 'slide',\n                buttons: [{\n                    text: M2ePro.translator.translate('Cancel'),\n                    //class: 'action-primary',\n                    click: function () {\n                        this.closeModal();\n                    }\n                },{\n                    text: M2ePro.translator.translate('Confirm'),\n                    class: 'action-primary',\n                    id: 'save_popup_button',\n                    click: function () {\n                        this.closeModal();\n                        AmazonTemplateDescriptionCategoryChooserObj.confirmCategory();\n                    }\n                }]\n            });\n            self.popUp.modal('openModal');\n        },\n\n        cancelPopUp: function()\n        {\n            var self = this;\n            self.popUp.modal('closeModal');\n        },\n\n        // ---------------------------------------\n\n        renderTopLevelCategories: function(containerId)\n        {\n            this.prepareDomStructure(null, $(containerId));\n            this.renderChildCategories(null);\n        },\n\n        renderChildCategories: function(parentCategoryId)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/getChildCategories'), {\n                method: 'post',\n                parameters: {\n                    marketplace_id     : $('marketplace_id').value,\n                    parent_category_id : parentCategoryId\n                },\n                onSuccess: function(transport) {\n\n                    if (transport.responseText.length <= 2) {\n                        return;\n                    }\n\n                    var categories = transport.responseText.evalJSON();\n                    self.tempCategories = categories;\n\n                    var selectEl = $(self.getCategoriesSelectElementId(parentCategoryId));\n\n                    categories.each(function(category) {\n\n                        var option = new Element('option', {value: category.category_id});\n                        option.observe('click', function() {\n                            self.browseClickCategory.call(self, selectEl, category.category_id);\n                        });\n\n                        var arrowString = category.is_leaf == 0 ? ' > ' : '';\n                        selectEl.appendChild(option).update(category.title + arrowString);\n                    });\n\n                    selectEl.style.display = 'inline-block';\n                    $('chooser_browser').scrollLeft = $('chooser_browser').scrollWidth;\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        browseClickCategory: function(selectObj, categoryId)\n        {\n            var callback = function(transport) {\n\n                var categoryInfo = transport.responseText.evalJSON();\n\n                if (categoryInfo.is_leaf == 1) {\n\n                    this.selectedCategoryId           = categoryInfo.category_id;\n                    this.preloadedSelectedCategoryObj = categoryInfo;\n\n                    this.updateCurrentlySelectedCategorySpan(categoryInfo);\n                }\n\n                var parentCategoryId = selectObj.id.replace(this.getCategoriesSelectElementId(''), '');\n                var parentDiv = $(this.getCategoryChildrenElementId(parentCategoryId));\n                parentDiv.innerHTML = '';\n\n                this.prepareDomStructure(categoryId, parentDiv);\n                this.renderChildCategories(categoryId);\n            };\n\n            this.getCategoryInfoFromDictionaryByCategoryId(categoryId, callback);\n        },\n\n        prepareDomStructure: function(categoryId, parentDiv)\n        {\n            var childrenSelect = new Element('select', {\n                id: this.getCategoriesSelectElementId(categoryId),\n                style: 'min-width: 200px; max-height: none; display: none;',\n                size: '10',\n                class: 'multiselect admin__control-multiselect'\n            });\n            parentDiv.appendChild(childrenSelect);\n\n            var childrenDiv = new Element('div', {\n                id    : this.getCategoryChildrenElementId(categoryId),\n                class : 'category-children-block'\n            });\n            parentDiv.appendChild(childrenDiv);\n        },\n\n        getCategoriesSelectElementId: function(categoryId)\n        {\n            if (categoryId === null) categoryId = 0;\n            return 'category_chooser_select_' + categoryId;\n        },\n\n        getCategoryChildrenElementId: function(categoryId)\n        {\n            if (categoryId === null) categoryId = 0;\n            return 'category_chooser_children_' + categoryId;\n        },\n\n        // ---------------------------------------\n\n        confirmCategory: function()\n        {\n            var self = AmazonTemplateDescriptionCategoryChooserObj;\n\n            if (self.selectedCategoryId == self.selectedCategoryIdBefore) {\n                return;\n            }\n\n            AmazonTemplateDescriptionObj.resetCategory();\n            self.specificHandler.resetFormDataSpecifics();\n\n            if (self.preloadedSelectedCategoryObj) {\n                AmazonTemplateDescriptionObj.setCategory(self.preloadedSelectedCategoryObj);\n                self.saveRecentCategory();\n            }\n        },\n\n        unSelectCategory: function()\n        {\n            var self = AmazonTemplateDescriptionCategoryChooserObj;\n\n            self.selectedCategoryId           = null;\n            self.preloadedSelectedCategoryObj = null;\n\n            $('category_reset_link').hide();\n            $('selected_category_path').innerHTML = '<span style=\"color: grey; font-style: italic\">' + M2ePro.translator.translate('Not Selected') + '</span>';\n        },\n\n        // ---------------------------------------\n\n        refreshAmazonCategories: function()\n        {\n            var self = AmazonTemplateDescriptionCategoryChooserObj;\n            var win = window.open(M2ePro.url.get('amazon_marketplace/index'));\n\n            var intervalId = setInterval(function() {\n\n                if (!win.closed) {\n                    return;\n                }\n\n                clearInterval(intervalId);\n\n                self.renderTopLevelCategories('chooser_browser');\n\n                if ($('query').value.length != 0) {\n                    self.search();\n                }\n\n            }, 1000);\n        },\n\n        saveRecentCategory: function()\n        {\n            if (this.categoryNodeIdHiddenInput.value == '' || this.categoryPathHiddenInput.value == '') {\n                return;\n            }\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/saveRecentCategory'), {\n                method     : 'post',\n                parameters : {\n                    marketplace_id : $('marketplace_id').value,\n                    browsenode_id  : this.categoryNodeIdHiddenInput.value,\n                    category_path  : this.categoryPathHiddenInput.value\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        search: function()\n        {\n            var self = AmazonTemplateDescriptionCategoryChooserObj;\n\n            var query = $('query').value;\n            if (query.length < 3) {\n                return;\n            }\n\n            self.beforeSearch();\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/searchCategory'), {\n                method: 'post',\n                parameters: {\n                    marketplace_id: $('marketplace_id').value,\n                    query:          query.trim()\n                },\n                onSuccess: function(transport) {\n\n                    if (transport.responseText.length <= 2) {\n\n                        $('search_results_no_results_tr').show();\n                        $('search_results_update_sites_data_tr').show();\n                        return;\n                    }\n\n                    var categories = transport.responseText.evalJSON();\n                    var resultsTable = $('search_results_table');\n\n                    categories.each(function(categoryInfo) {\n\n                        var tr = new Element('tr', { class: 'search_results_results_tr' });\n                        tr.appendChild(new Element('td').update(AmazonTemplateDescriptionObj.getInterfaceCategoryPath(categoryInfo, true)));\n\n                        var link = new Element('a', {href: '#'}).update(M2ePro.translator.translate('Select'));\n                        link.observe('click', function() {\n                            var categoryPath = AmazonTemplateDescriptionObj.getInterfaceCategoryPath(categoryInfo);\n                            self.searchClickCategory.call(self, categoryInfo.browsenode_id, categoryPath);\n                        });\n\n                        tr.appendChild(new Element('td')).appendChild(link);\n                        resultsTable.down('tbody').appendChild(tr);\n                    });\n                }\n            });\n        },\n\n        beforeSearch: function()\n        {\n            var self = AmazonTemplateDescriptionCategoryChooserObj;\n\n            $('search_results_no_results_tr').hide();\n            $('search_results_update_sites_data_tr').hide();\n\n            $$('.search_results_results_tr').invoke('remove');\n        },\n\n        searchReset: function()\n        {\n            var self = AmazonTemplateDescriptionCategoryChooserObj;\n\n            self.beforeSearch();\n            $('query').value = '';\n            $('query').focus();\n        },\n\n        searchClickCategory: function(browseNodeId, categoryPath)\n        {\n            this.selectAndLoadCategory(browseNodeId, categoryPath);\n        },\n\n        keyPressQuery: function(event)\n        {\n            var self = AmazonTemplateDescriptionCategoryChooserObj;\n\n            if (event.keyCode == 13) {\n                self.search();\n            }\n        },\n\n        // ---------------------------------------\n\n        recentClickCategory: function(browseNodeId, categoryPath)\n        {\n            this.selectAndLoadCategory(browseNodeId, categoryPath);\n        },\n\n        // ---------------------------------------\n\n        selectAndLoadCategory: function(browseNodeId, categoryPath)\n        {\n            var callback = function(transport) {\n\n                var categoryInfo = transport.responseText.evalJSON();\n\n                this.selectedCategoryId           = categoryInfo.category_id;\n                this.preloadedSelectedCategoryObj = categoryInfo;\n\n                this.updateCurrentlySelectedCategorySpan(categoryInfo);\n            };\n\n            this.getCategoryInfoFromDictionaryBrowseNodeId(browseNodeId, categoryPath, callback);\n        },\n\n        // ---------------------------------------\n\n        getCategoryInfoFromDictionaryByCategoryId: function(categoryId, callback)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/getCategoryInfoByCategoryId'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: {\n                    marketplace_id : $('marketplace_id').value,\n                    category_id    : categoryId\n                },\n                onSuccess: function(transport) {\n                    callback.call(self, transport);\n                }\n            });\n        },\n\n        getCategoryInfoFromDictionaryBrowseNodeId: function(browsenodeId, categoryPath, callback)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/getCategoryInfoByBrowseNodeId'), {\n                method: 'post',\n                asynchronous: true,\n                parameters: {\n                    marketplace_id     : $('marketplace_id').value,\n                    browsenode_id      : browsenodeId,\n                    category_path      : categoryPath\n                },\n                onSuccess: function(transport) {\n                    callback.call(self, transport);\n                }\n            });\n        },\n\n        // ---------------------------------------\n\n        updateCurrentlySelectedCategorySpan: function(categoryInfo)\n        {\n            var path = AmazonTemplateDescriptionObj.getInterfaceCategoryPath(categoryInfo, true);\n            $('selected_category_path').innerHTML = path;\n\n            $('category_reset_link').show();\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Template/Description/Category/Specific/Renderer.js":"define([\n    'Magento_Ui/js/modal/alert'\n], function (alert) {\n\n    window.AmazonTemplateDescriptionCategorySpecificRenderer = Class.create();\n    AmazonTemplateDescriptionCategorySpecificRenderer.prototype = {\n\n        // ---------------------------------------\n\n        MODE_NONE              : 'none',\n        MODE_RECOMMENDED_VALUE : 'recommended_value',\n        MODE_CUSTOM_VALUE      : 'custom_value',\n        MODE_CUSTOM_ATTRIBUTE  : 'custom_attribute',\n\n        // ---------------------------------------\n\n        indexedXPath : null,\n        params       : {},\n\n        specific       : null,\n        parentSpecific : null,\n\n        specificHandler  : null,\n        dictionaryHelper : null,\n\n        // ---------------------------------------\n\n        initialize: function() {},\n\n        //########################################\n\n        load: function()\n        {\n            this.dictionaryHelper = this.specificHandler.dictionaryHelper;\n\n            this.specific = this.dictionaryHelper.getDictionarySpecific(this.indexedXPath);\n\n            if (this.specific === null) {\n                alert({\n                    content: 'Unable to load Dictionary Specific.'\n                });\n                return false;\n            }\n\n            this.parentSpecific = this.dictionaryHelper.getParentSpecific(this.specific);\n\n            return true;\n        },\n\n        // ---------------------------------------\n\n        setSpecificsHandler: function(handler)\n        {\n            this.specificHandler = handler;\n        },\n\n        setIndexedXpath: function(xPath)\n        {\n            this.indexedXPath = xPath;\n        },\n\n        setParams: function(params)\n        {\n            this.params = params;\n        },\n\n        //########################################\n\n        getRootIndexedXpath: function()\n        {\n            var splitedPath = this.indexedXPath.replace(/^\\//, '').split('/');\n            return '/' + splitedPath[0];\n        },\n\n        getParentIndexedXpath: function()\n        {\n            if (this.specific.parent_specific_id === null) {\n                return null;\n            }\n\n            var splitedPath = this.indexedXPath.replace(/^\\//, '').split('/');\n            splitedPath.pop();\n            return '/' + splitedPath.join('/');\n        },\n\n        getChildIndexedPart: function(childSpecific)\n        {\n            return this.indexedXPath + '/' + childSpecific.xml_tag + '-1'\n        },\n\n        //########################################\n\n        isValueForceSet: function()\n        {\n            return this.getForceSetValue() !== false;\n        },\n\n        getForceSetValue: function()\n        {\n            return this.params.hasOwnProperty('force_value') ? this.params['force_value'] : false;\n        },\n\n        //########################################\n\n        isRemoveActionAllowed: function()\n        {\n            if (!this.specificHandler.isSpecificRendered(this.indexedXPath)) {\n                return false;\n            }\n\n            return !this.isValueForceSet() &&\n                this.specificHandler.getXpathesOfTheSameRenderedSpecific(this.indexedXPath).length > this.specific.min_occurs;\n        },\n\n        getRemoveButton: function()\n        {\n            var button = new Element('a', {\n                'id'          : this.indexedXPath + '_remove_button',\n                'indexedxpath': this.indexedXPath,\n                'href'        : 'javascript:void(0);',\n                'class'       : 'specific-remove-button',\n                'style'       : 'vertical-align: middle;',\n                'title'       : M2ePro.translator.translate('Delete specific')\n            });\n            button.observe('click', this.removeAction.bind(this));\n\n            if (!this.isRemoveActionAllowed()) {\n                this.hideButton(button);\n            }\n\n            return button;\n        },\n\n        removeAction: function(event)\n        {\n            if (!this.isRemoveActionAllowed()) {\n                return null;\n            }\n\n            this.specificHandler.unMarkSpecificAsRendered(this.indexedXPath);\n            this.specificHandler.unMarkSpecificAsSelected(this.indexedXPath);\n\n            $(this.indexedXPath).remove();\n\n            // make the latest clone button visible again\n            var theSameSpecifics = this.specificHandler.getXpathesOfTheSameRenderedSpecific(this.indexedXPath);\n            if (theSameSpecifics.length < this.specific.max_occurs) {\n\n                var latestIndexedXpath = this.specificHandler.getLatestXpathFromTheSame(this.indexedXPath);\n\n                var previousCloneButton = $(latestIndexedXpath + '_clone_button');\n                previousCloneButton && this.showButton(previousCloneButton);\n            }\n\n            return this.indexedXPath;\n        },\n\n        // ---------------------------------------\n\n        isCloneActionAllowed: function()\n        {\n            return this.specificHandler.isSpecificRendered(this.indexedXPath) &&\n                this.specificHandler.getXpathesOfTheSameRenderedSpecific(this.indexedXPath).length < this.specific.max_occurs;\n        },\n\n        getCloneButton: function()\n        {\n            var button = new Element('a', {\n                'id'          : this.indexedXPath + '_clone_button',\n                'indexedxpath': this.indexedXPath,\n                'href'        : 'javascript:void(0);',\n                'class'       : 'specific-clone-button',\n                'style'       : 'vertical-align: middle;',\n                'title'       : M2ePro.translator.translate('Duplicate specific')\n            });\n            button.observe('click', this.cloneAction.bind(this));\n\n            if (!this.isCloneActionAllowed()) {\n                this.hideButton(button);\n            }\n\n            return button;\n        },\n\n        cloneAction: function(event)\n        {\n            if (!this.isCloneActionAllowed()) {\n                return null;\n            }\n\n            this.hideButton(event.target);\n\n            var newIndexedXpath = this.indexedXPath.replace(/\\d$/, '');\n            newIndexedXpath += parseInt(this.indexedXPath.match(/\\d$/)[0]) + 1;\n\n            this.specificHandler.renderSpecific(newIndexedXpath);\n            return newIndexedXpath;\n        },\n\n        // ---------------------------------------\n\n        hideButton: function(button)\n        {\n            button = (typeof button == 'object') ? button : $(this.indexedXPath + '_' + button + '_button');\n            button.style.display = 'none';\n        },\n\n        showButton: function(button)\n        {\n            button = (typeof button == 'object') ? button : $(this.indexedXPath + '_' + button + '_button');\n            button.style.display = 'inline-block';\n        },\n\n        // ---------------------------------------\n\n        touchMyNeighbors: function()\n        {\n            var theSameSpecifics = this.specificHandler.getXpathesOfTheSameRenderedSpecific(this.indexedXPath);\n            if (theSameSpecifics.length <= 0) {\n                return;\n            }\n\n            var latestIndexedXpath = this.specificHandler.getLatestXpathFromTheSame(this.indexedXPath),\n                myEvent = new CustomEvent('my-duplicate-is-rendered');\n\n            theSameSpecifics.each(function(xpath) {\n                latestIndexedXpath != xpath && $(xpath).dispatchEvent(myEvent);\n            });\n        },\n\n        // ---------------------------------------\n\n        onMyDuplicateRendered: function()\n        {\n            this.hideButton('clone');\n        },\n\n        onWhenUndeletebleSpecificAppears: function()\n        {\n            this.hideButton('remove');\n\n            if (this.getParentIndexedXpath() != null) {\n                var myEvent = new CustomEvent('undeleteble-specific-appear');\n                $(this.getParentIndexedXpath()).dispatchEvent(myEvent);\n            }\n        },\n\n        // ---------------------------------------\n\n        // my awesome firefox... simulate('change') does not work is element has a 'disabled' attribute\n        simulateAction: function(obj, action)\n        {\n            if (obj.hasAttribute('disabled')) {\n                obj.removeAttribute('disabled');\n                obj.simulate(action);\n                obj.setAttribute('disabled', 'disabled');\n            } else {\n                obj.simulate(action);\n            }\n        }\n\n        // ---------------------------------------\n    };\n});","Ess_M2ePro/js/Amazon/Template/Description/Category/Specific/Dictionary.js":"define([], function () {\n\n    window.AmazonTemplateDescriptionCategorySpecificDictionary = Class.create();\n    AmazonTemplateDescriptionCategorySpecificDictionary.prototype = {\n\n        // ---------------------------------------\n\n        TYPE_TEXT      : 1,\n        TYPE_SELECT    : 2,\n        TYPE_CONTAINER : 3,\n\n        dictionarySpecifics: {},\n\n        // ---------------------------------------\n\n        initialize: function() {},\n\n        // ---------------------------------------\n\n        setDictionarySpecifics: function(specifics)\n        {\n            this.dictionarySpecifics = specifics;\n        },\n\n        // ---------------------------------------\n\n        isSpecificRequired: function(specific)\n        {\n            return specific.min_occurs >= 1;\n        },\n\n        isSpecificDesired: function(specific)\n        {\n            return specific.data_definition.hasOwnProperty('is_desired') ? specific.data_definition.is_desired : false;\n        },\n\n        isSpecificTypeContainer: function(specific)\n        {\n            return parseInt(specific.type) == this.TYPE_CONTAINER;\n        },\n\n        isSpecificTypeText: function(specific)\n        {\n            return parseInt(specific.type) == this.TYPE_TEXT;\n        },\n\n        isSpecificTypeTextArea: function(specific)\n        {\n            return this.isSpecificTypeText(specific) &&\n                specific.params.max_length && specific.params.max_length >= 100;\n        },\n\n        isSpecificTypeSelect: function(specific)\n        {\n            return parseInt(specific.type) == this.TYPE_SELECT;\n        },\n\n        // ---------------------------------------\n\n        getParentSpecific: function(specific)\n        {\n            if (specific.parent_specific_id == null) {\n                return null;\n            }\n\n            return this.dictionarySpecifics[specific.parent_specific_id];\n        },\n\n        getChildSpecifics: function(parentSpecific)\n        {\n            var self = this,\n                specifics = [];\n\n            if (self.dictionarySpecifics.length <= 0) {\n                return specifics;\n            }\n\n            $H(self.dictionarySpecifics).each(function(specificData) {\n\n                var specific = specificData.value;\n                specific.parent_specific_id == parentSpecific.specific_id && specifics.push(specific);\n            });\n\n            if (specifics.length <= 0) {\n                return specifics;\n            }\n\n            specifics.sort(this.sortSpecific);\n            return specifics;\n        },\n\n        getAllChildSpecifics: function(parentSpecific)\n        {\n            var specifics = [],\n                regexpObj = new RegExp('^' + parentSpecific.xpath + '/');\n\n            $H(this.dictionarySpecifics).each(function(specificData) {\n\n                var specific = specificData.value;\n                specific.xpath.match(regexpObj) && specifics.push(specific);\n            });\n\n            return specifics;\n        },\n\n        // ---------------------------------------\n\n        sortSpecific: function(spA, spB)\n        {\n            var aIsDesired = parseInt(spA.data_definition.is_desired);\n            var bIsDesired = parseInt(spB.data_definition.is_desired);\n\n            if (aIsDesired && !bIsDesired) {\n                return -1;\n            }\n\n            if (bIsDesired && !aIsDesired) {\n                return 1;\n            }\n\n            return spA.title == spB.title ? 0 : (spA.title > spB.title) ? 1 : -1;\n        },\n\n        getDictionarySpecific: function(xPathWithIndex)\n        {\n            var self = this;\n\n            var dictionarySpecific;\n\n            xPathWithIndex = xPathWithIndex.replace(/\\/\\-\\d{1,}\\//g,'/')\n                .replace(/\\-\\d*/g,'');\n\n            $H(self.dictionarySpecifics).each(function(specificData) {\n\n                var specific = specificData.pop();\n                if (specific.xpath == xPathWithIndex) {\n                    dictionarySpecific = specific;\n                    throw $break;\n                }\n            });\n\n            return dictionarySpecific;\n        }\n\n        // ---------------------------------------\n    };\n});","Ess_M2ePro/js/Amazon/Template/Description/Category/Specific/BlockRenderer.js":"define([\n    'M2ePro/Amazon/Template/Description/Category/Specific/Renderer'\n], function () {\n\n    window.AmazonTemplateDescriptionCategorySpecificBlockRenderer = Class.create(AmazonTemplateDescriptionCategorySpecificRenderer, {\n\n        // ---------------------------------------\n\n        isRootBlock : false,\n        isFlatBlock : false,\n\n        withOneBlockOnly       : false,\n        parentWithOneBlockOnly : false,\n\n        childFilteredSpecifics: {\n            all        : [],\n            containers : [],\n            rows       : []\n        },\n\n        // ---------------------------------------\n\n        process: function()\n        {\n            if (this.specificHandler.isSpecificRendered(this.indexedXPath)) {\n                return '';\n            }\n\n            if (!this.load()) {\n                return '';\n            }\n\n            this.prepareFilteredChildSpecifics();\n\n            this.renderParentSpecific();\n            this.renderSelf();\n            this.renderChildRequiredBlocks();\n\n            this.tuneStyles();\n            this.throwEventsToParent();\n        },\n\n        load: function($super)\n        {\n            var loadResult = $super();\n\n            if (this.specific.parent_specific_id == null) {\n                this.isRootBlock = true;\n                return loadResult;\n            }\n\n            var specifics = this.dictionaryHelper.getChildSpecifics(this.specific);\n            if (specifics.length == 1 && this.dictionaryHelper.isSpecificTypeContainer(specifics[0])) {\n                this.withOneBlockOnly = true;\n                return loadResult;\n            }\n\n            // check nesting level\n            if (this.indexedXPath.split('/').length >= 4) {\n                this.isFlatBlock = true;\n            }\n\n            return loadResult;\n        },\n\n        //########################################\n\n        prepareFilteredChildSpecifics: function()\n        {\n            var self       = this,\n                all        = [],\n                containers = [],\n                rows       = [];\n\n            var specifics = self.dictionaryHelper.getChildSpecifics(this.specific);\n            specifics.each(function(specific) {\n\n                self.dictionaryHelper.isSpecificTypeContainer(specific) ? containers.push(specific)\n                    : rows.push(specific);\n                all.push(specific);\n            });\n\n            self.childFilteredSpecifics = {\n                all        : all,\n                containers : containers,\n                rows       : rows\n            };\n        },\n\n        // ---------------------------------------\n\n        renderParentSpecific: function()\n        {\n            if (this.specific.parent_specific_id == null) {\n                return '';\n            }\n\n            if (!this.dictionaryHelper.isSpecificTypeContainer(this.parentSpecific)) {\n                return '';\n            }\n\n            var parentBlockRenderer = new AmazonTemplateDescriptionCategorySpecificBlockRenderer();\n            parentBlockRenderer.setSpecificsHandler(this.specificHandler);\n            parentBlockRenderer.setIndexedXpath(this.getParentIndexedXpath());\n\n            parentBlockRenderer.process();\n        },\n\n        renderSelf: function()\n        {\n            this.prepareDomStructure();\n\n            // ---------------------------------------\n            $(this.indexedXPath).observe('my-duplicate-is-rendered', this.onMyDuplicateRendered.bind(this));\n            $(this.indexedXPath).observe('undeleteble-specific-appear', this.onWhenUndeletebleSpecificAppears.bind(this));\n            // ---------------------------------------\n\n            this.specificHandler.markSpecificAsRendered(this.indexedXPath);\n\n            var selectedObj = {};\n            selectedObj['mode'] = this.MODE_NONE;\n            selectedObj['is_required'] = this.dictionaryHelper.isSpecificRequired(this.specific) ? 1 : 0;\n\n            this.specificHandler.markSpecificAsSelected(this.indexedXPath, selectedObj);\n\n            this.renderButtons();\n\n            this.renderAddSpecificsRow();\n            this.renderGrid();\n        },\n\n        renderChildRequiredBlocks: function()\n        {\n            var self = this;\n\n            this.childFilteredSpecifics.containers.each(function(specific) {\n\n                if (!self.dictionaryHelper.isSpecificRequired(specific)) {\n                    return true;\n                }\n\n                var renderer = new AmazonTemplateDescriptionCategorySpecificBlockRenderer();\n                renderer.setSpecificsHandler(self.specificHandler);\n                renderer.setIndexedXpath(self.getChildIndexedPart(specific));\n\n                if(self.withOneBlockOnly) renderer.parentWithOneBlockOnly = true;\n                renderer.process();\n            });\n        },\n\n        // ---------------------------------------\n\n        tuneStyles: function()\n        {\n            var block  = $(this.indexedXPath),\n                header = $$('fieldset[id=\"' + this.indexedXPath + '\"] legend').first();\n\n            var blockStyles = {},\n                headerStyles = {};\n\n            if (this.isRootBlock) {\n                headerStyles['display'] = 'none';\n                blockStyles = {};\n                blockStyles['width'] = '100%';\n            }\n\n            // container in container. like Product Type for example\n            if (this.withOneBlockOnly) {\n                headerStyles['display'] = 'none';\n                blockStyles = {};\n                blockStyles['width'] = '100%';\n            }\n\n            if (this.parentWithOneBlockOnly) {\n                header.down('span').innerHTML = this.parentSpecific.title + ' > ' + header.down('span').innerHTML;\n            }\n            // ---------------------------------------\n\n            // margin ParentGrid => Block\n            var parentGrid = $(this.getParentIndexedXpath() + '_grid');\n            if (parentGrid) {\n                blockStyles['margin-top'] = '20px';\n            }\n\n            if (this.isFlatBlock && !this.parentWithOneBlockOnly) {\n                delete(blockStyles['border-right']);\n                delete(blockStyles['border-left']);\n                delete(blockStyles['border-bottom']);\n                blockStyles['padding'] = '0 15px 0 15px';\n            }\n\n            var compuledHeaderStyle = '';\n            $H(headerStyles).each(function(el) { compuledHeaderStyle += el.key + ': ' + el.value + '; '; });\n            header.setAttribute('style', compuledHeaderStyle);\n\n            var compuledBlockStyle = '';\n            $H(blockStyles).each(function(el) { compuledBlockStyle += el.key + ': ' + el.value + '; '; });\n            block.setAttribute('style', compuledBlockStyle);\n        },\n\n        throwEventsToParent: function()\n        {\n            var parentXpath = this.getParentIndexedXpath();\n\n            var myEvent = new CustomEvent('child-specific-rendered');\n            parentXpath && $(parentXpath).dispatchEvent(myEvent);\n\n            // my duplicate is already rendered\n            this.touchMyNeighbors();\n            // ---------------------------------------\n        },\n\n        //########################################\n\n        prepareDomStructure: function()\n        {\n            var table = new Element('fieldset', {\n                'id':           this.indexedXPath,\n                'class':        'fieldset admin__fieldset m2epro-fieldset specifics-block',\n                'cellspacing':  0,\n                'cellpadding':  0\n            });\n            var td = table.appendChild(new Element('legend', {\n                class: 'admin__legend legend'\n            }));\n\n            td.appendChild(new Element('span', {}))\n                .insert(this.specific.title);\n\n            this.getContainer().appendChild(table);\n        },\n\n        renderAddSpecificsRow: function()\n        {\n            var renderer = new AmazonTemplateDescriptionCategorySpecificBlockGridAddSpecificRenderer();\n            renderer.setSpecificsHandler(this.specificHandler);\n            renderer.setIndexedXpath(this.indexedXPath);\n\n            renderer.childAllSpecifics  = this.childFilteredSpecifics.all;\n            renderer.childRowsSpecifics = this.childFilteredSpecifics.rows;\n\n            renderer.process();\n        },\n\n        renderGrid: function()\n        {\n            var renderer = new AmazonTemplateDescriptionCategorySpecificBlockGridRenderer();\n            renderer.setSpecificsHandler(this.specificHandler);\n            renderer.setIndexedXpath(this.indexedXPath);\n            renderer.childRowsSpecifics = this.childFilteredSpecifics.rows;\n\n            renderer.process();\n        },\n\n        renderButtons: function()\n        {\n            var buttonsBlock = new Element('div', {\n                'style': 'float: right; margin-top: 7px;'\n            });\n\n            buttonsBlock.appendChild(this.getAddSpecificButton());\n\n            var cloneButton = this.getCloneButton();\n            if(cloneButton !== null) buttonsBlock.appendChild(cloneButton);\n\n            var removeButton = this.getRemoveButton();\n            if(removeButton !== null) buttonsBlock.appendChild(removeButton);\n\n            var div = $$('fieldset[id=\"' + this.indexedXPath + '\"] legend').first();\n            div.appendChild(buttonsBlock);\n        },\n\n        getAddSpecificButton: function()\n        {\n            var button = new Element('a', {\n                'id'          : this.indexedXPath + '_add_button',\n                'indexedxpath': this.indexedXPath,\n                'href'        : 'javascript:void(0);',\n                'class'       : 'specific-add-button',\n                'style'       : 'vertical-align: middle;',\n                'title'       : M2ePro.translator.translate('Add Specific into current container')\n            });\n\n            return button;\n        },\n\n        //########################################\n\n        removeAction: function($super, event)\n        {\n            var deleteResult = $super(event);\n            this.throwEventsToParent();\n\n            return deleteResult;\n        },\n\n        //########################################\n\n        getContainer: function()\n        {\n            if (this.isRootBlock) {\n                return $('specifics_container');\n            }\n\n            return $(this.getParentIndexedXpath());\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Template/Description/Category/Specific/Block/AddSpecificRenderer.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'M2ePro/Amazon/Template/Description/Category/Specific/Renderer'\n], function (jQuery, modal) {\n\n    window.AmazonTemplateDescriptionCategorySpecificBlockGridAddSpecificRenderer = Class.create(AmazonTemplateDescriptionCategorySpecificRenderer, {\n\n        // ---------------------------------------\n\n        childAllSpecifics  : [],\n        childRowsSpecifics : [],\n\n        selectedSpecifics : [],\n\n        // ---------------------------------------\n\n        process: function()\n        {\n            if (!this.load()) {\n                return '';\n            }\n\n            this.prepareDomStructure();\n            this.tuneStyles();\n        },\n\n        // ---------------------------------------\n\n        prepareDomStructure: function()\n        {\n            this.getContainer().appendChild(this.getTemplate());\n\n            $(this.indexedXPath + '_add_row').observe('child-specific-rendered' , this.onChildSpecificRendered.bind(this));\n            $(this.indexedXPath).observe('child-specific-rendered', this.onChildSpecificRendered.bind(this));\n\n            var addSpecificBlockButtonObj = $(this.indexedXPath + '_add_button');\n            addSpecificBlockButtonObj.observe('click', this.addSpecificAction.bind(this));\n        },\n\n        // ---------------------------------------\n\n        onChildSpecificRendered: function()\n        {\n            this.tuneStyles();\n\n            if (this.indexedXPath == this.getRootIndexedXpath()) {\n                return;\n            }\n\n            var myEvent = new CustomEvent('child-specific-rendered');\n\n            $(this.getParentIndexedXpath() + '_add_row') && $(this.getParentIndexedXpath() + '_add_row').dispatchEvent(myEvent);\n            $(this.getParentIndexedXpath()) && $(this.getParentIndexedXpath()).dispatchEvent(myEvent);\n        },\n\n        // ---------------------------------------\n\n        tuneStyles: function()\n        {\n            var addSpecificsRowObj        = $(this.indexedXPath + '_add_row'),\n                addSpecificBlockButtonObj = $(this.indexedXPath + '_add_button');\n\n            // ---------------------------------------\n            addSpecificsRowObj && addSpecificsRowObj.show();\n\n            if ((this.getRootIndexedXpath() != this.indexedXPath && this.isAnyOfChildSpecificsRendered()) ||\n                this.isAllOfSpecificsRendered())\n            {\n                addSpecificsRowObj && addSpecificsRowObj.hide();\n            }\n            // ---------------------------------------\n\n            // ---------------------------------------\n            addSpecificBlockButtonObj && addSpecificBlockButtonObj.show();\n\n            if (this.getRootIndexedXpath() == this.indexedXPath || this.isAllOfSpecificsRendered() || !this.isAnyOfChildSpecificsRendered()) {\n                addSpecificBlockButtonObj && addSpecificBlockButtonObj.hide();\n            }\n            // ---------------------------------------\n        },\n\n        isAnyOfChildSpecificsRendered: function()\n        {\n            var countOfRenderedSpecifics = 0;\n            var realRenderedXpathes = this.specificHandler.getRealXpathesOfRenderedSpecifics();\n\n            this.childAllSpecifics.each(function(sp) {\n                if (realRenderedXpathes.indexOf(sp.xpath) >= 0) countOfRenderedSpecifics++;\n            });\n\n            return countOfRenderedSpecifics > 0;\n        },\n\n        isAllOfSpecificsRendered: function()\n        {\n            var countOfRenderedSpecifics = 0;\n\n            var realRenderedXpathes = this.specificHandler.getRealXpathesOfRenderedSpecifics(),\n                allChildSpecifics   = this.specificHandler.dictionaryHelper.getAllChildSpecifics(this.specific);\n\n            allChildSpecifics.each(function(sp) {\n                if (realRenderedXpathes.indexOf(sp.xpath) >= 0) countOfRenderedSpecifics++;\n            });\n\n            return countOfRenderedSpecifics == allChildSpecifics.length;\n        },\n\n        //########################################\n\n        isAlreadyRendered: function()\n        {\n            return $(this.indexedXPath + '_add_row') == null;\n        },\n\n        getTemplate: function()\n        {\n            var template = $('specifics_add_row_template').down('table').cloneNode(true);\n\n            template.down('button.add_custom_specific_button').observe('click', this.addSpecificAction.bind(this));\n            template.setAttribute('id', this.indexedXPath + '_add_row');\n\n            return template;\n        },\n\n        getContainer: function()\n        {\n            return $(this.indexedXPath);\n        },\n\n        // POPUP\n        //########################################\n\n        addSpecificAction: function(event)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/getAddSpecificsHtml'), {\n                method: 'post',\n                parameters: {\n                    marketplace_id        : $('marketplace_id').value,\n                    product_data_nick     : $('product_data_nick').value,\n                    current_indexed_xpath : self.indexedXPath,\n                    rendered_specifics    : Object.toJSON(self.specificHandler.renderedSpecifics)\n                },\n                onSuccess: function(transport) {\n\n                    self.selectedSpecifics = [];\n                    self.openPopUp(transport.responseText);\n                }\n            });\n        },\n\n        openPopUp: function(html)\n        {\n            var self = this,\n                doneCallback = self.specificsDoneButton.bind(self);\n\n            if (!M2ePro.popUp) {\n                var modalDialogMessage = new Element('div', {\n                    id: 'modal_dialog_message_specifics'\n                });\n\n                modalDialogMessage.insert(html);\n                modalDialogMessage.innerHTML.evalScripts();\n\n                M2ePro.popUp = jQuery(modalDialogMessage).modal({\n                    title: modalDialogMessage.down('#specific_popup_title').value,\n                    type: 'slide',\n                    buttons: [{\n                        text: M2ePro.translator.translate('Cancel'),\n                        //class: 'action-primary',\n                        click: function () {\n                            this.closeModal();\n                        }\n                    },{\n                        text: M2ePro.translator.translate('Confirm'),\n                        class: 'action-primary',\n                        id: 'save_popup_button',\n                        click: function () {\n                            doneCallback();\n                            this.closeModal();\n                        }\n                    }]\n                });\n            } else {\n                modalDialogMessage = $('modal_dialog_message_specifics');\n                modalDialogMessage.innerHTML = '';\n\n                modalDialogMessage.insert(html);\n                modalDialogMessage.innerHTML.evalScripts();\n            }\n\n            M2ePro.popUp.modal('openModal');\n\n            self.observePopupButtonsActions();\n            self.observePopupGridRowsActions();\n            self.tunePopupStyles();\n        },\n\n        observePopupButtonsActions: function()\n        {\n            $$('#modal_dialog_message_specifics button.specifics_filter_button').first().observe('click', this.specificsFilterButton.bind(this));\n            $$('#modal_dialog_message_specifics button.specifics_reset_filter_button').first().observe('click', this.specificsResetFilterButton.bind(this));\n            $$('#modal_dialog_message_specifics a.specifics_reset_selected_button').first().observe('click', this.specificsResetSelectedButton.bind(this));\n\n            $$('#modal_dialog_message_specifics #query').first().observe('keypress', this.specificsKeyPressQuery.bind(this));\n        },\n\n        observePopupGridRowsActions: function()\n        {\n            var self = this;\n\n            $$('#specifics_grid_container a.specific_search_result_row').each(function(el) {\n                el.stopObserving('click');\n                el.observe('click', self.specificsSelectRow.bind(self));\n            });\n        },\n\n        tunePopupStyles: function()\n        {\n            $$('#amazonTemplateDescriptionCategorySpecificAddGrid div.grid th').each(function(el) {\n                el.style.padding = '1px 1px';\n            });\n\n            $$('#amazonTemplateDescriptionCategorySpecificAddGrid div.grid td').each(function(el) {\n                el.style['padding'] = '1px 1px';\n                el.style['vertical-align'] = 'middle';\n            });\n        },\n\n        //########################################\n\n        specificsDoneButton: function(event)\n        {\n            var self = this;\n\n            self.selectedSpecifics.each(function(indexedXpath) {\n                self.specificHandler.renderSpecific(indexedXpath);\n            });\n        },\n\n        specificsFilterButton: function(event)\n        {\n            this.reloadSearchingGrid(jQuery('#query', M2ePro.popUp).val(), +jQuery('#only_desired').prop('checked'));\n        },\n\n        specificsKeyPressQuery: function(event)\n        {\n            if (event.keyCode == 13) {\n                this.specificsFilterButton(event);\n            }\n        },\n\n        specificsResetFilterButton: function(event)\n        {\n            jQuery('#query', M2ePro.popUp).val('').focus();\n            jQuery('#only_desired').prop('checked', false);\n\n            this.reloadSearchingGrid('', '');\n        },\n\n        specificsResetSelectedButton: function(event)\n        {\n            var selectedSpecificsBox = $('selected_specifics_box');\n\n            selectedSpecificsBox.update('');\n            $('selected_specifics_container').hide();\n\n            $('specifics_grid_container').style.height = '370px';\n\n            this.selectedSpecifics = [];\n            this.specificsFilterButton(event);\n        },\n\n        specificsSelectRow: function(event)\n        {\n            var selectedSpecificsBox = $('selected_specifics_box'),\n                newIndexedXpath     = this.getNewSpecificXpath(event.target.getAttribute('xpath'));\n\n            selectedSpecificsBox.appendChild(new Element('span', {\n                    class   : 'selected-specific-box-item',\n                    xml_tag : event.target.getAttribute('xml_tag'),\n                    xpath   : newIndexedXpath\n                }))\n                .update('<div>'+event.target.getAttribute('xml_tag')+'</div>')\n                .appendChild(new Element('a', {\n                    href  : 'javascript:void(0);',\n                    class : 'remove-link-button',\n                    align : 'center',\n                    title : M2ePro.translator.translate('Remove this specific')\n                }))\n                .observe('click', this.specificsUnSelectRow.bind(this));\n\n            $('selected_specifics_container').show();\n            $('specifics_grid_container').style.height = (370 - $('selected_specifics_container').offsetHeight - 6) + 'px';\n\n            this.selectedSpecifics.push(newIndexedXpath);\n            this.specificsFilterButton(event);\n        },\n\n        specificsUnSelectRow: function(event)\n        {\n            var newPreparedXpath = event.target.up('span').getAttribute('xpath');\n\n            event.target.up('span').remove();\n\n            var index = this.selectedSpecifics.indexOf(newPreparedXpath);\n            index >= 0 && this.selectedSpecifics.splice(index, 1);\n\n            if (this.selectedSpecifics.length <= 0) {\n                return this.specificsResetSelectedButton(event);\n            }\n\n            this.specificsFilterButton(event);\n        },\n\n        // ---------------------------------------\n\n        reloadSearchingGrid: function(query, onlyDesired)\n        {\n            var self = this;\n\n            new Ajax.Request(M2ePro.url.get('amazon_template_description/getAddSpecificsGridHtml'), {\n                method: 'post',\n                parameters: {\n                    marketplace_id        : $('marketplace_id').value,\n                    product_data_nick     : $('product_data_nick').value,\n                    current_indexed_xpath : self.indexedXPath,\n                    rendered_specifics    : Object.toJSON(self.specificHandler.renderedSpecifics),\n                    selected_specifics    : Object.toJSON(self.selectedSpecifics),\n                    only_desired          : onlyDesired,\n                    query                 : query\n                },\n                onSuccess: function(transport) {\n                    $('specifics_grid_container').down('div.grid-wrapper').update(transport.responseText);\n                    self.tunePopupStyles();\n                    self.observePopupGridRowsActions();\n                }\n            });\n        },\n\n        //########################################\n\n        getNewSpecificXpath: function(dictionaryXpath)\n        {\n            var currentRealXpath = this.indexedXPath.replace(/-\\d+/g, '');\n            var newIndexedXpath  = '';\n\n            var temp = dictionaryXpath.replace(currentRealXpath + '/', '');\n\n            temp.split('/').each(function(pathPart) {\n                newIndexedXpath += '/' + pathPart + '-1';\n            });\n\n            return this.indexedXPath + newIndexedXpath;\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Template/Description/Category/Specific/Block/GridRenderer.js":"define([\n    'M2ePro/Amazon/Template/Description/Category/Specific/Renderer'\n], function () {\n\n    window.AmazonTemplateDescriptionCategorySpecificBlockGridRenderer = Class.create(AmazonTemplateDescriptionCategorySpecificRenderer, {\n\n        // ---------------------------------------\n\n        childRowsSpecifics: [],\n\n        // ---------------------------------------\n\n        process: function()\n        {\n            if (this.childRowsSpecifics.length <= 0) {\n                return '';\n            }\n\n            if (!this.load()) {\n                return '';\n            }\n\n            this.prepareDomStructure();\n            this.renderRequiredRows();\n\n            this.tuneStyles();\n        },\n\n        //########################################\n\n        prepareDomStructure: function()\n        {\n            this.getContainer().appendChild(this.getTemplate());\n            $(this.indexedXPath + '_grid').observe('child-specific-rendered' , this.onChildSpecificRendered.bind(this));\n        },\n\n        renderRequiredRows: function()\n        {\n            var self = this;\n\n            this.childRowsSpecifics.each(function(specific) {\n\n                if (!self.dictionaryHelper.isSpecificRequired(specific)) {\n                    return true;\n                }\n\n                var renderer = new AmazonTemplateDescriptionCategorySpecificGridRowRenderer();\n                renderer.setSpecificsHandler(self.specificHandler);\n                renderer.setIndexedXpath(self.getChildIndexedPart(specific));\n\n                renderer.process();\n            });\n        },\n\n        // ---------------------------------------\n\n        onChildSpecificRendered: function()\n        {\n            this.tuneStyles();\n\n            if (this.indexedXPath != this.getRootIndexedXpath() && $(this.getParentIndexedXpath() + '_grid')) {\n                var myEvent = new CustomEvent('child-specific-rendered');\n                $(this.getParentIndexedXpath() + '_grid').dispatchEvent(myEvent);\n            }\n        },\n\n        // ---------------------------------------\n\n        tuneStyles: function()\n        {\n            if (this.childRowsSpecifics.length <= 0) {\n                return '';\n            }\n\n            var gridObj = $(this.indexedXPath + '_grid');\n            this.isAnyOfChildSpecificsRendered() ? gridObj.show() : gridObj.hide();\n        },\n\n        isAnyOfChildSpecificsRendered: function()\n        {\n            var countOfRenderedSpecifics = 0;\n            var realRenderedXpathes = this.specificHandler.getRealXpathesOfRenderedSpecifics();\n\n            this.childRowsSpecifics.each(function(sp) {\n                if (realRenderedXpathes.indexOf(sp.xpath) >= 0) countOfRenderedSpecifics++;\n            });\n\n            return countOfRenderedSpecifics > 0;\n        },\n\n        //########################################\n\n        isAlreadyRendered: function()\n        {\n            return $(this.indexedXPath + '_grid') == null;\n        },\n\n        getTemplate: function()\n        {\n            var template = $('specifics_list_grid_template').down('table').cloneNode(true);\n\n            template.setAttribute('id', this.indexedXPath + '_grid');\n            return template;\n        },\n\n        getContainer: function()\n        {\n            return $(this.indexedXPath);\n        }\n\n        // ---------------------------------------\n    });\n});","Ess_M2ePro/js/Amazon/Template/Description/Category/Specific/Grid/RowAttributeRenderer.js":"define([\n    'M2ePro/Amazon/Template/Description/Category/Specific/Grid/RowRenderer'\n], function () {\n\n    window.AmazonTemplateDescriptionCategorySpecificGridRowAttributeRenderer = Class.create(AmazonTemplateDescriptionCategorySpecificGridRowRenderer, {\n\n        // ---------------------------------------\n\n        attribute      : null,\n        attributeIndex : null,\n\n        // ---------------------------------------\n\n        process: function()\n        {\n            if (!this.load()) {\n                return '';\n            }\n\n            this.renderSelf();\n            this.observeToolTips(this.indexedXPath);\n\n            this.checkSelection();\n        },\n\n        load: function($super)\n        {\n            try {\n                var values = this.attribute.hasOwnProperty('values') ? this.attribute.values : '[]';\n                JSON.parse(values);\n                this.attribute.values = values.evalJSON();\n            } catch (e) {}\n\n            return $super();\n        },\n\n        //########################################\n\n        renderSelf: function()\n        {\n            this.renderLabel();\n            this.renderChooseMode();\n            this.renderValueInputs();\n            this.renderButtons();\n\n            $(this.indexedXPath).observe('parent-specific-row-is-cloned', this.onParentClonedAction.bind(this));\n            $(this.indexedXPath).observe('parent-specific-row-is-removed', this.onParentRemovedAction.bind(this));\n        },\n\n        // ---------------------------------------\n\n        renderLabel: function()\n        {\n            var td = new Element('td');\n            var title = this.specific.title + ' (' + this.attribute.title + ')';\n\n            if (this.isAttributeRequired()) {\n                title += ' <span class=\"required\">*</span>';\n            }\n\n            td.appendChild((new Element('span').insert(title)));\n\n            var note = this.getDefinitionNote(this.attribute.data_definition);\n            if (note) {\n                var toolTip = this.getToolTipBlock(this.indexedXPath + '_attribute_' + this.attribute.title + '_definition_note', note);\n                toolTip.show();\n                td.appendChild(toolTip);\n            }\n\n            this.getRowContainer().appendChild(td);\n        },\n\n        // ---------------------------------------\n\n        renderChooseMode: function()\n        {\n            var select = new Element('select', {\n                'id'          : this.indexedXPath + '_attribute_' + this.attribute.title + '_mode',\n                'indexedxpath': this.indexedXPath,\n                'class'       : 'select admin__control-select ' + (this.isAttributeRequired() ? 'M2ePro-required-when-visible' : ''),\n                'style'       : 'width: 85%;'\n            });\n\n            select.appendChild(new Element('option', {'style': 'display: none'}));\n            select.appendChild(new Element('option', {'value': this.MODE_CUSTOM_VALUE})).insert(M2ePro.translator.translate('Custom Value'));\n            select.appendChild(new Element('option', {'value': this.MODE_CUSTOM_ATTRIBUTE})).insert(M2ePro.translator.translate('Custom Attribute'));\n\n            select.observe('change', this.onChangeChooseMode.bind(this));\n\n            this.getRowContainer().appendChild(new Element('td')).appendChild(select);\n        },\n\n        onChangeChooseMode: function(event)\n        {\n            var customAttribute     = $(this.indexedXPath + '_attribute_' + this.attribute.title + '_' + this.MODE_CUSTOM_ATTRIBUTE),\n                customAttributeNote = $(this.indexedXPath + '_attribute_' + this.attribute.title + '_custom_attribute_note');\n\n            var customValue      = $(this.indexedXPath + '_attribute_' + this.attribute.title + '_' + this.MODE_CUSTOM_VALUE),\n                customValueNote  = $(this.indexedXPath + '_attribute_' + this.attribute.title + '_custom_value_note');\n\n            customAttribute     && customAttribute.hide();\n            customAttributeNote && customAttributeNote.hide();\n\n            customValue     && customValue.hide();\n            customValueNote && customValueNote.hide();\n\n            if (event.target.value == this.MODE_CUSTOM_VALUE) {\n                customValue     && customValue.show();\n                customValueNote && customValueNote.show();\n            }\n            if (event.target.value == this.MODE_CUSTOM_ATTRIBUTE) {\n                customAttribute     && customAttribute.show();\n                customAttributeNote && customAttributeNote.show();\n            }\n        },\n\n        // ---------------------------------------\n\n        renderValueInputs: function()\n        {\n            var td = this.getRowContainer().appendChild(new Element('td'));\n\n            if (this.isAttributeTypeText()) {\n\n                var note = this.getCustomValueTypeNote();\n                if (note) td.appendChild(this.getToolTipBlock(this.indexedXPath + '_attribute_' + this.attribute.title + '_custom_value_note', note));\n\n                td.appendChild(this.getTextTypeInput());\n            }\n\n            if (this.isAttributeTypeSelect()) {\n                td.appendChild(this.getSelectTypeInput());\n            }\n\n            // ---------------------------------------\n            var note = this.getCustomAttributeTypeNote();\n            if (note) {\n                var tooltip = td.appendChild(this.getToolTipBlock(this.indexedXPath + '_attribute_' + this.attribute.title + '_custom_attribute_note', note));\n                tooltip.hide();\n            }\n\n            td.appendChild(this.getCustomAttributeSelect());\n            // ---------------------------------------\n        },\n\n        getTextTypeInput: function()\n        {\n            var input = new Element('input', {\n                'id'              : this.indexedXPath + '_attribute_' + this.attribute.title + '_' + this.MODE_CUSTOM_VALUE,\n                'name'            : this.indexedXPath + '_attribute_' + this.attribute.title + '_' + this.MODE_CUSTOM_VALUE,\n                'indexedxpath'    : this.indexedXPath,\n                'specific_id'     : this.specific.specific_id,\n                'attribute_index' : this.attributeIndex,\n                'mode'            : this.MODE_CUSTOM_VALUE,\n                'type'            : 'text',\n                'class'           : 'input-text admin__control-text M2ePro-specificAttributes-validation ' + (this.isAttributeRequired() ? ' M2ePro-required-when-visible' : ''),\n                'style'           : 'display: none; width: 85%;'\n            });\n\n            input.observe('change', this.onChangeValue.bind(this));\n            return input;\n        },\n\n        getSelectTypeInput: function()\n        {\n            var select = new Element('select', {\n                'id'              : this.indexedXPath + '_attribute_' + this.attribute.title + '_' + this.MODE_CUSTOM_VALUE,\n                'name'            : this.indexedXPath + '_attribute_' + this.attribute.title + '_' + this.MODE_CUSTOM_VALUE,\n                'indexedxpath'    : this.indexedXPath,\n                'specific_id'     : this.specific.specific_id,\n                'attribute_index' : this.attributeIndex,\n                'mode'            : this.MODE_CUSTOM_VALUE,\n                'class'           : 'select admin__control-select ' + (this.isAttributeRequired() ? 'M2ePro-required-when-visible' : ''),\n                'style'           : 'width: 85%; display: none;'\n            });\n\n            select.appendChild(new Element('option', {'style': 'display: none'}));\n\n            this.attribute.values.each(function(value) {\n                select.appendChild(new Element('option', {'value': value}).insert(value));\n            });\n\n            select.observe('change', this.onChangeValue.bind(this));\n            return select;\n        },\n\n        getCustomAttributeSelect: function()\n        {\n            var select = new Element('select', {\n                'id'              : this.indexedXPath + '_attribute_' + this.attribute.title + '_' + this.MODE_CUSTOM_ATTRIBUTE,\n                'name'            : this.indexedXPath + '_attribute_' + this.attribute.title + '_' + this.MODE_CUSTOM_ATTRIBUTE,\n                'indexedxpath'    : this.indexedXPath,\n                'specific_id'     : this.specific.specific_id,\n                'attribute_index' : this.attributeIndex,\n                'mode'            : this.MODE_CUSTOM_ATTRIBUTE,\n                'class'           : 'attributes M2ePro-required-when-visible select admin__control-select',\n                'style'           : 'display: none; width: 85%;',\n                'apply_to_all_attribute_sets' : '0'\n            });\n\n            select.appendChild(new Element('option', {'style': 'display: none', 'value': ''}));\n            this.attributeHandler.availableAttributes.each(function(el) {\n                select.appendChild(new Element('option', {'value': el.code})).insert(el.label);\n            });\n            select.value = '';\n\n            select.observe('change', this.onChangeValue.bind(this));\n\n            var handlerObj = new AttributeCreator(select.id);\n            handlerObj.setSelectObj(select);\n            handlerObj.injectAddOption();\n\n            return select;\n        },\n\n        onChangeValue: function(event)\n        {\n            var selectedObj = {};\n\n            selectedObj.attributes = [];\n            selectedObj.attributes[this.attributeIndex] = {};\n            selectedObj.attributes[this.attributeIndex][this.attribute.title] = {};\n\n            var mode = event.target.getAttribute('mode');\n\n            selectedObj.attributes[this.attributeIndex][this.attribute.title]['mode'] = mode;\n            selectedObj.attributes[this.attributeIndex][this.attribute.title][mode]   = event.target.value;\n\n            this.specificHandler.markSpecificAsSelected(this.indexedXPath, selectedObj);\n        },\n\n        // ---------------------------------------\n\n        renderButtons: function()\n        {\n            this.getRowContainer().appendChild(new Element('td'));\n        },\n\n        //########################################\n\n        checkSelection: function()\n        {\n            var self = this;\n\n            // specific selection info\n            var selectionInfo = this.specificHandler.getSelectionInfo(this.indexedXPath);\n\n            // try to find in formdata\n            if (!selectionInfo.hasOwnProperty('attributes') || selectionInfo['attributes'].length <= 0) {\n                selectionInfo = this.specificHandler.isInFormData(this.indexedXPath);\n            }\n\n            if (!selectionInfo.hasOwnProperty('attributes') || selectionInfo['attributes'].length <= 0) {\n                return '';\n            }\n\n            // find attribute selection. brr.\n            var attributeSelectionInfo = null;\n            selectionInfo['attributes'].each(function(el) {\n\n                if (el.hasOwnProperty(self.attribute.title)) {\n                    attributeSelectionInfo = el[self.attribute.title];\n                    return false;\n                }\n            });\n\n            if (attributeSelectionInfo == null) {\n                return '';\n            }\n\n            var id = this.indexedXPath + '_attribute_' + this.attribute.title + '_mode';\n            $(id).value = attributeSelectionInfo.mode;\n            this.simulateAction($(id), 'change');\n\n            if (attributeSelectionInfo.mode == this.MODE_CUSTOM_VALUE) {\n                id = this.indexedXPath + '_attribute_' + this.attribute.title + '_' + this.MODE_CUSTOM_VALUE;\n                $(id).value = attributeSelectionInfo['custom_value'];\n                this.simulateAction($(id), 'change');\n            }\n\n            if (attributeSelectionInfo.mode == this.MODE_CUSTOM_ATTRIBUTE) {\n                id = this.indexedXPath + '_attribute_' + this.attribute.title + '_' + this.MODE_CUSTOM_ATTRIBUTE;\n                $(id).value = attributeSelectionInfo['custom_attribute'];\n                this.simulateAction($(id), 'change');\n            }\n        },\n\n        //########################################\n\n        getCustomValueTypeNote: function()\n        {\n            if (this.attribute.data_definition.definition) {\n                return null;\n            }\n\n            if (this.attribute.type == 'int') return this.getIntTypeNote(this.attribute);\n            if (this.attribute.type == 'float') return this.getFloatTypeNote(this.attribute);\n            if (this.attribute.type == 'string') return this.getStringTypeNote(this.attribute);\n            if (this.attribute.type == 'date_time') return this.getDatTimeTypeNote(this.attribute);\n\n            return this.getAnyTypeNote(this.attribute);\n        },\n\n        getCustomAttributeTypeNote: function()\n        {\n            if (this.attribute.values.length <= 0) {\n                return null;\n            }\n\n            var span = new Element('span');\n\n            span.appendChild(new Element('span')).insert('<b>' + M2ePro.translator.translate('Allowed Values') + ': </b>');\n\n            var ul = span.appendChild(new Element('ul'));\n\n            this.attribute.values.each(function(value) {\n                ul.appendChild(new Element('li')).insert(value);\n            });\n\n            return span.outerHTML;\n        },\n\n        //########################################\n\n        isAttributeRequired: function()\n        {\n            return this.attribute.required;\n        },\n\n        isAttributeTypeText: function()\n        {\n            return !this.isAttributeTypeSelect();\n        },\n\n        isAttributeTypeSelect: function()\n        {\n            return this.attribute.values && this.attribute.values.length > 0;\n        },\n\n        //########################################\n\n        observeToolTips: function(indexedXpath)\n        {\n            //$$('tr[class=\"' + indexedXpath + '_attributes\"] .tool-tip-image').each(function(element) {\n            //    element.observe('mouseover', MagentoFieldTipObj.showToolTip);\n            //    element.observe('mouseout', MagentoFieldTipObj.onToolTipIconMouseLeave);\n            //});\n            //\n            //$$('tr[class=\"' + indexedXpath + '_attributes\"] .tool-tip-message').each(function(element) {\n            //    element.observe('mouseout', MagentoFieldTipObj.onToolTipMouseLeave);\n            //    element.observe('mouseover', MagentoFieldTipObj.onToolTipMouseEnter);\n            //});\n        },\n\n        //########################################\n\n        onParentClonedAction: function(event)\n        {\n            this.observeToolTips(event.new_indexed_xpath);\n        },\n\n        onParentRemovedAction: function(event)\n        {\n            var attributesRows = $$('tr[class=\"' + this.indexedXPath + '_attributes\"]');\n            attributesRows.invoke('remove');\n        },\n\n        //########################################\n\n        getRowContainer: function()\n        {\n            var id = this.indexedXPath + '_attribute_' + this.attribute.title;\n\n            if ($(id)) {\n                return $(id);\n            }\n\n            var grid = $$('table[id=\"'+ this.getParentIndexedXpath() +'_grid\"] table.border tbody').first();\n            return grid.appendChild(new Element('tr', {\n                id    : id,\n                class : this.indexedXPath + '_attributes'\n            }));\n        }\n\n        // ---------------------------------------\n    });\n});"}
}});
